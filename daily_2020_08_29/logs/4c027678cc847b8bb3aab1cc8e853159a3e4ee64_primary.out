cset: moving following pidspec: 26309
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.641584108 seconds)
loading group "shootout"... done (took 1.221578555 seconds)
loading group "string"... done (took 0.421421327 seconds)
loading group "linalg"... done (took 7.961518903 seconds)
loading group "parallel"... done (took 0.154885635 seconds)
loading group "find"... done (took 1.328119499 seconds)
loading group "tuple"... done (took 1.943057909 seconds)
loading group "union"... done (took 12.694523884 seconds)
loading group "dates"... done (took 1.361954729 seconds)
loading group "micro"... done (took 0.203808937 seconds)
loading group "simd"... done (took 4.394017452 seconds)
loading group "io"... done (took 1.013437556 seconds)
loading group "random"... done (took 8.814410644 seconds)
loading group "problem"... done (took 1.537188158 seconds)
loading group "array"... done (took 19.596745762 seconds)
loading group "misc"... done (took 1.517138579 seconds)
loading group "scalar"... done (took 40.050054834 seconds)
loading group "sort"... done (took 3.06461841 seconds)
loading group "sparse"... done (took 11.896368471 seconds)
loading group "collection"... done (took 17.094623489 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.502917271 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.126084147 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.128093631 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119331318 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.148512281 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.119052943 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.124919001 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084958525 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.899712632 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.141776139 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.114116509 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.420060957 seconds)
done (took 5.268539366 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.16355253 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088024274 seconds)
    (2/2) benchmarking "String"...
    done (took 0.077552383 seconds)
  done (took 1.289644012 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.06324443 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.13286164 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.064627073 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.065054838 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065128243 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065617878 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065980452 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065803727 seconds)
  done (took 1.650783485 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.070286214 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.065411535 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.064006141 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.066793664 seconds)
  done (took 1.394435428 seconds)
done (took 5.705516345 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.236861031 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.100036658 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.286072835 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.395057292 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.461768547 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.091837047 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.074060941 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.069142086 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.129567218 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.336431802 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.102409502 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.184684345 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.091270883 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.181323374 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.997194008 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.12158234 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085169859 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.123384329 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.092731529 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131656747 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.394940836 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.077898348 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.073214799 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.069379838 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.066894536 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.646090349 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.674055736 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.131737015 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083302042 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.100109421 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.115481626 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.64781602 seconds)
  done (took 10.533827099 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.092209653 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.090767734 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068615069 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.124186066 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.093843571 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069119939 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.073987593 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066464314 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.0891062 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.125591866 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.090607759 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.09941988 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.06599261 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068731866 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.074940763 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.197614369 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.077714143 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.0788256 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.066363098 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.080254088 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.106449017 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078705452 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077954528 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.07831299 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.12984298 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.170635281 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099164808 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.095853926 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.064061241 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.078741807 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114189937 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.126440339 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.070916253 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.064926876 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.120574603 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094794482 seconds)
  done (took 4.539168188 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.965605224 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.090445406 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.100806007 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.622893025 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.06399414 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.150403251 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.243718707 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.072290124 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.337051924 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.147747301 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.139571767 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.148500271 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.115421958 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.066943518 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.207409241 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.11544679 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.507909294 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.065243486 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.064453364 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.063598847 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.06631736 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.065921891 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.061582515 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.06759956 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.092286004 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.085082559 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.179372356 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.925568434 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.244071007 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.06756851 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.163206991 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.083223709 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.356183934 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.06775638 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.062705067 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.081181895 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.411004826 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.121670589 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.06352362 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.167206135 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.117420905 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064459528 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.118233683 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.079039024 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.068999024 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.068764898 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.067465809 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.070843396 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.078637258 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.100843953 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.065658052 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.063336316 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161547876 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064221742 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.065640435 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.066676679 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.149524921 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.062563521 seconds)
    (58/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.138645782 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.062320605 seconds)
    (60/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.066475806 seconds)
    (61/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.098522254 seconds)
    (62/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.066283438 seconds)
    (63/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.087141704 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.097885542 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.344755455 seconds)
    (66/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.030204588 seconds)
    (67/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.065736574 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.923465957 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076208792 seconds)
    (70/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.065772234 seconds)
    (71/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.070165298 seconds)
    (72/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.065563457 seconds)
    (73/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.06712588 seconds)
    (74/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066998432 seconds)
    (75/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.073532858 seconds)
    (76/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.069720136 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.06845097 seconds)
    (78/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.108237439 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.064566969 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.061829839 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.082841837 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.068795178 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.065317243 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.071401671 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.096870667 seconds)
    (86/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.063917997 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.063803609 seconds)
    (88/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.478842037 seconds)
    (89/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.09522826 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.064024132 seconds)
    (91/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.075798182 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.104567529 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.064560547 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.07165474 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.066847071 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.066305742 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.064926146 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.176818484 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.069423368 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.095850915 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.068950705 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112183187 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.03425451 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.066491254 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.064498574 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.070254478 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069333817 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.069043334 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.066374039 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.068194928 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.066171936 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.062887429 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.107566544 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.064206595 seconds)
  done (took 21.454831094 seconds)
done (took 38.621121691 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.253660847 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.078361597 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.080155413 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.080993923 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.080660896 seconds)
  done (took 1.797126102 seconds)
done (took 3.011326938 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.106912909 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.061753423 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.098130587 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.098585939 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.063335459 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.063032457 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.097328068 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.063356686 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.097672802 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.099762662 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.101447337 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.100312365 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.062943087 seconds)
  done (took 2.336868183 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.067905948 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.079066838 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.080723184 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.061330947 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.07154549 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.081103641 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.061356361 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.080365889 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.086602554 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.08744037 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.080900885 seconds)
  done (took 2.045676122 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.067787825 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.079310739 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.081499534 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.061722902 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.072739026 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.081132463 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.061097528 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.080720758 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.083793169 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.080874504 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.081061617 seconds)
  done (took 2.030927018 seconds)
done (took 7.617023621 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.064949459 seconds)
  done (took 1.248730438 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.520867538 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.658483771 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.066867621 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.084522669 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.186286731 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.095060776 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.218848612 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.071010511 seconds)
  done (took 8.267442733 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.093193319 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071923955 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.066212034 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.06523694 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.067055553 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.068325522 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.06900941 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.067434704 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.06787292 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.067965996 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068079704 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069215582 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.067443089 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067725546 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.068467082 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.0676171 seconds)
  done (took 2.39827833 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.096295319 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.094895323 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.071420444 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.072593863 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071229969 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.070340298 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073235896 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072401619 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.069030649 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.070660026 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.072805982 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.07124889 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.07094799 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.062111258 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.0724509 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.073572511 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.068912044 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.072112948 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073074287 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074229611 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.072976311 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.062261747 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070884561 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.072366178 seconds)
  done (took 3.062374604 seconds)
done (took 16.178716814 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.112213243 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.073440284 seconds)
  done (took 1.378984356 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.067341789 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.068335521 seconds)
  done (took 1.341871282 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.073943015 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.059169972 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.079213655 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.070521497 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.061315808 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.060468788 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.078148298 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.059842248 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.059325059 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.059683222 seconds)
  done (took 1.867710212 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.062051944 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.068474957 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.065825738 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.067928145 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.066144744 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.061544365 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.065167798 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.062166628 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.06966421 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.061183578 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.066304923 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081848202 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.065598928 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083553762 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.06509196 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.065861103 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.067993287 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.065016706 seconds)
  done (took 2.420699644 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.059873025 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.060113669 seconds)
  done (took 1.33819334 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.063418224 seconds)
    (2/7) benchmarking "second"...
    done (took 0.060484438 seconds)
    (3/7) benchmarking "month"...
    done (took 0.063734845 seconds)
    (4/7) benchmarking "year"...
    done (took 0.062891026 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.059976246 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.060637201 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.061612243 seconds)
  done (took 1.642650151 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.408630609 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.121511899 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.337606646 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.06706342 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.075438268 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.247234398 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.0613107 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.066184764 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.066763728 seconds)
  done (took 2.710077164 seconds)
done (took 13.921897652 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078165822 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.081794154 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.087910429 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.414713229 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091875818 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065025662 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.110476961 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.173455699 seconds)
done (took 2.337346787 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.209714356 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.309002239 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.791245926 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.178239866 seconds)
  done (took 3.498511721 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.335498705 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.077364734 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.075764079 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.064933386 seconds)
  done (took 1.782600245 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.063731869 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069536352 seconds)
  done (took 1.358753181 seconds)
done (took 8.083259758 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.089218476 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.061594886 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.061322345 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.062162146 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.061664619 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.062352293 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.061486436 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.062277489 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.062321215 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.061764885 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.061695569 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.060945956 seconds)
    (13/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.06171596 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.061062034 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061285944 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.061719332 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061706103 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061436069 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.061378171 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061428201 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061634224 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.060966126 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.061874326 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.061308654 seconds)
  done (took 2.759850501 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.079224808 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.06427665 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.065288085 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.065890652 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.065118317 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.065203443 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.065753366 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.064901541 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.066510087 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.063301908 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06567058 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.065329955 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.063595662 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.065371005 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063516955 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.066852751 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.066966877 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065019155 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064773056 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.0665819 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.06655134 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06505731 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.066870944 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066127436 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.066994387 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066525407 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.065124461 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065245922 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066441505 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.067068567 seconds)
  done (took 3.217337418 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.064067316 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.058530969 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.059816786 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069747362 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.060342194 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.060026875 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.060046215 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.059474375 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.059527581 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.060654688 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.060007212 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.059413452 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.060257482 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.05906019 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.059315877 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.059958055 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.063524085 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.077288158 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.059528048 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.058973506 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.063234748 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.059228886 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.059101643 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.059449166 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.060134359 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.059268548 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.059417019 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.059757052 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.059048458 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.060201706 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.05939756 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.063375468 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.073515159 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.058985411 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.068707901 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.063833492 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.059386659 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.063089012 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.06052876 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.058593198 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.059168414 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.059097671 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.059524657 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.059155898 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.068350281 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.059690114 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.060565156 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.060110486 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.060004592 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.059353628 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.059610514 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.06173638 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.06497985 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.060673342 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.059090176 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.060514014 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.059065835 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.060048409 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.059091969 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.058976158 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.058834994 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.062735173 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.061273418 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.06012377 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077021242 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.061038995 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.068803805 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.059427105 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.060179846 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.062945927 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.0596962 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075469059 seconds)
  done (took 5.670109784 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085980812 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085812603 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.063013029 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064458837 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.059284516 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.058817914 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066339152 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.058623495 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062857087 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077905049 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059074004 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.063366601 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063171012 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.062681097 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.059094923 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.062943277 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.066871699 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.059118866 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.059433944 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.062511699 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.059833879 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067543089 seconds)
  done (took 2.6785789 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.13816293 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064430879 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.101338261 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074608515 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068087668 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.076388871 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.064900836 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064388139 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064186433 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065876279 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066227401 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066114352 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068680211 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066453062 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066484306 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066273783 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065744939 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066379255 seconds)
  done (took 2.557296598 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.075406098 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.064704474 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086560891 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.063863267 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.063966286 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.064520422 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069654201 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.070179704 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.064829808 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.064706229 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.07032125 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065219986 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.065387796 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065382613 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064799824 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065588284 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.064728691 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065149039 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069448677 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069449006 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069809106 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070163633 seconds)
  done (took 2.739142718 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.073395182 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.063005521 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.076416513 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065141949 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060577188 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.060086404 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.065586876 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.064516569 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.064990741 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.06394998 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064332629 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.059876674 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.066539822 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064578497 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.066712698 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065111156 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.064248541 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06453553 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064305301 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060083411 seconds)
  done (took 2.544749108 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08431578 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063135424 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063076716 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081860227 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.0629731 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.062878681 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081346919 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.062639515 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.063197423 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.084410395 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062957382 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.063264277 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081238422 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081728904 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.062757948 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081892023 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081582303 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080786092 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.062686462 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062780077 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.084848872 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.062799682 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081480682 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063208295 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062723569 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.062620749 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062702282 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.081830961 seconds)
  done (took 3.241261534 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.061733941 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.061072768 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.061973007 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.06205127 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062381348 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.062287429 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062873764 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063359975 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.062367676 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063032538 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.063458684 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.062908423 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06280303 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.062682863 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.062615081 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.062869378 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062887543 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063015271 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062792632 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063004569 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.062618497 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062447567 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.062976033 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062499202 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062939523 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.062783571 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06256204 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062588934 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062370194 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062262095 seconds)
  done (took 3.131236675 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.072121198 seconds)
    (2/2) benchmarking "in"...
    done (took 0.070085421 seconds)
  done (took 1.394985756 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.060799802 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074590848 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.058280897 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068652408 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069010262 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.063509724 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.068578068 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068414224 seconds)
  done (took 1.779807842 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.065849892 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.088250713 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.06129776 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.062442093 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.066011296 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.119438729 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.076379416 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.071784963 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.074442286 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063100535 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.062010437 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.073273056 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.064171534 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.073006027 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.062894199 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.069185116 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067658187 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073126013 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.07302563 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.059995775 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072677848 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.062112654 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.060158726 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.061889797 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.061608626 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.06807388 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076546419 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072783362 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069023697 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.058999628 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.080128543 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.059960424 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.061196448 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069085616 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.064820593 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.060053514 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.095773686 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.060402805 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.066245854 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060158097 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072097495 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079992434 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.073679599 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.077916604 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.061542205 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.061968731 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.059999672 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.062434869 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063205572 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068649131 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060078905 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066834709 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.059546552 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.061689222 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.070541461 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.060518068 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.066160631 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069243878 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073011083 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070196696 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.07236172 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074681884 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067296671 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.068131795 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.060903856 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077248177 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.060474142 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071221482 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.074346544 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.06183587 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073371545 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.059866378 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.05892189 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.059839362 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092969671 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.062048057 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.061342186 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.060121495 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.060067183 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.061717934 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069281182 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.066434623 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066670895 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.064014997 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07554054 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068805399 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.059753653 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.068139888 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.077673564 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063139307 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.060430178 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.075998386 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.062743675 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.059923711 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077386096 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069613044 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.061850517 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.060792332 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063480122 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.073570319 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.061320149 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.058230931 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06754968 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.061329647 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.063115101 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.064632548 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066886944 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.059374073 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069145053 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.065055721 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.061512428 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.059240565 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064295759 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.061003093 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.05854217 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069381746 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.059156576 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.073335106 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065321252 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.072540219 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072890353 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.069305504 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073911365 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.058676085 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.057899413 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.076085964 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.197450536 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.061588413 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077500916 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.059636445 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070041853 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.058991055 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.061011763 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.067968462 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.059296251 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062833975 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.060537861 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.066553677 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.062891638 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.06256982 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.064877336 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069163958 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073112992 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.061514978 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069128925 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.061662426 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076001913 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069439699 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.064765549 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.064515278 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.06124156 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072662793 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.06748828 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069866753 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.060245652 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.061075084 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.06034205 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070239524 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.070005384 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.063046313 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.069405976 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.064622818 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.061567926 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.061016448 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.062275425 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063998283 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065226457 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.062099289 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067550707 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069195188 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.074397007 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069605909 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068897467 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.059618232 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.059558327 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.064942494 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.059958351 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064116363 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069326335 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.075503555 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071688931 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080249512 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.060717876 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069216231 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.06231792 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.076447175 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072646127 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.06142011 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.065528211 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.059103929 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.061855704 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068858708 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071312023 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.074202919 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.074430672 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064712701 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064339315 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.059950625 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074948793 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.060350993 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067952859 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.069117854 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.065442626 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.060220031 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.0622555 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068710992 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.063684394 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.059546641 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.073758524 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.065596225 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.058672129 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071904269 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.05906694 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.069221932 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.058627306 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.062317505 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064000441 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.061112418 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067830653 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07365896 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.058073608 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.059595855 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074232631 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.060868886 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.060586628 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066266774 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.073072993 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064614648 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.067811515 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070841113 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069449361 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064596006 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.069158487 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.061163576 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.069177137 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.064079837 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072140173 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.060125726 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.077696951 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.059078208 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.074350941 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.060491674 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.070777225 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.060939697 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069310062 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.061537804 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.075915114 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.060508277 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.059097002 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.06919076 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.056846215 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.066320743 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.057232758 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.061993971 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.063859116 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.066357586 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.05960671 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.200551573 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.063209834 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068983195 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065590265 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068839347 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.068789299 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.064068146 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.059532315 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067871719 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072369714 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069052866 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.061913952 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.062734303 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.061751245 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070100441 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.06221456 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.062556546 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068041621 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.064867034 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066352546 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.062145867 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.06276631 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.062818826 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06948081 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070239438 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.078811415 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069208143 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067137213 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069798736 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.060399019 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075553806 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.060192463 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067695141 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.059350306 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.067742653 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069672279 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.06076472 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.07941287 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.062657417 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067532925 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073136344 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068742486 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.06355056 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.078370322 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.064314872 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068456546 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067655335 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064590949 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066316817 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.062130617 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067481603 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069238472 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070578534 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.061210367 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067232926 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068927584 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062044276 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.069842797 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.062340878 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068403597 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.062738764 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.059669778 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.064428179 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.072038319 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.064862699 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065519728 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.061026593 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.059217948 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.060871701 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.068249232 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065335091 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.06883178 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.075242374 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059117337 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.061246925 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.06018839 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063515618 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.078139996 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.069837151 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.067440214 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064728811 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063016113 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.062159312 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.062612937 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.06063191 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.063749017 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.058263879 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.058424936 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069162326 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.062706122 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064417441 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060472507 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.061437827 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.069429008 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.065684406 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.06121693 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.06653625 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.059947237 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.065469424 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.059879849 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.062364657 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064663415 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.060246656 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063920755 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.069896811 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.076231915 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066573038 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068781492 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.06096435 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067658953 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075004939 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.068434823 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061210474 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.068745059 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.059881348 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.077997283 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.068863669 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06745402 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069145334 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.060896272 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075981385 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.064069693 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069458748 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.074192635 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.060617867 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.066605429 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.058742367 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.07398743 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.063637013 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.059644051 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.067220026 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066970225 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.064837395 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.209722017 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.061772033 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.067902741 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065848638 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.063221265 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.061953723 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.062303466 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069364323 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076748641 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.061999964 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.066739582 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069280004 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068700697 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.06469781 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071420843 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067639581 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062177714 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.062232924 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063140974 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.061862589 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072240405 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061102028 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.064816899 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.064875722 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.060733956 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067195481 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077627674 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070560608 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069999604 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.060158011 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.060018752 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.077848469 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.06406436 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.065073761 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068458353 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069289237 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073094785 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.069449314 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077227034 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.061732589 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066398083 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072647273 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.061606598 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.060488899 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064092448 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.062590697 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069251777 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.070795887 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067217562 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.062376193 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066201982 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071465504 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.061515235 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.064393819 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.066144834 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.061406521 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.070511997 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067991074 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.06863046 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.062200797 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.06035501 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063462921 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069142794 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067548438 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069035015 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.062007991 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.068510004 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.074392191 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067319942 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.064655676 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060793351 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.064654817 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.069180778 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.066310545 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060371544 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064781845 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063885532 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.068546134 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.069591508 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064714196 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060078565 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077049508 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068458331 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.069343378 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.062300624 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.062739389 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060200806 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.059347177 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.070051262 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.058766282 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.06068026 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.063822009 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.060577845 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.076268693 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.06672758 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.075653591 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.061853887 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.064158678 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.059090322 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067969672 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064982992 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.060480172 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070406679 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.059673355 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.075237506 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.072289801 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.066640597 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.059932879 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065045394 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.067863071 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.076741473 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069873134 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068893921 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.064425453 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.069941883 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.062219424 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.070984224 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.059612804 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.058946304 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.06911762 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067913097 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.071906372 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.059792203 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.069141184 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.061381309 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066817205 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.06695933 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.061244132 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.061322155 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.061186224 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068253253 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.202276492 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069761562 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065370662 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076352086 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.061894929 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.07084528 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069317634 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.072391818 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074025061 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073661004 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068940847 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.061801014 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068233739 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.068863276 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.062102463 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065590166 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.065526639 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.082291642 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.063798634 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.063538612 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.075788508 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.068945363 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.060465587 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.068136046 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065216214 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.070768093 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.06202272 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.070588501 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.065930589 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.062157476 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065024425 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065111821 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.059658627 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.060241277 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.060618822 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.0701893 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.065545703 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.061219275 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.079828228 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.062760033 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.06902735 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071930505 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067535917 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.062596392 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.059701649 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.061708213 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.073304856 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.075923568 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063900683 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068280096 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.062387007 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.06956966 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.059468866 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068223654 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068368251 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085984403 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.060358611 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060833492 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074157848 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.075203484 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.064838484 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069570103 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.069236042 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.061959711 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.082272751 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068704916 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063611719 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.07143613 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062991642 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.060095148 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.059465171 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.06225547 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071956731 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.06042062 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.063434033 seconds)
  done (took 41.395899203 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.098187151 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.061087111 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.059098406 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.059552947 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071021759 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06069052 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.060402556 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.061567891 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.061427868 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.063258044 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.060343519 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06011172 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072348646 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.075714014 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071432377 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065182693 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060840925 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.061925916 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.059794768 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.05979021 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070024699 seconds)
  done (took 2.733602375 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.066763314 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.075945836 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071282198 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075870224 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069481293 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065659148 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073109042 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065049726 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.073452888 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070834616 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.073290293 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065124283 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.070600054 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.070775804 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070635227 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065373394 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.073095688 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068857706 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.065144168 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072207993 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065519851 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073084334 seconds)
  done (took 2.879258204 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.060804141 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.060084982 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.06737658 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.058470878 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.058805886 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.062252935 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.058787417 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.063628498 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.063958898 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.063949649 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068449644 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.061288355 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.059517074 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.065643011 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.059787741 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.060805032 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.104090345 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.06122699 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.061036814 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.059720154 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.06328131 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.06839355 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.059886462 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.060020305 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.067043539 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.063928612 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.059962978 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.063091459 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.060462132 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064176323 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.060722608 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.059276197 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068446515 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068061016 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064061663 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.063935304 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.061973979 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.060807195 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060168777 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.060327583 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068114581 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.061802074 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.060231114 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.061194967 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068771167 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.06005378 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.059681885 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068857624 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.059954461 seconds)
  done (took 4.445322326 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.07126271 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109586845 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066159358 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092003373 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.074584955 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.067540942 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.065966251 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092428484 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.061462921 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.062562788 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.075609014 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.075219313 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063648597 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.065063396 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.067464566 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.063763774 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064283304 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.062399365 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.066555651 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.063028071 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.066951698 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.067242386 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.074160728 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.074565718 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.065074558 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.062611644 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063223227 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.064763907 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.074399884 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.067614074 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.065109191 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.065737632 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.074624159 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.068274088 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063331995 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.062796788 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.076035552 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.063699593 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.06339289 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.061521235 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.0629603 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.065320415 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.067847757 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.076166777 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064031864 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.068030722 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.063610175 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.061576023 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.074926646 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.063499379 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.068038154 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.075984931 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.064964112 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.064022234 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.065085642 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.074346965 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.061991938 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.061429968 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.062851336 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.073939275 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.061395917 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06484933 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.075436023 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.063365264 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.067407865 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.075527754 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.068329816 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.064920799 seconds)
  done (took 6.13809105 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069391147 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.091349518 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070954797 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07069123 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069907611 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.071448869 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.07119481 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.071335133 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071349146 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072213429 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071565978 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111296193 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067347419 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07641565 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071246328 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071214066 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071351405 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071206897 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071354689 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071472077 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071652283 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.072492603 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071138045 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072011003 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.074426986 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066819868 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071007352 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071629724 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072546406 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071432725 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.07450642 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071429764 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071854268 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072110311 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.074411082 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071137462 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.062034788 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071605346 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.07179898 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071703224 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067199853 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072302899 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071206815 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067041869 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071610362 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071211428 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072453242 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.074878653 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.080416753 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072392039 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071882616 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072622988 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071613065 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071849353 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072408322 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.08081723 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.0729027 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07240041 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072023801 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072489402 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071934202 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.079813405 seconds)
  done (took 5.888385414 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075017902 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067003108 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.079752241 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060685563 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.060220913 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070767458 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06002423 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.060470156 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071279614 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.068575581 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070686051 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070122436 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073233204 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070625305 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070156724 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07307012 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070604061 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070073505 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068407928 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07008576 seconds)
  done (took 2.749369714 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.071694545 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.076913229 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.065562188 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068978734 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.066150651 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070390917 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.065098128 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068025741 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067186899 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066405568 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072105527 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072056422 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066860626 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070580029 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.072003571 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070202061 seconds)
  done (took 2.466758949 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.066008358 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.067993577 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.068712335 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.062488501 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065471595 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.060701086 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.061527739 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060107723 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.06079968 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.075613831 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.061828906 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.073148117 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.061532487 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.060255891 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.061044435 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.067197414 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.060650081 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.061890189 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.06176969 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.068188864 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.068049084 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.062504971 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.065879931 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.061339672 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066677583 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.069648028 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.063305169 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065719341 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.061634579 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.062203822 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.067216074 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068298479 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.061130637 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.062382874 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.060591528 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062312567 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.061665158 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.062339167 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067595419 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.061890796 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.060211279 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066779494 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.062045581 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.062694802 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.060652171 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.06224164 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.06089684 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067498018 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.061680479 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.067267018 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.061955904 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.064202233 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.062228795 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.069029636 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.064183139 seconds)
  done (took 4.879575106 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074658891 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.0644862 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06015938 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.060379439 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.065872262 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.06611678 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.066444693 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066133677 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066239506 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06072974 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066955205 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.065185051 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066725343 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.065531771 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066187942 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066160333 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060340532 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.065677212 seconds)
  done (took 2.546504665 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070440415 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065980596 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.070462576 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065852262 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065275053 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.065203357 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.060901709 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.061033974 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060899116 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065514879 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065478991 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.064904539 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06050148 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.064905153 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065526945 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065662839 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.06501874 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.060865067 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065174537 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060599661 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.065081255 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.060883683 seconds)
  done (took 2.780205234 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.087624285 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.084076179 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.125910347 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079938177 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.088056024 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071603481 seconds)
  done (took 1.901854132 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090502192 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102721269 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064649943 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065510659 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07572821 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069147296 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068768002 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069329669 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076263259 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073619518 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069623757 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075432113 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07574877 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071742682 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075608208 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078790125 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06951033 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069304631 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065568215 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07873942 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069706485 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076126046 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069350877 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06928316 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069532773 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071213471 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079532709 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073942891 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069105342 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076015466 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078863379 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069493402 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075901008 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076871212 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065803162 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076228564 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069157753 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079075925 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075830644 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07200977 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065382879 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076031295 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076161459 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071724175 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079280828 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06994481 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071425545 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069968504 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069976536 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081649154 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076371022 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071951995 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076428383 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079089717 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079324893 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08132635 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073290839 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069458676 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074382263 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072035686 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069925027 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073738128 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069389356 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072158498 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078626612 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071277685 seconds)
  done (took 6.235318569 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09766352 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06484868 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06772731 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07450144 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072058025 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06941393 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069564959 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069537264 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069351675 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066659854 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104824622 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069592658 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071765834 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071467171 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069415284 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069153999 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069671641 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071363938 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066051423 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081544839 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069254144 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072433691 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071444785 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071418397 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073657548 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07894487 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069273921 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068886272 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068172875 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068882811 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071318306 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068198632 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069371259 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065083482 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071395521 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068819842 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069102245 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071477137 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069554922 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075849305 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071592177 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078947864 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069166312 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069283871 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074159443 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06908101 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069255205 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065865626 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069683794 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06613972 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074559388 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074362862 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074092881 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07185764 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069815114 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069900336 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069522286 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069609115 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069339092 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078769897 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071362021 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069511026 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08145296 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069541047 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069086618 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071346333 seconds)
  done (took 6.122926129 seconds)
done (took 126.108680838 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.206265554 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.183143913 seconds)
  done (took 1.739526409 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.072239413 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.095453585 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.075022179 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.134351585 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.069865527 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.104250246 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.102478775 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.0734232 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.069759267 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.070666661 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.070897488 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.073212309 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.137272491 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068984032 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.069178905 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.073612233 seconds)
  done (took 2.729760434 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.10429174 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.18073943 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.112627754 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06845452 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.10634315 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.07665796 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.068997689 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.080079978 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.072385514 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.072233974 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.075950516 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.074466917 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.071911407 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.074491883 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.072509901 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.076194489 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.071951421 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.076145283 seconds)
  done (took 2.913509653 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.092464416 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.084050414 seconds)
  done (took 1.557811138 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.153480496 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.102745001 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.142878307 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.320780111 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.132664184 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.126810464 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.130455164 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.12657046 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.108622199 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.12227734 seconds)
  done (took 2.843199709 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101504731 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.176714634 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.310049843 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.12082226 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.076228821 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.10252562 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.12230764 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.081194808 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080460215 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079551888 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.07989495 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076963713 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098344138 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076417234 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076198268 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.079595616 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102161322 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.07525515 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.075564743 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075842352 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.101134385 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069571892 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076671312 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075038829 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077840031 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077608465 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.070616757 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069171682 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.07557406 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074814589 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.07730649 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.097113792 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076104957 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.099951935 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.071502217 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.100656264 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.072731083 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.071445025 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073553756 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.071475174 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.076332 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.075996222 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.076837904 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.074385085 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.069062799 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.074872232 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.070831069 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069314188 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.079241372 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.070004854 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.07880299 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078033066 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.102328411 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.07017252 seconds)
  done (took 6.115411871 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107109264 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105216097 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068662973 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.113834001 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105559602 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069855689 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.105904564 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099716864 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.110138784 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069572158 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068229479 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069282002 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077257561 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.080230853 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.114335984 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.106029536 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06973782 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.067430344 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107229251 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.108302284 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068304272 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10140067 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.100222878 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107555471 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067830957 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069479809 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067214067 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.068776594 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.074762251 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.076293968 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068546063 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.076846461 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085654562 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.075552365 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067457743 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067674816 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067452924 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.076628877 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077039867 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077154659 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.075481931 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067096472 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067915842 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068521673 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068884016 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067036621 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.075811485 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.0769388 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.075586636 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.0680464 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068530835 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068078908 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068239275 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.076908053 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.074102669 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.075145493 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.075893912 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066056569 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066070958 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.068196121 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.075344488 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.075286884 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.074834065 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06747928 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.075882651 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066138119 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076234592 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.07843169 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.065959168 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.066870458 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.066078058 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066140452 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.066705131 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.073410554 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.073611337 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06668021 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.066343678 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066564504 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.077360639 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.074479717 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066482295 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.072640321 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.065567401 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066275318 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066706381 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066597576 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.072773642 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.074736894 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.066865699 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066129663 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.066030314 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06608868 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.065712836 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.072985814 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.074294775 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.0744974 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.073915922 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068342609 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.075757306 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.073875771 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066195542 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.072547559 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.065367081 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06584718 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065676417 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.072251914 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.071434011 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.07342626 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065174738 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.064721671 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.071618209 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.207481295 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068142862 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.074552003 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077141487 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.074854205 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.066893234 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.077392161 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067172982 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076349551 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067160949 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076029461 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070166806 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.074388949 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067144402 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.066422222 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.066875725 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.074362804 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068495475 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068994001 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069566367 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067707449 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.075163741 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078795381 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06786436 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076157609 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.076784945 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069308276 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.074094575 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067125225 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.075569681 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067193883 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067354628 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066618146 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077183932 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066691023 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066868368 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.067663348 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076187235 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067159252 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.075913067 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.073234216 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066235121 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077267385 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.075736726 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.073740024 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.076889828 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06758327 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.066846632 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066354517 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.066733427 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.073301365 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.074481946 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067461665 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066864961 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.073379033 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.075894442 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.066298679 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.073597878 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.073677992 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.073795822 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.066794658 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.066816956 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.076520765 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.076047644 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.073978651 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.073582719 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074324809 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.066415709 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.073281362 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.073956457 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066298546 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078990655 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066653268 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.077975112 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.074327115 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.073635804 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074229632 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.075336573 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.075757613 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.075900723 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.077714677 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066410396 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.066361059 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.073372871 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.066598395 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066916891 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.075966056 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068785396 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.06859973 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.080391746 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066726024 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.075988973 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066313352 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.074652867 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065670077 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068506176 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078708935 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066401499 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066743746 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.073288538 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.066508834 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.075375821 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.075074607 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.072785177 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.065948217 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066233623 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.072885386 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.073120033 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065116255 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.064926038 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06586743 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.071710083 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.071351006 seconds)
  done (took 17.964859797 seconds)
done (took 37.256007626 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.204771257 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.157299682 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.190042735 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.11241374 seconds)
  done (took 2.148148164 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.095228305 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.096487358 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.076741716 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.063251349 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.081701215 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.063460211 seconds)
  done (took 1.900633459 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.275080894 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.190797902 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.172660536 seconds)
  done (took 2.05651261 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.216729909 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.195125097 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.475099018 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.291362767 seconds)
  done (took 2.699097319 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.134390277 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.078341407 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.061888652 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.072827213 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.109136585 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.141230266 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.087676117 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.11116937 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.07371907 seconds)
  done (took 2.349266179 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.130009326 seconds)
done (took 12.736580657 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.272707918 seconds)
    (2/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.099745016 seconds)
    (3/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.079930818 seconds)
    (4/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.135960342 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.152773325 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.069753711 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.145202273 seconds)
    (8/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072148332 seconds)
    (9/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.072835044 seconds)
    (10/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.066002675 seconds)
    (11/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.233050442 seconds)
    (12/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072819448 seconds)
    (13/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.118514466 seconds)
    (14/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.071328664 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.090382897 seconds)
    (16/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.220240282 seconds)
    (17/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.099679046 seconds)
    (18/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.078429116 seconds)
    (19/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.076840695 seconds)
    (20/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.076869065 seconds)
    (21/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.241243669 seconds)
    (22/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.201172581 seconds)
    (23/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.203233075 seconds)
    (24/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.16859814 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.308569195 seconds)
    (26/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.070697291 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.083888646 seconds)
    (28/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.073145107 seconds)
    (29/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.200268411 seconds)
    (30/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.064464443 seconds)
    (31/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.237211428 seconds)
    (32/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.073679868 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.085587017 seconds)
    (34/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.190084292 seconds)
    (35/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.070241261 seconds)
    (36/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068581355 seconds)
    (37/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.072374713 seconds)
    (38/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.18751415 seconds)
    (39/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.067031098 seconds)
    (40/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.076970168 seconds)
    (41/309) benchmarking ("sort", Int8, false)...
    done (took 0.175024917 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.088845923 seconds)
    (43/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.106807182 seconds)
    (44/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074642673 seconds)
    (45/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.173985109 seconds)
    (46/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.171648297 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065623762 seconds)
    (48/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.165333937 seconds)
    (49/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.214919038 seconds)
    (50/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.169220186 seconds)
    (51/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.173507234 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.07315515 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.12340671 seconds)
    (54/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.083443234 seconds)
    (55/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.07456711 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.086404477 seconds)
    (57/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.074943301 seconds)
    (58/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.06156209 seconds)
    (59/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.146471984 seconds)
    (60/309) benchmarking ("sort", Float64, false)...
    done (took 0.131578193 seconds)
    (61/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.079351494 seconds)
    (62/309) benchmarking ("sort", Bool, false)...
    done (took 0.150530394 seconds)
    (63/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.177848092 seconds)
    (64/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.073195343 seconds)
    (65/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.159247162 seconds)
    (66/309) benchmarking ("sort", Int64, false)...
    done (took 0.065839149 seconds)
    (67/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.071674445 seconds)
    (68/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.072000456 seconds)
    (69/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.190223865 seconds)
    (70/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.178291292 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065071866 seconds)
    (72/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.090340651 seconds)
    (73/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.07636807 seconds)
    (74/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.145788496 seconds)
    (75/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.093882487 seconds)
    (76/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.0713731 seconds)
    (77/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.06276339 seconds)
    (78/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.071407198 seconds)
    (79/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072525256 seconds)
    (80/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.07217142 seconds)
    (81/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.060724979 seconds)
    (82/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.062371586 seconds)
    (83/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.065041308 seconds)
    (84/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.205201764 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.208662336 seconds)
    (86/309) benchmarking ("sort", BigInt, false)...
    done (took 0.256650575 seconds)
    (87/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.075028552 seconds)
    (88/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.075361902 seconds)
    (89/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.148549326 seconds)
    (90/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.064055755 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.078785643 seconds)
    (92/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.22142818 seconds)
    (93/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.210824164 seconds)
    (94/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.172442475 seconds)
    (95/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.07181556 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.090074586 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.096353658 seconds)
    (98/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.075069549 seconds)
    (99/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.141654995 seconds)
    (100/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.088222067 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.063969915 seconds)
    (102/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.178518561 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.135419318 seconds)
    (104/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.071546641 seconds)
    (105/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071482843 seconds)
    (106/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.064160991 seconds)
    (107/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.066412325 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.120489189 seconds)
    (109/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.226608353 seconds)
    (110/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.153630571 seconds)
    (111/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.203802361 seconds)
    (112/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.07206386 seconds)
    (113/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065212587 seconds)
    (114/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.065852981 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.136406187 seconds)
    (116/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.177271346 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.119247185 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.135310593 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.085693485 seconds)
    (120/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.185441219 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.151360613 seconds)
    (122/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.063647488 seconds)
    (123/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.062367041 seconds)
    (124/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.189891967 seconds)
    (125/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.144838011 seconds)
    (126/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.062098468 seconds)
    (127/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.079608997 seconds)
    (128/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.206134462 seconds)
    (129/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.074269132 seconds)
    (130/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.064008311 seconds)
    (131/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.139974226 seconds)
    (132/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.072127788 seconds)
    (133/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.075029032 seconds)
    (134/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.072905961 seconds)
    (135/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071773135 seconds)
    (136/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.074255088 seconds)
    (137/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.094184511 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.128837333 seconds)
    (139/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.064099678 seconds)
    (140/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.167893386 seconds)
    (141/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.063383785 seconds)
    (142/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.064877871 seconds)
    (143/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.144138044 seconds)
    (144/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.062429708 seconds)
    (145/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.06401686 seconds)
    (146/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.081285858 seconds)
    (147/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.064240192 seconds)
    (148/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.0731008 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.085042149 seconds)
    (150/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.074397948 seconds)
    (151/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.07921763 seconds)
    (152/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.074745165 seconds)
    (153/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.073826075 seconds)
    (154/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.072482942 seconds)
    (155/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.062284609 seconds)
    (156/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.064164782 seconds)
    (157/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.247234482 seconds)
    (158/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.073576971 seconds)
    (159/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.064661488 seconds)
    (160/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.14963918 seconds)
    (161/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.143211145 seconds)
    (162/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.140698694 seconds)
    (163/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.071622007 seconds)
    (164/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.064993588 seconds)
    (165/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.06427149 seconds)
    (166/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.075121822 seconds)
    (167/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.159898466 seconds)
    (168/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.063043535 seconds)
    (169/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.061797247 seconds)
    (170/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.065277666 seconds)
    (171/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.063071439 seconds)
    (172/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.076921731 seconds)
    (173/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.062181648 seconds)
    (174/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.063691374 seconds)
    (175/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.063335546 seconds)
    (176/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071001448 seconds)
    (177/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.156876893 seconds)
    (178/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.064654506 seconds)
    (179/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.063980654 seconds)
    (180/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.064926296 seconds)
    (181/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.063433847 seconds)
    (182/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.14092485 seconds)
    (183/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.067126806 seconds)
    (184/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.063661824 seconds)
    (185/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.145218692 seconds)
    (186/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.066684898 seconds)
    (187/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.061423395 seconds)
    (188/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.090037739 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.062271376 seconds)
    (190/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.2410984 seconds)
    (191/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.071013974 seconds)
    (192/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.065488992 seconds)
    (193/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.066077745 seconds)
    (194/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.073954059 seconds)
    (195/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.066459475 seconds)
    (196/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.06680121 seconds)
    (197/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.064407315 seconds)
    (198/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.066613509 seconds)
    (199/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.15880575 seconds)
    (200/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.065089227 seconds)
    (201/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.07333108 seconds)
    (202/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.071739384 seconds)
    (203/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067291697 seconds)
    (204/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067802493 seconds)
    (205/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.065313179 seconds)
    (206/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.063026471 seconds)
    (207/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.064950074 seconds)
    (208/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.064037953 seconds)
    (209/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.063202339 seconds)
    (210/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.064095692 seconds)
    (211/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.063826839 seconds)
    (212/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.191127416 seconds)
    (213/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.142204101 seconds)
    (214/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.071264008 seconds)
    (215/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.063145499 seconds)
    (216/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.071317345 seconds)
    (217/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069075695 seconds)
    (218/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.064504047 seconds)
    (219/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.202533294 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.084948338 seconds)
    (221/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.173230098 seconds)
    (222/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.070834919 seconds)
    (223/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.065114018 seconds)
    (224/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.064694689 seconds)
    (225/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.16888356 seconds)
    (226/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074959324 seconds)
    (227/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.076841924 seconds)
    (228/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075468908 seconds)
    (229/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.063949049 seconds)
    (230/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.144209388 seconds)
    (231/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.064414807 seconds)
    (232/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.081181397 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.08852984 seconds)
    (234/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.064425425 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.144827246 seconds)
    (236/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.065608122 seconds)
    (237/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.078803289 seconds)
    (238/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071371936 seconds)
    (239/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.06435956 seconds)
    (240/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.068346235 seconds)
    (241/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.064216832 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.088918785 seconds)
    (243/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.065144867 seconds)
    (244/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.141064732 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065793585 seconds)
    (246/309) benchmarking ("sort", Float32, false)...
    done (took 0.136356779 seconds)
    (247/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.065086516 seconds)
    (248/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.065970688 seconds)
    (249/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.065238569 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.088966484 seconds)
    (251/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.163342045 seconds)
    (252/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.064604146 seconds)
    (253/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.066276487 seconds)
    (254/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.066972444 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.115247625 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.087295959 seconds)
    (257/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.06802256 seconds)
    (258/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.062687032 seconds)
    (259/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.064605722 seconds)
    (260/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.172694846 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.131942823 seconds)
    (262/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.091811009 seconds)
    (263/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.077374446 seconds)
    (264/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.15467038 seconds)
    (265/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.08718911 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.114669294 seconds)
    (267/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.065281108 seconds)
    (268/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.066413791 seconds)
    (269/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.067881455 seconds)
    (270/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.078645068 seconds)
    (271/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.065045329 seconds)
    (272/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.06645938 seconds)
    (273/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.064765063 seconds)
    (274/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.070284172 seconds)
    (275/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.06716834 seconds)
    (276/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.071890538 seconds)
    (277/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.065315224 seconds)
    (278/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.065751328 seconds)
    (279/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.06534741 seconds)
    (280/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072123438 seconds)
    (281/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.064677467 seconds)
    (282/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.06629573 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.114225006 seconds)
    (284/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067722605 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.1263525 seconds)
    (286/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.066513317 seconds)
    (287/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067560399 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.121264084 seconds)
    (289/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.124118703 seconds)
    (290/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.064310598 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076500987 seconds)
    (292/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.066187413 seconds)
    (293/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072139661 seconds)
    (294/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.064378705 seconds)
    (295/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.064078144 seconds)
    (296/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.065579079 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065536629 seconds)
    (298/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073060936 seconds)
    (299/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.064342444 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072743479 seconds)
    (301/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.065646408 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.087636633 seconds)
    (303/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.06546228 seconds)
    (304/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.062317575 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.06287203 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.063188545 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.062894854 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.0858916 seconds)
    (309/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.063854157 seconds)
  done (took 32.685709776 seconds)
done (took 34.130056451 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084636758 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.08868484 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.071579505 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.084571399 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081729363 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.09762775 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073849561 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078951394 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.08047424 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.079947507 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.079106413 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.073039344 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.075386043 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074781641 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.072623158 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089356169 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.080795243 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073787882 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074426847 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064487947 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073551491 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066043405 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.064291015 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.072508437 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077294827 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.072767827 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.0750211 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075064523 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065028931 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065569331 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.07020993 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074163962 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065889036 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078058547 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.074361096 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074038405 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.078650525 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079056964 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.064595889 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065921758 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075827387 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065733319 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.073659297 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072282954 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.070745853 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072618589 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073870414 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077768805 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089624756 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070533005 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075443247 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.074762671 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.07659538 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071257085 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.070694852 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.07424546 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071694925 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089643424 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074492068 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06966638 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07520554 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.075241918 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072559782 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074189453 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074109501 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077170578 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.077633869 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072522419 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076333189 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.072688574 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065318397 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073824238 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069575606 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065250948 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.076980772 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.07926852 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063987722 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.069680498 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.07360868 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.072535657 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.06306953 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06760089 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.062309134 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.068297946 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067434657 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069615795 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068947493 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071455304 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.062648417 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072541319 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070606049 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071743914 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.062625784 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076172859 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06301524 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.06962675 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.06395815 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.063950059 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.062631071 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070357927 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064799712 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069891538 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073917075 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.063745183 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070179468 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079342423 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065020663 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073053984 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064214663 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064890161 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.076354228 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076022093 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065402089 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069950716 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064187964 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.070854653 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064500937 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065340713 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.06478332 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065691813 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.06959995 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065568507 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070243667 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.07072339 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077447343 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064871453 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070073177 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069615356 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064233261 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069618896 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.06320861 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063035621 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.061502327 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.075415621 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066700012 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.062715634 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.067880224 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06650897 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.070504222 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.061107227 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.070904537 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.068204045 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.206685484 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071048452 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064019396 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.077376898 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070604958 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070109648 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.06458544 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065460317 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.064240563 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065560555 seconds)
done (took 12.572088308 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.064985087 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.093284782 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.072890738 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.081428508 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.078866754 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066317948 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.070255879 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.084022492 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068701222 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.086277145 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088335457 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.086791359 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.092304162 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.063183701 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.064353155 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.065313597 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.06290088 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.072294378 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.082055767 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087227478 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.096350084 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064990798 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.075145022 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.081984287 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.077096193 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.083266414 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067335551 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.066973294 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069237632 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.084391129 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.09144569 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.066486051 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067310877 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.080956248 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.080585783 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.073954569 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.06703169 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.070175047 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066476598 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066394103 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067945263 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.08158166 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.070360396 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.070255349 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.066851094 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.066807662 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066566236 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.072301964 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.079635683 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.069761066 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.074047519 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.078629347 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068345336 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.06572793 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064260657 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.070047363 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065783501 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.066680918 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066242182 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.065950075 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065138976 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.06801984 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.066443106 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.06644759 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069551596 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.068867241 seconds)
  done (took 6.324786755 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.082352945 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.092691407 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.081553819 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084321188 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065923433 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066298572 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066610371 seconds)
  done (took 2.081004233 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.065357506 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.077769338 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081092674 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081579902 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.073395359 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.084208377 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067091103 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.097462229 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066184914 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.078955987 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.113055592 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.084061676 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.068915173 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.076270951 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.064521592 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.071990912 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.064498574 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073500264 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.075036876 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081689044 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069129726 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.093311886 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.080103723 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066625702 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.087678112 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.07139453 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.065627121 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066485716 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067763111 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.067674082 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067341358 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.10624277 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.070917937 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.080896048 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068193993 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.065832395 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.072026678 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06992774 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.069171568 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.0732425 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.071043913 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.06685588 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.06367964 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067090565 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.068727026 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.073272209 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.063446165 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.065639427 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.065574579 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.076448684 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.063360795 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.069285837 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.068854177 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.070515003 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.072439202 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070683587 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.074756021 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067329705 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.078755394 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.074136912 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067687475 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.075572617 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.109235818 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.071788409 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.07471938 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.070295717 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.070528062 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.071444435 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.065999668 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.06795793 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.067581466 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.074798077 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.065733893 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.068263676 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.070018286 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067669717 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.070551446 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.083635324 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.083601912 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.079185524 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067923048 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067432054 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.070533859 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.083238778 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071099532 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067110454 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.069736591 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065222202 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070368459 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067783221 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072741535 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.06758134 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.074442671 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.067655397 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068938987 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.074834762 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.065999206 seconds)
  done (took 8.612930635 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.067187449 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.065808266 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.066562211 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.066316322 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067318256 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068254929 seconds)
  done (took 1.972894062 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.088669884 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.065409691 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079492546 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.065980249 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.102854994 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.074172343 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.074820651 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076756553 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.080850154 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079907641 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.07313673 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.0751646 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.071664598 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.066987796 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.072246445 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.065875401 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.072742919 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.06869034 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077480322 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.066758279 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.078951158 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.066567516 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.066549988 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.076585406 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.068849109 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.066324213 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.065244939 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.077150352 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077342409 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.073637106 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.06641435 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.067674022 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.072857485 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.076177811 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.072480845 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.072642974 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.064926382 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.072702125 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066788939 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.068056416 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.074524985 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.066680271 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.066839197 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.070636725 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.073509697 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.072596954 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.071134264 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.069381466 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.071714855 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.070676926 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.071022083 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.065455766 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.067988805 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.070499431 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072920879 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073759737 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.070335891 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.072177483 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.066898439 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072860384 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.065290336 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.067990552 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073393176 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.067514235 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.069019252 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.07051377 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.073215211 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.066715908 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.066419381 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.064999573 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.070395799 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.065009797 seconds)
  done (took 6.688542488 seconds)
done (took 27.211474561 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.944403495 seconds)
  done (took 2.466084541 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.56844504 seconds)
  done (took 2.127548707 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.626187025 seconds)
  done (took 8.183853937 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.297258379 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.338257172 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.727264649 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.132522128 seconds)
  done (took 3.071752325 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.725863678 seconds)
  done (took 2.28958425 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.23387042 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.22549417 seconds)
  done (took 2.034778825 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.347929707 seconds)
  done (took 1.904683639 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.11545457 seconds)
  done (took 2.671286706 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.225151047 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.157937595 seconds)
  done (took 1.948991249 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.47561305 seconds)
  done (took 2.033652706 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.339475068 seconds)
  done (took 5.903093732 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.232926386 seconds)
  done (took 1.835571537 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.234463798 seconds)
  done (took 1.80529419 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.718332595 seconds)
  done (took 3.27936771 seconds)
done (took 43.125519042 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080841844 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083360443 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.083496998 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079157931 seconds)
  done (took 1.865232133 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.071937604 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.067560781 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.071488973 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.071976325 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.070179291 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.07025452 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.070858196 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.067592251 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.069445452 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.06713315 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.066021097 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.06718936 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.07273341 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.069445875 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.072019613 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.072539431 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.067725623 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.067480714 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.070255001 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.06690065 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.070095047 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.066998864 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.06555166 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.06751584 seconds)
  done (took 3.22149035 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.075885983 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.070389893 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.072947892 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.069707325 seconds)
  done (took 1.856492499 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.07304864 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.08275999 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.0842244 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.09054473 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.073327796 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.073426807 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.080752809 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.081543168 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.063286437 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.084410401 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.06558655 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.06484954 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.064571824 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.084413501 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.080475045 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.060984535 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.062519531 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.07348689 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.072671975 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.07468434 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.066042711 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.063522155 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.073121816 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.072572181 seconds)
  done (took 3.334970914 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077226613 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.06343434 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.076595053 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.090144036 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.092340154 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.063608102 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.077706052 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092067379 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.125513019 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.063127649 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069461122 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.063650914 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.106132819 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.06347806 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.07842851 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.106039524 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.108039968 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067373825 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096306436 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.063258539 seconds)
  done (took 3.220266027 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075362963 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.067847043 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.068445826 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.063802553 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.075756943 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.0709544 seconds)
  done (took 1.999785326 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.066475793 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.065642981 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.065494165 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.065106575 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.069600104 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.065650816 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.064112686 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.065859099 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.065533564 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.065382738 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065040609 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.064004117 seconds)
  done (took 2.358072345 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.161351186 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.067667413 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.06871318 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.06382021 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.069505577 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.064169192 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079463362 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069213026 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.082876785 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.06467537 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065349069 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067240276 seconds)
  done (took 2.495115947 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098381659 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128752279 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095316174 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07114429 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182513831 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09231109 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.089176523 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.121435539 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091309278 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.068423126 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.089070032 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134610483 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096698355 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.099155567 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080198125 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130832557 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.109213816 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088143474 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112345496 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081726601 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.069355392 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130270043 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.06844489 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090755391 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098474895 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.096241053 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109720178 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133228637 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085617113 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.090336148 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080640908 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07393315 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.104350904 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.08353878 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.097469009 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091825521 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097877931 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083180864 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.085272595 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126968188 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153106694 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098700413 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099018122 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133130808 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078680615 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.113166087 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080716927 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096305994 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103540175 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090935772 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073835429 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092906859 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.10335031 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103655687 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.080448049 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080350464 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115499299 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.097388876 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093294008 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07943139 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106858471 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.085891373 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108063407 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267733594 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140582027 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104794551 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139633035 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129074911 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097235338 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.090222828 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.092402945 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.068921275 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109832341 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096713445 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134105404 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110437403 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101180241 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.097802314 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082404565 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106071074 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123871837 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09330317 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096886977 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1448592 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107325849 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088421054 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089405064 seconds)
    (88/481) benchmarking "5d"...
    done (took 0.143932897 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.071278176 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145039781 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088125853 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120539786 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094740447 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137016928 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093190494 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.084374473 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105925154 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101263341 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087926707 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100310578 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084782941 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111425199 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090985659 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09855318 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.079809075 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092430166 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085415319 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.098115153 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.073374905 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101867981 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113500248 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111953548 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.073166947 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105878555 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085343548 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.075927549 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090746491 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137225499 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082362797 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.074006208 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147890033 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.090024188 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.11493105 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107545956 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.082023769 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.271297602 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135610239 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091865356 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088238719 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076052712 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155223888 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074730301 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119066722 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082141684 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103367532 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105248828 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129612049 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137093373 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093957736 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077213919 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093023701 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 0.104550847 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.090534296 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085475053 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076186718 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.105546803 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132462638 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.104687364 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082416035 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.09238182 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.06860773 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113093867 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075212661 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081276838 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09465744 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.08619501 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.08888392 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140560697 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.085289452 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106444111 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098163639 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.066670487 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090437959 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151744059 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082499735 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.110239485 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123032493 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085120178 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.067226277 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.094531373 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.072211912 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106806526 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.090766691 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106447708 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07724122 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105536564 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.067422575 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.072859427 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127446675 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099773521 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.090892843 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.130145524 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104147871 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.088353108 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.10021766 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.094885753 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092523676 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099296253 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.266705822 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105994708 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.07340568 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130203174 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089996 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.077144293 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085846342 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079015052 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.077456604 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099511695 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114234808 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088008954 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101083655 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103064375 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089200337 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.110682719 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08880314 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078425428 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132732538 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075465627 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.074313863 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088779026 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.106694658 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089762383 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.134332895 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.081454847 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136776989 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097945118 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081186116 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113453284 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.067585643 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.069292887 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.079446312 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091224867 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114595594 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078969461 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077695603 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124652141 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132278029 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099313479 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10086265 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.067451115 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089339418 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135439111 seconds)
    (233/481) benchmarking "4d"...
    done (took 0.11549573 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080553714 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108547674 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083809932 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128478595 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09552606 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119738504 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104571056 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108590923 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.09076271 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.082826809 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.072776293 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088756014 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110376212 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087685129 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08090078 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.06663633 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073617958 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091824628 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087649624 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108497219 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085921895 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132231027 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.072352196 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09757594 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102811956 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.258466035 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08986015 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098127353 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.092132503 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092355137 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094007216 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099069043 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.074098923 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134558361 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105242047 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078907659 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090915822 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093525508 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108089451 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108564399 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118212587 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095594147 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106912499 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124506014 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099580465 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082239177 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084595063 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.091374228 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.085199856 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080474391 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.102654839 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110527435 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100274449 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107419473 seconds)
    (288/481) benchmarking "3d"...
    done (took 0.094925761 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 0.091317176 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105484068 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09191704 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087635939 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.127768984 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152202221 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.101241706 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.104068061 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084386167 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106223919 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103957243 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112859554 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.110183824 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107618993 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.070198471 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.0744668 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.069557716 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105950259 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078012326 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118761415 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076224305 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106940265 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096517307 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080761276 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.066024789 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101453119 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090712694 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.082291571 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130196596 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.114621951 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.072814901 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088140743 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106545651 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084328466 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13456505 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.099978668 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099266466 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.070810009 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089202728 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.07160952 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.269684896 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.102969668 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.077470389 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.076553801 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.069728015 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106446583 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083690283 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117388193 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087695463 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101455181 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120988984 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130290422 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087679918 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099522533 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124537062 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113131697 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.082417112 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113471602 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134113443 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.118553411 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.079453788 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.083071168 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103956938 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104490941 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10053218 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074973402 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.07900738 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107936345 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112450883 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.067525378 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083687952 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.069331449 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.086319393 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111748094 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096388228 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082605297 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124571096 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074443338 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106747347 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094486481 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125689704 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12182416 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14420069 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098084424 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088012907 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075920743 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131764492 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.07014795 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123994516 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.110809949 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086747773 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.070198402 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083879795 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.099079059 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 0.62348699 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107451891 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.075477034 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134226384 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087061493 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115166875 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083910422 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.117662911 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090263059 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103476168 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089602235 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.278857725 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.083052513 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109535351 seconds)
    (397/481) benchmarking "6d"...
    done (took 0.181086725 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.109722174 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.106860629 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075662955 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.088684479 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076058177 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.081292547 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.082626393 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089570287 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110722625 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086246153 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107527576 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.081839622 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.108287238 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092365339 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090850315 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.101634591 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085276743 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141438852 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.090351981 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130215798 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109338007 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08134176 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076338217 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.088792599 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.103614514 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08189145 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096591048 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080541054 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.077702516 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155568947 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1030127 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090025871 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105551256 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.094301776 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.087068063 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101244439 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118699662 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111243546 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073592543 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.08825684 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104490042 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07836756 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.074742543 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095653217 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.06849946 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086689393 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097657788 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095968207 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088840687 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.100979503 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.07913502 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086904235 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108853763 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084845483 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.076276309 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076205937 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.075200006 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.078903788 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104505175 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108001351 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112639672 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107027941 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092273394 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091154572 seconds)
    (462/481) benchmarking "2d"...
    done (took 0.078208006 seconds)
    (463/481) benchmarking "7d"...
    done (took 0.229947746 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081423748 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.252524184 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.105633371 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.076697972 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.134775824 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09094024 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091085579 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099412335 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104733483 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154091969 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07478716 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10972851 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094318661 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117795854 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088186847 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108149325 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098014055 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093507991 seconds)
  done (took 50.606377823 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.092185977 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.147443102 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.157728055 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.080186984 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.093201308 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.117871827 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.207763666 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.190639522 seconds)
  done (took 2.790717685 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.065691971 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.079898606 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.101625664 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082879265 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.065808211 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068429219 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.203619719 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.082693096 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066665968 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.107447338 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.075569965 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.066042746 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.361458898 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.06596275 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.066749118 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.075584417 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066249109 seconds)
  done (took 3.384464957 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.36030809 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.596097447 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.323623714 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072244776 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.958610716 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.089718091 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.256002935 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.137694911 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.07925103 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.551041734 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.370010728 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.129611402 seconds)
  done (took 18.615383142 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.073748737 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.072400278 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.076199921 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.076610466 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072191812 seconds)
  done (took 2.053153367 seconds)
done (took 99.383727841 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079529333 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.168031517 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.065566714 seconds)
  done (took 1.951099229 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.080593183 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.07941148 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.079511006 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.076916965 seconds)
  done (took 2.005771715 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.071907205 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.073877433 seconds)
  done (took 1.82594136 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.242679427 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.160782928 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.089349909 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.081236589 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078219006 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.07875069 seconds)
  done (took 1.929404847 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.069828098 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.069852716 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.069931681 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.070767193 seconds)
  done (took 1.960813311 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.065532006 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.064123517 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.067053269 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.069379199 seconds)
  done (took 1.948480089 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.08140622 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.082500956 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.077384803 seconds)
  done (took 1.924016958 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.100478154 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.093570965 seconds)
  done (took 1.87712738 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.077888818 seconds)
  done (took 1.757118301 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.086730089 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.092592588 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.150083744 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.109401991 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.148816801 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.131766737 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.076141876 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.077102762 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.072033099 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.074137721 seconds)
  done (took 2.69953511 seconds)
done (took 22.137800614 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.076616713 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.370307303 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.357804685 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084040635 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.684396926 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.354539482 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.983823193 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.088270011 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.096393424 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066038767 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082516074 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.663315242 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.97342532 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.328672598 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.960324256 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.326935239 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.647005316 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06637734 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.065082753 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.0657937 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.952045378 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.065123113 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066138786 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.066424492 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.647463339 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371181921 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069402368 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.322067205 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06566998 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068505132 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354841802 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06753612 seconds)
  done (took 16.12245373 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.068014568 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.11892028 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.071054919 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08223051 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.068250211 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.067440249 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.068845991 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.066778635 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.107453343 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.065998629 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082615114 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.065829892 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.070843205 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068018799 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086028489 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.066931037 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068579913 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067429308 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067120656 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067842922 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.084340487 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066017325 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067433686 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069762824 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067154237 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080027321 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067963715 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.066558594 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067637056 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069124487 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070283178 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068386776 seconds)
  done (took 4.042135944 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121015002 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125513936 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.071298895 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.106654661 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.118103615 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068214333 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.14914538 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.088735443 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112208896 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066824195 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083073179 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06631294 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101732681 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068488104 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086739086 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.066930377 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068347636 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067501244 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067193986 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.0674073 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085618928 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066667099 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068024704 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067690237 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068045953 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081513004 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067847625 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067083528 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067284302 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069421314 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071186605 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068374829 seconds)
  done (took 4.323922331 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.067635694 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.069957036 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.077902466 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.078994175 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.065509208 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.06749263 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.06757228 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.065229196 seconds)
  done (took 2.269692226 seconds)
done (took 28.461318846 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.076417651 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.065663546 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.068676395 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.084832962 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.071766571 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.069263366 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.063005537 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.072612717 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.069384601 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.068810621 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.070624271 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.064697831 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.068543031 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.063328897 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.069990458 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.06458368 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.072274025 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.068592462 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.069166645 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.070725478 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.066767014 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.070193549 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.072387976 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.069191153 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.069789962 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.069282076 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.073925185 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.069277861 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.064552891 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.067115947 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.066536234 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.075206847 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.071624216 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.071628842 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.065345194 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.064883362 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.068823481 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.066634034 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.070985334 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.073546904 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.066370278 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.074010597 seconds)
  done (took 4.594033138 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.082508283 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.088083538 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.080410142 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.079699549 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.098919159 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081210872 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.085120971 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.076905984 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.075179057 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.083846873 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.071753819 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.079365176 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.077199186 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.070614474 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.075621219 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.072337901 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.077904153 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.071771458 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076279757 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.076615961 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.085621156 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.07012504 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.0775461 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.077749628 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.072019083 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.078371544 seconds)
  done (took 3.755570414 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.070378816 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085041173 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.089757118 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.145710652 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.108949516 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079894991 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080395589 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.094449722 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.098141646 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066143496 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.069907262 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093781649 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092872722 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.072614165 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.105776473 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.083419355 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.077084118 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.067763832 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.072932702 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.098717842 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.087012772 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.084043468 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.096688968 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084673295 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.065241831 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.074376932 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071744227 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.079887259 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073107053 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077910518 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.069672779 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.069103118 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.067277704 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.076650852 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.069486969 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.063533481 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.086795262 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07719046 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079177327 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.104980729 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.074687403 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.067147707 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.094541929 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.129937155 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067771589 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.070667319 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.071031229 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.07976736 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067431027 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09365457 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080417284 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.065295216 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.083609212 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066523223 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.06686551 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081736532 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.067011083 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.068267193 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078275879 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.071827032 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.084943034 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.069992298 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085101166 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.065628677 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.076656326 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066681237 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.066845406 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.064295179 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.09852502 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.072033092 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.115625996 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.066206252 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.063493553 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077095494 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075986434 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.071446883 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.065083571 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083623278 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076954961 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.068652414 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076395206 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.06852828 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.068248978 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.099081255 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.064344088 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.06323954 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.063322431 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.067900425 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.06887564 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.065827504 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.078535933 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.064351925 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.06851146 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.080240346 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.065938831 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.065983549 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.067821716 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.06672965 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.064586817 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077396366 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.069245143 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067080865 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077175031 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.066149482 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.068538852 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078910158 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.072866388 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.064932683 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.066737387 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.067836138 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067158198 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069160723 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.068381439 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.067195171 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.07068167 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.071990295 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071171476 seconds)
  done (took 10.677479522 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.160406468 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.15087806 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.067414917 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.143598892 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.074058176 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.070676547 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.144469841 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.086416902 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.06728277 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067630873 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.065473011 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.094278518 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.089620096 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.100056971 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.070778813 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.066314006 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.088822786 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.098166653 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.147613989 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.144991366 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.091779275 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.075062366 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070489483 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069988416 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.069575608 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.076204828 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085484995 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.074149021 seconds)
  done (took 4.358482366 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.075250365 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.091865451 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.069974283 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.077615772 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.085436533 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.066403579 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069215063 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070247721 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.082416146 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.076618684 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068099627 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.072959284 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.070660105 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.068987894 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.066916549 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.072772507 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.072864633 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.065222122 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.069505073 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.070663985 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.07614571 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.091122942 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.070757369 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.065645435 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.068672662 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.065608596 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.074133196 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.07714074 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.066091647 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.081122152 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.063321596 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.070539954 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.080821825 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.06687554 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.065633946 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.066617904 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.065688347 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.066418768 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.066580033 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.064274027 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.063832395 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.071139593 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.06539404 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.073079472 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.079570222 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.073427281 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.06737327 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.068182563 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.068281867 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.063082405 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.068593567 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.068448819 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.068283829 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.073578311 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.069359013 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.068347435 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068084241 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.094092526 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074786125 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067665231 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.067595719 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.068723989 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.069138191 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.077207083 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.084144289 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.069019486 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065089208 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066041303 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.071594036 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.080053599 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.065617998 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070999104 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.063323398 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.066143377 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.068510733 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068383739 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.066902854 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.06437813 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.065494357 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.065787588 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.066041086 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.065555001 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.065465273 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.068579653 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.063909919 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.064261412 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.066828574 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.06743713 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.073594213 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.064591409 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.069216241 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.067070294 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.06484086 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.068482743 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.07144176 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.068638207 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.080553583 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.075521316 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066272244 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.063762515 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.079840954 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.068445771 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.065409733 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.072229732 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.069950358 seconds)
  done (took 9.134195725 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.088708597 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.06807714 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085305098 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.092016145 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.076271262 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.071340905 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077647735 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068025727 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.082325396 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.065391378 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075068872 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.064544527 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076499015 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.075256007 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.067205375 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.075999219 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.068248437 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.08512453 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.0805879 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.064569361 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.074096041 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.077676829 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.078382404 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083123266 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.082070337 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.083494843 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.078283155 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.07016384 seconds)
  done (took 3.893288148 seconds)
done (took 38.116965038 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.788244798 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.95555823 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.775013939 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.961687546 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.982143196 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.882799869 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.935212565 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.772238819 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.893363269 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.820725783 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.991749144 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.127137942 seconds)
done (took 65.657917416 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.841994457 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.936040662 seconds)
    (2/2) benchmarking "String"...
    done (took 2.004031094 seconds)
  done (took 5.651257068 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.965571897 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.393579385 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.026759899 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.761154897 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.762906937 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.21551589 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.5518351 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.203830465 seconds)
  done (took 30.626869747 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.874980468 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.983503103 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.41913226 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.443050937 seconds)
  done (took 15.45309192 seconds)
done (took 63.333869021 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.798809264 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.754949879 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.754325425 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.783114444 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.762916091 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.753082148 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.754913405 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.751867937 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.787667697 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.859019944 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.752292001 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.75169452 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.754801263 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.778086406 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.477276254 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.811301372 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.764966057 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.763073806 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.77244589 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.770770117 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.756542392 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.755758328 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.206424769 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.936825768 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.356275162 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.038197014 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.280034218 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.152323172 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.763600765 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.74968143 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.783452169 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.052597992 seconds)
  done (took 203.682309918 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.749515004 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.59582673 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.680646685 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.759531374 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.025554001 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.932261389 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.86197186 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.121667619 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.75444408 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.756074932 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.901963623 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.750220865 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.943550467 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.740271411 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.784295991 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.840564509 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.914071423 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.97456459 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.787850211 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.915320039 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.767423517 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.757169473 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.703189198 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.908593396 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.761874671 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.852347004 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.754118919 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.754306457 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.950106172 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.88111088 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.746453354 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.774708279 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.921780859 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.616836789 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.748896324 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.75789791 seconds)
  done (took 168.139033556 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.934830281 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.753346141 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.74695653 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.801572542 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.868366756 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.750789055 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.382908936 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.757672415 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.9383256 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.752723045 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.748878351 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.747800774 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.747092591 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.75967464 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.825946977 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.751701602 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.764386327 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.748715533 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.772329867 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.753020228 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.748492493 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.749635191 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.748127572 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.747858199 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.748401431 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.748214362 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.051336963 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.98861081 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.749942779 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.749104766 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.704131092 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.764889067 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.991645931 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.751274094 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.747754395 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.840151127 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.805993981 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.86907716 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.752963382 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.966632526 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.822974037 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.74911106 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.748120613 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.81292234 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.761434196 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.752201506 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.75105552 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.755786724 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.815120984 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.997020843 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.750979917 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.872488632 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.237715496 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.752505855 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.751162532 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.750624438 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.347461781 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.751467317 seconds)
    (58/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.751387959 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.755518159 seconds)
    (60/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.756681701 seconds)
    (61/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.751293878 seconds)
    (62/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.75335205 seconds)
    (63/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.177198317 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.82226772 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.814039966 seconds)
    (66/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.175479995 seconds)
    (67/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.752557307 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.552107172 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.816852608 seconds)
    (70/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.750948537 seconds)
    (71/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.751322694 seconds)
    (72/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.751003819 seconds)
    (73/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.754401263 seconds)
    (74/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.750494093 seconds)
    (75/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.752947905 seconds)
    (76/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.87168834 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.762579667 seconds)
    (78/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.880507573 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.836898984 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.751910872 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.753547794 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.869743384 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.756989455 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.760119925 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.57513979 seconds)
    (86/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.754995332 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.818731918 seconds)
    (88/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.786314974 seconds)
    (89/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.581046195 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.754899081 seconds)
    (91/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.129527278 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.523883817 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.751073114 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.750931229 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.764926709 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.75727911 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.752756225 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.753059134 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.830688197 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.752195617 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.869690574 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.477337277 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.024832549 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.753450233 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.753461787 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.759511313 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.837510295 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.872321914 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.75553833 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.818316827 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.758419463 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.754069283 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 4.003592046 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.756014434 seconds)
  done (took 398.347348298 seconds)
done (took 773.852889626 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.34538942 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.314685411 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.404312276 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.327660328 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.308345654 seconds)
  done (took 13.388919907 seconds)
done (took 15.078840888 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.764168287 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.75690189 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.807406489 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.831034481 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.766756608 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.76867873 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.830485969 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.770073286 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.799602882 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.803365203 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.833623485 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.833973968 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.776704887 seconds)
  done (took 25.030759883 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.760389187 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.89671649 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.996303516 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.794752588 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.765257514 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.982504452 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.816842695 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.893555604 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.894779306 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.986953585 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.009014572 seconds)
  done (took 22.488322723 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.759871155 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.89709271 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.988820932 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.802140827 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.763439776 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.980106385 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.824674149 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.891435334 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.907712943 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.981685115 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.987220508 seconds)
  done (took 22.485144395 seconds)
done (took 71.694072085 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.756975487 seconds)
  done (took 3.447261842 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.77615787 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.919977352 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.757105355 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.754838095 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.759989338 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.757280321 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.755681708 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.757116528 seconds)
  done (took 15.928002133 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.755981191 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.761981954 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.75681053 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.757221798 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.758148158 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.757376611 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.760136582 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.757228014 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.755811653 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.755369738 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.756372693 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.757255186 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.75962684 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.758270955 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.758636308 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.757331508 seconds)
  done (took 29.816200763 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.760644636 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.75902127 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.756153384 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.756562723 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.756610323 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.757566662 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.758086264 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.759679778 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.757536113 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.75707001 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.758962899 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.757228033 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.762500762 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.757554197 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.762135322 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.758037734 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.756822464 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.756976296 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.768716371 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.764696044 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.76376274 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.7654565 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.763258431 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.76659349 seconds)
  done (took 43.933790284 seconds)
done (took 94.825154724 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.495848105 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.793681796 seconds)
  done (took 9.984276315 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.763939771 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.765627818 seconds)
  done (took 5.233304313 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.764989791 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.762639304 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.76481807 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.76490822 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.765354337 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.766620674 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.76616459 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.767537148 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.767875083 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.764435836 seconds)
  done (took 19.354777238 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.765287855 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.766085942 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.766803968 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.763428397 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.764420344 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.767155375 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.764379988 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.764803998 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.763566672 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.764267238 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.766526674 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.766089813 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.765487094 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.759846264 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.760778439 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.760255054 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.760378892 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.760787782 seconds)
  done (took 33.449263605 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.763249079 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.760675783 seconds)
  done (took 5.217494717 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.761170497 seconds)
    (2/7) benchmarking "second"...
    done (took 1.76134343 seconds)
    (3/7) benchmarking "month"...
    done (took 1.760955866 seconds)
    (4/7) benchmarking "year"...
    done (took 1.76094013 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.761132866 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.76151523 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.761618847 seconds)
  done (took 14.022821355 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.761506854 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.905306941 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.959954654 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.613778517 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.763568445 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.764091965 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.043632717 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.765425303 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.765645729 seconds)
  done (took 20.038678236 seconds)
done (took 108.996322683 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.582340504 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.762771798 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.996763173 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.835128092 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.782575316 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.101533025 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.789524218 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.406999838 seconds)
done (took 41.955011251 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.768529656 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.759095227 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.790541783 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.791092502 seconds)
  done (took 22.037887537 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.762380353 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.075968544 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.784448292 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.664141938 seconds)
  done (took 22.011199692 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.142084308 seconds)
    (2/2) benchmarking "read"...
    done (took 2.111148162 seconds)
  done (took 5.953299234 seconds)
done (took 58.468789633 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.761281041 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.762917233 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.763470492 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.762175548 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.7635229 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.762706137 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.764494675 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.761735297 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.761605785 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.764018699 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.761442248 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.762491825 seconds)
    (13/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.761933105 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.762778139 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.762679677 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.762454214 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.762722266 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.763138793 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.762403005 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.763196102 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.763016189 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.762794704 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.763270255 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.762464708 seconds)
  done (took 44.002070613 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.764451031 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.764029184 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.76370759 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.763792562 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.764639141 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.762996849 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.763222643 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.763732717 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.764238794 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.763811232 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.763956057 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.763923409 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.764199668 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.765710219 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.764634768 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.765878075 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.765406238 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.764085929 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.766481439 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.765429693 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.765426924 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.765307114 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.764739162 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.765796163 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.767317181 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.766189996 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.765150198 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.764811924 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.76548704 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.765636177 seconds)
  done (took 54.64167025 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.765714631 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.768955928 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.765884628 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.765300929 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.765649802 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.766653602 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.765788865 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.766472316 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.765895595 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.765881709 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.766736098 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.766178392 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.766407286 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.766713361 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.766193437 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.766271512 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.766547932 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.766774202 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.76940049 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.767184103 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.765845102 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.766948578 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.766176034 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.766766218 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.767569178 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.767704361 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.767198307 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.76682563 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.766744362 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.767176515 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.767319145 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.767916694 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.766497806 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.767974104 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.767134795 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.768369205 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.767418887 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.766993325 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.767879452 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.767183098 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.76819055 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.767599143 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.767589093 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.767666705 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.768535185 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.768290508 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.768274927 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.767752881 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.769097133 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.768484044 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.768988372 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.767981435 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.770064339 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.768921947 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.768986444 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.769457677 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.768161574 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.768612444 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.769011601 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.769027308 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.76879056 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.769560417 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.769397695 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.769458726 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.769216643 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.769934899 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.768781704 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.769854385 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.768216945 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.769205635 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.768688363 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.768860832 seconds)
  done (took 128.975626358 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.768512148 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.769243985 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.769275118 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.769488838 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.76878929 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.771212565 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.76960091 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.770074407 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.769648853 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.769458087 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.769346014 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.771329557 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.76961061 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.770503788 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.769821069 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.769292973 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.770582445 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.770090333 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.770787304 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.770299185 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.770941426 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.770150847 seconds)
  done (took 40.640570449 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.770281947 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.771300396 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.770898456 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.770313175 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.771361216 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.770649692 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.770016751 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.773925804 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.7703597 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.770720063 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.771722239 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.771751228 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.77170927 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.770697089 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.771697272 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.770081312 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.772366722 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.771968975 seconds)
  done (took 33.587189707 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.771899766 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.771126301 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.770474788 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.77106056 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.771360538 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.774433748 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.771712858 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.770630221 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.77359245 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.771777051 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.771484615 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.772197442 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.771649689 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.770621771 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.773292642 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.77254663 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.771562283 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.772294686 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.771924635 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.772182652 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.772350813 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.771277922 seconds)
  done (took 40.686545073 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.771920697 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.772504713 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.772832585 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.772741764 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.772369697 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.772845746 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.772950654 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.772807113 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.773246805 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.773148211 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.77286997 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.773980483 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.773308912 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.772979872 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.773501658 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.772077859 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.773977585 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.773446372 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.773026149 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.773600108 seconds)
  done (took 37.170207803 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.772980455 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.772777501 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.772770518 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.773134649 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.775006356 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.7736002 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.772716129 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.772793621 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.776252736 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.7739037 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.774863333 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.773505673 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.778003362 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.773671404 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.774545442 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.774062349 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.774007073 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.774564868 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.775394028 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.774755238 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.775512802 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.775606769 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.774965556 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.774551493 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.775185419 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.774189643 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.774837258 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.774698695 seconds)
  done (took 51.389918806 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.776898601 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.774513634 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.774529497 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.775396897 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.774462442 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.774795331 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.775252303 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.774232432 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.775394241 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.774913005 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.776026191 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.775594266 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.775825382 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.774843211 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.776248652 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.776121918 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.775319061 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.779647346 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.774608165 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.775173876 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.776203268 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.77499633 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.776352599 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.776504801 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.775768408 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.776384128 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.776676753 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.776380943 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.776855536 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.776661433 seconds)
  done (took 54.980499911 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.797001413 seconds)
    (2/2) benchmarking "in"...
    done (took 1.796648008 seconds)
  done (took 5.30276856 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.777880842 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.777184486 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.776944146 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.778101253 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.776814777 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.777156122 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.776068208 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.777199743 seconds)
  done (took 15.926328196 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.778334377 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.780600986 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.778061311 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.779122806 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.777119394 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.788255535 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.77858534 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.778769182 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.782193217 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.779600402 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.780943966 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.781778934 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.784940608 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.783924618 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.778905745 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.778913642 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.780016056 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.780874501 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.779494138 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.778194212 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.781596708 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.77934685 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.779436048 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.778790691 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.77979213 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.779966206 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.788152476 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.779773538 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.780071492 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.779632487 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.786916464 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.780321663 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.779595575 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.780497 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.780341729 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.780633231 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.788029048 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.779916086 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.780598977 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.779644154 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.782097425 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.783200121 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.783651237 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.789343797 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.780760058 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.780845584 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.78087759 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.779582676 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.780287963 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.784065444 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.787760455 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.780654855 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.780362086 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.78054935 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.782942657 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.780887012 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.781655086 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.7828312 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.789660574 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.788779687 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.785456455 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.801446059 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.788982302 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.780688394 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.782010675 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.789120626 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.802323305 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.783427249 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.782971591 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.781448312 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.790566212 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.782069746 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.782046247 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.782031394 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.794979917 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.791798976 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.782264874 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.782176724 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.781856246 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.782604845 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.78251423 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.782322567 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.782470122 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.782462639 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.791808091 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.803902001 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.783541515 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.782803354 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.78419693 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.784687918 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.786808628 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.786858904 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.784625067 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.783483028 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.783805807 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.786370926 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.783888971 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.78363901 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.782624943 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.793654784 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.784649023 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.784302135 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.787273582 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.790481172 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.783851365 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.78449495 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.785075085 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.784079023 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.792147101 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.786416341 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.784418811 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.784328606 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.78543175 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.787614367 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.783957872 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.78864508 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.791814463 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.794672523 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.786423541 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.788063981 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.788968472 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.786872121 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.794230211 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.806870324 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.784099096 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.788306027 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.789842772 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.796375653 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.789040302 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.784896431 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.787625445 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.785113075 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.784938735 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.787346612 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.786222021 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.785187292 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.785800156 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.785094477 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.784774758 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.785117256 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.788701098 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.786780833 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.789888377 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.785491076 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.789547943 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.785787666 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.788248486 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.793495126 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.785314831 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.786140854 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.785453139 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.788471602 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.787731206 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.787183078 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.785386222 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.786474593 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.787421113 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.787212468 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.788624888 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.789011703 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.786894524 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.788008437 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.791713981 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.787553779 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.788597585 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.788114227 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.787290603 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.787114186 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.787700817 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.788939965 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.788879656 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.787258396 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.792309311 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.788828531 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.788175896 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.786817703 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.788960778 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.786867965 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.790382467 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.798313885 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.791437263 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.796437624 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.788550409 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.796537555 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.789521768 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.78973644 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.788841142 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.787813063 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.788633269 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.787535778 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.788194775 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.791626397 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.808565647 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.798596286 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.790218314 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.789964263 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.793461505 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.793028186 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.79461646 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.788831894 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.789637859 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.790628728 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.789149842 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.78860079 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.788566845 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.792779653 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.788317759 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.789083712 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.793108512 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.790459094 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.790160713 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.789676408 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.790374152 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.790837748 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.789890021 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.788666143 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.789694873 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.789299317 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.798727445 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.792360969 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.790401957 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.791171629 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.792345268 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.790678829 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.790196344 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.790843705 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.795332868 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.790040065 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.790885859 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.799545532 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.791837506 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.790314365 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.791649318 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.792169779 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.793159265 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.790888106 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.793289546 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.797878729 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.793264442 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.792002415 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.796862626 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.792117297 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.793435393 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.792012189 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.791673064 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.791095814 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.793033263 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.790838843 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.792070968 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.799415028 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.792060756 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.792773756 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.791902802 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.794352918 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.792011533 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.793661867 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.792108179 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.795259863 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.799719005 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.799225225 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.793784797 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.795500526 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.795006746 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.793907382 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.795913201 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.792281019 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.80502442 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.801097336 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.79514781 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.793142162 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.792072121 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.794651959 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.79370757 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.792856104 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.801499078 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.794577961 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.795532322 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.799271272 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.792902116 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.793969107 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.800944901 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.794449945 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.797735659 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.795088482 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.794639888 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.795662659 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.793565917 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.796846769 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.793492418 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.795066897 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.797945946 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.793706214 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.79473745 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.79541619 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.803907064 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.794553709 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.794313572 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.803179313 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.795634364 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.794162084 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.796209317 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.794469063 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.794988327 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.795335419 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.794260753 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.79502733 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.794475858 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.7988577 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.804289848 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.798513462 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.805160991 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.795791309 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.805382667 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.795607896 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.795349038 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.795731336 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.797948135 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.801948543 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.796356701 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.79504827 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.806701219 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.7956917 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.796798728 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.801268194 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.796133192 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.796072729 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.796210562 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.798701354 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.799633837 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.800048298 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.796066088 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.795775849 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.795533529 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.795098831 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.798737521 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.798046214 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.796170423 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.796274158 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.79556337 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.796718936 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.797620417 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.797527655 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.797241249 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.799099218 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.79932922 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.805848553 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.798255763 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.79707157 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.800178785 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.796761933 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.80594767 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.798519453 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.798121261 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.797260304 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.797719817 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.799108389 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.796815477 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.798241142 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.798317912 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.797470754 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.801048455 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.810458305 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.806041701 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.80303078 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.799079698 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.797212416 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.798640926 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.806475902 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.821250803 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.797659352 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.800007575 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.802454376 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.805739875 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.800260066 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.803910896 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.801952055 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.805807621 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.803488748 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.79868638 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.803637618 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.810387766 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.799185595 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.800524219 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.799614643 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.803745891 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.801767002 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.799845184 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.800831764 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.802117701 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.80043469 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.812798121 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.800693712 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.801448762 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.800666933 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.801190656 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.799228501 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.80017188 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.800935222 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.800851245 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.800262161 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.799898912 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.801821058 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.803747435 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.799206661 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.802676318 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.808285218 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.80034092 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.801779727 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.80165035 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.799863239 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.80393274 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.800318764 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.800209826 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.803960714 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.801180236 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.800895647 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.803882895 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.808223476 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.802579817 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.800760306 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.801191311 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.804879915 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.80045294 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.801151737 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.803563556 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.810935554 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.804633442 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.813752444 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.80921906 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.802563392 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.803828257 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.807942805 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.809295402 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.801804537 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.801863049 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.805405953 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.806089594 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.805131304 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.805032522 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.803395427 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.806705103 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.80925488 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.804308107 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.806304522 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.805113095 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.804774592 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.807949369 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.804018333 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.806978987 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.802563347 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.802858834 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.803579558 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.803563459 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.804092154 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.805766129 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.803813088 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.803806278 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.80566139 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.804469933 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.807539365 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.806632842 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.805209323 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.806185847 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.804139282 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.803545177 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.803856494 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.804851011 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.804051179 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.807469318 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.811809125 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.803869788 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.806007234 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.80519121 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.808244394 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.807782866 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.804422866 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.80445398 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.808124621 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.812676956 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.805161656 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.804295098 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.804883241 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.803990828 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.809635685 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.805589506 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.811023283 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.804602139 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.805965438 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.804800457 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.808824107 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.81419088 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.808728985 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.809510587 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.813571239 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.813246038 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.806833189 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.808253935 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.806506646 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.80643184 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.80767063 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.81104725 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.809157802 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.808397565 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.806276096 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.807892131 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.807379363 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.80901219 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.807892023 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.807134512 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.809949795 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.818363289 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.816980849 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.807567704 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.808363022 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.807015321 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.810174488 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.816925046 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.807155814 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.806979856 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.80715451 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.808281512 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.80883483 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.813578555 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.815086336 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.810806797 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.807067137 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.812349668 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.827915186 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.81066507 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.816245873 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.83885713 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.808408562 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.807547838 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.807708202 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.808777014 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.808332804 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.811551443 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.807865103 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.815928905 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.808598856 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.810283076 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.817271539 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.808723021 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.811000442 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.808676991 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.809620908 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.814612528 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.809026171 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.817459504 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.809134143 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.808855222 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.809716871 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.812276025 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.810150615 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.809453339 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.810458487 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.812363671 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.809071858 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.810331168 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.820094583 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.812567517 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.811823876 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.823230231 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.820566882 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.809299665 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.809376026 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.81033807 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.817639358 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.814392904 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.809762358 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.813741581 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.817641266 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.813079693 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.818457397 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.81261841 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.811350875 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.814007197 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.812780189 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.811196597 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.822880794 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.821583262 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.810491858 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.811866693 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.816978654 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.812093711 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.818841658 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.818403767 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.812481245 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.81248718 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.811606839 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.812547398 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.811862615 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.812792368 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.81893445 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.818506132 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.813702108 seconds)
  done (took 1072.830830293 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.813048981 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.814055883 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.812591709 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.813280667 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.814968217 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.813099525 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.812178699 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.812257074 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.813774743 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.814153725 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.813262466 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.813170901 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.814079701 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.816037628 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.813726233 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.819096914 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.814421117 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.815606366 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.816138628 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.814996002 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.818360428 seconds)
  done (took 39.84736605 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.81791232 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.816012828 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.815586163 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.815776735 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.816522158 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.816845849 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.817383798 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.823910008 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.816780508 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.816876132 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.815962039 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.816666312 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.816012704 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.81666322 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.818390295 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.817093196 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.816239676 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.8180682 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.816422841 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.817301536 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.81778888 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.817798215 seconds)
  done (took 41.726377905 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.818031676 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.818899379 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.817204634 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.818963162 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.81629488 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.81653199 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.815979611 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.817780072 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.816948269 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.816475481 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.822306973 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.824495596 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.816370041 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.819493278 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.816814749 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.815268915 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.96417861 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.81837687 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.815064521 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.819511567 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.815658813 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.823170781 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.815600153 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.816206912 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.816011691 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.816147647 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.815740914 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.816044132 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.81554989 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.816554776 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.821113144 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.815920666 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.817650252 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.820212068 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.817486354 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.817106342 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.822690433 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.817060321 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.816634785 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.816671939 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.825383469 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.839943782 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.81666469 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.816941168 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.826044872 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.816954954 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.816824568 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.821615796 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.825560506 seconds)
  done (took 91.010086767 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.818595778 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.818085403 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.819441981 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.817778814 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.818413419 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.817487132 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.818082862 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.818959078 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.819135722 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.818762217 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.818265614 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.819620469 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.818602609 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.821471058 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.818686867 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.819356476 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.819525134 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.821882564 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.818900165 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.820962786 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.819887572 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.82024539 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.82033428 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.821069264 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.822581368 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.820023938 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.821276259 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.821835248 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.821331222 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.821616695 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.822342105 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.821925492 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.822152074 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.822026134 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.821742459 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.823889718 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.821456474 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.820950264 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.820475996 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.822298248 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.820662241 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.823363215 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.819768146 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.821681744 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.820688256 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.821545078 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.82269991 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.82185388 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.822784977 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.821944612 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.822726564 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.822106473 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.823042557 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.821290216 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.821853329 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.821777905 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.821512078 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.822547973 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.821800412 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.821156839 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.821169957 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.822086441 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.821768609 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.827801205 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.823877819 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.822647378 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.82486051 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.823265246 seconds)
  done (took 125.58727707 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.825149136 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.824198618 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.825132378 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.824394065 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.822989948 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.825935515 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.823079782 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.823263613 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.824029635 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.823355899 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.825596535 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.825225535 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.824478755 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.826438703 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.824682377 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.824252912 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.826335515 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.824258253 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.824705002 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.823619124 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.824506847 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.825883884 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.824710211 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.82459018 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.824509891 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.825410342 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.826049409 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.825406745 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.825623729 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.824638808 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.827385318 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.825795256 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.826329244 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.825315908 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.825787686 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.825166134 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.825687616 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.826242078 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.827147469 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.825778622 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.824662166 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.826768235 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.826292995 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.826824557 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.826895371 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.827002212 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.826092146 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.828787051 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.82833925 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.827845127 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.827306647 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.827040883 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.828423561 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.82913436 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.831995037 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.829112424 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.828261317 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.829145505 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.829833059 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.830360463 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.828018819 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.827686608 seconds)
  done (took 114.976470005 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.828742252 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.828858753 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.830854316 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.828703651 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.830019037 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.829840821 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.828493954 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.830465772 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.829177152 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.829246435 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.82954926 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.829408855 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.830690768 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.829641863 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.828926006 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.828255456 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.828819082 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.829273031 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.828067292 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.828283883 seconds)
  done (took 38.346039617 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.827746363 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.826867264 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.830035849 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.828345396 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.828782725 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.829491478 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.828913176 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.828349657 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.828957619 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.829181067 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.82968154 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.82913648 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.830086896 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.829060854 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.828718482 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.828001047 seconds)
  done (took 31.022436303 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.826788652 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.827468438 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.828284908 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.827339246 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.826892922 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.82661928 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.828214986 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.828000317 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.828166509 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.827969293 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.829362067 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.828051299 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.828587875 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.828857273 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.827681384 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.827376376 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.827115764 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.82800973 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.827468083 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.828380598 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.828077588 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.828409898 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.827989475 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.828622903 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.827762121 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.829065512 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.828567441 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.828531084 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.829846953 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.828752418 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.828397477 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.829551472 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.829416996 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.829344145 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.827962513 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.829185489 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.829384605 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.828773063 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.828680378 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.82844072 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.828861497 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.829261947 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.828793151 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.828562876 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.83112359 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.829694522 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.830064351 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.829562221 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.829543947 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.829682749 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.829231992 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.829493937 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.829205993 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.830131634 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.828981199 seconds)
  done (took 102.334101366 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.828748928 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.830944737 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.829565433 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.83026379 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.829448378 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.83172157 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.829581913 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.82936299 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.829835375 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.829900481 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.830126088 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.829293675 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.830442329 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.830846411 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.829943125 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.830037395 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.831333357 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.831669295 seconds)
  done (took 34.703705361 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.831743184 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.830691758 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.832754581 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.831721278 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.832178904 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.830878037 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.831485599 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.8305523 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.831804977 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.831715284 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.832144341 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.831978413 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.831556334 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.831267575 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.831605721 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.831594918 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.834438581 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.832775033 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.831164803 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.833777685 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.831666603 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.832061716 seconds)
  done (took 42.064520512 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.830645681 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.830934945 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.845206977 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.851951538 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.852004552 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.865438031 seconds)
  done (took 12.838397446 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.830826449 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.831933788 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.832600805 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.833187871 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.832299601 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835095628 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831878252 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.83212363 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.832533364 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.833328888 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.832814198 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.833249371 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.832582279 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.833541362 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.833566365 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.832650525 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.832898654 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832688919 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.833702693 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.833003772 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.833641367 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.833905473 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.835876841 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.833779346 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.83418831 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.834243523 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.833613725 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.835087695 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834106988 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.833395742 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.834452873 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.834176581 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.834197175 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.834102455 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834793766 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.833317942 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.834147195 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.834495556 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.836827168 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.835247179 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.835230718 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.834442635 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835187764 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.833753973 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834405097 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835278718 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834955088 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.834119593 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.835693431 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835180145 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834185593 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.835379559 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834417853 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.834835676 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.836658684 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.837019334 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.835549311 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.835468959 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.834897099 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834884218 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.835791321 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.835944134 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835295558 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.836379942 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.835832232 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835841398 seconds)
  done (took 122.825959719 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.835181603 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.835303841 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.835084837 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.834971478 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.836452169 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.835940962 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.834642152 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.83565245 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835360395 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.835237432 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.835830107 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.83582059 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836249603 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.836023048 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.836116503 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.83631406 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837273481 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.836729448 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.836041205 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.836295682 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.839192845 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837346888 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.837037088 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.837151515 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.837028998 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.83711419 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837270363 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.83752127 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.836673511 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837008523 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.836389425 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.836573064 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837809 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.836946204 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.836978989 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.836566063 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838278016 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838865883 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838234799 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837229714 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.837194537 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837072665 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837085053 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.837243345 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837033855 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836612191 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.837856541 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.837557308 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837291178 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.837366088 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.838033309 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.837731716 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.837527224 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838167307 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.837682712 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.837621204 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.838122026 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.83805969 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.838904962 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.839335624 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.838226144 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840132332 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.839102609 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.838326408 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.838357963 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.838809484 seconds)
  done (took 123.018645177 seconds)
done (took 2502.141465064 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.848512222 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.944966867 seconds)
  done (took 15.562823466 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.000649454 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.953195575 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.838716793 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.868084006 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.839321458 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.859641629 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.86716184 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.839657315 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.8392295 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.839670376 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.840290173 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.024205627 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.859429185 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.839575167 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.841040528 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.931261049 seconds)
  done (took 51.856057476 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.84482809 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.845336608 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.855604315 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.84510415 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.845265654 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.857450842 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.878652142 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.849762547 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.881673716 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.861897951 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.915601569 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.854431266 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.84464394 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.89649075 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.860202596 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.859077214 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.945472485 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.924486376 seconds)
  done (took 35.435886703 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.92294596 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.851573288 seconds)
  done (took 10.55079562 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.865314013 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.853999611 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.855887037 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.849740264 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.869700295 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.867438561 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.850007713 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.860475254 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.863337634 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.880990231 seconds)
  done (took 70.418710714 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.853139438 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.846763385 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.846988553 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.843215559 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.840964477 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.847092226 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.844297705 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.847855697 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.52983216 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.884735203 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.85465211 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.854194823 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.845200491 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.845491095 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.843426151 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.869485722 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.955696813 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.842273786 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.841664134 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.85045289 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.844742232 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.894664096 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.859546042 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.848854778 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.8780553 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.531310745 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.855771456 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.850719012 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.952517161 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.842811897 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.845226801 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.030051869 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.850431562 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.293499069 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.129982799 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.849767204 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.857938066 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.853046719 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.843087836 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.956134808 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.846612147 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.851228742 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.809624647 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.097954986 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.94345559 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.89273187 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.196124817 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.84940595 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.846432069 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.88117147 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.848678128 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.845725768 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.862424342 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.363875823 seconds)
  done (took 131.566540493 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.844359415 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.188788112 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.010418077 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.84521481 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.129626402 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.047965045 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.845036102 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.890498322 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.845512842 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.074603125 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.098239406 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.947778416 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.845516827 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.845958256 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.84584078 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.843344748 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.980853237 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.913130959 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.848016179 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.843562501 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.873702169 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.083985439 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.964943137 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.846833945 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.871099263 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.052916434 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.966194099 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.952044744 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.63060072 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.844733949 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.90572727 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.846289432 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.847131343 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.845344353 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.997872665 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.939359731 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.926181722 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.848911648 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.844914577 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.845497593 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.585406544 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.043672743 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.938934289 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.963867524 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.099924493 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.051693214 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.622133529 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.844452948 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.58276453 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.006727423 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.07388834 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.079275859 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.964701447 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.851040383 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.177631085 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.844874207 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.845780856 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.092710259 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.064594927 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.945085365 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.849460315 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.846530164 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.8457047 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.132098113 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.848310907 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.940411639 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.850457284 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.845541164 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.94175097 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.944520984 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.076279157 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.059906787 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.8767652 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.182749766 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.351048492 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.092205767 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.911575438 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.095722906 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.848590145 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.847150707 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.929105978 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.68310775 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.098785526 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.129327685 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.093505948 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.881864227 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.566574024 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.846725904 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.074528282 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.066732605 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.098413512 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.100700119 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.084873826 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.172525652 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.848666934 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.847378649 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.087231603 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.960534174 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.856866086 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.189902357 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.078254363 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.395353014 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.874607532 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.15293614 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.976858806 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.857997318 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.474728178 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.852647172 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.070034137 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.888217961 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.851169624 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.849026215 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.067589027 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.820146161 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.851669011 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.488606985 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.909812221 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.853282921 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.081818096 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.84998836 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.110722334 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.853520362 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.079936764 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.279720984 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.879893237 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.022674126 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.096962848 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.854372997 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.093466826 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.087964841 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.964640636 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.070738896 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.543792953 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.85219162 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.135922393 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.85225064 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.852907456 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.017981568 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.851880323 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.991728283 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.856104238 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.130854309 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.872002462 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.081930014 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.864332676 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.105598 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.881453806 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.899075599 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.854668946 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.981172219 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.852953461 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.682617903 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.008819222 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.855534213 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.852252873 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.400467456 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.850920626 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.001277106 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.075230501 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.872752735 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.920987803 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.518388079 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.852013187 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.934606672 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.873369134 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.234694281 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.850432223 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.106713351 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.856196216 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.851575557 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.851210919 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.134587438 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.032931278 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.855203335 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.852650604 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.750814789 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.85221843 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.853175471 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.03213825 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.225201016 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.852125615 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.052562273 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.854816758 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.980669842 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.857210828 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.916847756 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.185754285 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.852700075 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.852774488 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.852249724 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.854560132 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.852660325 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.060103289 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.87691647 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.368279084 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.989634926 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.119879149 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.16184778 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.092227891 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.895333774 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.857422548 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.105849572 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.855953384 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.915014148 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.856187515 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.873143307 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.081922188 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.859092605 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.06020585 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.121807692 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.863156157 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.899416559 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.856226435 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.855294959 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.854246711 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.991518018 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.937660121 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.856557245 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.8534177 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.967789874 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.973902297 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.065451657 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.856469304 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.948610957 seconds)
  done (took 898.190824015 seconds)
done (took 1215.354473711 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.855637568 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.857899336 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.860361683 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.858936301 seconds)
  done (took 29.21944377 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.85701797 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.856298109 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.85743584 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.855322724 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.857357171 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.856564949 seconds)
  done (took 12.925353895 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.839723693 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.858939338 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.858351495 seconds)
  done (took 21.343746894 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.931984442 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.261158959 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.99828796 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.285249608 seconds)
  done (took 10.262710176 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.856847294 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.857583495 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.856946456 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.859374087 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.857517794 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.858194413 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.857428879 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.858037878 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.858365113 seconds)
  done (took 18.508501805 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.023310318 seconds)
done (took 98.070948639 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.239688729 seconds)
    (2/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.881831052 seconds)
    (3/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.859019689 seconds)
    (4/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.865703633 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.981311057 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.923629237 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 1.986335218 seconds)
    (8/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.881239934 seconds)
    (9/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 1.984685503 seconds)
    (10/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.991815959 seconds)
    (11/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.138089674 seconds)
    (12/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.88956165 seconds)
    (13/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.7853702 seconds)
    (14/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.961876703 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.721920783 seconds)
    (16/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.169679289 seconds)
    (17/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.875755469 seconds)
    (18/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.935975178 seconds)
    (19/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.874600018 seconds)
    (20/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.992371791 seconds)
    (21/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.093468726 seconds)
    (22/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.243092074 seconds)
    (23/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.002284156 seconds)
    (24/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.11632177 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.246541565 seconds)
    (26/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.065373069 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.168103815 seconds)
    (28/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.018509966 seconds)
    (29/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.857897228 seconds)
    (30/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.042781992 seconds)
    (31/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.859164335 seconds)
    (32/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.893701268 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.246966416 seconds)
    (34/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.860381915 seconds)
    (35/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.994720974 seconds)
    (36/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.919161043 seconds)
    (37/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.94550376 seconds)
    (38/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.966976793 seconds)
    (39/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.863312813 seconds)
    (40/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.244926305 seconds)
    (41/309) benchmarking ("sort", Int8, false)...
    done (took 4.827474255 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.723601932 seconds)
    (43/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.335532443 seconds)
    (44/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.880022265 seconds)
    (45/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.858724022 seconds)
    (46/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.863829461 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.119721507 seconds)
    (48/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.312706211 seconds)
    (49/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.191392957 seconds)
    (50/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.186803652 seconds)
    (51/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.025345428 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.029375827 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.788072493 seconds)
    (54/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.965001934 seconds)
    (55/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.874094123 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.990338132 seconds)
    (57/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.023044952 seconds)
    (58/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.954244883 seconds)
    (59/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.128352938 seconds)
    (60/309) benchmarking ("sort", Float64, false)...
    done (took 5.545064858 seconds)
    (61/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.284982155 seconds)
    (62/309) benchmarking ("sort", Bool, false)...
    done (took 2.076078638 seconds)
    (63/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.380312609 seconds)
    (64/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.009367762 seconds)
    (65/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.956665616 seconds)
    (66/309) benchmarking ("sort", Int64, false)...
    done (took 5.466267488 seconds)
    (67/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.174810285 seconds)
    (68/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.96797107 seconds)
    (69/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.237050989 seconds)
    (70/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.860667334 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.257105082 seconds)
    (72/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.876437316 seconds)
    (73/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.111186467 seconds)
    (74/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.950358498 seconds)
    (75/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.902250944 seconds)
    (76/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.863341073 seconds)
    (77/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.012268041 seconds)
    (78/309) benchmarking ("perf_sum", Int64, true)...
    done (took 2.329307969 seconds)
    (79/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.880129143 seconds)
    (80/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.600906742 seconds)
    (81/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.040779394 seconds)
    (82/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.104772985 seconds)
    (83/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.863289107 seconds)
    (84/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.942466279 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.197219288 seconds)
    (86/309) benchmarking ("sort", BigInt, false)...
    done (took 6.863246534 seconds)
    (87/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.865013844 seconds)
    (88/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.958982871 seconds)
    (89/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.967517464 seconds)
    (90/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.245560364 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.122267219 seconds)
    (92/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.32693751 seconds)
    (93/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.895775357 seconds)
    (94/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.09041229 seconds)
    (95/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.962964256 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.509561581 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.836461602 seconds)
    (98/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.000270166 seconds)
    (99/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.179795388 seconds)
    (100/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.876327619 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.193414081 seconds)
    (102/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.866219606 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 1.989442115 seconds)
    (104/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.884506186 seconds)
    (105/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.884954296 seconds)
    (106/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.047037039 seconds)
    (107/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.833061022 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.939400126 seconds)
    (109/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.935974405 seconds)
    (110/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 8.366449807 seconds)
    (111/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.174611515 seconds)
    (112/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.887440049 seconds)
    (113/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.128343029 seconds)
    (114/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.150452115 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.864104689 seconds)
    (116/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.02384935 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.786812106 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.947623793 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.929014676 seconds)
    (120/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.174872987 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.898393032 seconds)
    (122/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.257286298 seconds)
    (123/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.005225832 seconds)
    (124/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.623339448 seconds)
    (125/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.126647185 seconds)
    (126/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.945433479 seconds)
    (127/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.214628878 seconds)
    (128/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.440769384 seconds)
    (129/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.9707366 seconds)
    (130/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.949325415 seconds)
    (131/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.386962795 seconds)
    (132/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.699866663 seconds)
    (133/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.277585342 seconds)
    (134/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.866830312 seconds)
    (135/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.886585692 seconds)
    (136/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.569000971 seconds)
    (137/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.990025325 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.051353939 seconds)
    (139/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.345932454 seconds)
    (140/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.963266995 seconds)
    (141/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.193078549 seconds)
    (142/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.86682632 seconds)
    (143/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.121034276 seconds)
    (144/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.945946059 seconds)
    (145/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.631274912 seconds)
    (146/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.961341142 seconds)
    (147/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 8.38953398 seconds)
    (148/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 3.610539748 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.005904171 seconds)
    (150/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.258645125 seconds)
    (151/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.644183929 seconds)
    (152/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.517769682 seconds)
    (153/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.131074113 seconds)
    (154/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.624685516 seconds)
    (155/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.061509765 seconds)
    (156/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.08230427 seconds)
    (157/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.181144766 seconds)
    (158/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.116868764 seconds)
    (159/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.864490448 seconds)
    (160/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 8.410144878 seconds)
    (161/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.064172232 seconds)
    (162/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.345854967 seconds)
    (163/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.891094752 seconds)
    (164/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.092369883 seconds)
    (165/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.969202797 seconds)
    (166/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.87268173 seconds)
    (167/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.939948748 seconds)
    (168/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.329633159 seconds)
    (169/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.884404876 seconds)
    (170/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.712777107 seconds)
    (171/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.166578874 seconds)
    (172/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.342555185 seconds)
    (173/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.061436022 seconds)
    (174/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.870249051 seconds)
    (175/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 5.150870093 seconds)
    (176/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.89263915 seconds)
    (177/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.973528561 seconds)
    (178/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.868187047 seconds)
    (179/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.080611806 seconds)
    (180/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.001185846 seconds)
    (181/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.119847602 seconds)
    (182/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.358796779 seconds)
    (183/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.094830305 seconds)
    (184/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.976428199 seconds)
    (185/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.868305594 seconds)
    (186/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 1.953065216 seconds)
    (187/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.344745317 seconds)
    (188/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.892897961 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.21236503 seconds)
    (190/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.879110046 seconds)
    (191/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.164408921 seconds)
    (192/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.87248559 seconds)
    (193/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.046222166 seconds)
    (194/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.890706226 seconds)
    (195/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.152286413 seconds)
    (196/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.298747178 seconds)
    (197/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.13082928 seconds)
    (198/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.869074371 seconds)
    (199/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.079749934 seconds)
    (200/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.241239123 seconds)
    (201/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.947186092 seconds)
    (202/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.020210724 seconds)
    (203/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.936000326 seconds)
    (204/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.9286486 seconds)
    (205/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.944945032 seconds)
    (206/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.952646958 seconds)
    (207/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.868040972 seconds)
    (208/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.262847769 seconds)
    (209/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.995509138 seconds)
    (210/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.073551325 seconds)
    (211/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.133167688 seconds)
    (212/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.036536053 seconds)
    (213/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.045987452 seconds)
    (214/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.896928473 seconds)
    (215/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.067269709 seconds)
    (216/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.937756927 seconds)
    (217/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.884612096 seconds)
    (218/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.869009825 seconds)
    (219/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.248037101 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.768174816 seconds)
    (221/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.875956429 seconds)
    (222/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.096709823 seconds)
    (223/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.294433994 seconds)
    (224/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.977341771 seconds)
    (225/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.872339938 seconds)
    (226/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.556604016 seconds)
    (227/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.413025407 seconds)
    (228/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.193833952 seconds)
    (229/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.000237781 seconds)
    (230/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.869674342 seconds)
    (231/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.108467615 seconds)
    (232/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.505999152 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.63630395 seconds)
    (234/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.958197318 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.911992059 seconds)
    (236/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.869631297 seconds)
    (237/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.676161881 seconds)
    (238/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.904578092 seconds)
    (239/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.207437268 seconds)
    (240/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 1.961897835 seconds)
    (241/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.560233247 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.460145564 seconds)
    (243/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.658207436 seconds)
    (244/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.948194006 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.193927984 seconds)
    (246/309) benchmarking ("sort", Float32, false)...
    done (took 5.544620015 seconds)
    (247/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.083680448 seconds)
    (248/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.982752134 seconds)
    (249/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.252848516 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.634868094 seconds)
    (251/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.982280378 seconds)
    (252/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.064562134 seconds)
    (253/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.872760097 seconds)
    (254/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.212913494 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.004893711 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.747079573 seconds)
    (257/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.876037587 seconds)
    (258/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 3.916068763 seconds)
    (259/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.002139655 seconds)
    (260/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.873663048 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.974677072 seconds)
    (262/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.796585118 seconds)
    (263/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.635882221 seconds)
    (264/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.082462192 seconds)
    (265/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.781935188 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.008773563 seconds)
    (267/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.051153324 seconds)
    (268/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.331480645 seconds)
    (269/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.653602087 seconds)
    (270/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.881204438 seconds)
    (271/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.195398112 seconds)
    (272/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.287749067 seconds)
    (273/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.142282824 seconds)
    (274/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.972324895 seconds)
    (275/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.952184742 seconds)
    (276/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.884457734 seconds)
    (277/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.569602228 seconds)
    (278/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 8.085771746 seconds)
    (279/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.052431474 seconds)
    (280/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.894112141 seconds)
    (281/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.182811795 seconds)
    (282/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.18726228 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.010013833 seconds)
    (284/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.933179858 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.995837671 seconds)
    (286/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.066925346 seconds)
    (287/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.96297001 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.873196155 seconds)
    (289/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.050459699 seconds)
    (290/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.18092902 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.738408572 seconds)
    (292/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.628795542 seconds)
    (293/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.877552059 seconds)
    (294/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.974456156 seconds)
    (295/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.880467105 seconds)
    (296/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.817153004 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.274585915 seconds)
    (298/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.905448991 seconds)
    (299/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.275994188 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.905500306 seconds)
    (301/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.028078328 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.473294675 seconds)
    (303/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.882540259 seconds)
    (304/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 4.078512193 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.190792277 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.08916654 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.191976426 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.23208088 seconds)
    (309/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.875607619 seconds)
  done (took 1012.804330617 seconds)
done (took 1014.67114336 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.901543073 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.896107291 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.878258136 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.899697606 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.991276915 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.92267904 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.89251563 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.882967986 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.92811178 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.929152314 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.87683435 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.920756433 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.879739672 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.878936913 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.87880755 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.895318084 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.182744596 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.906409788 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.897031302 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.891947907 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.896837615 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.878945324 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.929456541 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.920238097 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.883124168 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.883834355 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.882217187 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.898854823 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.991829955 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.88274625 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.884361217 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.891088857 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.183965861 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.904333625 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.87808996 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.899572831 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.892678599 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.892139075 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.884790608 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.913273217 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.321458189 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.885160871 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.881632796 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.880370407 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.880882725 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.887840387 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.882219639 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.888785788 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.896460496 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.897583528 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.318341996 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.903158752 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.883938272 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.882670079 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.894859951 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.882091595 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.886771158 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.899225692 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.903840983 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.89796576 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.17284962 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.91668011 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.884566183 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.899054623 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.890378176 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.355065109 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.887383273 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.888981555 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.324197222 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.895995057 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.354347611 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.896945959 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.88549402 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.897556115 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.914404233 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.185185524 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.905984017 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.882493015 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.89153004 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.880232693 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.894470859 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.897928479 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.887911504 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.883624577 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.899199763 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.926269507 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.896165324 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.883979846 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.897604288 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.902750415 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.89240823 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.895896669 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.887071161 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.881675213 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.897761978 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.887983366 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.886322301 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.885837094 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.888121317 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.896488871 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.321550896 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.906819589 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.882298804 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.88145461 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.885122459 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.89906324 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.323674204 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.890720079 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.907379146 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.93499486 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.886138656 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.17590718 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.913888096 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.902710054 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.896578087 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.887667112 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.882723897 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.1746886 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.347871695 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.90675565 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.885284615 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.883498101 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.9019324 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.887024679 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.882381859 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.187569017 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.913345204 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.900845813 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.007430199 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.898306429 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.916701968 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.883838311 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.889536478 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.930100862 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.903456085 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.919230778 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.888042104 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.901481415 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.903312839 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.882967483 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.896555467 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.899685374 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.885952835 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.893534189 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.883082328 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.932042799 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.901537552 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.901795239 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.908015324 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.0095421 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.885378937 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.175460489 seconds)
done (took 296.18031696 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.96124126 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.885091004 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.001039746 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.884757358 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.972366581 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.956692603 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.883949478 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.885222449 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.88424003 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.388305958 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.884602197 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.889656568 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.882931955 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.885506877 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.953444713 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.8844098 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.885064698 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.333094403 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.886001243 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.963625008 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.884169232 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.885235005 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.884554625 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.390493309 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.883994179 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.88350665 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.964572499 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.88569739 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.338157546 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.884105374 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.884402525 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.340086286 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.965370228 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.913780496 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.894187353 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.891002208 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.974138531 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.896266584 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.952106629 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.951764978 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.004621493 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.918319474 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.884691114 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.884529017 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.889536995 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.886974956 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.887167257 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.918844969 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.884433646 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.891862844 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.335191757 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.893745342 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.892140469 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.886870215 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.886639116 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.914481609 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.887543387 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.887767901 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.965761154 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.887314244 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.953834062 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.392220206 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.390973099 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.889697562 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.886632936 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.888051146 seconds)
  done (took 186.404158372 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.951081061 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.959050204 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.959484814 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.893980238 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.93636279 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.954820843 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.893834359 seconds)
  done (took 15.365717119 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.894818811 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.891034509 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.938081083 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.938885922 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.887632102 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.066933685 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.900761187 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.893607479 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.915707643 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.889251405 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.552016642 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.938788562 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.895681678 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.887431347 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.901998704 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.948197638 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.891039912 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.889446423 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.998582218 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.040019557 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.893752629 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.895871861 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.91582015 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.900531979 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.889400067 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.88883759 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.889368357 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.896325304 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.89178016 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.89050396 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.888488785 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.94070498 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.889710285 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.890013796 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.890040864 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.890583377 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.889424312 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.890134073 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.889744757 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.887881082 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.892338898 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.889770229 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.890105761 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.890242829 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.890233352 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.913638136 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.890298136 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.890374442 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.890659006 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.890258519 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.916958859 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.890657839 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.89089384 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.89533547 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.935815991 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.897999354 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.893520403 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.890359743 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.890701688 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.895289791 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.890092529 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.039911291 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.93982554 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.889987382 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.944447104 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.039887705 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.88556206 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.88582579 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.886057903 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.974213423 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.891582149 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.932289854 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.884268464 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 1.996385897 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.882601445 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.067103671 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.903160939 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.882888028 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.883655766 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.879948832 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.88870665 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.876945392 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.879639963 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.89108587 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.882655918 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.878471318 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.877062657 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.87712567 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.890108859 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.874470065 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.924777808 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.875503341 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.875090427 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.014895858 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.873606041 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.983500285 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.900734959 seconds)
  done (took 207.649106666 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.88158757 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.887271118 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.874984254 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.888079855 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.872622341 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.872333755 seconds)
  done (took 13.080257792 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.873104679 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.87523844 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.871905269 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.871740959 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.870260122 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.871356027 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.871937754 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.873834985 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.874932782 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.871568537 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.872320088 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.87309689 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.874296694 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.871270027 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.871819885 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.871694116 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.872274591 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.871824359 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.872275001 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.871704189 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.076927921 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.871437054 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.872035102 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.874834511 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.876026028 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.872017683 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.884185839 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.876196893 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.872202458 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.87948545 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.875308385 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.872047995 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.875704016 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.878662387 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.876885501 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.875228307 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.876719636 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.874116071 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.873698698 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.872993745 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.873823852 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.873351671 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.873376304 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.877293112 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.875615381 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.880230802 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.878591383 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.886471604 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.874709186 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.874127898 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.875419437 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.874401437 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.874562997 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.873829707 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.877726278 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.880752155 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.878390322 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.87469283 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.873823379 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.879110167 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.87834515 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.87458575 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.875734671 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.878643075 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.881154178 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.874813932 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.877280968 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.880580724 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.873694832 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.874513096 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.875133175 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.875851702 seconds)
  done (took 138.014581871 seconds)
done (took 562.344015436 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.52115151 seconds)
  done (took 9.325449883 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.061844842 seconds)
  done (took 8.891013731 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.557139705 seconds)
  done (took 10.385092322 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.907311594 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.924878749 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.906068496 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.895262294 seconds)
  done (took 29.469601468 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.181573626 seconds)
  done (took 9.006610049 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.908383084 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.906662153 seconds)
  done (took 15.713436742 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.044966732 seconds)
  done (took 8.871118599 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.358447978 seconds)
  done (took 9.200588325 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.918307144 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.914701883 seconds)
  done (took 15.681214088 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.899033596 seconds)
  done (took 8.724875945 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.154308766 seconds)
  done (took 10.064886311 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.903687737 seconds)
  done (took 8.771098121 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.95654104 seconds)
  done (took 8.779313981 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.14092152 seconds)
  done (took 9.961023227 seconds)
done (took 164.650893218 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.893152832 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.883885861 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.885698397 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.883071062 seconds)
  done (took 29.364212483 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.920089556 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.920435148 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.928645312 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.919398026 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.910500905 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.910387377 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.919724998 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.921054471 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.910247942 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.918339197 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.921560849 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.917887644 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.919816893 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.929304349 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.929611835 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.918546076 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.920677151 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.921449684 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.91169647 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.93002891 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.920073731 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.92074101 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.886682334 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.88715285 seconds)
  done (took 47.828424053 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.073086636 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.952037367 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.040315337 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.932376481 seconds)
  done (took 9.813832798 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.886553261 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.951192045 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.938681834 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.935320105 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.937235874 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 1.991384384 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.939949535 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.024838782 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.014508065 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.012969449 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.894599442 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.908839413 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.908437245 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.932453061 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 1.989270622 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.887136887 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.88723695 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.002850714 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.9485539 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.064418746 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.886953801 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.941251678 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.938281911 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.942108842 seconds)
  done (took 48.581736763 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.888046605 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.8970918 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.895413152 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.889306115 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.889900523 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.888802385 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.895510169 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.891014182 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.910839526 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.89080838 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.889351371 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.889362253 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.895901886 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.888976636 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.888823949 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.902369999 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.903226244 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.892876759 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.893291361 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.896673374 seconds)
  done (took 39.694774838 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.886662007 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.733920402 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.233068989 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.139626687 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.887104004 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.888385992 seconds)
  done (took 31.587219144 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.900122306 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.894739059 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.889380939 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.944750337 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.024651684 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.894053007 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.889080138 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.899646673 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.934287023 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.953487592 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.906668848 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.918035731 seconds)
  done (took 24.867438292 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.888955846 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.889496186 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.889936922 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.901275802 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.899450081 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.898334283 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.897672283 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.887283233 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.902586136 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.910360527 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.899815161 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.900741678 seconds)
  done (took 44.587747416 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.596727327 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964670332 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.890220769 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.76368317 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.344976785 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.439562226 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.78361279 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.612244254 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.369431619 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.829252846 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.106093798 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.902600829 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.986723175 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.90327851 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.173006595 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.218511167 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.08257197 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.144249168 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.312071466 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.938472664 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.105438782 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.121019622 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.189454044 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.903424047 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904958846 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.908474887 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.253603675 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.66307072 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.934901443 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 4.9325073 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.149740033 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.855531634 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96162511 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.906355362 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.915534556 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.905911029 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908698536 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.177023991 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.910812192 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.043581639 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977797443 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.144916835 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909233677 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.324250804 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.61614722 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.155790688 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.004420849 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.903652145 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907832756 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.903767791 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.830043548 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.984948885 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.907432316 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.909258719 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.604746281 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.905676074 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978049497 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.906772479 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.108471269 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.711834849 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.592264479 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.906806324 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906999123 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.462819927 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.943837876 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.01402534 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.631127828 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.264002144 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.319257709 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.003435579 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.907199923 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.906476597 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.935172491 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.872759888 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.573863869 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.940821697 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.041749052 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.922452524 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.547350912 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.190716207 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.270798961 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.452002409 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.825170054 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.180887746 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.347054908 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.90034587 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.120911355 seconds)
    (88/481) benchmarking "5d"...
    done (took 3.772203175 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.832906488 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.120510512 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937216486 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909109537 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.175408436 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.631038036 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.01429962 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.918301843 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.346883332 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924109405 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.912793609 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908898033 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.120914777 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.94397272 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.940387199 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.023805197 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924234213 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.987997904 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.837928812 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.920138278 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.908200124 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.986638959 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.90900118 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.840806754 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.957123595 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.241341817 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.949290436 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.845339611 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.911654492 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.947779411 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947352711 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.859086134 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.160409235 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.201248601 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.568466324 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.875333393 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.042980804 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.224721794 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.119257618 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.913295407 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.12202282 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.447890062 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.25030018 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.9411238 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.188177045 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.96140965 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.189107141 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.330272439 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985221245 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.648168627 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.708383111 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.126182889 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.922346137 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 6.910763647 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.912910212 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.91453731 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.845366678 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.595548044 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.225182029 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.05902995 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.12496489 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.309080422 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.895135412 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.856432917 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.221590186 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.046644188 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.921067603 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.550115126 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.004253737 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.670059725 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.934033422 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.941236392 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.984907845 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.874985053 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924809882 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987120799 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92784657 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.981101286 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.161857764 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.257421346 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.914419193 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.914209283 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.86789701 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.910848005 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.91479148 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.446022723 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.881323093 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.913444519 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.92673456 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.785714842 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985507782 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.913499207 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.915008155 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.446474907 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.415460742 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.916718758 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.508851995 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.920668805 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.996649467 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.175434919 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.206308962 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.02587834 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.611598881 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.248514685 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.009458682 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.613510635 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.842266846 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.913071403 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.850702009 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915513629 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.916798345 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.918463047 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.100213893 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.183365754 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.202756479 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.366979952 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.969667522 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.115306757 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.578672624 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.864482875 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.915278833 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.918443625 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.915825124 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.913707728 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.422970548 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.148956631 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.955888849 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.94076776 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.91978143 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.041096957 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.924590156 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.839713279 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.915049495 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.916874852 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.265206771 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.946750038 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.861847142 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.168999131 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.741545189 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.052154942 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.96841733 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.928301024 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.922079216 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.583686705 seconds)
    (233/481) benchmarking "4d"...
    done (took 2.962210201 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.843614614 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.252243757 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954135357 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.641220688 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404669557 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.476411572 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.20600757 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.218811258 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.226615776 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.979328076 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.131932825 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.000929799 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.971407095 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.00414001 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.854402468 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.845566178 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.558473294 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.223922775 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.186765762 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.925971477 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.132826214 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.582482131 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.145450543 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947765839 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.258947605 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.218773024 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.890298866 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.933556486 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.319736348 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.02671204 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.000375636 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.922699443 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.875166411 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.249498904 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957299308 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.621217971 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.932547874 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.271120612 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.255565139 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.13647239 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.238716348 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.11061567 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.921914677 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.260988932 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.007914689 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.959434099 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.925167048 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.910042854 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.136029135 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.497948453 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.789622794 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.925933522 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.96233021 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.210596042 seconds)
    (288/481) benchmarking "3d"...
    done (took 2.817996516 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 1.92310549 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.957911444 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.182390336 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.921430619 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.221210373 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.269940398 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.020780574 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980521564 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.146633718 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.339884279 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.214619259 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.466715044 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.40678128 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.925806662 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.847943156 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.621607317 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.123869814 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.922433971 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.886835552 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.122239296 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.155013297 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.603763884 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.141033987 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.162784034 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.933270574 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.181934442 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.988206089 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.01849925 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.176625781 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.331520552 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.168619218 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.14871331 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.460950126 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.139564741 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.37679884 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.085733386 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.925320565 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.127070476 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.136136849 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.136700485 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.259833148 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.078348394 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.635769554 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.927865792 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.129489185 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.211090961 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.975809545 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.252495082 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.07888398 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.005511712 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.929171934 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987705566 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.928844139 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933312362 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.253816116 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.435301114 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.9378456 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001504048 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.97199051 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.428986195 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.928365768 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.929883053 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.185509963 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.259343525 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.245816594 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.901733375 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.924963582 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.925055277 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.053601145 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.850741735 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.929812293 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.19578399 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.928684025 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.970732775 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.071614281 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94124889 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.178266705 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.298702789 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.332597751 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.889123262 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.932058222 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.14373709 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.226872215 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.999094058 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.038552624 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.196839905 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.254888272 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.956729801 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.249072546 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.153432905 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.928588453 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.128646324 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.929070519 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.060166056 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 7.121454106 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.189494119 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.490096166 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.604496911 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.189261644 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.781263545 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.928657544 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.607512732 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.189888431 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.191549588 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.971856556 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9913088 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.93107568 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.274323253 seconds)
    (397/481) benchmarking "6d"...
    done (took 3.660807316 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.058214546 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.787197518 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.8563012 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.934454237 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.145002616 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.168466298 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.63665918 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.929960068 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.194818216 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.218948042 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.192539368 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.975231596 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.786650184 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.142059836 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930282777 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.934344419 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.209452909 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.14288098 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.171489386 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.931677346 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.934521731 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.735815725 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.854499157 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.930052365 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982060967 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.15396011 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.949235626 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.442590886 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.628169724 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.213374714 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.973907672 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.931704533 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.193390077 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.424507508 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.472478939 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.934555797 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.132850761 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.912518879 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.230725315 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.930687919 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.277773552 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.23438751 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.929742368 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.970941644 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.175070935 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.187180137 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.862314243 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.93792084 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.14398769 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.799886848 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.93058519 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.909946629 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.276463185 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.162415648 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.663367651 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.486025741 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.931817732 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.934368825 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.275962994 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961250321 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.285554229 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.954622005 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.945126884 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.456290031 seconds)
    (462/481) benchmarking "2d"...
    done (took 2.626976992 seconds)
    (463/481) benchmarking "7d"...
    done (took 2.214469815 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.172391153 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.967616058 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.515492775 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.931239327 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.929631719 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.93181623 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.849193351 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.113896828 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.11900969 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.211411 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.962090528 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.269368552 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.967266092 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.266343671 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.03403902 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.974344407 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.969178309 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.451248338 seconds)
  done (took 1656.378338951 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.975686001 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.959089858 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.957367744 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 7.012590804 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 7.019164368 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.002339187 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.078430882 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.963181689 seconds)
  done (took 57.827486193 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.931659328 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.947535351 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.936024617 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.935230365 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.944279429 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.932761805 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.095990246 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.943246239 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.936415311 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.937297459 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.931972053 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.931021022 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.205350759 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.950367608 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.931588931 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.931807085 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.942776795 seconds)
  done (took 75.255302539 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.935146846 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.140365406 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.990318964 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.93446187 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.891951465 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.938515207 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.876749104 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.974429675 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.940682179 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.165208356 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.233762838 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.949004332 seconds)
  done (took 90.833060479 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.937075592 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.934279737 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.933911808 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.934061317 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.933916272 seconds)
  done (took 11.539202792 seconds)
done (took 2170.015246844 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.176515713 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.992357486 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.031178022 seconds)
  done (took 5.885540349 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.079683178 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.126712716 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.240838248 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.00542102 seconds)
  done (took 10.322023005 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.188208904 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.319441333 seconds)
  done (took 6.371438367 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.287589385 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.950144282 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.310135631 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.936206909 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.939569132 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.939073387 seconds)
  done (took 22.68444786 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.936124624 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.936423257 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.93601877 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.936059401 seconds)
  done (took 9.607907899 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.933352096 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.67918223 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.93488577 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.946422058 seconds)
  done (took 21.357190924 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.081611344 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.05204572 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.078900328 seconds)
  done (took 8.076412861 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.153260516 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.780742652 seconds)
  done (took 6.797188482 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.083114826 seconds)
  done (took 3.946672078 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.964279444 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.206796421 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.439862099 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.925137508 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.633976157 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.005668477 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.31245916 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.18761067 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.358291141 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.39217354 seconds)
  done (took 26.291002691 seconds)
done (took 136.927373055 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.483340461 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.968931492 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.142891596 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.356284106 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.316933425 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.140053928 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.155594417 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.353630004 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.020300376 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.033273548 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.337983092 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.301288634 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.098676003 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.95056188 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.105725058 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.949028209 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.158593457 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.336364283 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.988663566 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.239401821 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.158716722 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.960689022 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.168340766 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.969850942 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.158285594 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.079725613 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.505745446 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.944845926 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.134150344 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.511732455 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.080169205 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.383729842 seconds)
  done (took 171.362423448 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.925288141 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.925719578 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.927971 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.926425422 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.227949553 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.926538479 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.926894415 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.928826766 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.240320995 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.20647281 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.928570886 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.210547954 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.927362995 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.928970354 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.925843242 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.926801717 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.384657225 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.926137288 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.92878684 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.927128399 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.928837314 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.071273419 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.926770981 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.085473246 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.304463047 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.928870434 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.926959245 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.926936176 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.927404262 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.926794816 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.930858178 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.928515821 seconds)
  done (took 209.845730948 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.927255162 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.929263064 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.926600727 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.928201919 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.929078608 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.934418406 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.929494856 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.92687764 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.714710433 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.706240949 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.926402486 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.928720464 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.928982456 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.928349703 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.92747075 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.928351053 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.927457209 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.928996322 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.931255901 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.928158533 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.930211619 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.698279651 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.92768788 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.707152853 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.928924343 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.931076775 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.92833167 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.930290223 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.927981189 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.928817223 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.929907368 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.930494195 seconds)
  done (took 222.692020864 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.173268356 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.930043091 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.931080982 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.945452824 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.930813879 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.92970732 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.926257809 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.181051387 seconds)
  done (took 19.805398895 seconds)
done (took 625.589448474 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.28602786 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.127247851 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.107400906 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.952201776 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.153315566 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.998252844 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.947746264 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.01450731 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.786549583 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.024605396 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.612814344 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.973761236 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.719864758 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.981054289 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.07632039 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.005601686 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.516706144 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.61650955 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.092992779 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.977116747 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.133185753 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.896055803 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.028322561 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.835637646 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.640207162 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.953341354 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.000886978 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.518863109 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.961711476 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.108213856 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.565160872 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.234418017 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.967340974 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.951002177 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.000789497 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.980135871 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.174500522 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.965938911 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.079377079 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.687853502 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.98276065 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.691000117 seconds)
  done (took 105.184987078 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.940173513 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.936394428 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.937112553 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.936708637 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.945579762 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.9360804 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.937522758 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.940023455 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.93802148 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.936981073 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.936913596 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.946872294 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.93705418 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.946022352 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.936715547 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.937400609 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.936973248 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.946593711 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.93723978 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.937450984 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.937815432 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.937353966 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.934272727 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.939079583 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.940287279 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.938948623 seconds)
  done (took 52.285911593 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.933410639 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.106909778 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.176942775 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.954772707 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.934185914 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.936656702 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.952316549 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.940486512 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.936826877 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.935708561 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.039884938 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.939366227 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.954217214 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.17784294 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.95279416 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.935388149 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.936233365 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.935837879 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.115714096 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.951290052 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.95441804 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.93999999 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.95460661 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.948336501 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.936280014 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.936022379 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.938156986 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.373074875 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.944187377 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.041994949 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.009956934 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.959835572 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.321047965 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.184912362 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.991109796 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.945258773 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.935851123 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.04644377 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.941929458 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.936689773 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.953738806 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.94089569 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.179095072 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.462775801 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.951495883 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.936407418 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.389558824 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.055325594 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.976944877 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.944430084 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.183355617 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.954433749 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.936786112 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.937970895 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.973114978 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.94831935 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.937068992 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.264481491 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.950336097 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.954575622 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.943906741 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.938067892 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.122984365 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.946171253 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.111469519 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.947547405 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.944810548 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.938815795 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.18210821 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.955083068 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.476692094 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.953738873 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.937729007 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.043852394 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.117124287 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.409493064 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.949847074 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.124713422 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.338687832 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.962147005 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.946103963 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.364889123 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.966222371 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.944958659 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.938817847 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.939405745 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.940484755 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.983512374 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.954131469 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.387711153 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.469992871 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.267433934 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.965634883 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.949486703 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.939457164 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.249927635 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.947575911 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.939623277 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.171461947 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.488042594 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.955510546 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.946376853 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.455528496 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.955976789 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.958678232 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.946890411 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.190565862 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.95549268 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.98425904 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.939929178 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.946228742 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.94251291 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.957461357 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.947458134 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.94111398 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.447785662 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.065079744 seconds)
  done (took 240.319479718 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.941942847 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.939502156 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.938146209 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.938837767 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.939105819 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.93996119 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.938462132 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.939398925 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.940365457 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.93910969 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.939187674 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.939811502 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.941151373 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.9408016 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.97378963 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.941036917 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.429637225 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.940754015 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.939910302 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.940113059 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.500600877 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.943350775 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.940406327 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.940515199 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.941385665 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.940430356 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.943116521 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.968658303 seconds)
  done (took 169.311761759 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.943090307 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.055037061 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.964461716 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.970614171 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.950692307 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.941787876 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.040576822 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.959482546 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.947149372 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.942161864 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.943134532 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.002183832 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.955590276 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.040414079 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.972350243 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.048695659 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.046477056 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.950934386 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.945289726 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.943166465 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.971359254 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.952090979 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.003133984 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.067320962 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.96347789 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.054446244 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.960920417 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.943922103 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.943105929 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.054722625 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.963784881 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.004510699 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.97397873 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.963964671 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.060294787 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.058993368 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.048324861 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.048008075 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.948290292 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.94452568 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.943489767 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.945556733 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.056688798 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.965838344 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.945175967 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.058867926 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.963266409 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.945239069 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.946587671 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.944574829 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.957584562 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.962409467 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.008597538 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.076448501 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.983095368 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.96959591 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.043495271 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.067954336 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.945713153 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.043088132 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.951622288 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.058172321 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.967474968 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.946780328 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.947713148 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.950270121 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.974509184 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.052390155 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.049705795 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.951976148 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.042983164 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.980967669 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.952912512 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.946798324 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.945778967 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.057811478 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.064655441 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.981146137 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.983690191 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.976115852 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.954263542 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.94504182 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.947464233 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.962752296 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.951116349 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.060107434 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.064666669 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.95267727 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.946369505 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.947505116 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.947043629 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.971294999 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.066860054 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.983778691 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.052713864 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.01251154 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.020381121 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.962352881 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.961245527 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.952609605 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.009776318 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.964068189 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.959506785 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.233390247 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.006582287 seconds)
  done (took 210.757343146 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.331955418 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.991794734 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.00538688 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.2677955 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.333023063 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.940317001 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.993489219 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.999405251 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.028572848 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.216795396 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.070063501 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.012272211 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.980596169 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.968597904 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.990074532 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.029116572 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.00365094 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.336509649 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.202482237 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.458961657 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.984213992 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.293694422 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.338177518 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.59042123 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.044359757 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.368423276 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.618747752 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.16294916 seconds)
  done (took 65.443836844 seconds)
done (took 845.161357653 seconds)
SAVING RESULT...
DONE!
