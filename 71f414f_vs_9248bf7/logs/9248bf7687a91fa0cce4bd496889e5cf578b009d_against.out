cset: moving following pidspec: 6200
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.271106059 seconds)
loading group "string"... done (took 0.601738766 seconds)
loading group "linalg"... done (took 7.286260302 seconds)
loading group "parallel"... done (took 0.170984071 seconds)
loading group "find"... done (took 1.148778077 seconds)
loading group "tuple"... done (took 1.808251062 seconds)
loading group "dates"... done (took 1.238806156 seconds)
loading group "micro"... done (took 0.230669015 seconds)
loading group "io"... done (took 1.038442029 seconds)
loading group "scalar"... done (took 40.757297428 seconds)
loading group "sparse"... done (took 13.457567635 seconds)
loading group "broadcast"... done (took 1.050111553 seconds)
loading group "union"... done (took 14.076576716 seconds)
loading group "simd"... done (took 4.847917973 seconds)
loading group "random"... done (took 9.776930706 seconds)
loading group "problem"... done (took 1.999812712 seconds)
loading group "array"... done (took 22.834538434 seconds)
loading group "misc"... done (took 2.008407965 seconds)
loading group "sort"... done (took 3.422444341 seconds)
loading group "collection"... done (took 19.017068843 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.539267316 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.144871499 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.119258649 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.141464983 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.193184987 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.135601989 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.144285726 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085725148 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.086494034 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.161422121 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.13896852 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.478713066 seconds)
done (took 5.241333624 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.20358923 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.085561188 seconds)
    (2/2) benchmarking "String"...
    done (took 0.097607505 seconds)
  done (took 0.994390656 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067418055 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.125789085 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.081955685 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068833185 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067166212 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.084078179 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.06850228 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066944685 seconds)
  done (took 1.381377354 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073463013 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067788582 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.085599925 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069214485 seconds)
  done (took 1.114416074 seconds)
done (took 4.588312176 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.902707252 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.237630355 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.187536172 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.452308486 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.149561867 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.187082307 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.662044633 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.310344879 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.21061441 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098943274 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104023271 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.379711501 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.111520537 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.661033904 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.07569395 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.106646794 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.159450841 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.418957575 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082140813 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082664188 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104072468 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142011163 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.101971001 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.07705486 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.169531149 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.069041639 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.147823409 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.095726898 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.068241757 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.242987232 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.192007636 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.677564936 seconds)
  done (took 10.523186796 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.09634544 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.117161904 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068153912 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140723389 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.100848768 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.08684702 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071378977 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.085017735 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.090952978 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.158121242 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113927718 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.104923463 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.083368949 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069298289 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.10390098 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.214179914 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.108530289 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.087189508 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.089339336 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.077724416 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.124034611 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.081964249 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.094477927 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.078399712 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.152309694 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.194257566 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113844574 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.111847227 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.06776656 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080793215 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.131418189 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.141592101 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066136885 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.08171346 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.13721425 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.111386099 seconds)
  done (took 4.668986981 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.039355565 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.164187951 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.092551331 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.154896421 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.086143549 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.109524677 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.083768876 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099733228 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.247709721 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.14668562 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.460790674 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129681431 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102369027 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.0675844 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.084411773 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.06810032 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.529240594 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.148900699 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.106058324 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.10540685 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.075686062 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.090166629 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.360394781 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069074772 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067683456 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087388616 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.060905282 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.147967776 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06916009 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.219749566 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.089180214 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.088016173 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101751165 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.194810449 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093756572 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.1028183 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.105657046 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085518099 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065759093 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.170799278 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.092941949 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066129057 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.106093763 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103345703 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.120954072 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.083621377 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067721278 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.180268116 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.069155948 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.100582971 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.890421246 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.167731876 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079546294 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.071603209 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.286221987 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.083169477 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085106918 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063827975 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.266355778 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.151066581 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.066435727 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.083985871 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.065653197 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.067564293 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.383254603 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.067925351 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.736516961 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071082817 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078815769 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.08710995 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068440676 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09008593 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071556131 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.10144634 seconds)
    (74/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.091376407 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.082542753 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.068464676 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065717897 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.083101494 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067910001 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.101504724 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.205126507 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.065547127 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.083695126 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064583515 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064208663 seconds)
    (86/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.08166493 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.084841042 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112668877 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.071357666 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066298983 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117444809 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068885601 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.083736294 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.105067262 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084939781 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.099718755 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069497199 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.12863965 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067552878 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.143597085 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068491091 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.115030995 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.072099996 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11505148 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.094544698 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067711965 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.152754039 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064518587 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.08145984 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.070216109 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.064192033 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.085272271 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067849492 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.098114059 seconds)
  done (took 21.133388752 seconds)
done (took 38.18275063 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.300011788 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.095614751 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.095040982 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074218568 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.093561875 seconds)
  done (took 1.553984531 seconds)
done (took 2.420776012 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.122324162 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.120347286 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063559757 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.115402688 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063400574 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.119542547 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.115426388 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081129446 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116144306 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064111157 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113791229 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.06427888 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064423217 seconds)
  done (took 2.118882882 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082889394 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085200786 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088012576 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083724013 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.082062429 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084104223 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080992612 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108328945 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08126229 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.091289653 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065801957 seconds)
  done (took 1.79958661 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081941414 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084965175 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088643384 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082556441 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.082008772 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083429661 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08086973 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10715273 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082399036 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.092519248 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065162426 seconds)
  done (took 1.796600846 seconds)
done (took 6.572787661 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078474082 seconds)
  done (took 0.938694608 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.713148748 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.727928827 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.083042948 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.134509464 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.223027742 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.155154753 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.450611506 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.109644665 seconds)
  done (took 10.628389155 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.089791364 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.102601139 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071473911 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.091853912 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070494916 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.089997877 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.072760449 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069039153 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.091200328 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070230478 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.089770902 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069888126 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.086196571 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.07003869 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071600464 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.089040827 seconds)
  done (took 2.21979599 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094660276 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.095307103 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.093542293 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.078228767 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.092318639 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074719887 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.094862214 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074595317 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.089218309 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072843147 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.093944956 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075579754 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.091060411 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067355762 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.094763977 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.079090985 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.091218706 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.07757728 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.095367965 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077224177 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.094434325 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066886898 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.090302114 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076787644 seconds)
  done (took 3.004121863 seconds)
done (took 17.657556782 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.132559269 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.076880324 seconds)
  done (took 1.075536592 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081880137 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.098756466 seconds)
  done (took 1.052677506 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083809095 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.081891585 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090439417 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.096306888 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065452334 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.084078826 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.103630199 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066908195 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.083379045 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.069038772 seconds)
  done (took 1.697452187 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068899661 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.093687989 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071452171 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.098758257 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.0733226 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.082546041 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072883229 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.085436486 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078603436 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.080163156 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.07194152 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.100530285 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.0709496 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.101547227 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072046294 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.086456056 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.08763207 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068862957 seconds)
  done (took 2.340335276 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066342893 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.065853966 seconds)
  done (took 1.006985363 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.069074171 seconds)
    (2/7) benchmarking "second"...
    done (took 0.06335581 seconds)
    (3/7) benchmarking "month"...
    done (took 0.084171974 seconds)
    (4/7) benchmarking "year"...
    done (took 0.065718879 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.081856171 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062543885 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.080279813 seconds)
  done (took 1.381696691 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.404980803 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.108507742 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.25018249 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.093019521 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.106396822 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.263920908 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.084986232 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070793275 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.089072824 seconds)
  done (took 2.3841575 seconds)
done (took 11.810982869 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079717453 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.083983606 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112366502 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.424480696 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.109517519 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065915965 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.133169735 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.227339355 seconds)
done (took 2.111140872 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.125601346 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.614224879 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.403608673 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.221141365 seconds)
  done (took 2.116830964 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.377546068 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.093247863 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.077382903 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069731857 seconds)
  done (took 1.49948799 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067028776 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068729053 seconds)
  done (took 1.018126869 seconds)
done (took 5.638320848 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067274708 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065856384 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.105146341 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.06500735 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.08627009 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.06560933 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064271604 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.087972738 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067598311 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.067307289 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.087903053 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069938435 seconds)
    (13/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.082399564 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066675465 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064944817 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08522639 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066222762 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064334551 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.083414726 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065811701 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066805376 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086498374 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065145308 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064194462 seconds)
  done (took 2.676043239 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.086044463 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.083763622 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072584722 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088974909 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071524108 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.088571704 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.072832526 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067320768 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.09189728 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069492318 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088917661 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072042331 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.089649171 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071515545 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088776982 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070735094 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.08922969 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068433813 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067968646 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.089630587 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071376998 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085239326 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070442259 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089420089 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069768966 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088550549 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.06928034 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.083925437 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072899003 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.087010899 seconds)
  done (took 3.261317058 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.071493042 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063570474 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081556897 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.07066449 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063129231 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.084345844 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064981874 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.083283169 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.067111114 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064733547 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.085000054 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.066160088 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064788474 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.085587202 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065862247 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067845258 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.102240216 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064776945 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.084240988 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066571975 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067898408 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.084787954 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065613212 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.083026135 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065907163 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064750181 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.084444183 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.066080755 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065290235 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.084050366 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.06830208 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067993005 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.085100943 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071808668 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.086464381 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065778518 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.069087729 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.082806958 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066601016 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.064417949 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.083485031 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.065390055 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.064803545 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.090598208 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.06551849 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.084834616 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065854373 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.066396631 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.08483782 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068786994 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.063920943 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.085768866 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.066835852 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.084866445 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069604336 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.064187846 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.08447801 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.065250083 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.065869519 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.08510301 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.065071851 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.082622901 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.068662472 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065530761 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.100262539 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072168361 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.06426931 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.0874163 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.066741669 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.086301448 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.067978015 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078458294 seconds)
  done (took 6.195350813 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.119436135 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.091186939 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084686256 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065566874 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079827306 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066964 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068882212 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083831151 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067182831 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.090511223 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066479646 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066318401 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087715687 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078307253 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084441399 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067842117 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.089291517 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064927535 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065463351 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087969298 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066800527 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.086968383 seconds)
  done (took 2.623696869 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.188662971 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.087893775 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.109723513 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.09331113 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067715926 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.093897711 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070574663 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.091143039 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071093982 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089031134 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070046427 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090268564 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069295478 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088294487 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070303564 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088062917 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071915561 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088846719 seconds)
  done (took 2.490903894 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078807396 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.06522575 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.10773489 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06539068 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.086095168 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068233082 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090800891 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075173995 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.087522422 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066784505 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.093033233 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069780227 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.087120127 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068685811 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06961938 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.086937171 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069831021 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087004843 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076590367 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091119247 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073283692 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094397652 seconds)
  done (took 2.651418662 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081615502 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067249235 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.103550034 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086155977 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063844167 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065468353 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.091515534 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068459091 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.091628274 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.070540957 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067058172 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.086456762 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.07264145 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.08640791 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072942626 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086264863 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07013621 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066872558 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.089764647 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063836757 seconds)
  done (took 2.444274824 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087771222 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085495714 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.17745891 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093898557 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068742076 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.086721586 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078326694 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.087516678 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069332315 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.113098295 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069547056 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.087412062 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077565875 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.092928005 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.06908666 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09624166 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076900056 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.096824915 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068189754 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.088698914 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.111561126 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069881003 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.095513138 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069614574 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08616885 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070868326 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06846893 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.093826699 seconds)
  done (took 3.33463889 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067552448 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065506175 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081987044 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065785631 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064797058 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.084755993 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065766346 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064755155 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.087477013 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065492997 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067258576 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.086909789 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067989126 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.085532393 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068877126 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067646544 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086239324 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066345053 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064576931 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08485929 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.06823315 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067410807 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.087566649 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065614176 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064217756 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.087291861 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065423084 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083740994 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06884924 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065068517 seconds)
  done (took 3.079929718 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077670649 seconds)
    (2/2) benchmarking "in"...
    done (took 0.090857565 seconds)
  done (took 1.069637631 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065118638 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079746244 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.083142091 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.07083699 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.091081643 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068627281 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.09478838 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072683666 seconds)
  done (took 1.523979375 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.08276002 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077849948 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.090123875 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079316239 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.099677855 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083958007 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.155079125 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.088709374 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074853305 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.084430221 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.083581911 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067127886 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.094420725 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06858127 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.093170803 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075054476 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065565287 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.093038531 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070631956 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.086446636 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069688357 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094947107 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071491106 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064662633 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.089420963 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.076907478 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.099355287 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069613814 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090379442 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.076018518 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073378071 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.082722518 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.068443027 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.08797563 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.067785996 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.077474346 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.104525741 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069881824 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.098160932 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068818577 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.097482875 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062439055 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.09244719 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074540269 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096855012 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.06992348 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068328649 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.083141634 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066027709 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.089255479 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.064322153 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067343678 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.082658052 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075956439 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.090224205 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079716745 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.069047676 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.09006596 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070184533 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.090786604 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075247137 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.088056781 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072083508 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066961947 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.096855819 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.07244813 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096238138 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063565516 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061629175 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.085418037 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.0777909 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110897914 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074554172 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.088237492 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069262773 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.065913872 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092251327 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069400205 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093339925 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074509963 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.087139763 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075200578 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094070606 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069159121 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069877273 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.095914291 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065998201 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.089726375 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066099727 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.103213091 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.067247856 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064804354 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.086610798 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077915929 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.090527339 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.06810118 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065157233 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.095597837 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.0619299 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.088647831 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06969119 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069131102 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.099568756 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.092267459 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074794656 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.095254655 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.07700793 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068144291 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.091570911 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065376511 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087746834 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.068271004 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074388833 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.081938365 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071376239 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.08718312 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.0703131 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.075609774 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.086452959 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068933215 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093827258 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074378201 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065542894 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.086061503 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070558458 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.08763089 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071706505 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.095896506 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067394846 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062875524 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.082689926 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071721816 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.086741128 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072500206 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07240093 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092054364 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062215497 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.08521761 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073489066 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.096930213 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069436081 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068622879 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.094549337 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068762474 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.086364956 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074298374 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.089268466 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068255785 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072960689 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.0889811 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063776007 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090943318 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071240493 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066577434 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.091581607 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071418667 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.089829019 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069694924 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06604156 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.093306442 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069113566 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.087380347 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068578871 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.06651741 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.099562133 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.0695646 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.083537901 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.066216664 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.094454603 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066988874 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.068167804 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.087875446 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070653792 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.087754457 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.067044104 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067313677 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.090436231 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.080024211 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.09305126 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069020508 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.093094382 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080030786 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.086941825 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.0729233 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067336576 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089655118 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069228671 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.096654448 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074500141 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091683585 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072231639 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.064321547 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094138223 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075724363 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.086762886 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.06705986 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066221889 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.092685351 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074001992 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.090666032 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.069519271 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085000597 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.0706731 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071248094 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.091063932 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.06856111 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.085953162 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073522079 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.066701358 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.095250889 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069097022 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.098211944 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070777227 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.083386828 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072217681 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06567756 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.094276126 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062821483 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.086412976 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.068089834 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.068408298 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.087984623 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071746868 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.082009285 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076242963 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075248764 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.090021988 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067293175 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.087716358 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07576037 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069584191 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093582636 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070740653 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.094558086 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077917674 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.087483538 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.072163791 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.097478117 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.06960727 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062179725 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.093335454 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067231145 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.085472587 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.068809591 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.06596011 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091315486 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.077235663 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.095686124 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.06321881 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070398689 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.088135271 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067176804 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.082549437 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073611312 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070434184 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.089258454 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074391543 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088282222 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.068665603 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090781795 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.068942606 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068367835 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.090101687 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071201903 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.088521897 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.071457359 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067212276 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.091909754 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067350326 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.085478601 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.07096058 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.067621428 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.088588054 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073645548 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.087818527 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069706534 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069878802 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.089352747 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069270406 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.087980896 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.068806538 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070507082 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089539244 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068089798 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.08995769 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063788328 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074983314 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.088732252 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075514938 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.088035287 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.065872068 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.072303029 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.09181521 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072731523 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.08895884 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.0689956 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.089641243 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068613672 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069809483 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095347576 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065981347 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.09846589 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075943819 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088808847 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.07151024 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067616605 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.090810548 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067739193 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.088450709 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069932441 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067841635 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.089080058 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073835972 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.090728714 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069907464 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070000139 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.090519601 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069404995 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.089361533 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.064118481 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067397691 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.088236216 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068935751 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.098694948 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.070197238 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067206923 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.088376739 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069126957 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.087214989 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065437483 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.094953708 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077839321 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.088529395 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077248728 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066841975 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.090427813 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078839284 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.082486675 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.067164332 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.065126491 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.086941859 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075973055 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.088743983 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.078117416 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066929013 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.088198294 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.06552294 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.088447485 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.067656946 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061662637 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.086884092 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071618941 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.086484867 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068430836 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.068036989 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.091827026 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06905312 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.098179227 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.068122163 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068196909 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.089887115 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.065456344 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.08718332 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067826273 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070159497 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.089898348 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066211289 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.084704145 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.069611272 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068709244 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.089633278 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068949771 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.088665872 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076435994 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067871448 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.091033912 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072390783 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.086678916 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.072092848 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066855469 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.088467532 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067815317 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.091356523 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072497613 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087405518 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.078505284 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066749723 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089064088 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068263766 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.086042764 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.069019814 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066927641 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.088224216 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.068067347 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.088552001 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076386723 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065991882 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.091583724 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067843594 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.087872997 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075641744 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.068540431 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.092771383 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074750733 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.089275423 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.07074964 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.095731738 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.072963945 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090205803 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070764182 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.06971336 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093557668 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067609436 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.093522467 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.070054614 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.068691067 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.090239441 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066379342 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087475935 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.069591469 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066900833 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.094433524 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.068794897 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.087021998 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068053336 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.065359097 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.089085515 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071929335 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094090591 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069292684 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068735835 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.082283905 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063121734 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087047001 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064767908 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067366549 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.090623612 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071934306 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.088500289 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067042251 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064935867 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.095374931 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071634721 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.090572713 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064525968 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.089550092 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.068249201 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068812019 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.088715527 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066901998 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087613093 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071268311 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067887557 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.086314433 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074672344 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.08955697 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067655984 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067646793 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.088656629 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067686082 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.081955926 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.068365827 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068657407 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092432614 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068966194 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087838341 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07864506 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.084954011 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068172304 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070099404 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087347096 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071726726 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.082720694 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.069856124 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068408931 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.091084218 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.06326669 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.088141258 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.067285432 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.069920435 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.089052205 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.063548416 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099062236 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077291586 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.091102738 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06813151 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066948261 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.084625619 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063924261 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066570514 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090512067 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069912094 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.097932801 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067089976 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.086461795 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.06508926 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068320424 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.0914338 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071740323 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.084274174 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.065011393 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067308268 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.091822649 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073911703 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065906375 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.090027016 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071637798 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.091000513 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066973834 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.091014843 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.066170268 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071608839 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101733528 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.06828996 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08979179 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074221053 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096458739 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.070137398 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063121875 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.090018356 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071816527 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.088892794 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.070284412 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.069078425 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10432866 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070367227 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.088617633 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067364617 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.090547732 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068815532 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075246715 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091332149 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.069065038 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.092816065 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070138055 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.096509458 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071415327 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095474676 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.072752974 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071156055 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.088959159 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069085806 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.087350595 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.068960994 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.069009744 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.089649346 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072566177 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.095061046 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067065579 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098007268 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076393313 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.08845148 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.065356628 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067577755 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.087428414 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063817635 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.069154785 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.086172311 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066063728 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.085570395 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.067613789 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068570646 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092983486 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069024711 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.088303461 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.068529739 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061805066 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.089653436 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.071143294 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087433253 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.066296765 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.068682429 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.089126241 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.071987073 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091752849 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066986764 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068783217 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.09036007 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069889759 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062535631 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.096574702 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067216976 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.091223995 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067845885 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067446879 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.090520377 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071422538 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.092757414 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068309144 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.089291674 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.076528939 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.089283142 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.067317688 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064689094 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.094276549 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.066660919 seconds)
  done (took 47.673842337 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108396068 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084288459 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062101807 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083269033 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076388519 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084878752 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064068939 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063856103 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.085872622 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067371501 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.083306356 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064903342 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.093272843 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.089296054 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096716736 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067978752 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083675334 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062781076 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082157654 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063434947 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091133592 seconds)
  done (took 2.608250585 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075453297 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.090591476 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073830329 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.097279598 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067913556 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.092732799 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072789693 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091505548 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095118714 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068527516 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.096518569 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071242126 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.087308329 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067915707 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087058139 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071836155 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.096752142 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06769505 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.091334724 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073695769 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09147293 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.080942247 seconds)
  done (took 2.753016072 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068118561 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065855 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.088666508 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062051611 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065495001 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.082511689 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.07024705 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.084164266 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.070320429 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064582048 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.086640162 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065279636 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.087517685 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062368998 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066240108 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.085644374 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.132531026 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.06993754 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065078827 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.088133612 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061683436 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.08980603 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063800236 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063199635 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.088661339 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.07145313 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.089188238 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066798743 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066894887 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.088371989 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.0674993 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.085245004 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.070525987 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067633167 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.087578153 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067646881 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.067188835 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.090037858 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063132526 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.086111615 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069652415 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.0633661 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.088615694 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069810919 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065937576 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.087242804 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068965513 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.088421839 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063904169 seconds)
  done (took 4.649869657 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.084292121 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.131911317 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.090358135 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091155567 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.106611752 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.095953082 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070410883 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.114588465 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064435203 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.087341075 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.08309886 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.106455919 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.087128199 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.071512648 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.092185081 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067021988 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066305529 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.086546645 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070300225 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086578382 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070322106 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.093815184 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.100411199 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.080404836 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090892939 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065572072 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.085002253 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071539373 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.098590943 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070847934 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.092212619 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071031627 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.102389971 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.06835847 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086410325 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068860282 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.103066387 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.06570582 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089980889 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.06427402 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.08913979 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069911509 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.093437305 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.082224769 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.08705666 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.07127861 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.087691328 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063474056 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.100125485 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067708581 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.095629852 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.101584354 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071414445 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085667742 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072586627 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.102440466 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067204853 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.084562046 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070807196 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.099105509 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064880337 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089419859 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.081936723 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.087804278 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.073377692 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.103350695 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070965484 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.09102438 seconds)
  done (took 6.794450539 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075932791 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093216278 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080973961 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101960283 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092421237 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073771132 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.092802776 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073703212 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.092901954 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077399324 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.094202724 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114067253 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.068164273 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096087728 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072572556 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093929172 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071954848 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.09433688 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072245413 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.094222534 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.09293007 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081815135 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.093215905 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.100905744 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.103428539 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.088599851 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072587939 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.093405761 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080594797 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.094088282 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104374215 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072293207 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.093548101 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.100263924 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.085621337 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.09320357 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065932561 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09304044 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072669939 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.09374393 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068286761 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10208108 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072126007 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.0887598 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072620204 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.093880167 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.101919669 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.084202043 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096103097 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097855882 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074386793 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102074744 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071598273 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093736217 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.100876578 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.106739032 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101524578 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.10103872 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072725836 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.102251993 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.102279859 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.107976559 seconds)
  done (took 6.475786349 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088750891 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096350423 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.097492814 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063051178 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063822487 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092946127 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064346869 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.08417578 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077308124 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095373307 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078009162 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09166806 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073058277 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098380673 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090557 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074729778 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090955424 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070493847 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096306196 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070443977 seconds)
  done (took 2.616802391 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076303547 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103850157 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068223336 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072146615 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.091522809 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071478475 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.089752206 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069099616 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087978416 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069927363 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097570591 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076785474 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087676302 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072835378 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.096495812 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071565175 seconds)
  done (took 2.267078822 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.079305649 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.097493157 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080618297 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.089830122 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064521705 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.084156263 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.067609664 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062933114 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.08536389 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.079872463 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.088682667 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.069118383 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.088256625 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065179762 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062711285 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.09131463 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062589492 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.085379716 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.06634921 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.102071748 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.077692113 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.085511801 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068527583 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.068858106 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.089735901 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071938368 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.089249247 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064107669 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.087073717 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066859812 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.087948464 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.07428024 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.082929976 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.066224441 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065333786 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.085617704 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066315632 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.087655227 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069863635 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.066109037 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.08650186 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066392068 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086730057 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067997071 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.08265265 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.068278902 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063394203 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.093943675 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064598437 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.087564096 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066339085 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.088844044 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.068994876 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.076489144 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.09231018 seconds)
  done (took 5.2226051 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081008569 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068899068 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083667235 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063848578 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089754086 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068254851 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068862769 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089975889 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068134513 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085299336 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067936527 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088976233 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070126512 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069303366 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.089410513 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070457366 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.083315545 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068323091 seconds)
  done (took 2.34361346 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073107088 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065991651 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094502476 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066731947 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.08642298 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069701115 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06214231 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.086828194 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064875788 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086575289 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067598234 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068074794 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085673292 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.069024886 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08591606 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066873597 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068963915 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08754148 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067448384 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083230546 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069620339 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065414758 seconds)
  done (took 2.612608605 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.072415449 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.092513536 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.163628809 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.109601837 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.081419343 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.101792974 seconds)
  done (took 1.592740567 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09031021 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100180916 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067179078 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108625904 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075322828 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089932675 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069918226 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089267584 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07836314 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102800908 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067722554 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098270557 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09719516 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077794141 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09541733 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073781363 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089173537 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068271338 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087760076 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106678553 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069946501 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096663281 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069491279 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088395687 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068476024 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097323952 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076724338 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103050028 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089243734 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076674442 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094411929 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068048917 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098789733 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101988758 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070494714 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09787933 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069534935 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107239185 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073710086 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098709813 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06904193 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096092541 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096875405 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073836506 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097129133 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068639958 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094281286 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068448645 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089630979 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113974146 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073806711 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097858131 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094407264 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078085262 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097779698 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113027871 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082530673 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098347615 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093873294 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082508751 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098154139 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072555061 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097384778 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102449864 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073943529 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097728674 seconds)
  done (took 6.742434408 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085292937 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106537295 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069022767 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105063868 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097413432 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069600615 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089698173 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069431842 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088553429 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068625251 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130542288 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068390799 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099264966 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097288515 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06965997 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08974993 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069097414 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098329286 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067966172 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115145678 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089206964 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077624547 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098653017 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097321372 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082597763 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095648374 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068319115 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08995699 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068358129 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089624239 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073080332 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090860752 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096902549 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068520153 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097436222 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068916599 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08945858 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074075121 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089960212 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074475375 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098013442 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107263163 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068928039 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08946614 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081248647 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089509802 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068405887 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089019236 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067654091 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089358393 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081491022 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104031695 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103181059 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096753595 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069746239 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089389336 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069161408 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088143593 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069985416 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094525434 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07730745 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089537921 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113436233 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068389326 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089441517 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077082913 seconds)
  done (took 6.638121902 seconds)
done (took 133.223995434 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.203586489 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.18802327 seconds)
  done (took 1.360700134 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070389451 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.09471856 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.099878763 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128447862 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.088928172 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100105971 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.119636278 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.080123254 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066210474 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.088423719 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.067508844 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.088219056 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13273851 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066672425 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.087732075 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068683781 seconds)
  done (took 2.425336953 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.103905782 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.197480948 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110902277 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065077911 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100559959 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077183966 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.087292562 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.076293744 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.095545947 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.066446559 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.098059248 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.076220222 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064900371 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096864839 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.074474074 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.099885323 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064939377 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.099132887 seconds)
  done (took 2.635763822 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103840994 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.145567773 seconds)
  done (took 1.227692881 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.202236232 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.126311678 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.208926006 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.419883814 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.210242286 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.281846853 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.179928812 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.17681862 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.165150261 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.176313179 seconds)
  done (took 3.121426946 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099148667 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.171157159 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.311594744 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.137165037 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.085499378 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.116088943 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.1391535 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.088125337 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.103225049 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.101472609 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080571859 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098465315 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.096089065 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.096653098 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073435698 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.098915721 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.120916087 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074225229 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.075592421 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.097038875 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.11770949 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066910642 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.075262012 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.095774717 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076128376 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.09939035 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065371612 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.087553979 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.07538118 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.095730808 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078424807 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.114937635 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.097181757 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.132740793 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.081436164 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.131633269 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.098909907 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.070967477 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.095376542 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072354068 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.099024418 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.076850155 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.104607204 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076301085 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.087831187 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076927145 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.086705179 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066989556 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.099731071 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.077920545 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.099697944 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077958233 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.131031174 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.098442384 seconds)
  done (took 6.330439298 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.750737905 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.112270033 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096263062 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.808515825 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087012244 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106464295 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.710676937 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118564889 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.209136345 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.766712489 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.089825264 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.098319463 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.179264942 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.213667627 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.898588446 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.282120173 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.633335846 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.103804426 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107900048 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.132306206 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.138021186 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.175436629 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.148685344 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.406705482 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.074531814 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091646829 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.135918407 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073634721 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.138535803 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.105124351 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071715641 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.176202547 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.223238176 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.155954924 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.096570432 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069983583 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090084457 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.147759179 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.216819797 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.191388946 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.157419354 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067943921 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068277341 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.160824757 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130250188 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068380089 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.138825557 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.151227466 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.147518295 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094670121 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.073541504 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.161845996 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.138119629 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.142015003 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.099862553 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.266544758 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.287828304 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069658143 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120319859 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.103490036 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.212601995 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.10326616 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.176844494 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.158970397 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.170432795 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068653773 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.755630142 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.147680535 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090395588 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074397435 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119477251 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073489897 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.159470267 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.123786759 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.384514928 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.139666618 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.094607952 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069069444 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.20467216 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083700776 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090552974 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.140848934 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07490746 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120624491 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.142269679 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.139837616 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.167907097 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.207961289 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.141703432 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.137905649 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.09420943 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.122658332 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.075946015 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.189159717 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.19274947 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.139645655 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.189319529 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.137783398 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.139817989 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.166516897 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076313154 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.149107602 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.118552622 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098794015 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137020727 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.168543388 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.123177971 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.103665001 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072449359 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.137704137 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.126419683 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.107094285 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.139328001 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.147667823 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.452237032 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.148414341 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067888922 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106849807 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.140281123 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.140514268 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074330081 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.238447719 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122571931 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.146612453 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.122650518 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067348549 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119784557 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.13899216 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.099800488 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121161781 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.138112462 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074851968 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.230945839 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.17085279 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097673163 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.195734535 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.162171338 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.073449503 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.148386395 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.118455478 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.144838784 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.09874284 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.136767129 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095155269 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.726228794 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.141740086 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121002835 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094168654 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.163971934 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070873225 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.07997696 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.103687743 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066123338 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.779232247 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.106237128 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.079322367 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.103634736 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073948463 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121636161 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.134182658 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094809572 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.139709818 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.202716852 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075510167 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118191431 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.080828285 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.161007111 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.075248088 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.102785285 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.082076483 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.104447783 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121737989 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072204962 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104426295 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.146682914 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.13918083 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.192249266 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.547509971 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090316715 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.082754477 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.200481799 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069441955 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.262352396 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136431668 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.197786712 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.140517188 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07815957 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.289051394 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.14195608 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.165908992 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.105438106 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.152295504 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067624726 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.136230747 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.141557701 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.09259412 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073859624 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.139483869 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.166198482 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.142040304 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.919049766 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070951336 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.204384939 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067092569 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.170605144 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.075938281 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096026235 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.237932847 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091817584 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.146664918 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.141876419 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071916643 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.10500408 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.827855782 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.105504204 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.138670844 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096284438 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.170633238 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.140461798 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.156521063 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.137205329 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074352108 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.138232442 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.188375358 seconds)
  done (took 40.371937407 seconds)
done (took 58.450916976 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.26297478 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.179324618 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.246051446 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.145033201 seconds)
  done (took 1.910306002 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.145605017 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.103418401 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.11875798 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.086130763 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102687071 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.088149806 seconds)
  done (took 1.647522382 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.409652649 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.265503033 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.230887243 seconds)
  done (took 1.911299788 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.262041847 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.216666109 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.452229612 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.30100705 seconds)
  done (took 2.363825953 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.17674674 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.114864143 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066785508 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.107811712 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.159712946 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.256093734 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.127881257 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.187280574 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.07868637 seconds)
  done (took 2.329190196 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.197205332 seconds)
done (took 11.367261124 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.106335338 seconds)
    (2/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.318474939 seconds)
    (3/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.256522547 seconds)
    (4/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.19521647 seconds)
    (5/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.078072564 seconds)
    (6/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.102537897 seconds)
    (7/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.191530553 seconds)
    (8/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.077516738 seconds)
    (9/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.163855736 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.073028082 seconds)
    (11/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.072501585 seconds)
    (12/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.215495137 seconds)
    (13/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.238175455 seconds)
    (14/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.111844618 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.141735517 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.101149901 seconds)
    (17/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.21912957 seconds)
    (18/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.084508557 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.100568326 seconds)
    (20/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074539942 seconds)
    (21/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.125693837 seconds)
    (22/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.17944851 seconds)
    (23/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.226909335 seconds)
    (24/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.173381833 seconds)
    (25/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.116675959 seconds)
    (26/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071987302 seconds)
    (27/309) benchmarking ("sort", BigInt, false)...
    done (took 0.213888917 seconds)
    (28/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.185998275 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.159792701 seconds)
    (30/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.221661864 seconds)
    (31/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.193811906 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.127376517 seconds)
    (33/309) benchmarking ("sort", Float32, false)...
    done (took 0.15204995 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.095892309 seconds)
    (35/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.219702584 seconds)
    (36/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.09759017 seconds)
    (37/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051654739 seconds)
    (38/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072649918 seconds)
    (39/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.096265101 seconds)
    (40/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.090626011 seconds)
    (41/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.096507392 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.158748689 seconds)
    (43/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.154333992 seconds)
    (44/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.098159253 seconds)
    (45/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.067507546 seconds)
    (46/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.134351611 seconds)
    (47/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.13808331 seconds)
    (48/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.192892412 seconds)
    (49/309) benchmarking ("sort", Int8, false)...
    done (took 0.165304103 seconds)
    (50/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.111818577 seconds)
    (51/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.181345728 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.11773822 seconds)
    (53/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.051832156 seconds)
    (54/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.070805295 seconds)
    (55/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.099643493 seconds)
    (56/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.123889887 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.100070567 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072080713 seconds)
    (59/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.097313252 seconds)
    (60/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.143210613 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.097841339 seconds)
    (62/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051882178 seconds)
    (63/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.09754634 seconds)
    (64/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.076263326 seconds)
    (65/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068907643 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.120711163 seconds)
    (67/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.099000652 seconds)
    (68/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.23602919 seconds)
    (69/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067905073 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.097321858 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.171286174 seconds)
    (72/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.192512695 seconds)
    (73/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.111435213 seconds)
    (74/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.154504086 seconds)
    (75/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.19265598 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.153869252 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.111097179 seconds)
    (78/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.091137026 seconds)
    (79/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.078163281 seconds)
    (80/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.159743328 seconds)
    (81/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.09680343 seconds)
    (82/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.130818442 seconds)
    (83/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051148421 seconds)
    (84/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.05049956 seconds)
    (85/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.100375268 seconds)
    (86/309) benchmarking ("sort", Int64, false)...
    done (took 0.066084418 seconds)
    (87/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.19594009 seconds)
    (88/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.071868529 seconds)
    (89/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.093260964 seconds)
    (90/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067565832 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.06598578 seconds)
    (92/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.105713496 seconds)
    (93/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.113536082 seconds)
    (94/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.089944658 seconds)
    (95/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.075519426 seconds)
    (96/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.052044546 seconds)
    (97/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.093319696 seconds)
    (98/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.050879149 seconds)
    (99/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.051551423 seconds)
    (100/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.217958827 seconds)
    (101/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.117184259 seconds)
    (102/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.098606387 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.116176674 seconds)
    (104/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066474382 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.11860617 seconds)
    (106/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.19106189 seconds)
    (107/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.146987909 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.121092022 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.067166104 seconds)
    (110/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.054621144 seconds)
    (111/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.173930851 seconds)
    (112/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.108130108 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.076069282 seconds)
    (114/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.100254655 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.099327553 seconds)
    (116/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.186068605 seconds)
    (117/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072455585 seconds)
    (118/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.160788253 seconds)
    (119/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.100439199 seconds)
    (120/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.096798723 seconds)
    (121/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.112790368 seconds)
    (122/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.121988366 seconds)
    (123/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.080015368 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.169307461 seconds)
    (125/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.089087773 seconds)
    (126/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.101837308 seconds)
    (127/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.090844028 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.120094913 seconds)
    (129/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.065498949 seconds)
    (130/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.07529312 seconds)
    (131/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.077451648 seconds)
    (132/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.19444008 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065543489 seconds)
    (134/309) benchmarking ("sort", Bool, false)...
    done (took 0.160516964 seconds)
    (135/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.098270133 seconds)
    (136/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.1779801 seconds)
    (137/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.175145093 seconds)
    (138/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.096846904 seconds)
    (139/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074880344 seconds)
    (140/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.051442882 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.09455386 seconds)
    (142/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.062942986 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.073414372 seconds)
    (144/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.076367664 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.09262683 seconds)
    (146/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.098835847 seconds)
    (147/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.138821161 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.118034797 seconds)
    (149/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.052000891 seconds)
    (150/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.073168651 seconds)
    (151/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.096636988 seconds)
    (152/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.069078808 seconds)
    (153/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.093305269 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.067637399 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.073437397 seconds)
    (156/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.10235863 seconds)
    (157/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051765244 seconds)
    (158/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.050725714 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.114529151 seconds)
    (160/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.167817723 seconds)
    (161/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.077002806 seconds)
    (162/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067720906 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.147189256 seconds)
    (164/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.070037067 seconds)
    (165/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.053945992 seconds)
    (166/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.09812726 seconds)
    (167/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.07441565 seconds)
    (168/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.083009724 seconds)
    (169/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.148281052 seconds)
    (170/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.053467558 seconds)
    (171/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.076706294 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066388588 seconds)
    (173/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.053502787 seconds)
    (174/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.097660234 seconds)
    (175/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.0738241 seconds)
    (176/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.05092385 seconds)
    (177/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.103994583 seconds)
    (178/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.09789055 seconds)
    (179/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.088963309 seconds)
    (180/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052856335 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065429822 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.116840704 seconds)
    (183/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.05156327 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.09119094 seconds)
    (185/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.138160055 seconds)
    (186/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.375631431 seconds)
    (187/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.10497881 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.089106794 seconds)
    (189/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.067791736 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.13901286 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087098339 seconds)
    (192/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.091076464 seconds)
    (193/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.052920233 seconds)
    (194/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072187432 seconds)
    (195/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.136069228 seconds)
    (196/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.071580708 seconds)
    (197/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.104688408 seconds)
    (198/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.07504742 seconds)
    (199/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051159626 seconds)
    (200/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.169861834 seconds)
    (201/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.050817508 seconds)
    (202/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.099453936 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064832144 seconds)
    (204/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.068152315 seconds)
    (205/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.09296667 seconds)
    (206/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.064465172 seconds)
    (207/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.103410629 seconds)
    (208/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.05202437 seconds)
    (209/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075308911 seconds)
    (210/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.087899961 seconds)
    (211/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.066124866 seconds)
    (212/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.050951616 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.088667012 seconds)
    (214/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072061617 seconds)
    (215/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061303025 seconds)
    (216/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.076266986 seconds)
    (217/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.053548673 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074483631 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.095890357 seconds)
    (220/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.051989126 seconds)
    (221/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070552079 seconds)
    (222/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.10021965 seconds)
    (223/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.05271405 seconds)
    (224/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.104817666 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.119152155 seconds)
    (226/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.06355175 seconds)
    (227/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.089618073 seconds)
    (228/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051627999 seconds)
    (229/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.088512806 seconds)
    (230/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.07641493 seconds)
    (231/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.050974457 seconds)
    (232/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.053286388 seconds)
    (233/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.091622484 seconds)
    (234/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077396822 seconds)
    (235/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.066690013 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.162685036 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.158060015 seconds)
    (238/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.074225401 seconds)
    (239/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.070919426 seconds)
    (240/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.102825634 seconds)
    (241/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.106786664 seconds)
    (242/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.077568485 seconds)
    (243/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.053026936 seconds)
    (244/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.061102597 seconds)
    (245/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.156738379 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065428484 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.088860327 seconds)
    (248/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.074066159 seconds)
    (249/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052687331 seconds)
    (250/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.074806293 seconds)
    (251/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.069483935 seconds)
    (252/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064710252 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.136976417 seconds)
    (254/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.075574202 seconds)
    (255/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.170521408 seconds)
    (256/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.067335304 seconds)
    (257/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.076133062 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.129484481 seconds)
    (259/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.0902976 seconds)
    (260/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.066551062 seconds)
    (261/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053389003 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.096011955 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087151631 seconds)
    (264/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.084747107 seconds)
    (265/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.170299265 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.098219104 seconds)
    (267/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.053330633 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065185764 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.165628636 seconds)
    (270/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.050561795 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.111681378 seconds)
    (272/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.053302762 seconds)
    (273/309) benchmarking ("sort", Float64, false)...
    done (took 0.148495986 seconds)
    (274/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.051874478 seconds)
    (275/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.076954255 seconds)
    (276/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.075794573 seconds)
    (277/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.066487578 seconds)
    (278/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.088754489 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.089665362 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072267942 seconds)
    (281/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.089239143 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.137940163 seconds)
    (283/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.142435447 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063909492 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.14543803 seconds)
    (286/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.051859681 seconds)
    (287/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.091251998 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.07438046 seconds)
    (289/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.052056668 seconds)
    (290/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.0757204 seconds)
    (291/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.074196738 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.090654052 seconds)
    (293/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.086946659 seconds)
    (294/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.053669247 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071521079 seconds)
    (296/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.093126994 seconds)
    (297/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.051595249 seconds)
    (298/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.070606995 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.090814109 seconds)
    (300/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068832385 seconds)
    (301/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.156454203 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.089822398 seconds)
    (303/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.093072311 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.099214832 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.095429674 seconds)
    (306/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.063124222 seconds)
    (307/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.054095301 seconds)
    (308/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.200191538 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.130166685 seconds)
  done (took 33.375825782 seconds)
done (took 34.393571786 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.081971979 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114942746 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075829202 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.117424477 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081865901 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.101831489 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074120282 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078384953 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.105669234 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081395614 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.104408929 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.0541889 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.101573677 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076218565 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.100438906 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093148771 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.105707784 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074821135 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.075207989 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.091245279 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075076125 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.090812614 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.068533814 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.055858453 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.103270993 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073282779 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.073568753 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.100858925 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065502318 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.089586415 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069851272 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072543771 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.091389345 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078776592 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.095547481 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075314037 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.075077824 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.101449871 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067185852 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.089471684 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074831961 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066129891 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.098082926 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073774156 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071112159 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.096847714 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074128327 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.104012018 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091440538 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093233539 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.0747985 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.101706698 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077450403 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072647144 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.095296184 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074013837 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.093585408 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093337238 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.097898825 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069639053 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073269672 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.099378484 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071752384 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073898605 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.099358593 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075915022 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.100309435 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071669085 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.099645058 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.072243374 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066521514 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.099525392 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069253421 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065268564 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.101479869 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.07661505 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.088602601 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073120298 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.073667063 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.097313779 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065949789 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069680168 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.093619082 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073188615 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093402877 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057027377 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071589613 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.096716394 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067517855 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.076016314 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.097380085 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072893051 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.068745516 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.102219657 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065219146 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.095875353 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066653561 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066320627 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.093730411 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070114639 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066445459 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093694994 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074799572 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.091687491 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.074914359 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.082131739 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.091990186 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074033972 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.066090248 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.090679201 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.082724269 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.101147023 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067813491 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093602101 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067883259 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.074503317 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.090462558 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.068194747 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067498906 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.091869497 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.073557384 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067050187 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094666723 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.074266007 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.103635751 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.068429566 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.07118708 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094772228 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.067897162 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072292253 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.091845423 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.068085744 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.069145841 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.090565542 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070177595 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.0914706 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.076894508 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070072889 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.100199258 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.069189278 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.075164778 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.096650979 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071401647 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.094888798 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065974506 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.060122646 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093776854 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070927357 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.068911812 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.092525784 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.069901141 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066716802 seconds)
done (took 13.505237743 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067914374 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.169659371 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.128162586 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096685217 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.114352674 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066262794 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.102313331 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.104984771 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.093607608 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.127211716 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088070878 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.108355131 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.117393895 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.091557475 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068630528 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.071419388 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.093708821 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.090089171 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.128457155 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087786984 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.141733776 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.09009166 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.12020354 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.091931878 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.115832196 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.094900774 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.093304353 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.072296457 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.070415028 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.128785863 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.110931403 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071528141 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068766708 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.126179937 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.117685336 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.085641292 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.090169004 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.085779545 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.090852497 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068062561 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.11642546 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.101001407 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.108245686 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.082420775 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.098081516 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.070356658 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.092668716 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.090208757 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.118180174 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.081651041 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.115296619 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.134689315 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069303237 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.109683867 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064844347 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.114487577 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.081628504 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.094166947 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.06730044 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.093510328 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.069382091 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071859853 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.115300549 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.115711785 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071307836 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.106583867 seconds)
  done (took 7.471876018 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.08563475 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.117768753 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.086211079 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.110321603 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068643253 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068665799 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.093278899 seconds)
  done (took 1.704894616 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.06838575 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091150382 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.117121907 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.092275177 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.112702126 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.089617875 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.102567463 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068212154 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.110818555 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068994508 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089178759 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.130082414 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067829902 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.099767645 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090630212 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.093667586 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090958487 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.093176011 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070588007 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.114445962 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071256891 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.086565724 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.094526878 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066326297 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.106739761 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067355804 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.13975237 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072089192 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.09116975 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.072084438 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065463416 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.14361245 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.106991859 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078863901 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068141237 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.108751145 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083925934 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090844059 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.085618543 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.097317282 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.084730567 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068663045 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.095117266 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066350649 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072863951 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.106066503 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.070648552 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.093845562 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072742545 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089591156 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.094744908 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.083809849 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.093326242 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073550208 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.070799566 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.099547876 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076972772 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.093173569 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090009539 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070741341 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.111418078 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086050165 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.109192794 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086125813 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.096961114 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.083532138 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.107608565 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.073082191 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069872029 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.09757905 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086450633 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.091517167 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071130632 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079696676 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.095236684 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.093029693 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.117774019 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071728395 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.103793007 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070272635 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068918645 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.093878951 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.094081661 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096979784 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069709874 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073973209 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.097348137 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.067492281 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.068275587 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.09722258 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.0657713 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.06932612 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.096255988 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.067862709 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.093592683 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085341268 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.06918283 seconds)
  done (took 9.583126752 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069876304 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068392604 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.095041658 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069136303 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067676539 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.094592363 seconds)
  done (took 1.55626266 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.098837323 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.093829248 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.082309693 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.097308937 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.107786097 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.109283631 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.085223828 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.109621718 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.085815233 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.10682962 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.083991421 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.109708697 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.090409094 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.10026999 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.083946656 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.099324959 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.084500435 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.103852717 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079777018 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098223315 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.089826813 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.097939992 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075503786 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.085198482 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.097927645 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.074246228 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.10503629 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.080733523 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.106390304 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.083885891 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.100261279 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.07183576 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.09876552 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.084070409 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.110255528 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.07501014 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099167745 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074164447 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.103172863 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074402453 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.109586566 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077741997 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.079357705 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.099492316 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.082901455 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.098004991 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.071145764 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.103458687 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.081141387 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.098313777 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.071740957 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.096705348 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071295815 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094819767 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.07460775 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.107373014 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.072875354 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.106247554 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.075486 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.073311322 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.097884801 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.072161376 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.109179948 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.070531338 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.1058537 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.071496228 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096890638 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073592287 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097041043 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.074088992 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.071651869 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.09599116 seconds)
  done (took 7.567484414 seconds)
done (took 28.957793147 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.663529592 seconds)
  done (took 1.747385858 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.774100736 seconds)
  done (took 1.860575151 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.744837269 seconds)
  done (took 16.834458609 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.626712039 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.777259238 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.794225626 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.15675602 seconds)
  done (took 3.44004264 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.903973853 seconds)
  done (took 2.012717172 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.237620953 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.223727807 seconds)
  done (took 1.551153483 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.767471583 seconds)
  done (took 1.864585738 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.304398906 seconds)
  done (took 2.393684999 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.324801009 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.181246849 seconds)
  done (took 1.60584076 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.529723901 seconds)
  done (took 1.629058618 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.816547839 seconds)
  done (took 7.921821122 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.230555951 seconds)
  done (took 1.343354536 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.270642403 seconds)
  done (took 1.372088431 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.337007138 seconds)
  done (took 4.440073887 seconds)
done (took 51.107970326 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079489446 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080306955 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.10695947 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078447477 seconds)
  done (took 1.444301474 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079299684 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072580645 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.102287581 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072357652 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.102586121 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073666366 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.099562155 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.078514502 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072213036 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.100686743 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072958248 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.097760076 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075908097 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.098936584 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.072063479 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074931691 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.101909093 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072358243 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.100266693 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.073356278 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.069534269 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.101645339 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075893164 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.096986595 seconds)
  done (took 3.14968223 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.07852827 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073162933 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.099888144 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072435864 seconds)
  done (took 1.428450201 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078713629 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.11571289 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.090286654 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.101100779 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.093629234 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.111340362 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.07035882 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069556905 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.098910695 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076434445 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.092224009 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.099801112 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.112629362 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076873599 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.104086624 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.067623564 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.06825358 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.114404825 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076474541 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.102815158 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.07045972 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.079373244 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.094267075 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088812207 seconds)
  done (took 3.264516096 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078327035 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.102322402 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.104118795 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087817408 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.1180431 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064820249 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.103054568 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.090586893 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.151483983 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065275561 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.098151351 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066062864 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.097759075 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.067162721 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.077884274 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.136855185 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.110485421 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.094971834 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.09645622 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.0928293 seconds)
  done (took 3.021534305 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.076923132 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.06976683 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.091828665 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069172809 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076803031 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.100674801 seconds)
  done (took 1.595328602 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069683248 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067912704 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.093431127 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067932368 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072989426 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.094971029 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067840867 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068622133 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.094519695 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068213252 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.06716042 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.09275438 seconds)
  done (took 2.037360398 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.388606911 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.096614108 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069211698 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.09226363 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071384041 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.09153197 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081238218 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068069452 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.117290172 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066744611 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.092254847 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069541073 seconds)
  done (took 2.419747004 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266009086 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078270666 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.325474544 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169010323 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139977078 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156565834 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103988059 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141147353 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.198719087 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139040381 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201012211 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227342773 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134270968 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167805201 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115608577 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.106856422 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213658268 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222700046 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106243668 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228024042 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205875161 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157996619 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181366508 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129736829 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136141879 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151466813 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071522095 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108086217 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234719584 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161591955 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202456218 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139013454 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097619225 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234242743 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227164927 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196953295 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137451988 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111573432 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.157926133 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.167344555 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.259696196 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114932523 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194975232 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135593655 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106594611 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173163763 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147211204 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.147733652 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.137544116 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115096247 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175144823 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24129607 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.165426585 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113427078 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137475408 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142623778 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.143749948 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104378321 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244045234 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220633626 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158544914 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.095946391 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096959972 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212282581 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160693063 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.141862045 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.153947863 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119924657 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168278818 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.213164525 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146715671 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174412718 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.183575907 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089780806 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148114294 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193111731 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157220109 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202405902 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154855162 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.099429748 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152177723 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130645519 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08162767 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.170079101 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075296204 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236598236 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125341129 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.140010414 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138873911 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110019558 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136994366 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223438351 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203477267 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104980211 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.092847471 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129315379 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.149455282 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178750426 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11408085 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109098594 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174314755 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.08017987 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167820615 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.102163912 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154187202 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.078426974 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152572721 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190171283 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076327429 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156050905 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129679766 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.128608346 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163976354 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21954797 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091399709 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109049544 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201360854 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155362978 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.131730011 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.201495942 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.188791638 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.128087984 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130748208 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179934018 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243777717 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116717462 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223422965 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134453446 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084533441 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.115117187 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155914873 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140513698 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.149764807 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083562871 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.155978641 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227497929 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.100517789 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09677033 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189845724 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083402597 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108174941 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140417295 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101898312 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.122297427 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.1280685 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.133529342 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169983088 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154383226 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135362221 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153360243 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125732144 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226633362 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11498958 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.105176195 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131518234 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.094100866 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.166616782 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190676846 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107862815 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22663904 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.155145032 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103888087 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146920889 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110378872 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169169045 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10497551 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.071450172 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200731352 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11190334 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137080018 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.211202166 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103551845 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.182671667 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.153321516 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163376826 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159225574 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.161317718 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133251206 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.115215594 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140161309 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156621723 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072882077 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.121428675 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.109238208 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130894313 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097944232 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111397427 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173188707 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179962662 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100690973 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141416521 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124401499 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180510581 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.10402737 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161430341 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.148596373 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120952149 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.187184066 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214281381 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166336133 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127168968 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176751978 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.097330393 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07518406 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.117248778 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157740704 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082621915 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111839564 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14583388 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.203621219 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159327577 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167291657 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138887577 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150124144 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187826858 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.098174182 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.117389189 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206956202 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15436725 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.135271867 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115289036 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.12661775 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175795865 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136486206 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24612656 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143797735 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152800344 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210089702 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.128488068 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082612856 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135015166 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167395468 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1347697 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.208533856 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101087392 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116735346 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138621954 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.106806995 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130382933 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159481549 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148691828 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165309503 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.144716741 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160951246 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105361429 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145414837 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152197896 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151914295 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064161196 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149496531 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222869616 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122684197 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146438339 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212718301 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080764093 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.152469352 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244349503 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174016186 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112624977 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137957569 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151266446 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158701375 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146608084 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170561895 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13872126 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164030261 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138650028 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.11311589 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0877381 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126009107 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134679101 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.123141063 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.14006027 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.145780359 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.120662 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162660634 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140208457 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138505863 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148652072 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.099510509 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.118916364 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097051723 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237515797 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150724096 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236067647 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.1298963 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.18073616 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227803688 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103169913 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080181363 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.108498081 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171721483 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084141203 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191787614 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.09656765 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134572626 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157616055 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201327689 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096815428 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.095431367 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110802426 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192285174 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139200468 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100577987 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.134165312 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224556588 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.130794378 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081443486 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154821308 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134467037 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129573806 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237180957 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.063316458 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097604211 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104106979 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080601248 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186715854 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19036931 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.111295268 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.131925336 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146897591 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177704853 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159705085 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129949636 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099775275 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141600962 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207887078 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159903565 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.0904143 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141563935 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18694427 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190457679 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135279521 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.123713157 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204386556 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214876628 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.224736295 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089707041 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145372272 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144884388 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138987736 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218506214 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08496156 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228716138 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110194348 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168846773 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133437401 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121140997 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159851103 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.12439209 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090562992 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21028017 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149814503 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082909423 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10804708 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147452325 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152199836 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136130208 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.076246504 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199885281 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.074010297 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196930012 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205287841 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110826192 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133109165 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098476089 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111204441 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137141694 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131553968 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089351042 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.149609804 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236598546 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.091905218 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212090812 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171406289 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143295449 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196517634 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128389902 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.664370351 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.079555515 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217744509 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150137915 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240198969 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124620337 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149550092 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111933517 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153174513 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203401794 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133942506 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.207604519 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165720808 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.152166061 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079660312 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132020468 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139829235 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.119147318 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136328948 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144711905 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145543933 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.128327103 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.151156142 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157773658 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.108574362 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097075097 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220200566 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147467068 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173995469 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170876219 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114384777 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149766552 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200406735 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083346857 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.153696614 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217641413 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137858849 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127237477 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.084058849 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.136895369 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234283211 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074363402 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225051302 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156803209 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139385353 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144842497 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.147576765 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188266241 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111021742 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181987879 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096637633 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.140199566 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1446176 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112771145 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.103394828 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108775788 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141307133 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.128443358 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131188603 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.122287933 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213330194 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071341221 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124353141 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131659638 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174286543 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24072237 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.117557972 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084185294 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149123433 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142720184 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.145500244 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154605404 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.10964123 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110188081 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.083893823 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.140488928 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.111941138 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143665922 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131811113 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139950279 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229079285 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.084574303 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.254608027 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124126335 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132964143 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.071787265 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.107421427 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098473413 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127878376 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138194743 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125148655 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207625017 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.1254727 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.118220112 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095080547 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.101852363 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08374094 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158515506 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139515897 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151259636 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12647022 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.090520827 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139344923 seconds)
  done (took 71.843094458 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.136225258 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.108204346 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.121363044 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.177201904 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.149215164 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.241861845 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.184109029 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.227731407 seconds)
  done (took 2.538324833 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069691756 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.121686895 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.105237263 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.119440575 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.093215697 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069779861 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.301259579 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.112705539 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066433517 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.118827515 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.121595281 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.095120557 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.488648676 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.06758721 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.096680437 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.08832886 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068848382 seconds)
  done (took 3.389688341 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.434230158 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.654779297 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.458450958 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073787265 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.021569849 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.110705987 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.561184677 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.16825452 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.094812937 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.444440528 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.731136965 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.157641103 seconds)
  done (took 18.105233849 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075957197 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070218609 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.112615469 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.086808605 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.100724068 seconds)
  done (took 1.639852275 seconds)
done (took 116.977150664 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081199487 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.352974651 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.055139187 seconds)
  done (took 1.636901236 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.084599842 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.086257383 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.115797705 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.084650889 seconds)
  done (took 1.575537151 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.075788893 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076207902 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.11298769 seconds)
  done (took 1.468160893 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.285546076 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.166060869 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.090383375 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083251417 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077380408 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.104637434 seconds)
  done (took 1.467537032 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073647446 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074386839 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.100490411 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076365484 seconds)
  done (took 1.520283451 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.078271298 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.05412832 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056642666 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.085139248 seconds)
  done (took 1.476070717 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.090843473 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.105921623 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.081288821 seconds)
  done (took 1.47784249 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.108017981 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.113412397 seconds)
  done (took 1.423125597 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082897209 seconds)
  done (took 1.281116741 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.092172306 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.141681536 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.158347803 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.137457059 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.167590455 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.138276137 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.087381769 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.117407115 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.104794553 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.088553135 seconds)
  done (took 2.43639246 seconds)
done (took 17.578059673 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079065775 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.483661681 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.363540077 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.120852194 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.686019269 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356523123 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.013877534 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.121496667 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.12602895 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.098226315 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083474791 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.698570544 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.975210882 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.442393707 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.963402628 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.319775719 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.678769457 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068446928 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067217807 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095865696 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.968131572 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.095499086 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067926253 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068308584 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.675617884 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370919572 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09691589 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.319592518 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067120084 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097675899 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.353967497 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095730248 seconds)
  done (took 16.314554212 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071154707 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.143598931 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076062535 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085400641 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.100693623 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.06908 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.099288212 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.06972808 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.156083275 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070207516 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.114543747 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06838682 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.098653848 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070138411 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086510958 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.096200825 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068632803 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06761107 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.096689312 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067688117 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.114304642 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069745685 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068920917 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.097666862 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067193936 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108960048 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068964337 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067586076 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096677027 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069360572 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.097322736 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069577988 seconds)
  done (took 3.973033003 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115325574 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.153278425 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076361065 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.13297757 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11557668 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.100585489 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.170174641 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096708114 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.158273732 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06938814 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.114951694 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068223286 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.12914786 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070990564 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.117405608 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070204168 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068592415 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09735502 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06756153 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095726041 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087206816 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067068924 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.096531638 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.0678458 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.095233125 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081899538 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094026672 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070051665 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067861028 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097110255 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072023641 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068684981 seconds)
  done (took 4.266444927 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073387482 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074063381 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.110144205 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084708532 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.097623429 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.07348042 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072188398 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.098421138 seconds)
  done (took 1.896405806 seconds)
done (took 27.654696184 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079256764 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069763628 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.102649651 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081650467 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.099002388 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.08141514 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068637452 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.105138807 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.076754672 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072003696 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.104326798 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068014198 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.098559781 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.068508473 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.075603122 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097594936 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080948936 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101023542 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.081439805 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.081176729 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.100369917 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076833778 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102026229 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080948497 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.108222487 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081301289 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.083719489 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.103868356 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069192516 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.097692933 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077516854 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.085444869 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.099186968 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081311687 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.098153519 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068475336 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.068418423 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.098412242 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080721839 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.102634326 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070813106 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.101065911 seconds)
  done (took 4.830894009 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090014268 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.09296338 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.115470633 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.06711489 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.100969805 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065502536 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.115702467 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.066688988 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060727098 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.117917118 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.057694156 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060526344 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.092424292 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.055319069 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060182579 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057828863 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.091350353 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056214728 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059280874 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.088049196 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057934768 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053962521 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.088769674 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064249706 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.057492243 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.06342096 seconds)
  done (took 3.172508719 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.0763226 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084044066 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.11806505 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127159975 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.135666267 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077620378 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.109342971 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.087319036 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.115004612 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067780688 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.072518631 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.126726633 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086533637 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.103933597 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.06807451 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.116901204 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082434217 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069767578 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.105447476 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.089915035 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.112811632 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.07869126 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.120130562 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.08237381 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067840785 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.100695441 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072828733 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.109989041 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.076167564 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078651041 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.102327206 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.07101461 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.09805739 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079514238 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072577215 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.098807543 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089972567 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.107007143 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078393722 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068720233 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.100701432 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069165939 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.125754219 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.111743767 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.097570157 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074865304 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.103133421 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.078848749 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067620451 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.115882684 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076656411 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.094468207 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071985863 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067641273 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.0971547 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081973752 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071204238 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.10070587 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078243922 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.099726111 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.080169691 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072466212 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.113213675 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068808548 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.105129712 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067120271 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069686881 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.096591677 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.091355603 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.098381207 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.109315174 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.098610056 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069748034 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.07640816 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.104851176 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073514128 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.095408484 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.0844646 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07906833 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.102050609 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076446563 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.098814303 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072178774 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.08791275 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.099811154 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069870313 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.06946245 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.104184596 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070050969 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.096965532 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081126545 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068781723 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.101139717 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085430201 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.096971193 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.070403099 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074799838 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.103226173 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067475829 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.110257208 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074528845 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.096692358 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079003666 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068700793 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.100747398 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078694923 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.100100448 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.068568247 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073666051 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.104122468 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070475909 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070367606 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.101259764 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069441337 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.105886834 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.07455699 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072956263 seconds)
  done (took 11.570269443 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.191600681 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.185658739 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.07141972 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.179296536 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076381328 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.110188545 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.181513532 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.09564972 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.097490088 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.0694772 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069535665 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.133359627 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.125756221 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.111273003 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.109475969 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.07024506 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.115581269 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.106215738 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.183627168 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.176096904 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.115704571 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077865347 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070194732 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.099776609 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071368761 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.077981314 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.11572987 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.075770007 seconds)
  done (took 4.396475933 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082136212 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.129602054 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073996974 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089235947 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.120898172 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.066771298 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.103081458 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069368891 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.108849557 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.081205646 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.095583935 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074452152 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075480379 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.10854301 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068982681 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.107262621 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.078374873 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070129969 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.100932015 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073844945 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.106631378 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.081525612 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.073301833 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.097229637 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.075415586 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.09664972 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.065913457 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.114846384 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068357743 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.11895833 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.06685 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.07478921 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.111801869 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068736624 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.094492563 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.072764667 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.072448809 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.099623452 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070468853 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065497813 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.095197411 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.05806364 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067813544 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.111049726 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073314305 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.088423835 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.07480719 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.07266934 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.103305533 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.0649411 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.098149318 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071319707 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070849472 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.105781188 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073537335 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073428603 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.102848733 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.066104501 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.103043006 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.072217071 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065452229 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.096209381 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074446458 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.067487413 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.106406258 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072739946 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.094977939 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072002686 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.074133786 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.103792518 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071873394 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071055997 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.097241147 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070165105 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.101047215 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074389353 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.072862861 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.096503999 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.0691278 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068833437 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.085665651 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068633318 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054357314 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.101488718 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067107058 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067331487 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.101579047 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073478122 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.110437689 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069977133 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.102001794 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069858498 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068843503 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.101695254 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.064229706 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070492378 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.113504319 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.109656611 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069759542 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066865991 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.112474367 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072899064 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.06709632 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.086944895 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075865214 seconds)
  done (took 10.032814977 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.096715298 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.090924057 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.09897201 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.082423117 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.124524424 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.092422012 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.103374028 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.074962747 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069269647 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.115263288 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.067787805 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.103957522 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.069210384 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076283561 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.125841181 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.07509326 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.098235937 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077262056 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071914525 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.137747456 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082474647 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.111033823 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.081337116 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.096638002 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.074135728 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080018248 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.125322207 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.079324068 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.107142381 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.085662745 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.07896842 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.12506177 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.085593513 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.100706678 seconds)
  done (took 4.406300824 seconds)
done (took 39.616755884 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.303136183 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.514737933 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.28828235 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.255513489 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.292197028 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.299530403 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.298137619 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.301737261 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.680734109 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.288181936 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.550705292 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.990029346 seconds)
done (took 60.29797255 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.32630563 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.431035088 seconds)
    (2/2) benchmarking "String"...
    done (took 1.558907855 seconds)
  done (took 4.223980009 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.654325817 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.198953857 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.549301895 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.289446974 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.289110443 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.610395979 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.98894834 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.148443187 seconds)
  done (took 28.3068747 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.294501939 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.681156151 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.887905554 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.885493847 seconds)
  done (took 18.98155567 seconds)
done (took 61.726947282 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.311131577 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.318102877 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.319934314 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.272252533 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.403521731 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.315773507 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.600708616 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.504511347 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.291505237 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.279930075 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.312648773 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.290167863 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.300142675 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.580310547 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.29069234 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.290377124 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.339554533 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.775425358 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.689634234 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.295589581 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.309590277 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.296252385 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.309292843 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.293032173 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.36662194 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.293701017 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.291799196 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.291169862 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.644178908 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.293470499 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.392942484 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.761512527 seconds)
  done (took 194.557719166 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.290901207 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.385387175 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.443007087 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.353571228 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.935982307 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.490649768 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.429159595 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.00011179 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.3102885 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.300675148 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.609265486 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.292776464 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.674972869 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.247451601 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.298389539 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.372531993 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.631861342 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.655934854 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.308317111 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.554054159 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.300778724 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.744009819 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.658897109 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.551913588 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.296888669 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.301349717 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.314771019 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.311419183 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.480300035 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.558437001 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.32508781 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.318216531 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.894379203 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.153530281 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.299253785 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.306587116 seconds)
  done (took 154.635376805 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.581491511 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.293165502 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.292814445 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.293604386 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.324521893 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.292826816 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.831693004 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.831628904 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.800700581 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.659242999 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.355198563 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.50790623 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.293291842 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.385943299 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.305231282 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.294220607 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.30820614 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.319178882 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.296312183 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.293927245 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.832471383 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.306846969 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.348378772 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.302543593 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.293562843 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.325111002 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.685498892 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.293703508 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.325061033 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.61345371 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.342518514 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.294452163 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.603206803 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.175000991 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.403194775 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.294092736 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.296581816 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.325046946 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.29408127 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.566066063 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.294719865 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.294790371 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.298073597 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.890359904 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.297937728 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.843365988 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.298276905 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.186946984 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.295589803 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.294258256 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.677871734 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.813005238 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.29663983 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.29386509 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.296671054 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.293781752 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.294628534 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.324830358 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.634444501 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.391356906 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.292508045 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.295528672 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.322204129 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.293108498 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.361559153 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.288765059 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.723392315 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.345651352 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.500638906 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.816664051 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.2888162 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.380081966 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.405087166 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.287437362 seconds)
    (74/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.287331103 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.286483337 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.287018725 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.288486533 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.39213618 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.28625659 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.678814648 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.29293798 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.288634432 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.346282064 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.286295084 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.379332844 seconds)
    (86/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.288384447 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.28817136 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.593976341 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.290130358 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.286591485 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.978843683 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.379128634 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.2893255 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.287857943 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.287215581 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.679363713 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.809104134 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.462769614 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.291500013 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.620432846 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.291566018 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.693595828 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.801951673 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.882990651 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.291935683 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.395381299 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.29208816 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.289891299 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.288220461 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.316709808 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.289163667 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.347779087 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.289092047 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.686906707 seconds)
  done (took 355.145060722 seconds)
done (took 707.153801408 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.938095778 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.921416086 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.035735071 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.914415105 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.900280829 seconds)
  done (took 10.94033076 seconds)
done (took 12.170365362 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.478365204 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.480735884 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.351670106 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.48026591 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.31810765 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.496765185 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.457273737 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.311292415 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.393040179 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.365622011 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.393191168 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.338681834 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.316730445 seconds)
  done (took 19.412686374 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.58957482 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.589217936 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.348858755 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.593308373 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.325865455 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.608957723 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.48141136 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.491025604 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.477523054 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.301447946 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.300511248 seconds)
  done (took 17.339004561 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.598983225 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.589582571 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.355491741 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.606255222 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.32937388 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.598804541 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.478224485 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.493163019 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.477983792 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.301839624 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.300076312 seconds)
  done (took 17.361308702 seconds)
done (took 55.343756612 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.297300323 seconds)
  done (took 2.528914391 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.3342948 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.498508969 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.31137984 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.300492343 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.298044139 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.297682571 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.301262864 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.296129948 seconds)
  done (took 11.871074066 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.29472604 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.297881629 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.293920925 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.29601128 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.293402076 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.296360201 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.29458341 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.293267776 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.296138138 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.293862696 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.295909127 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.292897343 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.293240935 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.293709722 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.29676562 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.295333965 seconds)
  done (took 21.95053124 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.29563595 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.292277853 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.292522293 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.292156419 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.292582514 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.2932084 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.293319068 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.292143132 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.291663739 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.292251123 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.293443207 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.292453073 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.29182859 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.292124286 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.292718408 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.292859459 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.293125565 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.292984537 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.297800068 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.292534221 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.293769895 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.292726472 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.292787167 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.293726625 seconds)
  done (took 32.268433228 seconds)
done (took 69.850979582 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.284315488 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.883988739 seconds)
  done (took 9.400455066 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.294792713 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.296063797 seconds)
  done (took 3.823765667 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.296074596 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.29512646 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.295679347 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.294909766 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.294701588 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.295149202 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.295800255 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.294889456 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.295271492 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.295446887 seconds)
  done (took 14.185229429 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.29479528 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.295757623 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.293683832 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.296123431 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.295804457 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.292783228 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.295456894 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.295093908 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.296244624 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.293452274 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.296215312 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.294144366 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.296084956 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.294573514 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.296042999 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.293406262 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.292766475 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.29375381 seconds)
  done (took 24.541110628 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.296526131 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.296823547 seconds)
  done (took 3.82642228 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.294415078 seconds)
    (2/7) benchmarking "second"...
    done (took 1.293957625 seconds)
    (3/7) benchmarking "month"...
    done (took 1.293195232 seconds)
    (4/7) benchmarking "year"...
    done (took 1.294110877 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.294603607 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.294823623 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.294232827 seconds)
  done (took 10.293131367 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.297081577 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.467645806 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.54881229 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.899935201 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.298424912 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.300174511 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.149446438 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.30085917 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.302054788 seconds)
  done (took 14.796902566 seconds)
done (took 82.099089536 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.294224819 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.290132904 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.173018577 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.304216205 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.306865005 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.631933293 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.313406443 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.412578519 seconds)
done (took 37.960388146 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.293687334 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.978188192 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.981855357 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.297010638 seconds)
  done (took 11.490076132 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.277766284 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.187244626 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.287843005 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.302768151 seconds)
  done (took 18.288309238 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.897097575 seconds)
    (2/2) benchmarking "read"...
    done (took 1.622410696 seconds)
  done (took 4.75130949 seconds)
done (took 42.056485135 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.294787459 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.294511481 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.294688336 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.292049197 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.294822571 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.291976787 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.291509754 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.294443929 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.294388923 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.294673224 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.294849143 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.295584711 seconds)
    (13/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.291450053 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.291666399 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.292322029 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.294313851 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.2929179 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.292724064 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.292807879 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.292832919 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.294535023 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.295199888 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.292361845 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.292386759 seconds)
  done (took 32.276230292 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.295613438 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.293772184 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.295902279 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.295807108 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.292184684 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.295120323 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.296188299 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.292976845 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.295460851 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.296630275 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.293098731 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.294058924 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.296500281 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.293546509 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.295644929 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.293955893 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.296430679 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.292903001 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.295441806 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.293148855 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.29620423 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.292741745 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.292842548 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.296085521 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.294212946 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.293473476 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.295315274 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.293284755 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.295992291 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.292876545 seconds)
  done (took 40.070571435 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.300692375 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.303654225 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.29583119 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.296676086 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.296334052 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.295794087 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.295418292 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.296067719 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.295653297 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.297029999 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.296741861 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.296360269 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.296897999 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.295964329 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.29573732 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.296496417 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.296451408 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.295687333 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.29594224 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.297107459 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.296201438 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.296561868 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.296380011 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.296180112 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.295941421 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.296220881 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.296860126 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.298366305 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.2969685 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.296483668 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.297201076 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.297716494 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.298345268 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.29710963 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.297098504 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.297731694 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.301967463 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.30533497 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.296884975 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.297539625 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.298443349 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.297139779 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.297884233 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.298276923 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.297916346 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.297657535 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.297965947 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.299895164 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.298154552 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.297834663 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.298677184 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.298712668 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.298092434 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.298130865 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.298524035 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.298313001 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.297957565 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.29873176 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.297646604 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.297805917 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.298822093 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.297847669 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.298303981 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.297595257 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.299112277 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.297880642 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.298014649 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.298552429 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.297992609 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.298321352 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.299432404 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.297971352 seconds)
  done (took 94.668688246 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.298852225 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.295331755 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.295534253 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.295947091 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.29601454 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.29962659 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.295887633 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.296939654 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.295497657 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.298189889 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.297097052 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.296010159 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.295726245 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.299206133 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.297661733 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.29596165 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.297931917 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.295414144 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.297725081 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.298405784 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.297321711 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.296663601 seconds)
  done (took 29.768527182 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.298325737 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.298805182 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.295577118 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.297639227 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.296010706 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.299314885 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.297729426 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.297736737 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.297792406 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.295581271 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.295272707 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.297675212 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.295875504 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.295915095 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.296668066 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.295943774 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.298095917 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.29564179 seconds)
  done (took 24.581265361 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.295618176 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.296139739 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.299609458 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.29522429 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.295837326 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.298121666 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.29642037 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.298530999 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.29824719 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.296810348 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.299477906 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.298451939 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.299962773 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.29590437 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.299138685 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.296834542 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.298021801 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.29812534 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.298741178 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.296584928 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.295177798 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.299029688 seconds)
  done (took 29.781737521 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.298884377 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.297812929 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.296475513 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.295806434 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.295123105 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.297542619 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.299112609 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.295660163 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.299127576 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.297971838 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.297039343 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.297957877 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.295272757 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.296087726 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.295922773 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.295142925 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.298651934 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.298050091 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.298818739 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.295402883 seconds)
  done (took 27.177401375 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.299579383 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.300623991 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.300109475 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.300204509 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.300306011 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.30010113 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.300074129 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.299782538 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.300996687 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.300905066 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.300140348 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.300606284 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.300947518 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.300878536 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.300714244 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.299990189 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.30102823 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.30098277 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.300682021 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.30056096 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.303030545 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.300614834 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.301226992 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.300019467 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.300200307 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.300872596 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.300944762 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.300601371 seconds)
  done (took 37.6530226 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.300309322 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.299198261 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.296948541 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.297484362 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.297841318 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.2972592 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.297304079 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.297270631 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.300442002 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.297116264 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.299644106 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.30052557 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.299798758 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.299861767 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.301589226 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.300306069 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.299738806 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.297786764 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.297739697 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.29791919 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.300415147 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.301251242 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.300817182 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.297450628 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.297127659 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.300423341 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.297488031 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.297729403 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.300624351 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.299006567 seconds)
  done (took 40.20590214 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.319481719 seconds)
    (2/2) benchmarking "in"...
    done (took 1.319308192 seconds)
  done (took 3.876414761 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.297407971 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.300571881 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.300797725 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.298275942 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.297952316 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.300098546 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.300711789 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.298601303 seconds)
  done (took 11.631382345 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.303874945 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.300644349 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.301336065 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.300828741 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.302061834 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.303745748 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.311836298 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.316683256 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.305036919 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.304122306 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.309564365 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.310353416 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.305976626 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.304850125 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.304310375 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.30693501 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.301415995 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.30260883 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.303341776 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.30216587 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.302127042 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.306831356 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.307583554 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.299910851 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.305802786 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.315983423 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.309579875 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.302544482 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.305440544 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.309073318 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.305298169 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.299480777 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.304030944 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.303063433 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.303360453 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.303880401 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.315871357 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.321338306 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.312182163 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.303569065 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.304558466 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.300689488 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.306591283 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.306707265 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.308025005 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.305057316 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.30370333 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.300759444 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.305969226 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.308849124 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.307260425 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.306700538 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.301764369 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.311156132 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.308195704 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.315169556 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.320151783 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.309420506 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.313752838 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.316968697 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.318509677 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.313401305 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.308391429 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.30493615 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.315049012 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.326707049 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.314170276 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.317950963 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.301807108 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.305548408 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.314006467 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.318849965 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.316072023 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.305336608 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.306276281 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.305257451 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.307983206 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.305382049 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.315113058 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.3271743 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.305957693 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.30565889 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.316872656 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.326818084 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.307715741 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.305199498 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.307090219 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.306556142 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.308878091 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.318288427 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.32185536 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.305987444 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.307744323 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.308258937 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.310742613 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.307065327 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.307660765 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.3096719 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.303648253 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.30683802 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.306658419 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.31186469 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.316025478 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.306959976 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.307167891 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.316784917 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.306347275 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.309435282 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.315935215 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.306040867 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.307591804 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.310930949 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.315129396 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.304734747 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.31216744 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.31707864 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.308675528 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.311385665 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.307718914 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.307866615 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.318639658 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.332866014 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.307944915 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.307433243 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.313644903 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.31707043 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.308062861 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.313296482 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.307694751 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.304943869 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.305149846 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.312590281 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.3078379 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.310811868 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.307635965 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.312274175 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.305178064 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.307713333 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.308597272 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.3120841 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.311654158 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.311826923 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.311610089 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.313643198 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.308302779 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.312577746 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.318728085 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.311445088 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.311874135 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.312567956 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.306819782 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.308957258 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.312375951 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.309471334 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.312782638 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.308715171 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.310931145 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.309724115 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.309949536 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.308815272 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.309778087 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.312090013 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.315695693 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.309743858 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.316469051 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.311483442 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.308042553 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.309104634 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.310256364 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.313260163 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.310099882 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.311765563 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.314372322 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.316433071 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.30946355 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.310808982 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.315834519 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.309888668 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.309621337 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.309945039 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.314903861 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.319924446 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.310798329 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.32037715 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.311278692 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.312315223 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.311391712 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.314752502 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.313373244 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.311898488 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.316635572 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.317354302 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.325568244 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.3213017 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.31498276 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.315091373 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.315031094 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.314258478 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.318748921 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.312944532 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.311919442 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.312059588 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.314315537 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.312711479 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.315998878 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.312874267 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.314077825 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.313459969 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.312158176 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.313089176 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.31307503 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.315657523 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.31573453 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.310702083 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.312687151 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.312398935 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.315617559 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.310006886 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.31563535 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.314734213 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.312526411 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.312566974 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.322555364 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.311994139 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.316138027 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.317095084 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.315563603 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.314988247 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.313708228 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.317710314 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.31627477 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.322262103 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.333337422 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.316618356 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.32341312 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.331521495 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.315321968 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.318333111 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.314701666 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.311112741 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.318638473 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.319363356 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.313984002 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.313963094 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.314856353 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.316565819 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.313068044 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.323283098 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.311430033 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.316733426 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.314072466 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.318323678 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.31129526 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.317709322 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.318146393 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.317544387 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.317832582 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.315493541 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.315119586 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.318374904 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.314002322 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.315403311 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.316300103 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.320226793 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.321978111 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.322925582 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.318088983 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.319301613 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.318861355 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.318216854 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.317877294 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.316481845 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.317558632 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.330850483 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.323463975 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.32477416 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.320323893 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.316401154 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.323870445 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.320355971 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.322181112 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.317461026 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.318768034 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.319169815 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.318058644 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.314284347 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.320048476 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.316507501 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.320096025 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.320726074 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.320289139 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.316207272 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.319154319 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.31738969 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.316917572 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.316207348 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.318733472 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.317205726 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.320909322 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.321085853 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.319849239 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.319299428 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.326554603 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.335090955 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.321455965 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.318747507 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.319999279 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.319995148 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.320352313 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.316549264 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.321979687 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.323003302 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.323207216 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.329218367 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.322684661 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.329869098 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.317840702 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.323008203 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.325847489 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.31492581 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.31979576 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.320207383 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.317427394 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.327576098 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.333477024 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.32151756 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.321276371 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.318933599 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.319092769 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.318723919 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.318372819 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.31899353 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.318318503 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.329922046 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.337306253 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.323803121 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.323199347 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.316500376 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.319274489 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.319149973 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.320271641 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.325088904 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.319241777 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.322455753 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.321208098 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.321731896 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.318666764 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.318667103 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.319085085 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.315359332 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.31979012 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.328400616 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.338482757 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.323008026 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.320207375 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.330071928 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.320709759 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.329290174 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.335709253 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.322758051 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.319458183 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.321488927 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.324442806 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.322772225 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.324624077 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.320037139 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.324677717 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.322411154 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.319295705 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.324875811 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.322342528 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.320147874 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.323231489 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.331584995 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.339092376 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.323661957 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.324771909 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.317797388 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.324105045 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.325434404 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.320291022 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.32339406 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.325608575 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.332658916 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.328111915 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.323502523 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.321858953 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.324479355 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.321891514 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.321510162 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.320868235 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.321606578 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.32176591 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.325317159 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.3211589 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.328143764 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.321361618 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.324718738 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.325928504 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.325188675 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.333819385 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.32260987 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.325416884 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.322009879 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.322863448 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.32551085 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.325115089 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.321573451 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.325086415 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.32239885 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.325222457 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.329486052 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.330752155 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.327176495 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.324161873 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.322499283 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.325418011 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.325335663 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.323488729 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.323356577 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.323193089 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.326822188 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.324500406 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.326628891 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.323925723 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.32266885 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.326473439 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.323846077 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.327661191 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.331838991 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.326649369 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.321015896 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.323973602 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.324511513 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.325283542 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.326907638 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.333964901 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.329420874 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.335308203 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.333369816 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.327295468 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.326945809 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.329053331 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.333524325 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.325078089 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.328089236 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.324120821 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.328258922 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.326955969 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.329452398 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.325011855 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.333336284 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.326889121 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.327398342 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.334625983 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.343132641 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.323527115 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.32750413 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.3308763 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.327475121 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.321988417 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.324181985 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.326856015 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.334565379 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.345053572 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.325644391 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.328642259 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.32675789 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.330040159 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.329504622 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.324889748 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.328276455 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.323152898 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.328362722 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.325080448 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.324875573 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.321825558 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.327225626 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.327651748 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.330944113 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.333609424 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.322986492 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.330345521 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.328733304 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.327774485 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.32617178 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.326111136 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.323318322 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.323829803 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.329590722 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.326582951 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.3300329 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.331842302 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.329142736 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.330503489 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.327691041 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.326145093 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.331352563 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.338141428 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.335193452 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.324041706 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.328463916 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.329860715 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.331565133 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.327842165 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.327016894 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.330206581 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.330763655 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.327180831 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.327246054 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.325709132 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.331795537 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.345869168 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.342557717 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.329788697 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.330416188 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.333183452 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.327670505 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.325339712 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.327031433 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.332635214 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.335170768 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.333373543 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.327644752 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.33801631 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.346072001 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.330478196 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.330228463 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.333164209 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.337801009 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.333093778 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.327786464 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.329024535 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.334455892 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.345644341 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.3289958 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.340223711 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.357715906 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.346858231 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.33236349 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.3295803 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.330507847 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.329067492 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.33300189 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.329563678 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.329768956 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.329448821 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.328432675 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.333016813 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.337138526 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.332804917 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.329129853 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.329050708 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.333407124 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.332763398 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.326856976 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.329847343 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.329729102 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.329790926 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.329851515 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.330331572 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.33202979 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.344063429 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.340915472 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.329571188 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.330045636 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.326550571 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.335779139 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.334982516 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.341474606 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.335837467 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.330735461 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.330348481 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.334144035 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.330879653 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.327491148 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.33418281 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.334444648 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.333208361 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.328835254 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.345391664 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.338826702 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.338393509 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.333987123 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.332344147 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.330319514 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.334490135 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.331486805 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.33144654 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.335702174 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.334581815 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.333548562 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.330691304 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.331256145 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.336523097 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.338201151 seconds)
  done (took 788.05964662 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.329240944 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.328456485 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.32945525 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.328275932 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.329646626 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.32938973 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.32843391 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.329008914 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.329341201 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.329135605 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.329650047 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.328921528 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.329497736 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.329771361 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.330416804 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.329302102 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.328789477 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.328630474 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.329630332 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.329482046 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.330295254 seconds)
  done (took 29.183820604 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.3329794 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.330147819 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.329288561 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.332867122 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.329644478 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.333309579 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.330116707 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.332815521 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.333396111 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.330214693 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.333513799 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.332630638 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.330422947 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.330359393 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.330845987 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.333082114 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.334515038 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.330768992 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.333871221 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.331050159 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.332842591 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.331740475 seconds)
  done (took 30.569538934 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.334342592 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.333527243 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.336886974 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.330981357 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.333849215 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.331238031 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.334182211 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.334050789 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.334597638 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.337621693 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.336338648 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.338427597 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.342344977 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.338313282 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.338492857 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.334123873 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.479091851 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.33481217 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.334663654 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.336150936 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.331651394 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.341832877 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.333210241 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.332312969 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.335745849 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.334554006 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.335013317 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.33465882 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.335689077 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.338901969 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.337549388 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.335197409 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.337743567 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.340204443 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.337256834 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.339156965 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.338194212 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.334969422 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.33260162 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.335269706 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.346861831 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.352209515 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.335698434 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.345250342 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.336008886 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.336324512 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.341513453 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.342305727 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.333178006 seconds)
  done (took 66.915923454 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.336787894 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.336986311 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.332454696 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.336418863 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.336381407 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.336518678 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.336955504 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.336330735 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.333521838 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.333206501 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.335901135 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.334833567 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.333214042 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.336271842 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.337252434 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.333718039 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.334593241 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.334125844 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.334017263 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.333970752 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.336213009 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.336896369 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.336806637 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.335361832 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.337731567 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.335616462 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.335947825 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.337431206 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.335647045 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.33580895 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.338206225 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.337443728 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.33728571 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.33583087 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.334829291 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.338244642 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.338005322 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.33531487 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.3372778 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.335880859 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.338698132 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.338923593 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.337916221 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.339719218 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.336488841 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.336442909 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.336230431 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.335560789 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.336280383 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.339178684 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.338554818 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.336873528 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.339334339 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.336496272 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.340598396 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.338671072 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.336424438 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.337083635 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.338577569 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.336637074 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.33654859 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.338970871 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.337090706 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.33917885 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.338905956 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.337485402 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.337253676 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.340428242 seconds)
  done (took 92.170794385 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.340410301 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.339653666 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.339319868 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.339597964 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.339825401 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.339263824 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.340058672 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.340204186 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.339489076 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.339820555 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.340225829 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.339865237 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.3345945 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.333728537 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.333774385 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.334244564 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.333608186 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.334518987 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.334675298 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.332925058 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.329287715 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.329864495 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.328968998 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.32883079 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.330267592 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.329712712 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.330664495 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.328406406 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.327448077 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.328189291 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.329178643 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.32628514 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.327766575 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.327954543 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.328154583 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.325334534 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.325610518 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.326388125 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.326506263 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.326052149 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.326247721 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.328229237 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.323907703 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.323187114 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.3236589 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.323136627 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.324234778 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.324421702 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.323282422 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.324951713 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.320478785 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.321478569 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.321046193 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.322550103 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.321148025 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.321916173 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.321706445 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.318311902 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.318481292 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.318849205 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.318230707 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.317818954 seconds)
  done (took 83.676067041 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.319013989 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.318002496 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.313086256 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.313272071 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.316091829 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.313268224 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.315620682 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.316064854 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.315972668 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.316248902 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.31338963 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.310492763 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.310724466 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.313092093 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.310622721 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.312402478 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.312234811 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.308114234 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.310688854 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.308405618 seconds)
  done (took 27.522803514 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.308355227 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.31000085 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.308261878 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.308469553 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.307731935 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.305784089 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.30835047 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.307975685 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.304759534 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.307568738 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.308295171 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.308508073 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.302451656 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.302795045 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.305330618 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.301934395 seconds)
  done (took 22.154403539 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.303131891 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.306958227 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.302809085 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.302089471 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.300779669 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.299396277 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.302050624 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.301124906 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.300448677 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.303877284 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.299557046 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.300063274 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.300006618 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.299956785 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.297604413 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.300549286 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.297926804 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.296673892 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.296738806 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.29672376 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.295246942 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.294042488 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.296812045 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.29616491 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.295677644 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.293171637 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.291598682 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.292380874 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.291972502 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.293869017 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.291669867 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.292734088 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.292114347 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.2890978 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.292647182 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.289688057 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.292296684 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.291995737 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.291450125 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.291590231 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.293411922 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.287435793 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.289608984 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.288813846 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.287920005 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.290235195 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.287220683 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.2881408 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.288806655 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.285018596 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.289466792 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.289032079 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.288650804 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.289068315 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.288481253 seconds)
  done (took 72.440977045 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.288868054 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.288345781 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.285837464 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.287384099 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.288684629 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.285605524 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.287998627 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.287729567 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.284361487 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.286716946 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.285883228 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.286518179 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.284078614 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.287996359 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.285303074 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.287725982 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.284649293 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.283543793 seconds)
  done (took 24.383006895 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.2844345 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.28432548 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.287287658 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.284173794 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.28463508 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.285676801 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.28305793 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.284339758 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.285861119 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.283346297 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.283642584 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.286700131 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.286988489 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.28427092 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.282232812 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.28342702 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.285772807 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.28675254 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.284240273 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.284637458 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.285092142 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.28377981 seconds)
  done (took 29.488951936 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.288862031 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.287948006 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.303564947 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.324988505 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.314699379 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.287620368 seconds)
  done (took 9.02975632 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282935265 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284337988 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.281149468 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28457585 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28267954 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282640274 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28100044 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281286536 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283253712 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281294246 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281193378 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283011926 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283304206 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282996622 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282822216 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282567086 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279444686 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279731623 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281107382 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283208711 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28050835 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282820144 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278874754 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278923932 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280260871 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279206066 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281886522 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280818711 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281641023 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282103466 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281653947 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278912858 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282826333 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279067492 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283652331 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282141166 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280161859 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280487473 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280962661 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27896445 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.280524633 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281379424 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282164063 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279155777 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281777569 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278839393 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278921997 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279246674 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278724017 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282540248 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283102442 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280066347 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.2823393 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280989347 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281529058 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281556635 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279145945 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279524854 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281327931 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280350408 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280525524 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281392495 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27929531 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279675335 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280776458 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278426648 seconds)
  done (took 85.777935459 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27960248 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.278801232 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277997855 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279137798 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278344353 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27982556 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279602193 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279462763 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279029124 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278207207 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28052907 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278940412 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277756114 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27784309 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277501925 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278003523 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278514521 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27779184 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277184281 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280127514 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276715104 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277623093 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278341023 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277466125 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277880584 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280583344 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278014229 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277853849 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278139042 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277717092 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277910076 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278152373 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278382297 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.279072799 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278079549 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278144818 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27866328 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278342236 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278907794 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28204996 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278636744 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281701912 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279707633 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279019041 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279777152 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279420652 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278128277 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279179758 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279057002 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278385863 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279232439 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278498937 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280035463 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279319097 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27883833 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279499097 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278967088 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278050775 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279068541 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280811289 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278973691 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278780137 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281567551 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279041425 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278620109 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27854073 seconds)
  done (took 85.624608188 seconds)
done (took 1819.920592016 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.292609533 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.351556934 seconds)
  done (took 13.862791182 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.44481945 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.399377318 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.283481157 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.314977689 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.28467713 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.283506902 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.289463793 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.28434226 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.283745308 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.28476509 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.283711571 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.47134857 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.339008341 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.284586568 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.28451725 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.376282105 seconds)
  done (took 42.413132682 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.304745604 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.293619036 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.394898267 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.309536067 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.314647717 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.463249653 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.347285236 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.293321287 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.445537534 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.326689902 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.689878424 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.314118363 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.293099612 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.288951236 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.310051511 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.462854063 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.517532729 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.693148373 seconds)
  done (took 29.283423462 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.691292901 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.285659182 seconds)
  done (took 9.202073727 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.289304718 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.298232558 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.317169244 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.317701171 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.290043215 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.337245546 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.308450097 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.314490248 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.336175573 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.305103937 seconds)
  done (took 64.340867688 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.312274066 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.293338393 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.293843492 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.292243847 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.285701148 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.285257859 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.292506407 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.289024654 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.477255632 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.411922044 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.308241869 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.300140334 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.294903991 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.293302085 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.285755002 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.325791432 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.425638876 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.28553746 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.285839075 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.297300936 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.293540001 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.37127998 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.33207015 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.287879811 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.407605225 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.489865108 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.297599289 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.301462896 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.431533818 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.285902623 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.292473153 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.294561869 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.296336173 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.847359875 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.761013283 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.298265608 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.327722793 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.298517395 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.28358244 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.414508569 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.294511063 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.298439648 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.283879113 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.721272229 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.439803171 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.396769208 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.382454821 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.290875824 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.294261303 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.349674086 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.294955209 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.294389042 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.319985168 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.019636769 seconds)
  done (took 107.857262592 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.333148499 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.787714266 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.454651456 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.304193335 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.962395025 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.937557266 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.287449236 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.539273932 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.309676758 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.286243482 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.616713592 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.753255931 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.28853736 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.2936372 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.917990657 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.341987269 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.287478948 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.026779235 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.287773439 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.292430708 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.701313665 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.300929533 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.297076238 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.437779881 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.325100223 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.718456819 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.60814594 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.702948422 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.29016071 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.28754768 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.720072675 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.290918809 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.288099844 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.287849112 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.547919324 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.610427535 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.589364113 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.289111571 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.31457457 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.289577666 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.31474424 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.71586241 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.592973411 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.284816424 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.286180422 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.719024837 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.285590406 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.29564524 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.293189565 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.483965392 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.997657848 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.288273823 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.621990517 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.284238191 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.549580905 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.351233617 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.347277381 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.74801863 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.286046437 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.33785146 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.301711479 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.289299982 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.287752031 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.290233557 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.291679378 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.60485389 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.41299112 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.296167367 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.606218837 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.713222158 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.28899426 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.783451273 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.138216062 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.291782436 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.362558008 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.288374509 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.836569726 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.747237961 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.291879653 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.287860354 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.589390323 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.29230556 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.596062529 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.296470887 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.287976907 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.70791704 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.30651121 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.334046348 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.291453561 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.287840608 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.91521482 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.291832567 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.54011777 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.353524629 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.289581519 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.290857167 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.342851289 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.289026123 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.290734678 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.295271 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.788505341 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.290829992 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.57238325 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.307796365 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.290727246 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.28903966 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.294168311 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.292308511 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.504758006 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.80547597 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.291670162 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.293291193 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.290323359 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.293210133 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.430866705 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.289522216 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.568092747 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.289750352 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.291649903 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.301015576 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.979275807 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.293880589 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.290910173 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.295493517 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.115575007 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.497784179 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.305762925 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.300474737 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.294104064 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.301294868 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.524736286 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.291356816 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.37102399 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.294932316 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.96324452 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.301507754 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.294910988 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.650256232 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.301102227 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.150293728 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.313520657 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.295225839 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.590634038 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.554322252 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.329890511 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.292873062 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.30775744 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.955432205 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.318730847 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.433210052 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.310262261 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.279985581 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.490341858 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.690463497 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.293942491 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.843644494 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.293959215 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.50170902 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.293075042 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.603283295 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.748663713 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.293701049 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.302546845 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.963734073 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.96818727 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.928288804 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.294339284 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.614655375 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.254761993 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.745005206 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.292571588 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.293778796 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.716400617 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.296831672 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.300979769 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.293626398 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.294202045 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.430466023 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.468348399 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.040115761 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.301747981 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.729798152 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.30122922 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.301220976 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.297090161 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.29847732 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.651692871 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.348022981 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.294924125 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.306366235 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.294068471 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.298781542 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.743905019 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.203877862 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.296402077 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.446857785 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.893671456 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.293735091 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.292670621 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.937262848 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.484761051 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.77339775 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.33982374 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.576471848 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.30554717 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.334127281 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.914039241 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.305365517 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.781809015 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.29561819 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.296715742 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.867342147 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.296503193 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.643600716 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.295956033 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.296701466 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.796615395 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.295784726 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.297905989 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.571124242 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.297506353 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.534623204 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.296390855 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.347093357 seconds)
  done (took 1099.725059327 seconds)
done (took 1367.903648929 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.297775355 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.291594658 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.275811632 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.295124296 seconds)
  done (took 26.391375258 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.300654972 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.30322327 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.298587154 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.301914465 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.299555247 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.303229058 seconds)
  done (took 9.039312862 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.331635071 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.295937288 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.297777334 seconds)
  done (took 19.158607375 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.504701678 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.482143309 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.640055047 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.287174139 seconds)
  done (took 10.147942758 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.29999278 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.299088071 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.300945401 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.302873812 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.302302844 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.303383655 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.299143251 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.298455591 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.30133833 seconds)
  done (took 12.941905912 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.89080426 seconds)
done (took 83.801391791 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.972567845 seconds)
    (2/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.702886793 seconds)
    (3/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.861691196 seconds)
    (4/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.467754153 seconds)
    (5/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.377445171 seconds)
    (6/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.39811915 seconds)
    (7/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.4493737 seconds)
    (8/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.615706648 seconds)
    (9/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.509898517 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.533279006 seconds)
    (11/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.430262613 seconds)
    (12/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.546449245 seconds)
    (13/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.278774187 seconds)
    (14/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.310998407 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.687612037 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.333401224 seconds)
    (17/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.277259635 seconds)
    (18/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.555611836 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.331504572 seconds)
    (20/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.318961817 seconds)
    (21/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.508599413 seconds)
    (22/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.424298038 seconds)
    (23/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.27971631 seconds)
    (24/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.779121731 seconds)
    (25/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.30856805 seconds)
    (26/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.309674099 seconds)
    (27/309) benchmarking ("sort", BigInt, false)...
    done (took 6.29937325 seconds)
    (28/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.778830264 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.699435681 seconds)
    (30/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.311714573 seconds)
    (31/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.064972311 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.06550109 seconds)
    (33/309) benchmarking ("sort", Float32, false)...
    done (took 5.282661063 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.86486334 seconds)
    (35/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.290197676 seconds)
    (36/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.319444164 seconds)
    (37/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.761960754 seconds)
    (38/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.418784725 seconds)
    (39/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.426616764 seconds)
    (40/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.584508208 seconds)
    (41/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.37429633 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.367820441 seconds)
    (43/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.814177667 seconds)
    (44/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.991352539 seconds)
    (45/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.008627682 seconds)
    (46/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.608743347 seconds)
    (47/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.310507117 seconds)
    (48/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.287648851 seconds)
    (49/309) benchmarking ("sort", Int8, false)...
    done (took 4.310638833 seconds)
    (50/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.556524469 seconds)
    (51/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.492603747 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.700154636 seconds)
    (53/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.295897049 seconds)
    (54/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.58270957 seconds)
    (55/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.393270026 seconds)
    (56/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.30056919 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.344609718 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.405939278 seconds)
    (59/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.32071217 seconds)
    (60/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.605775727 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.580750234 seconds)
    (62/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.895703426 seconds)
    (63/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.32127795 seconds)
    (64/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.322008213 seconds)
    (65/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.359632477 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.774543457 seconds)
    (67/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.849057471 seconds)
    (68/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.583526647 seconds)
    (69/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.354725913 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.038166806 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.39956457 seconds)
    (72/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.300417673 seconds)
    (73/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.319328689 seconds)
    (74/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.767783086 seconds)
    (75/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.077576863 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.393507235 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.291258742 seconds)
    (78/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.089707652 seconds)
    (79/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.434795861 seconds)
    (80/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.809035632 seconds)
    (81/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.524812333 seconds)
    (82/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.637864761 seconds)
    (83/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.520316237 seconds)
    (84/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.536867984 seconds)
    (85/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.335668063 seconds)
    (86/309) benchmarking ("sort", Int64, false)...
    done (took 5.446605973 seconds)
    (87/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.302178577 seconds)
    (88/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.088091681 seconds)
    (89/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.35958042 seconds)
    (90/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.880619297 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.699922615 seconds)
    (92/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.364214092 seconds)
    (93/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.282257091 seconds)
    (94/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.378715194 seconds)
    (95/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.302129697 seconds)
    (96/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.486231871 seconds)
    (97/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.402266869 seconds)
    (98/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.610099114 seconds)
    (99/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.295831216 seconds)
    (100/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.313041573 seconds)
    (101/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.317232446 seconds)
    (102/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.85397202 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.090987137 seconds)
    (104/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.30731564 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.474904611 seconds)
    (106/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.119670567 seconds)
    (107/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.593986453 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.1356231 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.659239839 seconds)
    (110/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.314006689 seconds)
    (111/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.868773023 seconds)
    (112/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.919190885 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.512080841 seconds)
    (114/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.406903723 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.175226947 seconds)
    (116/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.548261854 seconds)
    (117/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.324750858 seconds)
    (118/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.020541401 seconds)
    (119/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.062923043 seconds)
    (120/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.324743024 seconds)
    (121/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.354809199 seconds)
    (122/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.35293605 seconds)
    (123/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.414362333 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.304955344 seconds)
    (125/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.379127892 seconds)
    (126/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.404670313 seconds)
    (127/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.301500378 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.169788525 seconds)
    (129/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.581645068 seconds)
    (130/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.468081487 seconds)
    (131/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.303574694 seconds)
    (132/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.349658344 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.924232365 seconds)
    (134/309) benchmarking ("sort", Bool, false)...
    done (took 1.803311775 seconds)
    (135/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.321020624 seconds)
    (136/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.303913244 seconds)
    (137/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.881817165 seconds)
    (138/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.334812527 seconds)
    (139/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.567504817 seconds)
    (140/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.728469324 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.01341269 seconds)
    (142/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.504104837 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.558809648 seconds)
    (144/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.6073864 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.135818326 seconds)
    (146/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.318626312 seconds)
    (147/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.473787942 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.484875135 seconds)
    (149/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.815925627 seconds)
    (150/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.401578657 seconds)
    (151/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.497675714 seconds)
    (152/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.372910549 seconds)
    (153/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.363811701 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.026752768 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.328216771 seconds)
    (156/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.407006827 seconds)
    (157/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.709733855 seconds)
    (158/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.65779891 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.628703254 seconds)
    (160/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.302055616 seconds)
    (161/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.335759156 seconds)
    (162/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.317538402 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.29965885 seconds)
    (164/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.476341774 seconds)
    (165/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.880678052 seconds)
    (166/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.385329058 seconds)
    (167/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.322573558 seconds)
    (168/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.665363316 seconds)
    (169/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.498090657 seconds)
    (170/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.110015959 seconds)
    (171/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.348500226 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.704581028 seconds)
    (173/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.327826014 seconds)
    (174/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.331079038 seconds)
    (175/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.346475639 seconds)
    (176/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.43500807 seconds)
    (177/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.364274792 seconds)
    (178/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.857482889 seconds)
    (179/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.504579935 seconds)
    (180/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.292669482 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.113856385 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.306124426 seconds)
    (183/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.905940712 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.893753551 seconds)
    (185/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.002449907 seconds)
    (186/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.485649765 seconds)
    (187/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.63898317 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.652459403 seconds)
    (189/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.318775076 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.295909203 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.684622205 seconds)
    (192/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.320896507 seconds)
    (193/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.770315174 seconds)
    (194/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.327139025 seconds)
    (195/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.649326909 seconds)
    (196/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.749283454 seconds)
    (197/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.586491346 seconds)
    (198/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.344579847 seconds)
    (199/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.916687887 seconds)
    (200/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.315900324 seconds)
    (201/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.091746612 seconds)
    (202/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.362281311 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.358081161 seconds)
    (204/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.368942887 seconds)
    (205/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.052211324 seconds)
    (206/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.98657356 seconds)
    (207/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.005158062 seconds)
    (208/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.570139689 seconds)
    (209/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.313298259 seconds)
    (210/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.426761816 seconds)
    (211/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.723894279 seconds)
    (212/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.589101493 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.189777523 seconds)
    (214/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.33113352 seconds)
    (215/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.480489618 seconds)
    (216/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.140305183 seconds)
    (217/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.127388835 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.942951541 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.519575502 seconds)
    (220/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.58602089 seconds)
    (221/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.327522199 seconds)
    (222/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.310556585 seconds)
    (223/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.857931948 seconds)
    (224/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.645809096 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.35224299 seconds)
    (226/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.343711778 seconds)
    (227/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.305269074 seconds)
    (228/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.553915891 seconds)
    (229/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.343341927 seconds)
    (230/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.486367636 seconds)
    (231/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.599070077 seconds)
    (232/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.338406073 seconds)
    (233/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.409406398 seconds)
    (234/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.328734797 seconds)
    (235/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.386106718 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.309940731 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.325599139 seconds)
    (238/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.341416667 seconds)
    (239/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.391009864 seconds)
    (240/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.000854161 seconds)
    (241/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.005829289 seconds)
    (242/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.302072608 seconds)
    (243/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.792564793 seconds)
    (244/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.474868847 seconds)
    (245/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.06374598 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.176414723 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.136453238 seconds)
    (248/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.314587511 seconds)
    (249/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.314075201 seconds)
    (250/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.683125472 seconds)
    (251/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.389073257 seconds)
    (252/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.509121432 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.388020225 seconds)
    (254/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.314991242 seconds)
    (255/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.311321966 seconds)
    (256/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.401268025 seconds)
    (257/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.899405906 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.410307497 seconds)
    (259/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.30887687 seconds)
    (260/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.325142196 seconds)
    (261/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.293058644 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.329145972 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.647552868 seconds)
    (264/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.012398066 seconds)
    (265/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.312766125 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.683496125 seconds)
    (267/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.940100218 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.888598536 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.322625796 seconds)
    (270/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.476958621 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.680809154 seconds)
    (272/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.84754411 seconds)
    (273/309) benchmarking ("sort", Float64, false)...
    done (took 5.580241661 seconds)
    (274/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.822538132 seconds)
    (275/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.311515351 seconds)
    (276/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.568217937 seconds)
    (277/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.324081458 seconds)
    (278/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.344652407 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.63641002 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.400574643 seconds)
    (281/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.387351508 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.400076458 seconds)
    (283/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.310993405 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.421664205 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.330196727 seconds)
    (286/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.488450172 seconds)
    (287/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.31908111 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.096191834 seconds)
    (289/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.65121532 seconds)
    (290/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.299442501 seconds)
    (291/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.316620259 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.351011032 seconds)
    (293/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.294987177 seconds)
    (294/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.300829923 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.368817095 seconds)
    (296/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.363829776 seconds)
    (297/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.747724078 seconds)
    (298/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.406225621 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.922628039 seconds)
    (300/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.369627496 seconds)
    (301/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.311146579 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.632302368 seconds)
    (303/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.322527873 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.342390581 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.330757211 seconds)
    (306/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.646855007 seconds)
    (307/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.3123311 seconds)
    (308/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.313572086 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.379750841 seconds)
  done (took 901.576723984 seconds)
done (took 902.812812477 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.340723292 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.334461804 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.315702648 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.339851321 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.429074653 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.346237365 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.327122096 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.317953381 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.365410977 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.366485011 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.316640242 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.344190852 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.317492985 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.317611529 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.317377087 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.330536856 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.261539736 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.321260607 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.335309178 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.327972481 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.335160038 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.316161687 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.368396095 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.345600205 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.321937301 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.321141709 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.32255594 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.337163907 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.430054212 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.320584164 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.319867501 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.329880776 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.262928643 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.317670609 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.314883227 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.336357293 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.330859708 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.326611585 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.321170662 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.350729762 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.63516817 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.318722409 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.319078472 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.318251826 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.319376964 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.32394936 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.319915768 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.326129411 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.331652747 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.33388248 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.641296496 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.333952951 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.323346565 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.320003513 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.331456932 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.319783788 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.324958307 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.337151116 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.339912406 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.335450318 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.260928543 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.324067674 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.323302682 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.33775365 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.329432243 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.686837131 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.317904931 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.324987725 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.636973985 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.327713271 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.687265489 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.32873131 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.322586445 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.333338253 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.354213806 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.271226624 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.316496577 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.320171856 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.328366746 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.319986868 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.330783285 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.333711899 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.326646606 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.323247466 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.335854518 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.350222724 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.330818601 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.322984057 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.330551454 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.339809401 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.328736703 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.332853427 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.323709535 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.316050355 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.331034282 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.324896503 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.326713951 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.323518721 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.325518763 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.332799397 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.636188685 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.339056044 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.319756977 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.318568853 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.322868645 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.336954725 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.64205195 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.322283714 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.343373519 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.370815549 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.324150918 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.269079491 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.325770504 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.338672114 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.333965105 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.32681271 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.319135164 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.270465698 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.655579983 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.336663346 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.325082039 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.323550062 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.339680599 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.327225325 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.321539641 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.275531647 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.325370605 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.336856117 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.446596254 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.334191516 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.355080624 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.323158016 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.327397965 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.350689557 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.339132961 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.355294004 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.32616446 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.338244792 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.342027526 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.321104473 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.335199837 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.335185346 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.324509074 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.331341885 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.318504757 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.351592547 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.335074584 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.336964411 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.348168653 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.445780168 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.321379367 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.270310397 seconds)
done (took 221.991131325 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.388991528 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.32381401 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.419907885 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.319195633 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.425018749 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.422778177 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.317833166 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.318194798 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.319045577 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.708909114 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.317968496 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.318040222 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.318236195 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.319102616 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.408345005 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.32046895 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.318606421 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.670379234 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.322477878 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.397467056 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.323632924 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.319145782 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.321333571 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.707151876 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.321018228 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.328733024 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.397402432 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.321969091 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.674241718 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.326668423 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.323768254 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.674914568 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.417485812 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.337470195 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.332850707 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.328706981 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.42634813 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.336918514 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.407921714 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.407011819 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.420954164 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.361366014 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.328049265 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.320480184 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.32620966 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.324452924 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.321748568 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.349026501 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.323093903 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.319943615 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.673093852 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.333326135 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.330393454 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.319722314 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.320661751 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.343744387 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.321528704 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.324948819 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.417698822 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.324481211 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.392398981 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.711067551 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.711152126 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.323728213 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.323777249 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.320662917 seconds)
  done (took 147.854328529 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.395801411 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.401256201 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.43740517 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.330235853 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.380966629 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.440928706 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.330931249 seconds)
  done (took 10.975199855 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.336834505 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.325162384 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.379461201 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.37930554 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.325391703 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.477924299 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.323424176 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.342139269 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.32107151 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.38306104 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.325694215 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.326188239 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.33231498 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.330361536 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.379027691 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.341733885 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.444254909 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.331725079 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.32646419 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.486613159 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.322335518 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.331623187 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.38237135 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.341343295 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.326245946 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.337637715 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.895857044 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.327421281 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.322136963 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.326472168 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.324905146 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.369600646 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.327008592 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.327946277 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.324264787 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.447154472 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.326336405 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.323464484 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.327805565 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.32961678 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.325348595 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.326126424 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.327652595 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.323765149 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.326634451 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.354537312 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.326480396 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.326023797 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.328328021 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.327747729 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.38258506 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.327837042 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.324557056 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.325826755 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.388734125 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.333187096 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.328314204 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.324634844 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.328613937 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.324749325 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.489010151 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.381046115 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.327792843 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.380214278 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.32800496 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.328465725 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.328369183 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.328810799 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.387446927 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.327648492 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.381576479 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.326515396 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.487634982 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.355281751 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.328503692 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.335508504 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.334627243 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.328775052 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.327639074 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.338107586 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.326390517 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.335199834 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.339419265 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.324770672 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.325532694 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.436447386 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.44206395 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.324945012 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.345950295 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.33851663 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.32737658 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.387288842 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.32797553 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.327547393 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.385560423 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.44832143 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.387083096 seconds)
  done (took 152.78254014 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.339931866 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.341432645 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.333352892 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.349403869 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.333861979 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.333883472 seconds)
  done (took 9.292258604 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.336824329 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.330778455 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.329201102 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.329063997 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.329561463 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.329263605 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.3299416 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.336676379 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.333749866 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.329763666 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.330694916 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.33085049 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.330790145 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.32896912 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.329710116 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.331479614 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.332297536 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.327799912 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.331318869 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.328740405 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.430077011 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.330555945 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.331093464 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.336014492 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.334355415 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.33159528 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.343093626 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.332442183 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.331478317 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.343932805 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.333914827 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.331859873 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.338231641 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.343810804 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.334129564 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.338874407 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.335095807 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.332453082 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.327538046 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.332800588 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.332779469 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.331639945 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.331468442 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.331053231 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.339025655 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.341538374 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.336620159 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.343774348 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.333721973 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.331855868 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.332506753 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.331489867 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.334381042 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.33304173 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.338664182 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.340988232 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.33567127 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.332557184 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.332694655 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.337059026 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.333584699 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.332752 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.338924212 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.33646649 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.340410767 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.332731439 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.338861663 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.33753296 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.33298292 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.33242552 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.332606321 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.329736247 seconds)
  done (took 98.395507614 seconds)
done (took 420.553336577 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.506245205 seconds)
  done (took 7.77051894 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.348846806 seconds)
  done (took 7.615353354 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.782437961 seconds)
  done (took 20.052429709 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.361252624 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.426936902 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.336121922 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.331230683 seconds)
  done (took 26.722363511 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.50232005 seconds)
  done (took 7.76594713 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.334562652 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.323598421 seconds)
  done (took 13.921371375 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.759607044 seconds)
  done (took 8.024860893 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.191900696 seconds)
  done (took 8.458557019 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.342647255 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.335282321 seconds)
  done (took 13.954020118 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.315951778 seconds)
  done (took 7.583490759 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.05330589 seconds)
  done (took 8.318177158 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.340153788 seconds)
  done (took 7.607852792 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.379190678 seconds)
  done (took 7.647020632 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.688342545 seconds)
  done (took 8.954469867 seconds)
done (took 155.66059197 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.331276545 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.330730749 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.332038658 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.329105268 seconds)
  done (took 26.590012426 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.365916018 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.367495884 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.368485874 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.376726642 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.369860828 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.36535024 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.359324333 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.360001991 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.376456265 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.369615069 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.369061066 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.370004823 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.36806863 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.360327111 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.370501846 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.36892636 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.378304623 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.369839282 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.36077728 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.370060035 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.334749673 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.378398569 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.37161854 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.335170615 seconds)
  done (took 34.052389722 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.536753953 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.411577184 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.493332409 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.393360021 seconds)
  done (took 7.101396742 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.387002185 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.38690566 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.40074349 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.437612088 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.480421479 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.398436447 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.365610946 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.357092981 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.343997466 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.388805793 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.464487402 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.406131275 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.471354686 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.337277242 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.519613439 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.335642642 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.33493897 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.38885041 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.436730631 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.453168433 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.33529924 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.385993888 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.390167641 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.404388187 seconds)
  done (took 34.878798374 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.335995026 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.341390279 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.340677702 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.335071345 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.335443374 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.334278879 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.342808633 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.337070837 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.355081937 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.335833043 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.334078308 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.33533047 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.334561372 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.334015973 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.333757037 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.347398872 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.347569492 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.335089697 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.338415555 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.339163331 seconds)
  done (took 28.042856826 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.334882039 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.275921378 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.685042849 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.590849019 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.33491446 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.332363254 seconds)
  done (took 28.824441107 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.406821355 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.527066846 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.340337244 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.669742384 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.746925537 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.341241297 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.342535452 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.560298394 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.841563026 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.843849997 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.395396777 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.402566196 seconds)
  done (took 19.688075052 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.337478697 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.335696458 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.344286145 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.352220417 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.396598801 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.344854804 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.348947592 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.335600864 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.393744829 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.396128803 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.346185096 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.396228286 seconds)
  done (took 37.599220063 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.42084068 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.376048406 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.152797811 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.132873259 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.71125873 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.540795177 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.103859111 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.787931427 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.3336398 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.605245776 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.340260374 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.422996196 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.58779242 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.34062354 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.333361782 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.285443291 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.557674714 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.813375636 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.33488597 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.166771328 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.358048775 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.344246938 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.33139341 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.363194802 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.545383753 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.461512555 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.595593784 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.334583165 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.598311135 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.344138389 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344737945 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.33485023 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.607340544 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961567472 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425476995 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.343463605 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.108070058 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.047183231 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.325633508 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.171505589 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.083699803 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.337793954 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.343249719 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.334833931 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.26961895 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.341817948 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.799156298 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.338312493 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.047416087 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.334678839 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.345101652 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.430099263 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.339184977 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.150722003 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.419915661 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.334082821 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.334119131 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.346940282 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.904296156 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.665426821 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.336860596 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.270207934 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.791532206 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.164650511 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.953632228 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.436667076 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.338785869 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.339478849 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.27134336 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.263984223 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.354162181 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483394994 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.353962867 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.985948703 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.047823836 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.324432022 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.281160303 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.86594162 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.347183198 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.271389549 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.564516123 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.335965203 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.27127109 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.279900097 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.270283836 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.999225686 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.343504713 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.65544372 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.347752053 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.790260543 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.346242328 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355386266 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359036446 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.559712941 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.22127472 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.336035529 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.090152996 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49430117 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.354577551 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.795182001 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.268412082 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.337675252 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.591914764 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.54843787 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.344384293 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.30598058 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.545834115 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.350605526 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.354049935 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.34122671 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.350296373 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.914096284 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.349296178 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.66997645 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.354936585 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.74987577 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035822607 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.339988295 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.441443871 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.342473635 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.573646325 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.072168004 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.335005518 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420643828 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.340479818 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.340466147 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.275192328 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.854539368 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.339038099 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.338942437 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.349393028 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.350129318 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.341923674 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.288023752 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.345407999 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.338381468 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.342998134 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.562874329 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.339040355 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.614285753 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.274166337 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.488195354 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.431525386 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.558337494 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.478472636 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.33941154 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.597330266 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.347007903 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.340240307 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.349412037 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359147238 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.438433345 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.361921664 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.338267075 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.594678786 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.344584511 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.344364746 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.272793916 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.344363493 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.349352816 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.345055038 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.247245455 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.908942429 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328697935 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.348561893 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.230371276 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.354273328 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.40488787 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.345950164 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.350203563 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.030208414 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.234010523 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.344237885 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.339707572 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.563860247 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.351458433 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.186250895 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.419273538 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.54562374 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.916384672 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.354659696 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.277392611 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.053325686 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.032520459 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.341479668 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.276998041 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.339885397 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35104304 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.352572417 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.923722514 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.919894999 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.34222453 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.184092095 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.346893608 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.352504085 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.345070429 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.342880557 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.006266344 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.68379154 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.345665058 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.35180746 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484274755 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.35744673 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.276983819 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.345341418 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.349098054 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.34223289 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.343057499 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37522175 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.189549586 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.827798097 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.597511255 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.106692355 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.349718824 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.285679932 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.374167236 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.3431256 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.162673608 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359200763 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.34395691 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366839587 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.353528504 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.197333153 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.016131488 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.910346825 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.053366234 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870045881 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.268088074 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.342817442 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.345865435 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.803527249 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.274884574 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.908908291 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.522666943 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.802454882 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.288106536 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.550704519 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.478944561 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.059056542 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.354183906 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.57191862 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.26803168 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.171650415 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.370878211 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.554938262 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379044966 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.354412209 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.272241049 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.629763154 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.609730918 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.112455214 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.423160253 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.805057695 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.162865054 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.361000056 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.350467104 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.602536226 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.506723019 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.059528624 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.516539256 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.358718503 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.357457252 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.826918264 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.350966558 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.57044045 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964872884 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.345088762 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.555092806 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.282616384 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.35687943 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.355791083 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.34673326 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.530985403 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.347972129 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.594722531 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.35690825 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.279820168 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.360151546 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889924292 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.199661229 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.352368011 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.345174256 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.044908723 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.351095866 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.612346947 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.354496901 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.997196997 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.35181743 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.283015952 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.281458228 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.040554133 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.353972769 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324060918 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.813545608 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.77767959 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.41167208 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.369786563 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.192620755 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.601285035 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.362810323 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.926518785 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.571661139 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.213672676 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365107028 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.447796653 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.211215561 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.348140183 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.347985488 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.584870985 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.256262567 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.568391479 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.185946721 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.249650144 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.351129513 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.556831354 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.347401829 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.355900394 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.580702961 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.057167842 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.357810281 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.051118482 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371345485 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.354733695 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.264637966 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.801659401 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.362840359 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.426943464 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.357972024 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.358811151 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.359714746 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.51311919 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.351942127 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.350831153 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.363375227 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.442831961 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.712002614 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.008052491 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.353266267 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.941895049 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.067104033 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.937417215 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.361662982 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.350350823 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.349468792 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.284700101 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.49459477 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.576710327 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.623983449 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479493207 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.860696946 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372196967 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.212938253 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.369965095 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.562161904 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.624392113 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.243732881 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353491129 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.361207735 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.349679059 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.361423816 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.561440782 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.829165349 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.888586941 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.467284277 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.359801152 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.806152948 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.621767371 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.349870469 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.352316899 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.941689106 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.370371129 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.625197046 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.352633847 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359663137 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.499085183 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.360224491 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981362528 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.359645018 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.506298599 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.123126439 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.235243183 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.606846738 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.772069878 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.361577201 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.934452312 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.047751984 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.616283814 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.417613006 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.362875367 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.457720487 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.499389926 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.35880358 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.352823401 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.351296481 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.196856138 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.061770906 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.361409882 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.94254176 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.614275908 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.34816388 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.35895892 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376050747 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.360627093 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.57451569 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.023554626 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.574703899 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.36098332 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.358865279 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.168996782 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.94249582 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.363950289 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.285908601 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.354506703 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.580980931 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.588959648 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.372779833 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.803881779 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.064410986 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.903156004 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.323925777 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375197568 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.362792859 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.057320934 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.944035814 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.019450127 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.83463014 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.909598697 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.364038032 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.627228453 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.357393606 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.360012701 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.62923099 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.356284482 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.365114289 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.364002677 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.934752499 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.077732131 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.364398694 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.232944417 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.290992238 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.696459394 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.067640065 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.287346978 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.361739356 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.53277075 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.352858108 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483239314 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.364117251 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.359919376 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.354152019 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.105051684 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.646770821 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.3578717 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.344068774 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.265553646 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.369962914 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366516768 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.622166036 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.360118593 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.02983524 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.707343319 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.608582868 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.355970807 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.341018281 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.359461012 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355394612 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.343677731 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.553729545 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.932352908 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.893819661 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.356156229 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.366613243 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.359792389 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.573133299 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.568527838 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.356405301 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.380799336 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363374519 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.373031843 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.260414262 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.865186136 seconds)
  done (took 1594.645184152 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.382426025 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.37376417 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.378669188 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.401632617 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.36768857 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.382303633 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.428530824 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.368707292 seconds)
  done (took 52.379946374 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.359393431 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.575167297 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.391191188 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.363179935 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.372945019 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.374270386 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.778561283 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.365381794 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.370061334 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.372621716 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.366693877 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.365534531 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.956045282 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.368679684 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.370945589 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.354747981 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.371433502 seconds)
  done (took 65.771578386 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.363444971 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.727005062 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.450385104 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.358251602 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.19406506 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.360191527 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.791998852 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.421836502 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.360462614 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.505441803 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.006038947 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.386542156 seconds)
  done (took 84.223468894 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.371082847 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.37066904 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.370684508 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.368195404 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.369998882 seconds)
  done (took 8.146297699 seconds)
done (took 2023.211241622 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.610935603 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.02104593 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.953074669 seconds)
  done (took 5.271915912 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.5097998 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.560836618 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.677931901 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.685425166 seconds)
  done (took 7.728245701 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.639580129 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.744437125 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.543174149 seconds)
  done (took 6.222960141 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.676856876 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.374629359 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.47578227 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.357809494 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.357418041 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.356723325 seconds)
  done (took 20.368419705 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.361169282 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.364753118 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.360845971 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.363012675 seconds)
  done (took 6.744410777 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.342876493 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.133092759 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.344038439 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.360329846 seconds)
  done (took 18.475525015 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.109446265 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.129877263 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.105695251 seconds)
  done (took 7.64086295 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.371326165 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.205640053 seconds)
  done (took 9.873005549 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.657289228 seconds)
  done (took 2.953144519 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.493556591 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.630281795 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.394163535 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.296737825 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.425168923 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.851291442 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.872884506 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.481213006 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.270248046 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.367125963 seconds)
  done (took 27.378873783 seconds)
done (took 126.091485844 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.964208738 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.742646323 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.570747025 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.930428231 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.726907413 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.570423836 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.570419639 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.893218255 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.477324837 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.429004321 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.973810399 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.713000294 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.52063903 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.745468037 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.522043179 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.371972588 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.5898426 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.992554559 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.606463693 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.805394016 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.578360821 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.560299974 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.79686576 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.609925954 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.585057376 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.516185604 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.13123903 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.597968838 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.776983011 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.17701992 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.516777126 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.972871185 seconds)
  done (took 188.83406932 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.370477995 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.366028364 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.372159179 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.374560705 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.364454677 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.3628528 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.376620216 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.3810715 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.364605982 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.37814353 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.365420442 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.389084972 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.363869335 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.365299298 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.383086585 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.373473006 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.371830566 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.373003092 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.367822919 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.381161163 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.367474172 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.367176639 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.368649734 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.381388743 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.365907844 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.368174622 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.367931503 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.373064827 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.367340564 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.36665275 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.37944249 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.367305439 seconds)
  done (took 205.18219582 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.367481963 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.374154452 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.369398427 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.378401423 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.368193554 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.368585994 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.367437615 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.366983419 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.367524491 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.367738823 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.380752974 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.367417803 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.369600777 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.364087462 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.366228498 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.366298091 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.366130124 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.389830549 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.36923956 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.369890532 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.381399857 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.382371514 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.367582348 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.37735535 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.369119282 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.367818301 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.377623065 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.375434953 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.372167858 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.368900834 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.374047617 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.367370168 seconds)
  done (took 205.18822958 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.56548025 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.369832858 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.370959791 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.326843211 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.37229547 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.369102983 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.366544211 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.567492923 seconds)
  done (took 14.60750144 seconds)
done (took 615.10667328 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.554668756 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.275183792 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.55983951 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.39100992 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.089547353 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.39516941 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.391412628 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.548541598 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.282372958 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.55095812 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.592046779 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.392633119 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.709196216 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.38770541 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.626746982 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.478596701 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.24254768 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.333671136 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.691569423 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.882521816 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.633249734 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.766637184 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.544445209 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.288818261 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.725699424 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.772459872 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.024488211 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.236080901 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.391139282 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.695158958 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.923191252 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.271738472 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.448089785 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.430537941 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.481455877 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.464233991 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.257064641 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.430916236 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.569646751 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.542818738 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.866079386 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.103835297 seconds)
  done (took 91.54711924 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.360595503 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.362417368 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.360408302 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.360014512 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.362149222 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.361490497 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.359862388 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.360626441 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.360399224 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.360343 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.361246499 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.362501067 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.359296153 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.361926514 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.362649367 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.362636399 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.362747949 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.363189529 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.359278834 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.362296885 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.362879093 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.36128988 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.363224308 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.361314992 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.362112286 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.362000483 seconds)
  done (took 36.702988308 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.374282563 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.610198027 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.775496442 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.385004994 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.381086285 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.383208642 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.452381079 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.373190515 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.385740553 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.384488211 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.528706546 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.377250505 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.412595719 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.784487496 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.383812872 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.376328308 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.375305216 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.380237072 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.611625393 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.38875797 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.454090568 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.375236859 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.452743271 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.389713835 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.38377763 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.38128953 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.384985942 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.871161093 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.383538519 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.530963067 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.094044869 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.448241875 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.820035796 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.792318072 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.09266058 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.37720467 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.376924105 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.536743083 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.383826482 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.380966026 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.452726798 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.380961851 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.789199972 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.992575498 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.398172332 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.379837751 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.890736442 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.535803136 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.609947182 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.391898511 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.807835241 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.386197984 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.380339386 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.38466667 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.609591901 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.392693896 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.386646761 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.89964201 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.388678796 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.455421822 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.379223759 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.384929386 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.62002075 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.385695387 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.6101629 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.387056023 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.393305596 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.382771127 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.80137623 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.387684094 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.010518931 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.400063171 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.378274941 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.534408509 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.607668215 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.923658343 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.387541748 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.625149012 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.836506147 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.453324342 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.386492344 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.862390924 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.458152145 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.388547125 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.379938387 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.383001638 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.381119841 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.425085088 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.455235486 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.942628638 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.005603163 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.913217836 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.458675645 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.399120346 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.384282665 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.900088971 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.382059019 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.380821561 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.785197882 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.011814105 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.399140296 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.395651722 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.99506696 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.400435993 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.457391486 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.387813064 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.803792831 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.385720381 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.424467407 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.37897658 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.39207105 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.388915211 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.457139685 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.388331961 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.381127064 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.986262966 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.556452337 seconds)
  done (took 180.408296787 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.381393953 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.376885449 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.379306127 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.378704225 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.379630528 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.384395071 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.381455844 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.378224071 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.387481069 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.380667101 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.380806072 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.379602533 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.38206141 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.382357734 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.386186161 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.386589162 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.033648202 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.379738065 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.379019891 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.378705707 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.15749366 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.380169311 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.380327634 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.376428304 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.381859683 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.381465475 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.394332657 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.380179439 seconds)
  done (took 153.420145526 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.380963869 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.906423175 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.382991131 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.506271098 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.397575887 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.376265997 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.502640732 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.436440416 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.385682014 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.376917049 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.378217081 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.662565381 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.379412409 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.854379931 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.554524047 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.498297619 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.860649347 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.378304969 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.373669273 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.375033224 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.503082359 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.382586593 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.661939972 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.905036979 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.379616817 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.905436924 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.366051774 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.37875413 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.383703219 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.907482694 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.376341744 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.658108258 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.451549694 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.437854383 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.907686706 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.86413863 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.860156192 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.512103718 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.384540829 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.375172892 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.375005596 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.365898294 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.90683476 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.380711442 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.384865689 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.896578704 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.392270321 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.378235328 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.388865161 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.377804456 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.438732665 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.439184119 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.665890569 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.915550007 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.450798005 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.398672442 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.504168051 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.735387213 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.381837571 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.866550669 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.368986571 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.907920839 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.382371837 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.368380199 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.380070613 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.384669465 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.516384044 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.500112053 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.868721265 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.389180338 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.868718744 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.517344175 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.377286619 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.380606625 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.382359157 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.915509151 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.868742464 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.515430983 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.507690949 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.562607676 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.369718966 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.385654634 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.370768045 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.456074126 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.37958795 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.912468781 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.869029196 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.383723977 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.382494768 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.383204771 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.3830294 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.545967435 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.916850128 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.459252401 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.858102058 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.684915645 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.669764063 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.382837555 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.433907881 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.380083949 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.67318332 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.384673885 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.434563849 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.798984572 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.672120573 seconds)
  done (took 163.06250893 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.60940294 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.505749402 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.465501041 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.492590697 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.893972557 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.92331475 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.493557883 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.504181921 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.481794628 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.618430054 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.461187048 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.471084211 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.556854637 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.457041658 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.05697207 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.454382309 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.469538535 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.507844236 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.486998979 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.336941212 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.971138142 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.659382163 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.551097489 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.378836922 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.474136566 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.112707819 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.908713 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.878107205 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.545693874 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.562889137 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.885449873 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.441471242 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.294193033 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.023331065 seconds)
  done (took 65.250030428 seconds)
done (took 691.692115873 seconds)
SAVING RESULT...
DONE!
