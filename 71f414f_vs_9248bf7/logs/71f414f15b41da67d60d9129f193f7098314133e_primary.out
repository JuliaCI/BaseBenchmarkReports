cset: moving following pidspec: 2446
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.258676772 seconds)
loading group "string"... done (took 0.591873263 seconds)
loading group "linalg"... done (took 7.233517155 seconds)
loading group "parallel"... done (took 0.166532413 seconds)
loading group "find"... done (took 1.130165596 seconds)
loading group "tuple"... done (took 2.003772074 seconds)
loading group "dates"... done (took 1.281110429 seconds)
loading group "micro"... done (took 0.23798633 seconds)
loading group "io"... done (took 0.964087095 seconds)
loading group "scalar"... done (took 38.763385791 seconds)
loading group "sparse"... done (took 12.427347393 seconds)
loading group "broadcast"... done (took 0.975523011 seconds)
loading group "union"... done (took 13.179943227 seconds)
loading group "simd"... done (took 4.465224299 seconds)
loading group "random"... done (took 9.032788928 seconds)
loading group "problem"... done (took 1.944359944 seconds)
loading group "array"... done (took 21.304425083 seconds)
loading group "misc"... done (took 1.933121125 seconds)
loading group "sort"... done (took 3.232355618 seconds)
loading group "collection"... done (took 18.103123014 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.53575273 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.142560124 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.117536308 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.139635304 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.184349509 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.13143339 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.142179449 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084376125 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.044167222 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.165938929 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.139939534 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.479495502 seconds)
done (took 5.066799863 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.200755305 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086346435 seconds)
    (2/2) benchmarking "String"...
    done (took 0.096269732 seconds)
  done (took 0.884159515 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065967278 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.126047738 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.080302058 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067976475 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066500627 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.081015564 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066498261 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066322454 seconds)
  done (took 1.264556851 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074122698 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.0680416 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.084171246 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067822469 seconds)
  done (took 1.003555423 seconds)
done (took 4.137359326 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.902495734 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.234644662 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.189462142 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.455379225 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.148212821 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.188203743 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.670883264 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.335960633 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.21430504 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099378935 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104621139 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.380626218 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106789784 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.670146235 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077604864 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.106045818 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.157802267 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.426844122 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081830748 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082475201 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.103741974 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.144669017 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.101435348 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.076904606 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.170587904 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.069511876 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.148656411 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.095040859 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.068232236 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.245205845 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.190001013 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.679884711 seconds)
  done (took 10.471349244 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.09767063 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.117074848 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068879256 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140076363 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.101635584 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.086113243 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071560944 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.083477885 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.091257317 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.158593877 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.114624725 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.106060335 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.081577614 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069215425 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.101745312 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.211848496 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.107028076 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.08491635 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.086111765 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075303323 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.121788692 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.082988783 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.093904559 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.078440006 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.151188789 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.194309096 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111348305 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.111171613 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069762116 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081065375 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.131546206 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.141776753 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065906438 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081344442 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.138761909 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.110015015 seconds)
  done (took 4.539934547 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.03329512 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.085821368 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.129164885 seconds)
    (3/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.139877578 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.152512512 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067493419 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.127280022 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.080243892 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098955056 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.233391953 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.087613718 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.476246635 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128018908 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.08702646 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067203757 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.085776902 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067203758 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.515868156 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.14584122 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101093835 seconds)
    (20/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.111342691 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083140195 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.091718165 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.086959028 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067940929 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065721277 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085723622 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.102435947 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.080986187 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.298495746 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.144049976 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085894394 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.199162222 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.108607725 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068685645 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118159287 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.178914221 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094812283 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.122485538 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081650077 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066798415 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.169637753 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.073230584 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.083497579 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.087870005 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120157838 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.120116933 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.068815093 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.082827153 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.181432717 seconds)
    (50/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065350618 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.08183744 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.082976715 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.885788499 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.165624503 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.090368561 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065840535 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.284980032 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.083875743 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084000631 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064673142 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.254468011 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.152109182 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.066966852 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.083270957 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066281085 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.067489676 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.382347246 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.06784126 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.719037026 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071016536 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.07674766 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.08509525 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066939625 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08886154 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072489359 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.101066686 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066488227 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.067377046 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.083021108 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065494217 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.083569333 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.085618716 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.204288874 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.084052483 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067179112 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064430083 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.102931157 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110259258 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.069763273 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065099847 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117099655 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069256089 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.084112156 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.104632851 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085374889 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.099575882 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.070314791 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.129015684 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067117087 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.13487863 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066537664 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.111473193 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.072414958 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.1142322 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.093945599 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068025276 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.154512473 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064710832 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.082212305 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.066844516 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.064760972 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.084829969 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068467167 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.098905552 seconds)
  done (took 20.844644576 seconds)
done (took 37.598542127 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.292012728 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.091987301 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.094249141 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074454394 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.092061489 seconds)
  done (took 1.43277493 seconds)
done (took 2.197884695 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.120376721 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116687812 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063627935 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112644711 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063460315 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.116130626 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.114134025 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081198999 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115559075 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064239673 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112687662 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064070523 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063438356 seconds)
  done (took 1.995949435 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082986658 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084513856 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084891192 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081484869 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078536413 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082571268 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080302811 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105010242 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080289322 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088646596 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064443774 seconds)
  done (took 1.673091437 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082670759 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083823042 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085079131 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08136339 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07877805 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082126487 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080927356 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102124172 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08046325 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08896315 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063829598 seconds)
  done (took 1.674193132 seconds)
done (took 6.094877427 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079065158 seconds)
  done (took 0.834492075 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.70319899 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.52767446 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.083444325 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.134319392 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.223479632 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.155125222 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.443486222 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.109730247 seconds)
  done (took 10.311493724 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.102764904 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.08840203 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.07030932 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.086406673 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072744611 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.087729484 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072016502 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069809872 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.086971381 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068765659 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.085636094 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069294498 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.086186253 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071345357 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069031052 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.083573779 seconds)
  done (took 2.095855315 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094114518 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091985243 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.091293642 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075937676 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.089127265 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073717821 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.091962657 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074924183 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.086396725 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072954775 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.091200534 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074687021 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.087880102 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066403403 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.090288717 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076903849 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087387458 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076001282 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.091004587 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076810694 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.091433598 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066303127 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087965098 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075764132 seconds)
  done (took 2.84875706 seconds)
done (took 16.853614142 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.131685134 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.076225831 seconds)
  done (took 0.975116557 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081910155 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.097695976 seconds)
  done (took 0.949403955 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083123806 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.080408831 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090307812 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.093493103 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.067149181 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.081433867 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.103234135 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066559344 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.081701062 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066788303 seconds)
  done (took 1.583110206 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069169256 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.092925699 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071299569 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.096910218 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074306769 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.080021303 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073065773 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.083846999 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.07903786 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078794748 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.07176882 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.099575204 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071461381 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.100445112 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073488479 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.084657685 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.087670129 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068872782 seconds)
  done (took 2.231301788 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066411934 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067568226 seconds)
  done (took 0.907615358 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067532096 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064292698 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081611854 seconds)
    (4/7) benchmarking "year"...
    done (took 0.06697319 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.079392161 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063544678 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.079108775 seconds)
  done (took 1.276122596 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.401159209 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.108880088 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.24359744 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.087078694 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.103297475 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.263529998 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.082788653 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071041526 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.08755565 seconds)
  done (took 2.25877905 seconds)
done (took 10.955882196 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079199185 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085720938 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.109879458 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.419991635 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106231633 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066076352 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.132055412 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.220781923 seconds)
done (took 1.991421431 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.124831378 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.609458202 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.399864526 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.212536278 seconds)
  done (took 1.999195393 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.374472705 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.091797786 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.073759376 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.0664471 seconds)
  done (took 1.39040149 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066136409 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070252151 seconds)
  done (took 0.917366119 seconds)
done (took 5.209403515 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06681902 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.100946499 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066514683 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.064701996 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.083373209 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.063847167 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.06507561 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.083467163 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066650209 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.066483952 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.081531607 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069682194 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079182072 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064355719 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066816682 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082360656 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064150723 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064382687 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.079615769 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064560766 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.066108447 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08208688 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063964638 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063287974 seconds)
  done (took 2.533590446 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085785585 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.082702403 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.07229723 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088281698 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070741559 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.088009146 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071974666 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067427441 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087510489 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069497729 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085694637 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071120055 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.085484889 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.074295891 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084143178 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070903094 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088604071 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067750701 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069063394 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.086298225 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072166558 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082236457 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070731698 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086925097 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070765578 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085732194 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068784633 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.082849619 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072186271 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.086617094 seconds)
  done (took 3.129511777 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.071113194 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064393704 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079818832 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070436568 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064128308 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.080353755 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064517985 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.080090469 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064826959 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064708256 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081329519 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063361906 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064715995 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.081007787 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064864796 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066855969 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.096087247 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064421564 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.080915217 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064834266 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067669834 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.079648248 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.06469957 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079733776 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063994172 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064025288 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.079766797 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.064307973 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065373247 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079862832 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066954862 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067205212 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.079743367 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070798254 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.082896022 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063522266 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067634402 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.079362611 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064577671 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063612741 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.079067208 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064133857 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063243269 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.086331779 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.064521474 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.080792045 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063657794 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.065372719 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.080407495 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.067293786 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.063342712 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.08096644 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.066259684 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.080836478 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067616376 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063698979 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.080886901 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064533772 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.080053374 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063923747 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064103501 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.079381956 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067245201 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065126787 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.095576309 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071151784 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.064393011 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.081819645 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.065874339 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081955939 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065834163 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077677812 seconds)
  done (took 5.936844714 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.118036581 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.091393205 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082657809 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066426279 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078950719 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064194039 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068834338 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08024298 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06660229 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086126601 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064521482 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065683329 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081459464 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076748195 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080964032 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065938104 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.08614028 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062558502 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065483151 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084538674 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06505931 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.083823233 seconds)
  done (took 2.475736808 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.186612161 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.086945391 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.10998601 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090552769 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084653809 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073840937 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070076023 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086555355 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070893949 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084580449 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070015517 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086419104 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068782131 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085036414 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069587898 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084803016 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070697473 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084183245 seconds)
  done (took 2.35226126 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.07826549 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066873227 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.106480888 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066964318 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.083622192 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069056333 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088646298 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075394463 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084791252 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067468815 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.091041268 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069788416 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.085222338 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066703415 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069383824 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082714931 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068867844 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083067598 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075390327 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087449339 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072110264 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091900401 seconds)
  done (took 2.520867054 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081542556 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068075718 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.101306993 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08525993 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061844161 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064981525 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.089106756 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067256975 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.08958606 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068386812 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066874412 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.081072184 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072124906 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.0826894 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072249791 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082680074 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068528581 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067374123 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.084321576 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062854263 seconds)
  done (took 2.309400967 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086924408 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083854704 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.177734149 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092566555 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068122594 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.084231162 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076492898 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.083450815 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068136924 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.107925124 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068252107 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.083601049 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075893481 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.089054699 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067730814 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091476765 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076540161 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.09225632 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067216024 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084030321 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108243977 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067866045 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092300425 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.0678608 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083534736 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068109941 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068095258 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088561966 seconds)
  done (took 3.165914301 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06669416 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066339651 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.080150819 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063947991 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.06426046 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.080301472 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064180524 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064518565 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082716368 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064563483 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066506096 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.082023395 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066477905 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.08233425 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066939087 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066886619 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082692667 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.064031586 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064935024 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08001273 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.067144782 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067117422 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.083257665 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065121436 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079650249 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.067339228 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065228503 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.080274173 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06618357 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064404172 seconds)
  done (took 2.923767417 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076819822 seconds)
    (2/2) benchmarking "in"...
    done (took 0.090868562 seconds)
  done (took 0.970917049 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064558288 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08221713 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080735912 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070150569 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087318179 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067621579 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.090967678 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071161855 seconds)
  done (took 1.414376046 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082231007 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077585586 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.08500949 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078317168 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.093997477 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083626231 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.150293323 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.084408719 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073813634 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.081620323 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079863606 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066718895 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.089187475 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067649 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.089473235 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073452832 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.06539827 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.088737589 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069564171 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.081808968 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068679884 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091955583 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069889379 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064026709 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.08533435 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.075839221 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.094652896 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069209639 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086804284 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.074636527 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073336995 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.078279595 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067496521 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.084619131 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.0654688 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076852868 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099207432 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086390951 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.075752934 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068712456 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.093356865 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063153599 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087972845 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.073801513 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093271102 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.067873698 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.06821482 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.07821153 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065745687 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085483646 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062552534 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066828348 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.077653608 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074362367 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.089786041 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077699571 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.065520334 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.085074367 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070580057 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.087145735 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074189428 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.085438752 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069842443 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066679648 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093157805 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071884772 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092730607 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062999758 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061284306 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.081495053 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077553016 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105757743 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073090009 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.08394113 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068133633 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.080310375 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070641584 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068416538 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088923097 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.073936983 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.083559463 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073148109 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09080118 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067870258 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069401287 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.092443213 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064885589 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.085753864 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064777373 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099419177 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065837282 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.06436079 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.081075916 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077566552 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.086568779 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067248672 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064403758 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090225249 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061297531 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.083735733 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067873891 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08459656 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.077726598 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088541726 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073011401 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.091610461 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074779431 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067268161 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.086672733 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.064321881 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084181086 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066414848 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.07392921 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.07761698 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070804122 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.084262157 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.067381737 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.075898014 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.081544679 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067303272 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090799402 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072975746 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.082447019 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063198515 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070389197 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.083443708 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070511548 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.091470914 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065806956 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061820725 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.079089063 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070818357 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.083486852 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070590988 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088804072 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069347169 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062276492 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.081953028 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071242765 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092790073 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.06802234 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067518683 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.089618737 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068036103 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.082453361 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074019327 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086262056 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066346917 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072965787 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.084572087 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.06278854 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086634028 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070407721 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066081377 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.087135561 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070891972 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.085960432 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.068231663 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065667481 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.090398528 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068325738 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.083362694 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067820274 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.082553515 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077572435 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068588797 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.078944006 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064362087 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.09078381 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065248437 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067300018 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.083486603 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069547562 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.084697349 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065129731 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.06675673 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.086205684 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077989628 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087912452 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068702795 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.08917738 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078991985 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.08457821 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069728634 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066930201 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085471496 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068608394 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.09268161 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072645545 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089281975 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070342958 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.064595038 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089920213 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075050703 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.083977372 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065765248 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066206615 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.086780814 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073045482 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.087462942 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.06887123 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082273718 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06786018 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070111119 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.08683853 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066994632 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.083280514 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071649929 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.066280714 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.091097359 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067633451 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.093750808 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070184886 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.079746126 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07005358 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082395651 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072801264 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062705598 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.082033866 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066081552 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.06841203 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.083099567 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070752323 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.077957372 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073981294 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091307883 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067166615 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066718351 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.083237398 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074374828 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.085187783 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07095955 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070201455 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.089625168 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077621598 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.082890577 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070209837 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.093477103 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.066991694 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061289207 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.088948503 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065837562 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.082752206 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.066092174 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064881114 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08650583 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075762632 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.09048838 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061562606 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.086581245 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065594677 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066740419 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.079933083 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072486688 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.086083115 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068749886 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073218879 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084893659 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067526981 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.087176873 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066510614 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067993158 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.084894359 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070413111 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.084492847 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070211181 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066025131 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.086747906 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066409295 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082314444 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069623794 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066886036 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.084059913 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072342688 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.083466377 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067052535 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069313579 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.084984168 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068180883 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.084170698 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.06652926 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070100425 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085397887 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067951266 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.086242292 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062426571 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074090953 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.084419854 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074682901 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.084362154 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.06367076 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.088675317 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069906411 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072287059 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.085068321 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068755886 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.085491336 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.067335392 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069544354 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091237914 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065254827 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094638942 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074798811 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085030747 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070186215 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067421591 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.08591333 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066765599 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.085221763 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.068464388 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066932766 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.084457473 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072031062 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.086746502 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.06818106 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068727036 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.085597127 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068362281 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.085777812 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062441424 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066615909 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.083971345 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.067423158 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093729999 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068115074 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.084000735 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.066200521 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068439367 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.082994453 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064406783 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.091611052 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076799713 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.084876504 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074407069 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065813756 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.085673915 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077321525 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.078589064 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065181854 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064843511 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.082447087 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075187087 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.085027271 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.076326712 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.083450968 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066349391 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.064674655 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.084724731 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065814281 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061307864 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.081933921 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070902514 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.083572601 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065758734 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066928561 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.087566183 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068687263 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094031974 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.066474467 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.084761767 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.067369752 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.064351935 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.083730592 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066330455 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069110332 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.086233248 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064862604 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.081653043 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.067358483 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.06799853 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.085661238 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067275189 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.085453645 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07381985 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069653452 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.087424088 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070287054 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.079704526 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070375719 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.083459637 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066257323 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066287941 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.087435151 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070579027 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085295065 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076017919 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.06669192 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084938203 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06781756 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.082292296 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066784485 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066910876 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.084198815 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066789363 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.08529579 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075605452 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.06422549 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.087231975 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067180107 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.084553358 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073988221 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.084477083 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069711838 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074231881 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.084515538 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069273578 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.09184355 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070754338 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087086407 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068706049 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068162804 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090092318 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066419971 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.090691487 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067999804 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067183611 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.086108905 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.06507237 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084457396 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067361542 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06637255 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.090430126 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.068447226 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.083539622 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067014276 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.065336318 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.08566262 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07066219 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091743104 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.07019555 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086840513 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063050788 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.0642898 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085690975 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065208704 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067744984 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.087740474 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073006719 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.086467607 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.06884597 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.083530555 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075986078 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072942489 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.088371477 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065324348 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.088146555 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.068443526 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068892995 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.086035463 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068090858 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085487376 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071409623 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068522948 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.084235325 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074669287 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.088238749 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068621495 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.086541136 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.068328018 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068026362 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.080108777 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069239381 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.086148729 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073204453 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069571257 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084616272 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077942884 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083042245 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068264712 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087633017 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066711529 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071827367 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.080108788 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.069245281 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085282085 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068580347 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.06215539 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.083606566 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065654026 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.069369976 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.084462159 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062674711 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095318967 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.07632232 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.087716873 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06646374 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065813851 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.0803815 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062902519 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.083534078 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068097142 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.06903111 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.094988154 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066882705 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.083834377 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063046277 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067675346 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087824747 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070866042 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.08190387 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062837932 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066183627 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.087422864 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073454753 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083591131 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.06724147 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070184411 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.086764045 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065498984 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088218689 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063618412 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069931307 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097658184 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068062735 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085031717 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073571825 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091839262 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068555482 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.079255324 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.068115198 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070772295 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.084634812 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068179467 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.086080779 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082127351 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087589408 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067410002 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065986665 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.087619644 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067168336 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.093163856 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068783709 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068086411 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.088997588 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068883122 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.093534753 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070339284 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092607826 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070139045 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.08756519 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.066294181 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068343142 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.083150359 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066834278 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067894491 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.085847084 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072930365 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.092420934 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066363814 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095501779 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.07590651 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.086464579 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.064518648 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066147572 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.08416833 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063612247 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.085716381 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064977631 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.065206976 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.082806512 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066078149 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067783583 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091124844 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068008588 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.086063899 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.068185943 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061215919 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.086694966 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070688143 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086208038 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063928199 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.067456198 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.085380821 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.071269315 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087948683 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.06569675 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068495596 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.0867734 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068450597 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.079852592 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073813452 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065641639 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.088207756 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067067349 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08589297 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068647432 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070615682 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.09074324 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068497286 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.087448427 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.077587425 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087132852 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.065248132 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064890106 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.090589421 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.06568229 seconds)
  done (took 46.287629171 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108622212 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.0825492 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.0629439 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080897017 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075584763 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083014863 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062873898 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064122843 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081246047 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066889615 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.080583151 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06294914 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.090253762 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087680308 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09308237 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067708148 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080739554 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063508823 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081233363 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063961712 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090279029 seconds)
  done (took 2.476435496 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075921982 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.089610448 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074131122 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.095155018 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068727683 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.090186241 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074092594 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089942396 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095569095 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068012637 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.09523782 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072094954 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.085703287 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.068690994 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085822543 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072222475 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.095466071 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069208142 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.089969858 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074122031 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089692107 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.083284718 seconds)
  done (took 2.644438269 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067864964 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.06611727 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.086303524 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062188887 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066258893 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.080360508 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.070733755 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.082505831 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.070448487 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065204488 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.083846425 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065923692 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.085879585 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061911515 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066410144 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.082272746 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.132972503 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069957863 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066167922 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.085981672 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062528219 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.087007578 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062727358 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062400628 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.083898494 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071212539 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.086227003 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.065388425 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067042027 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.083570216 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066846866 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.082110728 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.06852795 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.06736407 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.084419596 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066535858 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065962599 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.084655315 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062792389 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.082985959 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068011949 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063097563 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.085589274 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068903004 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064525216 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.082292416 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068428803 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.084052065 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062210472 seconds)
  done (took 4.477249093 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.086335409 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.130302789 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.087285947 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091137653 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.101636443 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.092765053 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.073865725 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.111474121 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064315745 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.084173816 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.083338433 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.101290269 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.085885412 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.072036901 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.069534515 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085248591 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068006677 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084019377 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.071101874 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084455153 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.072485611 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.092268386 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.099853479 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.08176591 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089014351 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065805973 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.083848746 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071351843 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.098443106 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.072165322 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.08920124 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072787988 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.100161805 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.068939287 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084653908 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.070016162 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.101637636 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067215721 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.08736153 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065071469 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087210339 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.071964752 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.091333882 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.083871299 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.085192156 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.0719045 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084881689 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064839813 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.098183369 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.069358705 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.093178029 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.100977351 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071121488 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.066885404 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.090359019 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.100307948 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067687268 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.065331814 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.08900942 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.098202105 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065144434 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070703664 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.10080201 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.086339498 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.074883738 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.099772695 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072723793 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089222034 seconds)
  done (took 6.645580859 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07642588 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.092740738 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083351445 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101321183 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092528441 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.07353342 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.091218514 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.0738738 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.090997687 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079067155 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.091681004 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113849122 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069397078 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.094307579 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074482954 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092161287 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.0739505 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.09178389 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073360162 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.093514113 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.091348136 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081111455 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.09184243 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.100883273 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.104335109 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.086498178 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074566635 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.091858721 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081779164 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.092306459 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.103401868 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074102453 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.091399002 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.100685976 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.085576155 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.09146684 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066179314 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09179925 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.07454827 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.09179024 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06919537 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100184256 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073266426 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.086843833 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07358683 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.091949012 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.099370932 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.085127837 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.095184945 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097252327 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074237299 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.100113053 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073311146 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092117322 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.10019501 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.106602802 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100107997 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099973031 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074305564 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.100380779 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.099989688 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.107970057 seconds)
  done (took 6.346565982 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089000597 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.094157663 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.097213233 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062262714 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065179953 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.089438436 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064575676 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.083367404 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076002379 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.093868136 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077688754 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089453226 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073927568 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096788014 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.089217319 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074472897 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089080749 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071270713 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.093838279 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071364354 seconds)
  done (took 2.497538189 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075992922 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103280064 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067316992 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07260367 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.089021671 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072484815 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.088082897 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070379015 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086046149 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070259689 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095631447 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077253745 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085714488 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073749149 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.094834614 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072941722 seconds)
  done (took 2.155829574 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.078563875 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.096370914 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.082095505 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.085775866 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064884204 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.082532768 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066274913 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062349832 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.082707617 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.081910025 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.08601772 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.069706253 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.085398124 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065548272 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063254491 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.088760911 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063994852 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.083466335 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.067152331 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.100214499 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.078171313 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.084258724 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067542262 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.068139661 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.086661553 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072335807 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.085856762 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064608052 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083797994 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.06823738 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.086068917 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.075156119 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.082806156 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.066350202 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065444058 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083300396 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067389813 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085959379 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070727131 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.066670843 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083906298 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067583699 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085683235 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068487663 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081801573 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.068287569 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.0633648 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091813031 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065976149 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085842439 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067258164 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.088617036 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.068405256 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.076955833 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.09037932 seconds)
  done (took 5.083800667 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081068908 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06943894 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.08243795 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065607508 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.0887854 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069125989 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070223651 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.08784203 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069165332 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083814905 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069185097 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088197715 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069338583 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070898505 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087651692 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070853494 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081786158 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069438443 seconds)
  done (took 2.2394367 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07321135 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067497808 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.09355365 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068210102 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.086127843 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070399788 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062735714 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.085206873 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066268341 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085974096 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068418535 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069165412 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084914606 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.070236913 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085530269 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067394314 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069524277 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084845125 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067884122 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.082090313 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069214838 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065346623 seconds)
  done (took 2.509649072 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.072866107 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.093826408 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.162849674 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.107279594 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.083211991 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.09969064 seconds)
  done (took 1.487566645 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091693619 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099581884 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068777609 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107528686 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075335777 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088810628 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069428972 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087783419 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077867953 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102629657 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068658516 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09788767 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096617025 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077825402 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093044324 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074905855 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088186775 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069615217 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086750718 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106973562 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070164363 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096805872 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070060967 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088045033 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070566617 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09689758 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078786653 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10230152 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088039818 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079001355 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093905573 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069639515 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096849305 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102214348 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070881203 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09655257 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069689571 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106636213 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075256447 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097943071 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070379561 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095098729 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097038175 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075528463 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096704355 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06979115 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093864577 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068771022 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089052271 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113164231 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076366992 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097247409 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093984679 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079369965 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097141562 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114909633 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083303561 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097433762 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094322833 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083538487 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100285718 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074899399 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09733255 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101782245 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074963867 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097721378 seconds)
  done (took 6.652082028 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083434805 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105675706 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069758646 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102353313 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097185496 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070875475 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087779661 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069545078 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089083521 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070226933 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129723556 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070018484 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097806724 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097377818 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069895571 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088062626 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070224697 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097459936 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068993063 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113882234 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088686994 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078133597 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09693098 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096383458 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084063579 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094648807 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069446694 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088307708 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069498083 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088575384 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074906394 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089259449 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096701339 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069161184 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096712272 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070250017 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088938984 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075453399 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088089959 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075708305 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098527168 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106842729 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070306389 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088352731 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083249646 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088581416 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069504511 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088452917 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070280882 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087529603 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082737029 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103581139 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10240042 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096997629 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070459221 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088437015 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070578494 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087909574 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069604706 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094990961 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078316507 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088564941 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114619009 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070007777 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089358704 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077886963 seconds)
  done (took 6.537190559 seconds)
done (took 128.554686301 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.201869476 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.184165526 seconds)
  done (took 1.252410324 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069772764 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.096498309 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.097983337 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129143923 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.086800227 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100822529 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.118982706 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.079815383 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067011492 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086694249 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.067583641 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087811705 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.132219386 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.067510283 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.086190373 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069389493 seconds)
  done (took 2.316328149 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.10266307 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.196198806 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109042459 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06616727 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099747171 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079457425 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.085230585 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.077469717 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.094677431 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.066299172 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.078462738 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096090364 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065481518 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095540146 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075789598 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.098341281 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065604647 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.098452376 seconds)
  done (took 2.526868452 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.104469958 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.141945027 seconds)
  done (took 1.121181484 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.200208613 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.122987025 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.207366996 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.417552129 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.207509387 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.277508453 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.173349738 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.171990393 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.157705999 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.16948133 seconds)
  done (took 2.976440358 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099350396 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.170992321 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.310434347 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.137615622 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.086070689 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.116035662 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.138318195 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.089041965 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.101025172 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.100117396 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081693177 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097689539 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098780998 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.095275689 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.074637824 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.097227208 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.122240625 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.07506725 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076426025 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.096086345 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.118059064 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067232753 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.075510448 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.094654009 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.07808555 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.098398213 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.066429874 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.08605149 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076745488 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.09493827 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079800358 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.114227974 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.097053665 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.131998677 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.082790734 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.132125891 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.098719576 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073176352 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.094833729 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073202031 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.098125877 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078203629 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.104216068 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.077601873 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.086064911 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.07826538 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.086130524 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066995933 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.098712741 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.077371988 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.099420863 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079295801 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.131103968 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.09778769 seconds)
  done (took 6.232252045 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.747871584 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.110756605 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093389897 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.806832683 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089129891 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105898645 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.715007285 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11747024 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.21391427 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.76700101 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.089574205 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.098688011 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.183046754 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.216722864 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.937084159 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.288441325 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.635127645 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.103942155 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108440108 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.132899217 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.140550514 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.179044814 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.151126773 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.408786888 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.075668411 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092335336 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.139235307 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.075045817 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.139140753 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.106312289 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.093535236 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.156552795 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.230679993 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.158995384 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.098744923 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.07041246 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091500612 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.149386871 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.222796472 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.192440461 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.160009666 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068529621 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091169447 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.140984431 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132017969 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06973929 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.141245119 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.152769863 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.169346076 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074422152 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.075103566 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.163195445 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.141038777 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.14423548 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.101188266 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.269956116 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.294507443 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069816932 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12060462 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.105035548 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.218334854 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.104516129 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.202140396 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.140548729 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.171248786 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.09104968 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.764125717 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.14943907 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091668607 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.076283081 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121508338 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074278948 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.162528489 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.124995391 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.384663951 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.142249933 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.09569867 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070318897 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.207929799 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084384581 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091154947 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.142155489 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.076410461 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122878498 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.143808007 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.164327127 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.148496337 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.213588255 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.143942801 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.140924581 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.095655095 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125647249 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.076234535 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.193262944 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.197070859 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.142751801 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.192193578 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.139278098 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.162552597 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.149246779 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077419202 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.151314273 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120368454 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101872442 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.140698064 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.194638171 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.102610991 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.104836041 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073306133 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.161108369 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.104440385 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.108703549 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.140528704 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.149536991 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.455053432 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.149197066 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068789644 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.108782199 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.141420599 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.141997251 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097066343 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.221568414 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123245461 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.148758988 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121849743 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067511087 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121595231 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.140943299 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101525109 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12378079 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.140220331 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098025628 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.218363667 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.171877309 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09871305 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.195600484 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.166089839 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.09435932 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.151198446 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120474069 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.14769654 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.078526046 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.139725674 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098060391 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.753902511 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.16517297 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.100183372 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.0949128 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.166350623 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070534635 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103984704 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.08269878 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.089409439 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.781129646 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.108142942 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.079854801 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.105454798 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07415527 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122331625 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.136413655 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.095686743 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.14028639 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.204536957 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.076324862 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120135892 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.10408886 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.141337144 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.076098146 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.105970614 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.082558677 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.1064955 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.124109556 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072323576 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105546971 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.147773183 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.14221409 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.196847126 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.549976772 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093929736 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.083702285 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.204499094 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069414995 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.268858694 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137831604 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.20093059 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.143862927 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.101600708 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.274899849 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.14454012 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.166794408 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.108144992 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.153334849 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067768169 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.13753095 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.165983495 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.0716887 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096746515 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.14293227 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.146771282 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.142941412 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.969069574 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070961984 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.208413131 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.090057426 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.152871144 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.075402271 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099063469 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.266198721 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071673512 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.147581186 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.142963921 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095032308 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.083460411 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.843321071 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.084049425 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.139690412 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096002242 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.195046819 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.144697448 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.138626035 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.139365106 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096492922 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.14082106 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.191798092 seconds)
  done (took 40.864890235 seconds)
done (took 58.164648209 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.258971746 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.17869657 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.243400484 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.143987229 seconds)
  done (took 1.804276128 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.144200812 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.105136816 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.117268067 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.085446271 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.103309576 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.08572193 seconds)
  done (took 1.545426051 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.405833151 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.269497674 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.231486304 seconds)
  done (took 1.808783469 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.263243655 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.212788979 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.448859636 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.29723994 seconds)
  done (took 2.251310171 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.176086048 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.113789764 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067674905 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.105753033 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.160660167 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.253525371 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.128550863 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.188672938 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.07902109 seconds)
  done (took 2.225546377 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.198975269 seconds)
done (took 10.742622962 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.111015644 seconds)
    (2/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.097626153 seconds)
    (3/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.077167869 seconds)
    (4/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.099026235 seconds)
    (5/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.224367083 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.20303981 seconds)
    (7/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.183243647 seconds)
    (8/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.230407316 seconds)
    (9/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.236180708 seconds)
    (10/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.176648938 seconds)
    (11/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.146951612 seconds)
    (12/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.097719484 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.083611119 seconds)
    (14/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.215800153 seconds)
    (15/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.225532752 seconds)
    (16/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.084089808 seconds)
    (17/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.071297749 seconds)
    (18/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.079695308 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.118506617 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.129161612 seconds)
    (21/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.076576992 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.159076773 seconds)
    (23/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.223612514 seconds)
    (24/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.202929109 seconds)
    (25/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.224144632 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.13135818 seconds)
    (27/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.160486003 seconds)
    (28/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.098257375 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.091155595 seconds)
    (30/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.095260332 seconds)
    (31/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.080839617 seconds)
    (32/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.200465875 seconds)
    (33/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.082942965 seconds)
    (34/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.178211969 seconds)
    (35/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.170940348 seconds)
    (36/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.134487542 seconds)
    (37/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.179454914 seconds)
    (38/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.178007973 seconds)
    (39/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.101514149 seconds)
    (40/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.168666635 seconds)
    (41/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.20051287 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.099133633 seconds)
    (43/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.188271091 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.11700093 seconds)
    (45/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.144932966 seconds)
    (46/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.17100091 seconds)
    (47/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.140652163 seconds)
    (48/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.167450326 seconds)
    (49/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.100581849 seconds)
    (50/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.220709268 seconds)
    (51/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.135320547 seconds)
    (52/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.201009218 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074126465 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072704444 seconds)
    (55/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.160657346 seconds)
    (56/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.195567593 seconds)
    (57/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.063953703 seconds)
    (58/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.087296773 seconds)
    (59/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.104924581 seconds)
    (60/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067371786 seconds)
    (61/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.101875341 seconds)
    (62/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.146038251 seconds)
    (63/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.095580905 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.09036293 seconds)
    (65/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.120130488 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.114909408 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.095178212 seconds)
    (68/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.180473719 seconds)
    (69/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.053161884 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.11369925 seconds)
    (71/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051568398 seconds)
    (72/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.092046537 seconds)
    (73/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.073942971 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.108998925 seconds)
    (75/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.209997341 seconds)
    (76/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.183738931 seconds)
    (77/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.108179989 seconds)
    (78/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.09217817 seconds)
    (79/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.10444558 seconds)
    (80/309) benchmarking ("sort", Int64, false)...
    done (took 0.089977685 seconds)
    (81/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.052973322 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.173384514 seconds)
    (83/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.099326699 seconds)
    (84/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.115191721 seconds)
    (85/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.137208132 seconds)
    (86/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.098547516 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.067212695 seconds)
    (88/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.073359147 seconds)
    (89/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.074016238 seconds)
    (90/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.076727573 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.125864434 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.158420689 seconds)
    (93/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.073302379 seconds)
    (94/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.05336888 seconds)
    (95/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.098217784 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.123661634 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.115686668 seconds)
    (98/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.068178775 seconds)
    (99/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.119361438 seconds)
    (100/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.073144738 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065741787 seconds)
    (102/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.191894865 seconds)
    (103/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.083596245 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.06675307 seconds)
    (105/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074596603 seconds)
    (106/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.07390284 seconds)
    (107/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.072660576 seconds)
    (108/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.068187945 seconds)
    (109/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.10284529 seconds)
    (110/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.074058874 seconds)
    (111/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.052854646 seconds)
    (112/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.098136294 seconds)
    (113/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.075141138 seconds)
    (114/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.096295526 seconds)
    (115/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.090757919 seconds)
    (116/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.129053868 seconds)
    (117/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074840679 seconds)
    (118/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.052244025 seconds)
    (119/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.121889605 seconds)
    (120/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.077446771 seconds)
    (121/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.137582911 seconds)
    (122/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.068085544 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.167765027 seconds)
    (124/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.157919068 seconds)
    (125/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.054048428 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.141092426 seconds)
    (127/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.066658953 seconds)
    (128/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.198165606 seconds)
    (129/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.081385123 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.109854372 seconds)
    (131/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.081539135 seconds)
    (132/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.052503968 seconds)
    (133/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.085133714 seconds)
    (134/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.077099513 seconds)
    (135/309) benchmarking ("sort", Bool, false)...
    done (took 0.160090791 seconds)
    (136/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074737457 seconds)
    (137/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.089756459 seconds)
    (138/309) benchmarking ("sort", Int8, false)...
    done (took 0.165489628 seconds)
    (139/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.072722655 seconds)
    (140/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.156076157 seconds)
    (141/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074493222 seconds)
    (142/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.07392135 seconds)
    (143/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.061308462 seconds)
    (144/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.052114399 seconds)
    (145/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.093201486 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.06697067 seconds)
    (147/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.068389197 seconds)
    (148/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.073647709 seconds)
    (149/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.054299307 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.072898555 seconds)
    (151/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.087300244 seconds)
    (152/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.092905066 seconds)
    (153/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.179445679 seconds)
    (154/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.072096093 seconds)
    (155/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.093790856 seconds)
    (156/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.201870359 seconds)
    (157/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.074647425 seconds)
    (158/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.072823846 seconds)
    (159/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.099788608 seconds)
    (160/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.052589437 seconds)
    (161/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.089547174 seconds)
    (162/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.066151265 seconds)
    (163/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074721229 seconds)
    (164/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.098059146 seconds)
    (165/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.076728659 seconds)
    (166/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067652763 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.097823144 seconds)
    (168/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.076254841 seconds)
    (169/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.090362186 seconds)
    (170/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.101097949 seconds)
    (171/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.158907481 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.067113859 seconds)
    (173/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051905273 seconds)
    (174/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.073184772 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.0696876 seconds)
    (176/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.054394657 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.136666835 seconds)
    (178/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.191451325 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.09417236 seconds)
    (180/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.052568092 seconds)
    (181/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.113849735 seconds)
    (182/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.071423219 seconds)
    (183/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.075603787 seconds)
    (184/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.075886124 seconds)
    (185/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.195134899 seconds)
    (186/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.053097087 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.097321665 seconds)
    (188/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.292729941 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.09742786 seconds)
    (190/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.128620385 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.089598904 seconds)
    (192/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.089315696 seconds)
    (193/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.137660887 seconds)
    (194/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.094613463 seconds)
    (195/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.074355827 seconds)
    (196/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.054487149 seconds)
    (197/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.13780531 seconds)
    (198/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.066081363 seconds)
    (199/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.097716686 seconds)
    (200/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.062119683 seconds)
    (201/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.067762307 seconds)
    (202/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.105840965 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.131463736 seconds)
    (204/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.08980771 seconds)
    (205/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.068931589 seconds)
    (206/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.170928234 seconds)
    (207/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.156791146 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.065466473 seconds)
    (209/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.051989785 seconds)
    (210/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.099350014 seconds)
    (211/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.075040483 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.167376782 seconds)
    (213/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.052169159 seconds)
    (214/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.162421059 seconds)
    (215/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.052883672 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075486945 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.095188487 seconds)
    (218/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.074574133 seconds)
    (219/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052346137 seconds)
    (220/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.074303145 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.066955458 seconds)
    (222/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.101434852 seconds)
    (223/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.053809559 seconds)
    (224/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.051877132 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.133527088 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071794938 seconds)
    (227/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.052297419 seconds)
    (228/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.085214629 seconds)
    (229/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069807003 seconds)
    (230/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.051040951 seconds)
    (231/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.091815969 seconds)
    (232/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.07764096 seconds)
    (233/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.158069742 seconds)
    (234/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.065891767 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.115719334 seconds)
    (236/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073642409 seconds)
    (237/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.051859273 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.162519026 seconds)
    (239/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068057529 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.1621054 seconds)
    (241/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052558591 seconds)
    (242/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.095524847 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066287388 seconds)
    (244/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051037131 seconds)
    (245/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.074806766 seconds)
    (246/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.169203777 seconds)
    (247/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.088302231 seconds)
    (248/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.067386562 seconds)
    (249/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.066617641 seconds)
    (250/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.075390546 seconds)
    (251/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.065923603 seconds)
    (252/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073614233 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.088567201 seconds)
    (254/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.072977281 seconds)
    (255/309) benchmarking ("sort", BigInt, false)...
    done (took 0.207548662 seconds)
    (256/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.075350957 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091775979 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.08913118 seconds)
    (259/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.066462765 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066916636 seconds)
    (261/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.088328938 seconds)
    (262/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.05150981 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072504265 seconds)
    (264/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.083989882 seconds)
    (265/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.090601246 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073808045 seconds)
    (267/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.193452827 seconds)
    (268/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.088210736 seconds)
    (269/309) benchmarking ("sort", Float64, false)...
    done (took 0.127068546 seconds)
    (270/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.090112647 seconds)
    (271/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.066526171 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.114060759 seconds)
    (273/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.052160542 seconds)
    (274/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079616498 seconds)
    (275/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.093546508 seconds)
    (276/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.074011857 seconds)
    (277/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.051662645 seconds)
    (278/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.073248751 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.103180193 seconds)
    (280/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.051039946 seconds)
    (281/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.090382335 seconds)
    (282/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.054134238 seconds)
    (283/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.061522981 seconds)
    (284/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.103382913 seconds)
    (285/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.146099424 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.096140448 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.06718264 seconds)
    (288/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.091182578 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.065405147 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.06651168 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.090519328 seconds)
    (292/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.053846691 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073238649 seconds)
    (294/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.073441903 seconds)
    (295/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069020521 seconds)
    (296/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.067507718 seconds)
    (297/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.075002411 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071802041 seconds)
    (299/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.07283442 seconds)
    (300/309) benchmarking ("sort", Float32, false)...
    done (took 0.149781975 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086792932 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.114023124 seconds)
    (303/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.053206401 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.095759877 seconds)
    (305/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.069165902 seconds)
    (306/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.053022876 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.114919738 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.097637241 seconds)
    (309/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.077340408 seconds)
  done (took 33.155582186 seconds)
done (took 34.072034696 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08180243 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.11460078 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075549323 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.115294263 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.082025116 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.100574957 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074091021 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078536336 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.103794158 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082336666 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.102676914 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055488447 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097519191 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076425122 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.097332377 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092604849 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.102792909 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073096915 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074353783 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.087096485 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075470191 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.08775939 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.068486079 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.055419586 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.100669695 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073450248 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072647375 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.097885604 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066413182 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.088738048 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070092429 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073751016 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087517433 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079951816 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093637324 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074627794 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.075861313 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.098016106 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068569861 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.087984883 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074369563 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066264554 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.094545558 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073905517 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071543699 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.093938808 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075058627 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.101728842 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092641598 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090676699 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074313649 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.099367354 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077298579 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073149491 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.092335669 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074866096 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.093311178 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092713975 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.096802666 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068694275 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073947149 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.097094884 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072351502 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095624008 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074180359 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076775213 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.099054435 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072439085 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097975549 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.072029145 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066247632 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.096709261 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.07022364 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.06560718 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.098965368 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078252323 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.087161641 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.072519501 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074136569 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.09441573 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.066290973 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067745706 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.090150922 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073189255 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090372927 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055380498 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.070500192 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093596809 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065666098 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074938563 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.094052077 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073248612 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.06774032 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.099314205 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065655713 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092904999 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067052902 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066319883 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.089806851 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071350858 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066128807 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090693019 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075762862 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.089851883 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072422087 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.080335713 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.088769462 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073199811 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087391555 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065535008 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.082872072 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.098533593 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.06703054 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090596435 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065685165 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.074160828 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.087277309 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066642956 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066560519 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.088335141 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.072464372 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065722361 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09105622 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.074448939 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.102004416 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066022052 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.069738175 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09085208 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066862002 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072070645 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.088745449 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.067059019 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.06811182 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.086299065 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069097809 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.088643768 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073677845 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068528504 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.096877821 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.068974253 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.096844641 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.07106409 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.072216539 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.093297232 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065711422 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.05947095 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09093759 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069184003 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.069118179 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.088821324 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067813103 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066372829 seconds)
done (took 13.215943938 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.06767851 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.169329926 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.126942117 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095727198 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.110786915 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067198256 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.100273655 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.108670491 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.090607699 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.127536189 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087598443 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.107491973 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.114778706 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.088402898 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066884328 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070740375 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.090342772 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.089250026 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.125071804 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086935239 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.139459441 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087873426 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.121245682 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090674367 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.111883132 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.095044558 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.088910552 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070612236 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.06943376 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.12556471 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.108332423 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069972145 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067443993 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.122714345 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.120436071 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.086461734 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.088714055 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.084881044 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.088490495 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066987849 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.115444377 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.100974421 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.104739905 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.083298211 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.092396689 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069924637 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089868226 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.086877968 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.113544725 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.081451364 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.111314835 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.135395836 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069474885 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.105960992 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.065831969 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.110543698 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.082470506 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.09158019 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067756086 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.091237365 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067366617 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070954897 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.111570979 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.116681026 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071476341 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.105904819 seconds)
  done (took 7.277000082 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085759353 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.117074503 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.085159404 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.107500978 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066594511 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068048171 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.089472379 seconds)
  done (took 1.591776953 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067998202 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.089714707 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.112682052 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090657517 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.10891888 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087733696 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.100133933 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068564187 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.106910705 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068203939 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088527844 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.127881967 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.068301446 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.097911624 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091403419 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.08946171 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.09131947 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.090204003 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070851671 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.113764916 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069847113 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.089563993 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.092869194 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067885142 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103963721 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.068172039 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.139127033 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072419767 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090795966 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070426455 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065893007 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.139989159 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.104053325 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078930271 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067178749 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.104823867 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.082834982 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088119552 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.084857453 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094898289 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.083374303 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.06864979 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.091336412 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066350104 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072591782 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.101016434 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.069584866 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.090518753 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070519094 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087530836 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090477717 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082091788 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.090312567 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071848785 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069119235 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095528574 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078011419 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.090570691 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.088128359 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069226919 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.108635692 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084099079 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.104886984 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084958733 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092521973 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081671284 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.10417327 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070618527 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068764636 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.093468583 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.085432485 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.088140676 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069411569 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078650965 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.092368863 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.09131547 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.113764932 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069327438 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.100350333 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.06795149 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.06880629 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.090584012 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.091653954 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094118427 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068133485 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072531719 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094041826 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065981181 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066910493 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.094829788 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.066735687 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.090496623 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.071056576 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068478176 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092866975 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085484055 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.091027125 seconds)
  done (took 9.337287085 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069821072 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068687935 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092061365 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068786667 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068693822 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.091072954 seconds)
  done (took 1.439444021 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.10065223 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.092991337 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.082560536 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.095791065 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.106653238 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.105073403 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.083003876 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.106414424 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.085902546 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.102279494 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.083120367 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105198488 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.090306564 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.095841481 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.08319548 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.09627557 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.083462261 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100017505 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.080225239 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097386832 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.089318445 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.096274479 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074949143 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.106855325 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.072059691 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.073458418 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100769283 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.08065579 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.102405448 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.084201195 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.095823979 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071935406 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.094876591 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.084050186 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.106023934 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.07311287 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095355713 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.073227282 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099743306 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.070978194 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.106810248 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074683087 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.07899412 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.095213149 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.106649732 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.073211819 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.072385066 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100038921 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.082624796 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.095427194 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.072544422 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095585209 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.07189653 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.09480706 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.07273763 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.106072692 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.071719365 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.105624508 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.074782058 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.073294115 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.094221424 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.072273288 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.105520112 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071870876 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104139185 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.072545056 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.095040323 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07409344 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096825357 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.073701563 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.071970743 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092932554 seconds)
  done (took 7.35445913 seconds)
done (took 27.973442702 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.650333296 seconds)
  done (took 1.631936742 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.767461995 seconds)
  done (took 1.752161069 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.677421501 seconds)
  done (took 15.665040812 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.616994418 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.764282411 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.813708343 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.13487204 seconds)
  done (took 3.315222241 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.887837778 seconds)
  done (took 1.897554602 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.235873186 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.224957646 seconds)
  done (took 1.451409657 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.730797544 seconds)
  done (took 1.724065281 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.284651663 seconds)
  done (took 2.272267663 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.322998325 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.182233802 seconds)
  done (took 1.502213781 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.520561119 seconds)
  done (took 1.51671148 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.741558095 seconds)
  done (took 7.741524107 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.230538539 seconds)
  done (took 1.235294795 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.26840168 seconds)
  done (took 1.261885482 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.089386916 seconds)
  done (took 4.085646865 seconds)
done (took 48.040392382 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078417778 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.082292352 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.104492676 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080005762 seconds)
  done (took 1.33509669 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078251566 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073648472 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.099790327 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073719452 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.101458125 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.074543888 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.0985851 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077820706 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072377459 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097485443 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.074268167 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.095506262 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.076436332 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.097986306 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070755437 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076898864 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099709548 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073741972 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.098871712 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.073744923 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071717618 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097952162 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076528511 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.09499897 seconds)
  done (took 3.033654187 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077906052 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073964696 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097748072 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073163041 seconds)
  done (took 1.326597354 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077625245 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.115410089 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089786358 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.101421091 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.093509936 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.110347765 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069595863 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.070127715 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094422047 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.080480105 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090872337 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.099050496 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.110764317 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077618377 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.102232349 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.067048814 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.069224564 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.110788755 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077678572 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.100662499 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.071702656 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077143646 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.091182878 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.091733026 seconds)
  done (took 3.149264556 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077841534 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103592058 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.102292299 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.090419062 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.116027044 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.06640271 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.100265744 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.09243738 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.149726249 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066037955 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.094469811 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066558657 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.096873759 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065590797 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.078315079 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.132293615 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.112362104 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.092778974 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.097766522 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.089479984 seconds)
  done (took 2.901278563 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075832674 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070197439 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.089093166 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.06943912 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077191315 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.096448991 seconds)
  done (took 1.485840542 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069082962 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068162026 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.091125749 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.06712308 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072714827 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.090814881 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066826637 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067277006 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090936489 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067737385 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067293831 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.089216939 seconds)
  done (took 1.919033534 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.388818714 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.092480263 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069578961 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.088306224 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.07163092 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.09114969 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081542861 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068219996 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.114728443 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067350602 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.090514403 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068818947 seconds)
  done (took 2.306089881 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262245959 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077636208 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.325780985 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168465704 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140707556 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155152164 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104938593 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139792793 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.198058087 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138906865 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201336637 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225310795 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134123665 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168312614 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115045811 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.131916185 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186837374 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221712218 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105989586 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225105727 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206970395 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156369874 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181152421 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127902184 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135136419 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150820187 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.07264649 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10498145 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23422764 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16179989 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202010156 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13839297 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097765021 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230370498 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226498032 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196808916 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16384237 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085445381 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.157249465 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.164408518 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256348055 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114619125 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196262564 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134565171 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106206353 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173473266 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146774281 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.146616032 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.137292062 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114324182 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174220405 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241271259 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.166525405 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111709037 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137584376 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142769412 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.143881792 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103880207 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243252772 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218412947 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158307833 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.096207554 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098788314 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211158827 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16007112 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.142412635 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.154850616 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11936191 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169462283 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.211488939 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147088616 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17506432 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.180223225 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08913157 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146525048 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195606128 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156605166 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203122703 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177796036 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073106701 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152488168 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130307719 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081991323 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.169230123 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076552943 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232774631 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125205383 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.138988983 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139465368 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136889098 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111266546 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220677535 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203379907 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105647348 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.090409746 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130196937 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.150220102 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177475649 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114299645 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135543677 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147969467 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.080193003 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166158367 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.100254329 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153698181 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.080103225 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177022512 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165443101 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076629602 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152595529 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128059385 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.129021654 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165126568 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219598211 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091836462 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107888776 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203263472 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179569674 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.132182491 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176332452 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189252158 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.128078143 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129074678 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207061065 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245105922 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090843195 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223859413 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135868028 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085596711 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.114389312 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1559453 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141107759 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.149391471 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084439086 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.178982948 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203292977 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.100343581 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096797333 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191277768 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083083291 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108251349 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14086038 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129197179 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.096912112 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.127327141 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.135539536 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171120734 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155290653 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133288511 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153804106 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124681146 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226653994 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114770942 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.130105002 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105858963 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.095551046 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.165010922 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191890008 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106834922 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226832254 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.156221894 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131206605 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147521642 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08399942 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170410683 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104201627 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.072158402 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198790348 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138739179 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112911369 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.209014287 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130509843 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.156363045 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.152595628 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163721146 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161187101 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.187100979 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108374673 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.112454631 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140435974 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15408707 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.098812243 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.095943762 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.108910211 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131398516 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122473683 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084402692 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172444625 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18039473 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10046393 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13980444 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124481279 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180114837 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.102923522 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160145737 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.148482672 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121434311 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.185993017 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212311239 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166092048 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127126915 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176594595 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.096217326 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074881472 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.117405825 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157256881 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109490126 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084870412 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145970901 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.204232099 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158874713 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168270689 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138442288 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150748091 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186726064 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.096488529 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.118182359 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204985405 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154286597 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.155546364 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09129503 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.124714296 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175513494 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134464388 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246164459 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143960124 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15460322 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207449751 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.130180434 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08132244 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131055657 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168503908 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133400683 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.208839502 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126353294 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090225274 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137493626 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.107579431 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132613531 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158540214 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150160463 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164732536 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.144013039 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188001712 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078222392 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14592038 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1518631 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151900835 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.090098073 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148317442 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220565944 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097346358 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146997084 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212197151 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080349486 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.153457865 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24253837 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201653119 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086248759 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13808509 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151187184 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157985 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146118044 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.196371841 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139332224 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165344559 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137460517 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086338793 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113547345 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09976059 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134239373 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.122472273 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.140170709 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.145574798 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.121875301 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161211326 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139725008 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138638388 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14841868 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.098996376 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.117479396 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12484187 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210301111 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149679299 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233417249 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.12729642 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.207046644 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204635244 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100875857 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080716361 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.10713076 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170779492 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111650327 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164248007 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.1234002 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107241502 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156332954 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199330425 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09764828 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.094512517 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138087368 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166092885 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139910184 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125408103 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.108305302 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222596753 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.130572305 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080575224 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155062827 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13246812 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130285888 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237468626 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.063160434 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124452037 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077075018 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107327019 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158767648 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216698562 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.084187056 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.151684661 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147931936 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150697295 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160003036 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129371453 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098977718 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140541047 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20774775 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158349424 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.117314235 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114903924 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185850737 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189215252 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133928897 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.122354856 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233922262 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187354593 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.224179164 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.116692335 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144248423 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144241164 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111376079 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21308809 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110060171 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202616317 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109533806 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167714868 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132035187 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121329796 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15991631 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.124137969 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090426782 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207182807 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149645609 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108728437 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081383042 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145871093 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150893393 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134687201 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.101648697 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169948899 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073338793 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193607961 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203709835 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108754273 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134529671 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122729145 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083799773 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137556883 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132143976 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113915083 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.122479578 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231234686 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.118395347 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184216536 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198932438 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144159945 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169315021 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128043671 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.663735019 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.079234046 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213046016 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146021651 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239491975 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125197216 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149255847 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138945925 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153166593 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17651399 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133272337 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.204574518 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163802364 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.14947409 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105314451 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131509769 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141044366 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.0944138 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134165515 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143192789 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146336268 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.12904487 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.150590622 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155513483 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.108693403 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095952699 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217346433 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145986134 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198191072 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171773373 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086250199 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147228 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197262091 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081292445 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.17778523 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18976488 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136695888 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126563065 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.083323135 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.133788815 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232752654 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.099338602 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19597302 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155979771 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137917068 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142454089 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.174109465 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163773111 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136972313 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15631543 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122874926 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.141081031 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145237657 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086138479 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.10452853 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134432041 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142250791 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.101239753 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130081825 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.143508849 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184456859 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.097506938 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098035754 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131020467 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200808697 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213639648 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.116219843 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110170129 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149276728 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142917892 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.14541775 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155954989 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.08350649 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110049201 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.110016548 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.113464352 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.136962965 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144154768 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106321826 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139313134 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227625697 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.111756443 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.228442051 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122406231 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135133033 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069921606 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.107569275 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124598142 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099639164 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136685303 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126376047 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234541623 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.098922497 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.11816947 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120741306 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074713873 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110447667 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159976534 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139999988 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152087842 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126704526 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.064186657 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138367198 seconds)
  done (took 71.513757134 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.131394278 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.103541908 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.116508307 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.171817297 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.145463747 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.238270686 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.17938984 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.222680934 seconds)
  done (took 2.393048039 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069197728 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.117006934 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103130352 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.116501163 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.089694988 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068445039 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.298803513 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.109940846 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067015122 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.115017159 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.119563455 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.091360452 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.470081408 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065968465 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.094187005 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.083878167 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067338247 seconds)
  done (took 3.224172161 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.42850639 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.618177358 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.451512508 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073490045 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.822563725 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.106734407 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.241267744 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.160451658 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.090562779 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.424274138 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.7291013 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.146374598 seconds)
  done (took 17.379284777 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076719254 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069606371 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.109309595 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084343189 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.098560235 seconds)
  done (took 1.534305437 seconds)
done (took 114.496715066 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081883842 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.345002782 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053252414 seconds)
  done (took 1.527218926 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.083932749 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084389014 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.110765497 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083779789 seconds)
  done (took 1.464422955 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.075612832 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077601455 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.110331129 seconds)
  done (took 1.360279058 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.279462506 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.166184852 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.088932067 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083968781 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077751784 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103635768 seconds)
  done (took 1.363182797 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074037789 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075424123 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098957002 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076530472 seconds)
  done (took 1.418431886 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077597068 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052353023 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055620321 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.081396061 seconds)
  done (took 1.363793818 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.091340337 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.105455961 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.081567091 seconds)
  done (took 1.37656469 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.109052113 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.112410192 seconds)
  done (took 1.322043684 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083660604 seconds)
  done (took 1.178427917 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.094275411 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.140400051 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.155828333 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.137277407 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.165621002 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.136233911 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.087173675 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.114631823 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.104430766 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.08879896 seconds)
  done (took 2.326121794 seconds)
done (took 16.407506812 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080006529 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.488042383 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360267331 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117011013 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.66791151 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356204723 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.04337407 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.11877719 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121767055 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094457673 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084147974 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.674597776 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.974295994 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.439094504 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.958345452 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.318780415 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.674855005 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068428322 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067686664 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093703333 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.006960777 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093815139 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068367764 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068294085 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.674030893 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371044557 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09418155 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.318162304 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067416974 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.096103455 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354863373 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.093976508 seconds)
  done (took 16.201464172 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.072188877 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.143559602 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073745763 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083191746 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.096315764 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069860932 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.097550218 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069650823 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.152324044 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067635856 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110452726 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068056833 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.097032243 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069188874 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087255307 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.094111672 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069357048 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068543876 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093786027 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069055235 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.111843592 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.0681346 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06871177 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094117206 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068037039 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.105789571 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068713149 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067636543 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093614369 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.06988329 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.096336732 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068939929 seconds)
  done (took 3.834289996 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116139004 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.151771544 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074416087 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.128090592 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113821622 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.096344627 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.170099293 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093108725 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.155502772 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069137831 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.11088194 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068565913 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126995739 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069493167 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.113588638 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069168876 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.07017496 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.094267889 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069596221 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094828529 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087650931 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093619106 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069045694 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069310707 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094291925 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081465527 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093753742 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068868898 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069116199 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.096177591 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072076566 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094506634 seconds)
  done (took 4.156433942 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.074110292 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075352164 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108565603 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084457901 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095366096 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072393862 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073110398 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.095855667 seconds)
  done (took 1.784611679 seconds)
done (took 27.079514672 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080640883 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.070343829 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.09869158 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081748794 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.098957604 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.07904498 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.06807437 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.100899966 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.076768983 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072746784 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.10142089 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067832595 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.096687955 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067522864 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.07518302 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.093401955 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079929053 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.097962546 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079927645 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079596247 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095542811 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.07726987 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.100765637 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079924139 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.106352134 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.080554268 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.08298726 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099813677 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069749364 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.096415204 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077240724 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083759863 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.095580592 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080040796 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.094438723 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068135216 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.068365269 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093919186 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080636791 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.100439531 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.071048699 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.099858688 seconds)
  done (took 4.670821435 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090751808 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091819991 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.111370885 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.065905389 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.097039122 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065433479 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.115308859 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.064218644 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059596104 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.114898788 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056096428 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059981386 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.089336373 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054514165 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059241658 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056987252 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.08790291 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056273066 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059448967 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.085744529 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058432056 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054266848 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.086416639 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063118068 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058616532 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.087384652 seconds)
  done (took 3.058817608 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077290651 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084470475 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113752958 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.128345866 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.132531544 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077120762 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.105306869 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.087641882 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.113168303 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067403065 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071996891 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.122715656 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088352338 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.100555007 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067837042 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.110730317 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082543702 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069890414 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.101169478 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090481204 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.110294408 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.078764227 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.118901731 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081553516 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067657486 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096563776 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072066813 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.107811481 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073483838 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076727394 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.099056061 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072850267 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.095818879 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.08000364 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072771765 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.095745661 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090303916 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.104626538 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078253979 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068753442 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.098333697 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069520232 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114357611 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.112137761 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.094404079 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075454654 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075932552 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.104492625 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069014045 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112519734 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077797352 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.06751005 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.097197814 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067482533 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.093913967 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081779355 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069546626 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.097256383 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077312322 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.097755881 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.080676659 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072475708 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109968408 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067879287 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.101683427 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067054307 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068943038 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.093872667 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.091895645 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069173693 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.135373923 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069033465 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.095173894 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077528047 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.101933341 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073430171 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067993761 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.109426613 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078546463 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.097875069 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076558431 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071122225 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.097706745 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.088051106 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.096495443 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069942796 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068889511 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100812351 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070536571 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.095311922 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081693706 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067951331 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.097733708 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084781907 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.094223329 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.06998997 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074135888 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.099804816 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068010442 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106433006 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.075032001 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068974141 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.104150234 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067977571 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.097778258 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078794455 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.072534521 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.093932834 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072357534 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.100575326 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069620391 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068623527 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.097607794 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069585815 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.104030536 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074506686 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072885098 seconds)
  done (took 11.303188785 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.203994698 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.184526557 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070494502 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.178187608 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076212973 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.107469626 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.178624817 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.09690367 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.095941569 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068708729 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.06884904 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.129460663 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.12414351 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.10634256 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.106234302 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068074083 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.114892441 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.105336109 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.181709218 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.175541219 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.115535011 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076827126 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071460296 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.097441687 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070548405 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.105000856 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085078978 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.102428263 seconds)
  done (took 4.295316759 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083545103 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.128679931 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073974719 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089078823 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.118555503 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068423388 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.100808776 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069409015 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.107624727 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.08071796 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.095115581 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073460797 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075234375 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.10607072 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068711533 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.105167407 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.078794701 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.06961457 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.098509527 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073216373 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.105143358 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.081453025 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.098784266 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068376526 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073933767 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.09463148 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.065194747 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.11348173 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068244022 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116847393 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066441988 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073820954 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.10919382 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068626113 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.095111393 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.071195415 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070777494 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.099292782 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069493771 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066876552 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.094663989 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057637811 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066719589 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.107994332 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074585578 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.087710706 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.074014781 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.0734754 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.099855452 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065638093 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097804108 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070670339 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070863318 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.104217553 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072546479 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072902535 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.100323484 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.066450515 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.103064756 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.07212907 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064218832 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.0943609 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.07252068 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.067831352 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102887594 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072343453 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.094331691 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.071223167 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.072630432 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.101475916 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.07188545 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070571697 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.093442483 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069799877 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.099809889 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.073336308 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.072898591 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.094873711 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067942638 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068672394 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.083185286 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068614243 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053950968 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.098974118 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066798961 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066495072 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.098382893 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.07415592 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.108042146 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069829663 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.101764017 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.06890733 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066736103 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.098617369 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.064165405 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.07207787 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.111621775 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.11184668 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068328715 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065601231 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.110152238 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.073421516 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067717612 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.084136737 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075166365 seconds)
  done (took 9.827912413 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.097618056 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092937334 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.097442302 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083211401 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.12338182 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.092835321 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.103088858 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.074524104 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069830771 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.11318863 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.067693593 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.1036343 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068634295 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077168238 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.123692848 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.07596424 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.097315574 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.07761188 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072450774 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.135953805 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083763164 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.11037668 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.082157182 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.096306502 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.073199394 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081055804 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.124041076 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.080002742 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.106758319 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.085076981 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.080271364 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.124248193 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.086493515 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.099547464 seconds)
  done (took 4.303006361 seconds)
done (took 38.564358679 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.199591514 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.393479846 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.18053422 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.030616199 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.182792446 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.189235893 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.191154689 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.184597154 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.349361059 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.188075109 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.42412594 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.807398246 seconds)
done (took 58.450201338 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.213696084 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.320937449 seconds)
    (2/2) benchmarking "String"...
    done (took 1.452820059 seconds)
  done (took 3.899733247 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.536061951 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.044375452 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.444256189 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.187843095 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.184992636 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.487900845 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.744303842 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.989399051 seconds)
  done (took 27.208817235 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.186032567 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.5291546 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.342375382 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.338833224 seconds)
  done (took 17.523705078 seconds)
done (took 58.511813693 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.174466829 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.209288775 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.193838213 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.16559068 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.285684288 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.209826498 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.415968552 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.437797361 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.184641321 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.172058935 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.191108173 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.180867066 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.190848951 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.407741998 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.181899695 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.185335051 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.248576729 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.678305435 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.535915272 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.190555869 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.192891236 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.196298932 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.196497022 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.184071084 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.213449946 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.179435846 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.194372919 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.188428087 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.05045023 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.184547203 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.248884392 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.615975523 seconds)
  done (took 190.214885042 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.182445858 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.248542575 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.328502729 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.214263935 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.675163181 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.377032895 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.318073157 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.73046167 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.195990303 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.189297691 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.505779662 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.179112556 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.566006495 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.180232334 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.187822091 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.280281008 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.358258499 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.521658156 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.188404983 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.409822894 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.181563504 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.410471905 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.334683541 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.425253576 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.201395466 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.21824108 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.190521857 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.181546917 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.364815983 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.304123999 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.228410916 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.178450989 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.68060401 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.032963687 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.184170593 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.207515313 seconds)
  done (took 149.285576958 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.410652879 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.176997156 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.176970281 seconds)
    (3/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.177727609 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.177454537 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.203361083 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.178250515 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.624190663 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.622830849 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.67181345 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.452805877 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.23550305 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.294233242 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.177335793 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.263905734 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.190538709 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.177833878 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.192948135 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.204534483 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.178674373 seconds)
    (20/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.173243731 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.178466582 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.623861344 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.192234733 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.184864776 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.178541805 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.203098245 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.563602863 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.178028668 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.197009166 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.177302119 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.202379156 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.479530449 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.215476154 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.178348645 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.377478088 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.861544562 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.279601649 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.179099493 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.20272268 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.17715494 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.436963586 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.177378962 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.179225254 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.182395972 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.666043304 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.177312058 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.621672741 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.181149985 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.986493307 seconds)
    (50/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.17837628 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.179261369 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.178400459 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.577634699 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.454058382 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.178701193 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.179082809 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.182764807 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.178684267 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.179039494 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.203776502 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.438888131 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.271817601 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.179491826 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.183455679 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.2028794 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.180185273 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.32844086 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.182274177 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.478346435 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.235427755 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.285211121 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.626141845 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.18085654 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.268517929 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.292731836 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.179291471 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.179945111 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.180639156 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.180547145 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.28183548 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.179831203 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.518831939 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.18614267 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.181899778 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.236720923 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.268923912 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.179174799 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.387250137 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.181770006 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.182276388 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.791134517 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.267766392 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.180919137 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.181142569 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.180514 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.520790388 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.62688133 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.254149618 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.183378556 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.473024002 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.182374717 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.536249348 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.614563042 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.679076551 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.182543725 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.283906626 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.184822411 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.183187877 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.180657274 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.210035995 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.182589671 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.240627646 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.180998358 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.573221173 seconds)
  done (took 339.70223706 seconds)
done (took 681.741345825 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.823543269 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.805435935 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.911246065 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.799688422 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.789943059 seconds)
  done (took 10.25216741 seconds)
done (took 11.375243318 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.343923287 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.34349169 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.231554081 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.344049516 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.208887404 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.359409292 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.321204733 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.20302259 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.274129296 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.245886171 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.271152637 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.222669639 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.205929282 seconds)
  done (took 17.697918849 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.460110374 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.451068852 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.24793267 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.458580272 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.220288566 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.465738385 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.362239102 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.368773873 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.360750238 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.19546427 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.195209207 seconds)
  done (took 15.912230313 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.465551728 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.4560371 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.248953887 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.473868527 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.221388326 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.476829051 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.36284164 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.371696989 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.360669047 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.194838108 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.193080325 seconds)
  done (took 15.950244467 seconds)
done (took 50.685819113 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.191072681 seconds)
  done (took 2.316171609 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.221006594 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.377674522 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.201192979 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.193207202 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.191819443 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.191213943 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.194752412 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.190183746 seconds)
  done (took 10.887661221 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.188199744 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.188980966 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.186906313 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.185803838 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.191778291 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.189472552 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.189645212 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.185399979 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.18929654 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.187812421 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.187975831 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.189352594 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.191017531 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.190181268 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.187962719 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.18702778 seconds)
  done (took 20.142383037 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.189881353 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.187353353 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.18525344 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.187094466 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.186221639 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.186852666 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.187947254 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.184087223 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.186489784 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.186915037 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.18828843 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.18619326 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.188474414 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.188033572 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.188565449 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.190020885 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.188307267 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.187718931 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.192297823 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.189275375 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.188760522 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.188229824 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.188555503 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.188525394 seconds)
  done (took 29.638941192 seconds)
done (took 64.109776464 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.957045434 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.592973996 seconds)
  done (took 8.677549431 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.190982021 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.190769593 seconds)
  done (took 3.512252966 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.190313922 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.190485761 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.191095929 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.192709427 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.191734739 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.189834096 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.191155052 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.191193289 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.191585228 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.190985832 seconds)
  done (took 13.039094349 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.19152746 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.188800464 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.188406548 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.191738084 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.190114839 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.190660128 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.191256284 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.191901137 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.19078748 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.189864697 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.191559984 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.18919129 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.193582062 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.189079459 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.192581991 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.188348178 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.187045527 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.189433386 seconds)
  done (took 22.554002594 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.189025778 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.193079517 seconds)
  done (took 3.511183339 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.187603745 seconds)
    (2/7) benchmarking "second"...
    done (took 1.190496859 seconds)
    (3/7) benchmarking "month"...
    done (took 1.190293182 seconds)
    (4/7) benchmarking "year"...
    done (took 1.189785212 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.190418942 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.190816997 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.190417012 seconds)
  done (took 9.458765825 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.193149751 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.360122328 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.432243046 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.795137039 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.193084561 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.195830254 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.076204869 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.195688913 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.198181164 seconds)
  done (took 13.768919978 seconds)
done (took 75.649906514 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.153219608 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.186354482 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.968826631 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.203764816 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.198793268 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.529196116 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.186544286 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.301235558 seconds)
done (took 36.857529135 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.198290382 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.857866031 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.893988746 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.186116253 seconds)
  done (took 11.068627957 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.177171783 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.015625941 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.170936947 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.117805637 seconds)
  done (took 17.613466304 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.741972143 seconds)
    (2/2) benchmarking "read"...
    done (took 1.52003048 seconds)
  done (took 4.393247995 seconds)
done (took 40.405570548 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.193734579 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.191848912 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.194707394 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.191226492 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.193985587 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.192112348 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.193735265 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.194768471 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.191340667 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.192824567 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.19354937 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.195236394 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.192011862 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.189655631 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.194490796 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.194220669 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.192147703 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.191219486 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.192243113 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.19279413 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.195018711 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.194771673 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.191820403 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.194016775 seconds)
  done (took 29.764597646 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.19658261 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.193330201 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.192893873 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.195579326 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.193244859 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.195556087 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.196525169 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.192159019 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.194535217 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.194847522 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.194366433 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.194969313 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.198750207 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.191630759 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.195853648 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.195014743 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.196919178 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.193549167 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.197728901 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.193328024 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.196301659 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.194942505 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.193401051 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.197296112 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.194079763 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.192578441 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.196410963 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.195499575 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.196547431 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.194794869 seconds)
  done (took 36.981523274 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.201011984 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.20240673 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.19661671 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.197397299 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.196223486 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.195652301 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.19820011 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.196519119 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.195854857 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.197476561 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.197856985 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.198130566 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.197315937 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.195932045 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.196356272 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.19621742 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.197651611 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.19956265 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.198121888 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.196876307 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.192875889 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.196605076 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.19734012 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.198190375 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.199721436 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.197854449 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.199773436 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.197126346 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.198112174 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.19733661 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.197494237 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.198452132 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.197545032 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.197638206 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.197682045 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.1964809 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.203483165 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.205667587 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.198244844 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.197462736 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.198371139 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.195986142 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.198709776 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.200588635 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.198825883 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.199281349 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.19959105 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.198506581 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.199114181 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.199147815 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.198453866 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.198098578 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.196661396 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.199700716 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.198416479 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.197197197 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.199798472 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.198914515 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.200374551 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.20012893 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.199940503 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.200120538 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.2013866 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.199385684 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.199587238 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.196389615 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.200515199 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.199250822 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.198741426 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.201467427 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.198347945 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.200886502 seconds)
  done (took 87.423733502 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.199643785 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.198060996 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.196565647 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.199073623 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.197119356 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.200185212 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.197149056 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.200889468 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.198473795 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.201816497 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.200232832 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.198179226 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.198719696 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.201057599 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.200600532 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.198858092 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.200942239 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.196543449 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.200371924 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.20118313 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.200966419 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.199417841 seconds)
  done (took 27.521952747 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.200335475 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.200691078 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.197724649 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.201336525 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.198409473 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.200501757 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.200717926 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.201906696 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.200761957 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.199372643 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.199208795 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.199013279 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.200289232 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.198241211 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.198918943 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.197599168 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.202951142 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.200023738 seconds)
  done (took 22.735443604 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.201427786 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.19983493 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.202410208 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.20085422 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.199232657 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.201648374 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.20047432 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.202618612 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.202784034 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.201500034 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.20117135 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.203606741 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.2028188 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.196819848 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.202339915 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.200015198 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.20321165 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.20042626 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.202129985 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.197973779 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.197333519 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.201515701 seconds)
  done (took 27.561596281 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.204422243 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.204227093 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.199142503 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.200938157 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.201352059 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.204272817 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.203494687 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.200981489 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.202539073 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.203139212 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.20153984 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.203780471 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.20002948 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.200913842 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.196972523 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.200871447 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.203535575 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.201899264 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.203289831 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.202575263 seconds)
  done (took 25.180041181 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.206054694 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.204272362 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.205616012 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.206214596 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.206820995 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.205419873 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.206747874 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.206611736 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.206645084 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.206581435 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.207128255 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.208058261 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.207392198 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.206190717 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.207194605 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.206997727 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.20489736 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.207829891 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.2058893 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.205007167 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.207249409 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.206908529 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.207947215 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.208441778 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.20732354 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.206783108 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.206551872 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.207279529 seconds)
  done (took 34.927522946 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.205939271 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.205666966 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.202636936 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.205645583 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.205205162 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.204040983 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.202986946 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.20303574 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.20770675 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.202900706 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.207456014 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.206002769 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.205002759 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.207083263 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.2073404 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.206816349 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.207107453 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.204574164 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.203619694 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.204295532 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.206813555 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.207188761 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.207959776 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.205526871 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.204782429 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.2076656 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.20543086 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.205156737 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.208303053 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.204943484 seconds)
  done (took 37.311638005 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.226245356 seconds)
    (2/2) benchmarking "in"...
    done (took 1.225880218 seconds)
  done (took 3.594769437 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.203208102 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.207309943 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.208235264 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.205343343 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.206999222 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.208398127 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.208121249 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.205733292 seconds)
  done (took 10.796675523 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.211064305 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.209160055 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.207241883 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.208036948 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.210334297 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.212160634 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.218806557 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.223203294 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.211418665 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.213386794 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.215497168 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.218468494 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.210988302 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.2106803 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.211589442 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.213575355 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.210160587 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.209273956 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.210753404 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.208749044 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.209511378 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.215229152 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.214850828 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.207564868 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.212601175 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.221876107 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.21717803 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.212066353 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.211548571 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.21701937 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.211697537 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.206730531 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.210611196 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.211620817 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.209972574 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.211221909 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.223224088 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.226956623 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.221899642 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.213072921 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.210146318 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.206242783 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.214244323 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.215016939 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.214837442 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.210012198 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.211080085 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.208334601 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.213024664 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.215314839 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.21357599 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.212628212 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.207341914 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.216125447 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.214319938 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.22251166 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.223836084 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.214114751 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.219716783 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.223658846 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.226752567 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.221064255 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.217110381 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.212826399 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.22193779 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.232324733 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.222466563 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.223416615 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.210495849 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.212274934 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.22258525 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.227304904 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.223497225 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.213935977 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.213574437 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.21365447 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.214672506 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.211324458 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.222424115 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.230795083 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.213842091 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.213931302 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.224887056 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.23279051 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.215260777 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.213984702 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.214374889 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.213233745 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.216989622 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.226180478 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.227454196 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.213016203 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.215821228 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.216377794 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.217348361 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.21268887 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.215761878 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.216764152 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.211558496 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.21349886 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.215628569 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.219768105 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.227182199 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.208399885 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.208910224 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.21681221 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.207959933 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.21050739 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.216859192 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.207558818 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.2088427 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.209515349 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.206436423 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.197057744 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.205203899 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.209314526 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.196951438 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.205839219 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.200441104 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.199671426 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.201025181 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.21436737 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.191169704 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.189180507 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.197178082 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.199033453 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.190400363 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.199171347 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.184264497 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.181827172 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.182251244 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.189374363 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.185054908 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.187373922 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.184303471 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.189565714 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.182755805 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.182206595 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.182684228 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.186749395 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.18619675 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.184729728 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.187126043 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.187685352 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.183001108 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.185221781 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.189400415 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.184658231 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.187215 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.186920925 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.180264692 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.182422689 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.186955599 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.182899922 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.184716619 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.180806482 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.182861764 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.181591379 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.181307723 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.182026008 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.182244874 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.185989706 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.186522758 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.181162666 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.187034143 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.183329142 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.178566631 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.181345085 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.180557569 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.184559493 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.181423297 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.183152692 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.186173115 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.186390306 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.181289942 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.181015192 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.188240926 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.181539486 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.182095333 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.181379701 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.186702299 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.192217032 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.18167571 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.19197425 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.182799461 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.181949558 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.182225175 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.184660472 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.182704833 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.179481308 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.186269061 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.185554854 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.194739025 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.190981396 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.185662309 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.182459164 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.182579515 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.180611177 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.185448483 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.17774343 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.178542221 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.178692029 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.18091146 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.179299413 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.180892567 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.176287627 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.17943847 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.176760038 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.176201091 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.177206389 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.176428304 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.182134703 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.181696631 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.171908211 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.174419684 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.174762234 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.177031303 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.172033979 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.177134771 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.177830837 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.17539503 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.175533004 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.185068217 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.172923061 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.179645802 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.17993464 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.178703541 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.177244379 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.175259804 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.18112459 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.177443405 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.185165607 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.191761501 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.178312316 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.186262255 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.192503853 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.176909909 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.181592964 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.171294995 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.169042736 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.178126957 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.17705402 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.17169988 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.17224137 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.172504419 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.175888317 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.172936527 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.180510296 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.168127006 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.172682273 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.170103466 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.175645915 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.168599809 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.175460529 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.177048155 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.171536687 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.173173585 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.166807026 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.167253918 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.171948698 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.167767975 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.167943618 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.168816185 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.173475119 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.172464849 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.176337747 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.170782477 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.172911731 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.171867924 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.169743961 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.171355195 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.168344882 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.172195733 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.183121346 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.174369522 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.178137125 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.173311715 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.168177176 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.177870894 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.172154544 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.17416984 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.171304857 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.171651788 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.17136203 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.171858192 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.166616606 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.172545031 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.168519682 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.173448078 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.175081026 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.173370602 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.170230912 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.171731688 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.168919023 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.168610874 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.16945226 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.171428903 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.168859693 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.174309187 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.174798196 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.17269681 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.173004527 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.180360971 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.187463436 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.174979024 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.173121269 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.172641579 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.172068919 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.173327742 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.168864684 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.175204632 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.174813482 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.174811406 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.178824267 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.176047591 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.181235602 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.169049377 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.174997626 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.175819063 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.167430369 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.171901204 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.173212669 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.170181517 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.180718773 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.184186691 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.1739543 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.172752528 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.170564458 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.169701336 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.169973163 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.17064353 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.170677256 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.170593147 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.181626338 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.188925712 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.177254086 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.176714152 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.167814386 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.172768374 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.171406636 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.17411727 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.178800005 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.171276616 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.175485459 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.173950234 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.175590479 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.171963383 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.171612934 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.173704862 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.169454245 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.172485544 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.181797666 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.190704908 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.17427291 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.171851268 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.183603796 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.172386987 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.18244665 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.186632403 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.17589825 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.171209661 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.171604306 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.177018832 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.17619877 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.175130532 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.171737272 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.175298669 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.17547166 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.171953094 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.178673872 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.177209886 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.172649615 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.17633034 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.184972138 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.191256604 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.176746876 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.175902904 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.169846956 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.17760985 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.175272608 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.172575158 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.175333988 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.178895409 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.184949007 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.178659608 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.176419002 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.173460608 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.177041643 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.173284844 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.17366606 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.173024363 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.1732202 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.173014618 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.177189952 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.174202255 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.181424869 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.173987011 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.177720461 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.178279053 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.179090595 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.186216241 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.174852574 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.178549108 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.173804859 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.174153065 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.178293656 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.177981456 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.173855714 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.177405221 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.174276863 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.179122125 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.183755786 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.182224001 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.180233475 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.177720856 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.175468789 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.17800409 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.178928511 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.174956064 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.175189583 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.175330392 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.17903674 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.175152763 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.179102497 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.177052298 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.174131952 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.180199886 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.175488083 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.180740622 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.184248378 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.17996478 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.173585843 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.175945099 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.176051662 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.179584624 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.18004171 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.186626474 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.182672696 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.18788933 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.185809531 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.179337974 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.178958801 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.180058112 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.18241707 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.174626091 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.176559514 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.175021975 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.177381074 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.176914596 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.179073157 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.173055378 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.178782946 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.172309765 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.172046181 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.179910303 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.187003809 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.16918173 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.173036562 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.175521907 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.1686515 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.162233895 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.164868301 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.167426194 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.17492239 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.183673747 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.164514291 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.170580078 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.167486689 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.166457883 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.164495504 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.162140269 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.16727483 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.16036463 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.166960163 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.161567697 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.162032988 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.160445713 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.165146592 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.164860496 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.167106415 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.170487132 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.158975015 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.167580393 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.165865125 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.166941634 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.162256964 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.162376373 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.160196675 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.159749728 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.166088687 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.161206007 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.166412421 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.168273081 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.165815309 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.166868943 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.162684538 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.162405063 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.168032183 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.173365711 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.169023072 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.160063284 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.166600361 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.166495763 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.169958571 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.163149408 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.162277911 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.166632715 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.167175069 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.162966539 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.163239057 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.162930109 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.168743311 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.181037194 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.177401129 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.167937226 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.16726233 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.171380242 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.164026585 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.161459958 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.163660896 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.169769182 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.169690042 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.169450701 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.164910802 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.174530595 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.182629569 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.168497471 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.166401925 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.170628991 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.173935099 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.170465629 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.164112581 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.163787634 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.171000929 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.1814382 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.167566114 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.177351409 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.193538891 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.183563067 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.168765504 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.164989377 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.168431997 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.164446741 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.169897943 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.165071823 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.166019301 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.165033405 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.165373214 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.169043066 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.174263603 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.171011444 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.165807132 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.165525428 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.168991512 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.170233139 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.162552009 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.165756383 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.165638729 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.165243413 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.166546229 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.166642122 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.169309631 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.180746 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.177712826 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.165387111 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.166678783 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.163757589 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.173420324 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.171884246 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.177880639 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.171466388 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.167179383 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.166270059 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.171107236 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.166492747 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.163760338 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.169644251 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.169999112 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.169864458 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.163735599 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.18143622 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.173916539 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.174943814 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.170887958 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.166584609 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.166786204 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.171988119 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.166455813 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.167062721 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.172758938 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.171284982 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.16988796 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.166907108 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.166990054 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.173765866 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.172746778 seconds)
  done (took 706.346490985 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.166300416 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.164765501 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.165255204 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.165405612 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.165247121 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.164939777 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.165395938 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.165206551 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.165542533 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.165518274 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.166084666 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.16559841 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.165172946 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.166059166 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.165036919 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.165749527 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.166620822 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.166560337 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.165709094 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.165701934 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.166294417 seconds)
  done (took 25.585921404 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.168594491 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.165838034 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.166096844 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.168414783 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.166853459 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.168678886 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.165765008 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.168901488 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.169048628 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.166851405 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.168561754 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.168024578 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.165937477 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.165878102 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.166369941 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.168919685 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.168758706 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.1670202 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.169507099 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.166101647 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.169633986 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.167036657 seconds)
  done (took 26.795097127 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.169631509 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.169067446 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.172638928 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.167235005 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.170233199 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.166758357 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.169191814 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.169001093 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.170233454 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.174248539 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.173577658 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.174386878 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.178390543 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.17316623 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.175532401 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.169829718 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.314581942 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.1702701 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.17066146 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.170953583 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.167519625 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.179945502 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.16858572 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.168553832 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.172985016 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.170261558 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.171134724 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.170131813 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.171305539 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.175928488 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.173849684 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.171598828 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.175325385 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.177541686 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.174496813 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.176085055 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.174422738 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.172962025 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.169316558 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.171013498 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.183367201 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.188712692 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.172229725 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.182036393 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.171583898 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.171415913 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.177544371 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.178999469 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.169495702 seconds)
  done (took 58.728073459 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.17165979 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.172129971 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.169983322 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.17237448 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.172186397 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.17150481 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.171867553 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.173084172 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.170139572 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.169868096 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.173084366 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.170615743 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.17005217 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.172389543 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.17261995 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.170221826 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.170435642 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.169661368 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.170780549 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.170428658 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.169628133 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.173254173 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.173499967 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.170844944 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.173297481 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.170467025 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.170704984 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.173703236 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.171099114 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.170682091 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.173044267 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.173754187 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.173346909 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.172638988 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.17063418 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.174027379 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.173338623 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.171572194 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.173580664 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.171426905 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.173904525 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.173707972 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.173766048 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.174441725 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.171655827 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.171935583 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.171599546 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.171460603 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.172637472 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.175052762 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.174277252 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.17211569 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.174562119 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.172320868 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.173701249 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.174650602 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.172280389 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.172601666 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.17469842 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.17291848 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.172370612 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.175256724 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.172638728 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.174932048 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.174821564 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.173166203 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.172678059 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.175784168 seconds)
  done (took 80.839609436 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.175225105 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.174859695 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.175676857 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.175678034 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.175242111 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.176345001 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.176456564 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.176091418 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.175501895 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.175774343 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.175581493 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.175356949 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.176400334 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.175925925 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.175652954 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.17569735 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.176226902 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.176240876 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.175957844 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.176460164 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.176089004 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.175679086 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.17597196 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.176153839 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.177376701 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.176548281 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.175421868 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.176366815 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.176457237 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.1763329 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.176615251 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.176839394 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.176046136 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.176574225 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.178048326 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.176427006 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.176534094 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.176548906 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.177036941 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.176686537 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.177264889 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.176752731 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.176967628 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.176735621 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.178676007 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.177518956 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.17657114 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.177106554 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.176978807 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.178349149 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.177374818 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.177584805 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.177016037 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.17710637 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.177669372 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.177092098 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.177751954 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.177971826 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.177122944 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.178483497 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.176680943 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.177964546 seconds)
  done (took 74.064694225 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.177893128 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.178114646 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.175680764 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.175843177 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.178134791 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.176038563 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.178351365 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.178374981 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.177372356 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.178225129 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.178249506 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.176016945 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.175357852 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.178359432 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.176029998 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.175992229 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.175506083 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.176410935 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.178683276 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.176392631 seconds)
  done (took 24.656595752 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.176224833 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.178948686 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.177016873 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.176745399 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.178525181 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.177442189 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.17939383 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.17953397 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.176755669 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.179953012 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.179884859 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.179716161 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.176912867 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.177598167 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.179281761 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.176991951 seconds)
  done (took 19.967722762 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.178055178 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.179218912 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.180157041 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.180658919 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.177190994 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.177837815 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.179534426 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.178668534 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.177937973 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.180604312 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.180155494 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.179441733 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.18060272 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.179809617 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.177381013 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.180461421 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.17779845 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.178138298 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.180170837 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.1809375 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.178500244 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.179011815 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.180622706 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.18117524 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.177515758 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.17920336 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.178152148 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.178142885 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.178453962 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.181404285 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.178191268 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.178874706 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.17826446 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.177737502 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.181615811 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.178594547 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.180689846 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.181889349 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.180754988 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.18184012 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.181905067 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.178646449 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.182067338 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.181896676 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.17955401 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.18239214 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.179821801 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.179481551 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.179609508 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.179360872 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.181846032 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.182232967 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.183009555 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.182704297 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.181867023 seconds)
  done (took 66.011535239 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.181411421 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.182268405 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.180243308 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.182340363 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.18254373 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.180172152 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.182033269 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.179654142 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.179709584 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.183330968 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.181139565 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.182572356 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.179942399 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.183443563 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.18119937 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.182360756 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.180908113 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.180855988 seconds)
  done (took 22.386476592 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.181117643 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.182117494 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.184059561 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.181038732 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.181129097 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.184144691 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.180596689 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.18398844 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.183874691 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.181812501 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.181147203 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.184253612 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.184924048 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.183969419 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.181152769 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.182157321 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.18461788 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.18442876 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.181567192 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.1819444 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.184394135 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.184648667 seconds)
  done (took 27.144576 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.187588738 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.187348379 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.20233863 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.224407665 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.214745863 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.187243354 seconds)
  done (took 8.32590894 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.182862717 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.185133058 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.182123134 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.185463786 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.184650859 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.182028826 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.182270905 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.182999609 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.184726285 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.183275379 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.183043244 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.185680789 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.184210629 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.183265119 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.184916387 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.184673394 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.183163189 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.182498796 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.183196999 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.184908855 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.182732246 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.184831401 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.182675716 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.183691306 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.184085894 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.182972684 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.185019009 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.184037052 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.183453177 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.186280183 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.186055625 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.183682795 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.18508529 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.1836224 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.187616142 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.185545315 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.183929463 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.187015556 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.186737263 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.184313075 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.185469259 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.187315686 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.186480956 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.184225966 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.186858775 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.184300484 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.183912771 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.183152195 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.184365101 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.187696675 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.186580186 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.184824944 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.186774718 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.187067458 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.186655272 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.187380075 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.18552673 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.184730687 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.187697692 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.18615751 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.185254653 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.187775173 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.185849486 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.186521924 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.187466815 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.185704644 seconds)
  done (took 79.328226418 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.184669335 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.185349946 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.185208101 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.186225031 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.18464322 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.186280576 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.18575673 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.185231721 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.185884988 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.185120755 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.189089357 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.18618161 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.185475347 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.18618061 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.185836881 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.185731707 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.18586616 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.185025563 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.185425951 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.189214118 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.186229358 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.186339785 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.186152192 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.185710384 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.185858063 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.18872754 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.186190887 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.186599122 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.186509632 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.186225128 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.186722148 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.187034119 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.186440797 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.186294302 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.186983734 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.186414512 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.186482964 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.186980976 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.187491756 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.19003099 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.187004423 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.190580311 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.187179827 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.187313428 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.188485912 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.187988565 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.187936117 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.187746135 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.187280129 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.187550114 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.188774443 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.18733654 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.188412285 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.187998886 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.188359265 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.187538733 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.188578235 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.188036241 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.188085621 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.1906217 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.189072382 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.188483886 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.192531721 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.188719195 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.189858607 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.188386033 seconds)
  done (took 79.480560939 seconds)
done (took 1644.591572568 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.277912464 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.187896082 seconds)
  done (took 13.59336331 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.356496077 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.309223982 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.192815805 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.208653929 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.194492676 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.190939195 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.190448836 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.194920937 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.19441759 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.193853098 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.193171953 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.383830028 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.248256304 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.194203449 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.19319109 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.286290291 seconds)
  done (took 40.855997466 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.2176197 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.203546797 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.297584288 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.21861014 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.222459402 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.361615061 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.251008531 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.203222614 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.346145582 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.238548953 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.574190886 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.223937334 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.203027278 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.17807798 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.219021289 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.363139887 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.415300379 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.579591082 seconds)
  done (took 27.447548607 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.578119026 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.223333074 seconds)
  done (took 8.93622683 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.202758181 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.197447002 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.23241567 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.239995105 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.222105594 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.273135017 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.223021034 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.223583157 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.217272354 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.253725099 seconds)
  done (took 63.420241603 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.219179897 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.20304527 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.202657512 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.200827284 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.193790976 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.208892889 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.200583624 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.19797745 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.260726168 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.310626764 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.216294193 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.209685882 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.203454065 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.20353198 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.195671414 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.237203059 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.336243782 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.196286228 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.194311172 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.208257046 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.203827118 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.281432571 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.239037106 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.197037515 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.30975377 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.274664367 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.207946871 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.20972371 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.339184218 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.196969927 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.202312892 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.204506106 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.205151575 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.75977797 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.660968681 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.210136375 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.226073678 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.213632776 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.197511483 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.324946038 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.204132341 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.210286126 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.196184654 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.638054951 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.355162153 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.304270317 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.271095877 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.206635998 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.203899217 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.262115451 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.205181033 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.20528625 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.230803019 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.919949211 seconds)
  done (took 102.614801667 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.230082695 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.6858085 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.363431905 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.219990826 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.973452352 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.903251918 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.19960324 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.439809059 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.229321747 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.198339271 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.525949791 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.659688152 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.207383828 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.199333439 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.395528398 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.201334045 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.198021642 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.980614503 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.199478481 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.196890064 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.608445549 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.213118571 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.211105113 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.359611709 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.234513188 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.621866889 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.48304977 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.642025227 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.203576212 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.197917269 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.623138805 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.200055299 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.254662738 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.200002775 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.451916322 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.512394723 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.495620272 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.203837129 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.206204126 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.201673135 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.232104865 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.619816892 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.505539731 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.200815058 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.200112141 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.641156328 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.200060219 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.205477797 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.207355752 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.395164585 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.986313417 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.201468975 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.486753733 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.201106771 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.470724454 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.207373986 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.230747707 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.651944948 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.200907773 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.272114694 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.230964922 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.199328941 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.202652456 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.203211441 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.20497534 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.509172783 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.569347002 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.205446576 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.509646453 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.619753121 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.202261061 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.6773295 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.103472825 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.206744899 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.275660632 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.200052501 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.787659718 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.653019706 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.224791613 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.20095131 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.495844646 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.205282989 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.499804909 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.212310812 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.202477179 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.621653412 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.219691016 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.208662498 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.202187642 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.204663034 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.8715417 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.203800004 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.450702897 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.248024812 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.20223647 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.201603207 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.234715713 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.201659164 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.204136513 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.208446919 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.681211432 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.206742691 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.494350336 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.221212199 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.203207263 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.204513757 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.204936708 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.201515035 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.41378355 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.729560233 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.208125911 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.201955001 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.201739412 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.212273388 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.340235918 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.208382697 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.470066143 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.20481059 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.202703298 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.220394622 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.940218602 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.259314016 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.202985576 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.206931722 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.015148595 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.407995791 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.219295071 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.205453571 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.202304946 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.217781509 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.632641414 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.205985901 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.224771457 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.207981638 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.863116271 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.208512774 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.207578919 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.643666911 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.207301594 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.202804019 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.211384297 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.203513587 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.509908222 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.463123861 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.505068939 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.204786094 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.21731296 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.847151577 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.212437962 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.343205257 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.22213766 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.200027606 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.401247453 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.779468202 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.203768686 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.766543825 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.206094821 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.4090728 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.207062004 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.53386966 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.653406541 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.206646922 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.208113972 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.864214892 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.886669668 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.844477167 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.206924302 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.519529312 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.199461289 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.658500246 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.20538248 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.205015452 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.68821069 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.209253271 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.207154812 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.204137409 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.204751913 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.348506014 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.377360328 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.754962182 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.207041124 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.628256107 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.212172894 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.211100014 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.206169526 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.209643404 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.561801483 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.253276949 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.211168844 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.250037632 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.206847873 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.205663101 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.640596526 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.135353537 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.208331361 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.356351479 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.788566854 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.207229423 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.207431229 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.9099402 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.615153743 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.678989298 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.238678044 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.478203274 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.211899094 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.242891545 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.922299641 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.209594927 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.685255983 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.210033286 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.206952955 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.761439851 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.208175864 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.557401805 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.206259843 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.209271832 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.696222675 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.208799117 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.208287813 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.628063313 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.208634111 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.448122104 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.209309305 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.24561433 seconds)
  done (took 1081.008032876 seconds)
done (took 1339.004264055 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.208258861 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.208347449 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.190430286 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.209100153 seconds)
  done (took 25.965150194 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.21452204 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.214473813 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.211919859 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.213603333 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.21256258 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.21398875 seconds)
  done (took 8.431199279 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.299640717 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.206772957 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.207930843 seconds)
  done (took 18.863055803 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.405529943 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.364155677 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.536577873 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.11603209 seconds)
  done (took 9.571959306 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.211558674 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.210793405 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.211008075 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.212985878 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.214630049 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.215631255 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.213023543 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.213880594 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.2156091 seconds)
  done (took 12.067999441 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.719750048 seconds)
done (took 80.766934838 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.214806869 seconds)
    (2/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.231596934 seconds)
    (3/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.223672939 seconds)
    (4/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.306037917 seconds)
    (5/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.924618878 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.810300048 seconds)
    (7/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.384185556 seconds)
    (8/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.403859258 seconds)
    (9/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.767992223 seconds)
    (10/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.351548866 seconds)
    (11/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.893765494 seconds)
    (12/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.24869683 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.452685005 seconds)
    (14/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.012957658 seconds)
    (15/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.191317444 seconds)
    (16/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.47451483 seconds)
    (17/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.531877969 seconds)
    (18/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.247716287 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.034798832 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.030921941 seconds)
    (21/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.232159704 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.279292028 seconds)
    (23/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.403369931 seconds)
    (24/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.697072163 seconds)
    (25/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.598605451 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.415883155 seconds)
    (27/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.326179047 seconds)
    (28/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.317575411 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.173030103 seconds)
    (30/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.323136604 seconds)
    (31/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.223625715 seconds)
    (32/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.195891397 seconds)
    (33/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.39525566 seconds)
    (34/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.622537979 seconds)
    (35/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.364483221 seconds)
    (36/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.213975201 seconds)
    (37/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.219527059 seconds)
    (38/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.65877183 seconds)
    (39/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.213335063 seconds)
    (40/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.407675093 seconds)
    (41/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.196705862 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.72640437 seconds)
    (43/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.78716732 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.607484629 seconds)
    (45/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.558681209 seconds)
    (46/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.201211809 seconds)
    (47/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.21570362 seconds)
    (48/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.1953775 seconds)
    (49/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.237995447 seconds)
    (50/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.74422445 seconds)
    (51/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.709138303 seconds)
    (52/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.214595493 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.322599447 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.468383187 seconds)
    (55/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.329497571 seconds)
    (56/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.215584793 seconds)
    (57/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.501206376 seconds)
    (58/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.230748317 seconds)
    (59/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.203295917 seconds)
    (60/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.279627804 seconds)
    (61/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.293598169 seconds)
    (62/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.718229336 seconds)
    (63/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.237655643 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.540374274 seconds)
    (65/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.255907503 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.455166415 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.317557786 seconds)
    (68/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.664676227 seconds)
    (69/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.196952199 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.469781248 seconds)
    (71/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.430512379 seconds)
    (72/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.239666835 seconds)
    (73/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.058779406 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.211067818 seconds)
    (75/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.22360975 seconds)
    (76/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.972916797 seconds)
    (77/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.37883196 seconds)
    (78/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.275250249 seconds)
    (79/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.208538419 seconds)
    (80/309) benchmarking ("sort", Int64, false)...
    done (took 5.359197597 seconds)
    (81/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.428148465 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.311819806 seconds)
    (83/309) benchmarking ("map", identity, BigInt, false)...
    done (took 1.962340413 seconds)
    (84/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.222785998 seconds)
    (85/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.184088474 seconds)
    (86/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.226695688 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.064891745 seconds)
    (88/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.710610708 seconds)
    (89/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.338559892 seconds)
    (90/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.263951308 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.262860556 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.23440768 seconds)
    (93/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.979204584 seconds)
    (94/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.751269306 seconds)
    (95/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.333270561 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.207482869 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.259443281 seconds)
    (98/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.260379399 seconds)
    (99/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.388755496 seconds)
    (100/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.648263245 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.751124258 seconds)
    (102/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.262751939 seconds)
    (103/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.525604289 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.56715893 seconds)
    (105/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.250997568 seconds)
    (106/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.546884366 seconds)
    (107/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.452280008 seconds)
    (108/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.245784787 seconds)
    (109/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.379833132 seconds)
    (110/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.949801675 seconds)
    (111/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.647409252 seconds)
    (112/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.299234289 seconds)
    (113/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.237795513 seconds)
    (114/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.337820611 seconds)
    (115/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.227963201 seconds)
    (116/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.33015864 seconds)
    (117/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.436470257 seconds)
    (118/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.978827356 seconds)
    (119/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.417795302 seconds)
    (120/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.330885688 seconds)
    (121/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.847790519 seconds)
    (122/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.218303224 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.218616094 seconds)
    (124/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.709178123 seconds)
    (125/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.199186167 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.308698032 seconds)
    (127/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.407317712 seconds)
    (128/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.627090029 seconds)
    (129/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.21049266 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.497205047 seconds)
    (131/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.906948176 seconds)
    (132/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.752654313 seconds)
    (133/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.201358614 seconds)
    (134/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.328719083 seconds)
    (135/309) benchmarking ("sort", Bool, false)...
    done (took 1.715487967 seconds)
    (136/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.237957212 seconds)
    (137/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.229196913 seconds)
    (138/309) benchmarking ("sort", Int8, false)...
    done (took 4.297743792 seconds)
    (139/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.296658774 seconds)
    (140/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.496584869 seconds)
    (141/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.489620867 seconds)
    (142/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.798087268 seconds)
    (143/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.541730202 seconds)
    (144/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.502302948 seconds)
    (145/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.898967219 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.062383775 seconds)
    (147/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.21767123 seconds)
    (148/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.48785867 seconds)
    (149/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.211517679 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.888948661 seconds)
    (151/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.890076075 seconds)
    (152/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.473375192 seconds)
    (153/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.184591485 seconds)
    (154/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.300444425 seconds)
    (155/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.239076726 seconds)
    (156/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.215512711 seconds)
    (157/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.314129721 seconds)
    (158/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.457818698 seconds)
    (159/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.217663175 seconds)
    (160/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.622308811 seconds)
    (161/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.21811988 seconds)
    (162/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.91501361 seconds)
    (163/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.241482411 seconds)
    (164/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.271729149 seconds)
    (165/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.339396135 seconds)
    (166/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.767498343 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.615114475 seconds)
    (168/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.250285473 seconds)
    (169/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.337555611 seconds)
    (170/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.548547594 seconds)
    (171/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.471533104 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.719341956 seconds)
    (173/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.423044872 seconds)
    (174/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.423413945 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.016017441 seconds)
    (176/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.727975156 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.291801481 seconds)
    (178/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.231052323 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.037794097 seconds)
    (180/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.779788592 seconds)
    (181/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.233641986 seconds)
    (182/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.299759514 seconds)
    (183/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.035280233 seconds)
    (184/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.251528845 seconds)
    (185/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.222026031 seconds)
    (186/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.207530671 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.267637341 seconds)
    (188/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.744331395 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.599993641 seconds)
    (190/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.54305523 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.947288411 seconds)
    (192/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.301918289 seconds)
    (193/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.364487687 seconds)
    (194/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.244428127 seconds)
    (195/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.242086506 seconds)
    (196/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.202097976 seconds)
    (197/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.240391657 seconds)
    (198/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.299897965 seconds)
    (199/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.257439242 seconds)
    (200/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.514686354 seconds)
    (201/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.244220862 seconds)
    (202/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.397197685 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.313410279 seconds)
    (204/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.219792198 seconds)
    (205/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.231310163 seconds)
    (206/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.223881533 seconds)
    (207/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.221951205 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.275130563 seconds)
    (209/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.584216083 seconds)
    (210/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.24287011 seconds)
    (211/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.241089266 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.238344975 seconds)
    (213/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.674624303 seconds)
    (214/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.222951811 seconds)
    (215/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.759297839 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.860244047 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.417778527 seconds)
    (218/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.299760307 seconds)
    (219/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.206595207 seconds)
    (220/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.504364831 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.57954408 seconds)
    (222/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.237813029 seconds)
    (223/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.671120963 seconds)
    (224/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.983289575 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.203789645 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.275942912 seconds)
    (227/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.395783558 seconds)
    (228/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.895674047 seconds)
    (229/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.237103416 seconds)
    (230/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.366040229 seconds)
    (231/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.283733485 seconds)
    (232/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.226620545 seconds)
    (233/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.521659635 seconds)
    (234/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.260012556 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.864012542 seconds)
    (236/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.24610408 seconds)
    (237/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.919871251 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.341434535 seconds)
    (239/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.281043441 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.222433097 seconds)
    (241/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.205073856 seconds)
    (242/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.245432775 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.607838642 seconds)
    (244/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.451084973 seconds)
    (245/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.733413822 seconds)
    (246/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.04092435 seconds)
    (247/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.983190575 seconds)
    (248/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.224179854 seconds)
    (249/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.353625223 seconds)
    (250/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.208545403 seconds)
    (251/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.34419945 seconds)
    (252/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.228065082 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.659549013 seconds)
    (254/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.34616004 seconds)
    (255/309) benchmarking ("sort", BigInt, false)...
    done (took 6.222443618 seconds)
    (256/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.28199677 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.061110204 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.431472297 seconds)
    (259/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.247297495 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.816078887 seconds)
    (261/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.896734121 seconds)
    (262/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.374111984 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.247105934 seconds)
    (264/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.392569097 seconds)
    (265/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.314912108 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.598980734 seconds)
    (267/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.222846658 seconds)
    (268/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.629528389 seconds)
    (269/309) benchmarking ("sort", Float64, false)...
    done (took 5.457564865 seconds)
    (270/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.238720832 seconds)
    (271/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.495949475 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.402927452 seconds)
    (273/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.511777919 seconds)
    (274/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.90506224 seconds)
    (275/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.250694197 seconds)
    (276/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.228366808 seconds)
    (277/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.713899263 seconds)
    (278/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.620038652 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.30874196 seconds)
    (280/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.941228419 seconds)
    (281/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.345975613 seconds)
    (282/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.20374922 seconds)
    (283/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.579047437 seconds)
    (284/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.470946803 seconds)
    (285/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.226630584 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.304584281 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.010895497 seconds)
    (288/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.226525663 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.322952462 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.621379423 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.344408476 seconds)
    (292/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.762642507 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.011977741 seconds)
    (294/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.323938493 seconds)
    (295/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.286633002 seconds)
    (296/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.355120285 seconds)
    (297/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.517547894 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.264759099 seconds)
    (299/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.247320666 seconds)
    (300/309) benchmarking ("sort", Float32, false)...
    done (took 5.193625081 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.552664945 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.367370917 seconds)
    (303/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.792501391 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.246317733 seconds)
    (305/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.328388598 seconds)
    (306/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.214073997 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.963055396 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.218648609 seconds)
    (309/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.374470751 seconds)
  done (took 870.744220233 seconds)
done (took 871.894909574 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.254261365 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.247994418 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.232058783 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.253199919 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.343893087 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.26225138 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.2421321 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.234874392 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.280397345 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.281338215 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.231658768 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.260346176 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.233636389 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.231809299 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.232254354 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.246572496 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.138335657 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.234156386 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.249728886 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.2427503 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.250000599 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.232222478 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.282643072 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.260799111 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.236591127 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.236333914 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.236186302 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.252835725 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.344769058 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.236791714 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.236079074 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.245389122 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.141378859 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.233693677 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.228490121 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.253158468 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.244164889 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.242810771 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.237687373 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.265807048 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.484278729 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.234517822 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.235953395 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.234469518 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.234794378 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.238771436 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.235189913 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.239782776 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.24728215 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.24777045 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.477298704 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.248458115 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.237081034 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.235970269 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.245982273 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.234514949 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.239365588 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.250757623 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.254327905 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.250548793 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.140412012 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.241394938 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.238337761 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.253260486 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.24294633 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.540293231 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.232491341 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.238914316 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.496002367 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.242259753 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.519549919 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.244060489 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.237403884 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.249185617 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.267466139 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.145468816 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.233132695 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.235619027 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.243168855 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.234719482 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.245425384 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.249143927 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.241075811 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.236377463 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.249913895 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.264790483 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.246711924 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.238551318 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.245890197 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.255347653 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.243338748 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.246117452 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.239174686 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.233071591 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.245926162 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.241351026 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.239913329 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.239445307 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.242424649 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.248253439 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.486175148 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.254848666 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.234612719 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.23414139 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.236715478 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.251602631 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.501355281 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.240040734 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.260605798 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.286483686 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.23971039 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.146796076 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.242250748 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.25333408 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.24704562 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.241829521 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.233741149 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.148525668 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.519099284 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.253759553 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.239541696 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.237095563 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.254334518 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.24018106 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.235257858 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.148806715 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.241903848 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.25218655 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.359761851 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.248702007 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.269960326 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.237556972 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.241424942 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.267053456 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.254142008 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.270843192 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.242502469 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.254594549 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.254601539 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.236685323 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.250484015 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.250020828 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.240651152 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.246139274 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.23399328 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.268515736 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.252343065 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.251014308 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.260811372 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.360831247 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.237735351 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.139001324 seconds)
done (took 208.170668254 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.301914474 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.235701892 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.335779414 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.236435805 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.338986791 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.339136537 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.235227647 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.235714382 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.234192111 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.619959623 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.234957515 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.235506188 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.239525336 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.234591568 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.325326155 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.236974393 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.235307178 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.582374807 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.237626849 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.31218245 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.240284151 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.23527442 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.238009184 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.624093636 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.235304835 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.237506037 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.311438298 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.237210751 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.58868643 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.241604851 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.235611126 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.587921628 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.333015114 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.254523852 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.248430309 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.245159906 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.339459412 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.253375009 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.324429493 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.323289351 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.336711167 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.276444967 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.244697118 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.238156697 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.240985843 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.239649025 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.236888233 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.264770067 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.235903281 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.236332563 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.58649285 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.248465359 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.238205251 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.237438642 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.237321536 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.267966156 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.237443275 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.240473602 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.334619928 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.24076832 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.306327407 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.625539041 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.622437123 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.239544699 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.23844247 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.238127534 seconds)
  done (took 142.186756665 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.310327611 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.315777894 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.349664867 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.246508766 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.293728177 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.353852212 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.246718818 seconds)
  done (took 10.292109524 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.249767398 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.240757624 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.299313548 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.29850258 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.239917571 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.391364306 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.239957103 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.25570211 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.237814791 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.310193167 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.24145937 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.241207442 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.246517989 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.237434889 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.29795028 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.256075408 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.359897375 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.24547999 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.240497191 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.403193534 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.238286299 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.247335657 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.297120864 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.255695872 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.242166399 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.251397059 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.827772163 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.241602551 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.239054786 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.241476119 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.239179319 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.283232187 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.241969707 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.242130541 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.239491842 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.362785798 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.241794295 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.238456897 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.242345736 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.242847876 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.241390447 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.241954514 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.243125092 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.239646063 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.242397344 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.269520761 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.243004857 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.243374024 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.242883405 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.24292947 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.307552151 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.242721121 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.240180707 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.240651066 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.316263186 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.249407404 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.244270499 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.24082399 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.243713148 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.240896791 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.403614749 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.300710634 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.243590066 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.301477729 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.243733154 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.24373036 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.243862335 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.24372024 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.308383829 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.244160415 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.300971549 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.240917381 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.430369874 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.270958156 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.244326339 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.251195124 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.250614338 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.244032167 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.244307826 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.253439285 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.241049211 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.250032406 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.253753327 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.240907356 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.241645351 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.350222953 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.357577854 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.241472605 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.2612434 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.255247188 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.241684897 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.311814929 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.244776794 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.241897597 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.312082434 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.363695394 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.302866755 seconds)
  done (took 144.604968761 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.253617778 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.256331496 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.250210825 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.265480152 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.250051833 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.249320275 seconds)
  done (took 8.705774594 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.251338129 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.245479975 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.245369621 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.245497855 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.24607409 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.245959891 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.245951096 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.25040081 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.250061238 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.245553332 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.246598348 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.248200244 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.247826119 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.246217864 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.247174694 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.24602053 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.246912598 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.244466218 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.24667518 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.247028131 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.345514255 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.246884334 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.247052425 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.251679238 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.250913718 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.247802248 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.258828672 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.246804611 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.246254234 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.258846929 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.249486677 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.247484071 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.252405065 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.255650471 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.251501301 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.252256441 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.249631535 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.249269829 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.245792732 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.247678445 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.249372823 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.248121624 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.247811338 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.249393351 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.253106006 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.255960902 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.252612167 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.259741464 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.248484917 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.250177804 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.25104313 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.247908085 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.248725745 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.249395505 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.254238921 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.255414928 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.252858332 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.250028623 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.248134333 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.253239818 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.248630905 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.249530838 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.25348531 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.251633623 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.256545189 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.250126842 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.254190839 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.252871755 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.249218834 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.249467202 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.250772074 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.246669051 seconds)
  done (took 92.263015089 seconds)
done (took 399.224406841 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.3980847 seconds)
  done (took 7.583571704 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.418994759 seconds)
  done (took 7.605695496 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.126011151 seconds)
  done (took 19.313587879 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.269061385 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.330046902 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.262688407 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.25260244 seconds)
  done (took 26.302465339 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.376017291 seconds)
  done (took 7.561591332 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.254138572 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.243964264 seconds)
  done (took 13.68641712 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.46487664 seconds)
  done (took 7.651817388 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.288914709 seconds)
  done (took 7.477426002 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.260842347 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.259642751 seconds)
  done (took 13.960391559 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.231428092 seconds)
  done (took 7.418909728 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.09771012 seconds)
  done (took 8.28698085 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.253449261 seconds)
  done (took 7.44433724 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.300006857 seconds)
  done (took 7.488150094 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.387090064 seconds)
  done (took 8.575553376 seconds)
done (took 151.542626758 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.249848267 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.252252847 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.252152815 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.251536762 seconds)
  done (took 26.194593014 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.285514201 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.285257333 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.286333172 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.296773326 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.289416817 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.285865292 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.277922486 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.277884741 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.295886425 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.289151928 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.288119751 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.288132277 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.285184018 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.278772556 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.288191751 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.289696706 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.298016413 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.289730146 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.279088413 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.290007503 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.253842478 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.299078859 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.289007353 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.253219815 seconds)
  done (took 32.02838359 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.454398534 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.32773794 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.410184327 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.309914586 seconds)
  done (took 6.691335553 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.304365801 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.306527073 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.319408776 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.357511288 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.395037369 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.317014776 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.280541915 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.275543587 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.261863963 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.308201533 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.382600488 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.323150862 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.391435265 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.253994085 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.482615645 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.253841494 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.254530954 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.306160209 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.357080303 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.371206079 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.254623647 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.305710955 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.308947878 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.323798155 seconds)
  done (took 32.885385677 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.253199624 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.262040599 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.261128674 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.254828621 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.253944086 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.254444825 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.259432325 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.255297058 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.275292661 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.255773981 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.25326304 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.253875301 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.253148265 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.254718098 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.253732447 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.267444945 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.26859574 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.254549858 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.25775632 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.259882471 seconds)
  done (took 26.353103582 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.25213499 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.396522216 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.60516889 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.508793765 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.25436224 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.255279931 seconds)
  done (took 28.46373185 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.320449022 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.437466103 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.262099636 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.576814726 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.652491576 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.263072495 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.260821398 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.468978066 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.738950399 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.741601092 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.309619264 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.321454781 seconds)
  done (took 18.547680762 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.256727726 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.256087759 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.267411181 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.271846671 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.308186073 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.266569973 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.266701314 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.2544564 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.311032236 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.315679541 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.267057462 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.309476252 seconds)
  done (took 36.546301783 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.337953854 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.294411907 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.140860132 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.962086553 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.62879177 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.462869408 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.987078556 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.664475718 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.257944545 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.525249326 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.923658728 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.354494684 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.505221642 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.25831771 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.253743837 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.224930591 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.479475896 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.70116976 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.254748333 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.912335763 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.278993239 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.251786078 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.073496837 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.281156294 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.463750775 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.38431064 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.51295627 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.252784893 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.504518125 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.266117747 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.262451808 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.251984567 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.526442727 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.885576221 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.346892307 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.263052243 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.931782635 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.966025224 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.24564805 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.92654879 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.673369499 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.257532998 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.263210585 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.253328851 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.187715049 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.258610401 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.673760683 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.262314025 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.964034274 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.253222317 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.264175315 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.34844 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.258674124 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.069877144 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.268162888 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.255285091 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.250939544 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.264195659 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.82815834 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.38439751 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.269043807 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.190573516 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.611739909 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.923891606 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.826186613 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.35799073 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.259255641 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.258249688 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.189383792 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.008309106 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.274808106 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402200183 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.275423973 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.904937448 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.909398763 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.969804862 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.198637631 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.775996578 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.267075675 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.191486045 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.483328471 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.255719514 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.191051571 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.197054732 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.18863968 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910414544 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.26673605 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.594709656 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.270117782 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.667288643 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.27070608 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.275105355 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.279922527 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.479633071 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.140896725 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.257838554 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.723375322 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412164889 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.278037154 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.667922422 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.193360213 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.260544223 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.510577459 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.467810721 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.268812126 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.226607754 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.444215406 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.273150209 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.274618781 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.256592714 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.268283029 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.782765152 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.271527337 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.3958381 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.276244217 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.670514826 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954049094 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.260265381 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.361273083 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.96536919 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.500512074 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.993314882 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.259210119 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.339849298 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.267104626 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.258452687 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.034503153 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.774359138 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.258896981 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.260245632 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.26551755 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.271404505 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.259554267 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.204548927 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.256309164 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.993809559 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.262737088 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.482359054 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.258749251 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.535515759 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.192423005 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405374926 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.351032962 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.481696876 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.369550183 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.2581269 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.515874811 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.263058844 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.268122043 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.27208273 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.277772241 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.357510161 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.280890276 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.259531062 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.517353537 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.263026936 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.263663124 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.031358015 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.264091784 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.268757124 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.264515316 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.092855397 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.785751857 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.24151839 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.265484322 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.245799351 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.274105052 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.323623065 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.265830207 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.269985428 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.898851229 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.069777725 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.267935718 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.268261605 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.484645121 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.270592429 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.970330497 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.338993149 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.441611034 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.795889288 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.273518925 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.194956784 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.97103663 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.955029485 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.262609294 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.199531212 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.262354751 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.271770363 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.271979405 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.756672397 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.799980545 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.263997247 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.978984883 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.269854172 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.272448911 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.26868734 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.262641513 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.876748976 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.427655225 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.275728997 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.274209006 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.403982999 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.274917722 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.195022875 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.26509475 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.267397862 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.261432979 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.262499479 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.294713783 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.951662063 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.72417999 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.520409409 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.931983051 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.276409186 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.062245661 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.292119558 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.261225685 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.787083162 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.286992549 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.269890744 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.28526467 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.273686082 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.985050061 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.933985935 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.83422761 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.930926564 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.74728235 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.142611472 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.274299671 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.26597106 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.685393791 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.200458061 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.826807811 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.435031875 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.683191326 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.208514897 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.447465578 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.380276841 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.961250042 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.274202347 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.491948519 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.138211953 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.799663719 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.288098947 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.474890276 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.299484013 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.268754969 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.1950922 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.550283877 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.48467914 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.737918739 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.34507136 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.682436659 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.783509125 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.281487041 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.268864936 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.552318855 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425638142 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.98545835 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.4357645 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.264028083 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.015898192 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.736330904 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.272142888 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.489021722 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.85153706 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.274365776 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.450605109 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.203748358 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.275721675 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.275540182 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.265258129 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.397990895 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.229586237 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.531903081 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.275499558 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.197823115 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.265278272 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.759633683 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.137327756 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.270626436 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.266274041 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960687293 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.276775907 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.52319704 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.272225359 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.869477532 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.271057727 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.200205241 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.198687019 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.957685183 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.269999709 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.241991287 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.711747819 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.604527412 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.260613266 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.292930037 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.111507856 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.521123236 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.279727398 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.79364925 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.493789546 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.034109986 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.290726386 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.366882591 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.795797793 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.267522669 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.265703611 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.502155525 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.091555611 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.490064381 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.161785281 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.173110734 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.270069674 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.480915569 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.266210668 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.009645072 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.505886072 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.979297961 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.286785711 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.937742253 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.294919 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.020418818 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.195249572 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.624939942 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.281389844 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.347270088 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.277531449 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.277962298 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.277932539 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42644634 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.00786291 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.283117855 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.282037446 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.361005735 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.420516164 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.873003963 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.273956887 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.802560682 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.944869395 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.807549534 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.283001336 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.268623616 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.267706741 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.201590748 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.416486781 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.494078683 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.541670887 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397980621 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.688974532 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.29250514 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.801692503 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.292292102 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.48218892 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.543258579 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.164463809 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.280906295 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.281774165 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.268241361 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.279346181 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.48036934 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.722806978 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.786015765 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386918284 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.269064752 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.686519702 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.546884978 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.269502055 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.270212396 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.859980026 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.276357867 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.582647566 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.279043345 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.04101759 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.419139296 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.279902554 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.906861642 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.282151894 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.425821984 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.042286822 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.961548539 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.527170972 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.679159411 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.281486265 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.806673639 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.909132698 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.536537345 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.337456976 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.281180948 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.381639056 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.417571708 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.264728913 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.284556716 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.27026701 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.115825858 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.980605567 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.280465525 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.810371206 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.537080005 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.26844647 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.252235885 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.307975046 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.28047122 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.495724978 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93886011 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.498408082 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.2805566 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.276497215 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.086068727 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.809598956 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.28583136 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.205959716 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.274515724 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493520831 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.509378513 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.292507499 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.725492212 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.982620789 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.788076594 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.244389421 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.293739915 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.272018431 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.913674563 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.811258792 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.876641652 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.724331791 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.831209805 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.28504549 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.547505991 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.277471582 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.272461703 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.55034358 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.276286963 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.274514562 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.285679583 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.804222624 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.977882857 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.296658184 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.990468636 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.211218661 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.615902062 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.893678239 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.212137084 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.276286687 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.442253914 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.276883905 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400874731 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.285817605 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.271016998 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.298052755 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.031188992 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.557473617 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.278932037 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.269165223 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.877396627 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.284158778 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.28740964 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.495687806 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.276125951 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.949904039 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.626830308 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.52842936 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.27932772 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.261176155 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.277591764 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.275051827 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.262491855 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.473119815 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.771178471 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.793232113 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.278352928 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.286499374 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.27911363 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.490613227 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.485703086 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.043072469 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.300243632 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.27938459 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.291560607 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.186855319 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.783229362 seconds)
  done (took 1544.099022419 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.297051221 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.280903173 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.302850049 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.352004923 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.28617655 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.372974356 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.299222012 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.358661145 seconds)
  done (took 51.767567394 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.281267885 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.495967052 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.309854315 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.286904705 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.290594514 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.286668666 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.676910371 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.283762306 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.288983115 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.29064171 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.291230733 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.284719579 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.848946586 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.2904799 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.281275 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.274061364 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.291283844 seconds)
  done (took 64.273062516 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.294624426 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.471193076 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.358063183 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.296251872 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.951771099 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.280807204 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.440178038 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.325160528 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.280420583 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.284648226 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.933042717 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.282188404 seconds)
  done (took 82.418091802 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.289173944 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.288259536 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.288803101 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.289035731 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.289315211 seconds)
  done (took 7.665228267 seconds)
done (took 1959.124757862 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.539454467 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.908443906 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.873475427 seconds)
  done (took 5.000994708 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.428041067 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.476967376 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.597568456 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.602148957 seconds)
  done (took 7.324406312 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.557790863 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.655436041 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.477223407 seconds)
  done (took 5.909024843 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.539892842 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.283095528 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.398043384 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.275168079 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.277944942 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.280349871 seconds)
  done (took 20.054570267 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.281502493 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.284151925 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.282170662 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.283841296 seconds)
  done (took 6.35205456 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.26404468 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.001617159 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.266411669 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.278791778 seconds)
  done (took 18.031342723 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.028411206 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.039602398 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.025387619 seconds)
  done (took 7.313161055 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.294754465 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.127881143 seconds)
  done (took 9.642175408 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.582352443 seconds)
  done (took 2.802423476 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.413592849 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.551189618 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.222051537 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.181144799 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.250887353 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.693884809 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.71817907 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.363112114 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.170496317 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.186212192 seconds)
  done (took 25.972715099 seconds)
done (took 121.382243181 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.792483537 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.651426113 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.491404856 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.762892024 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.507983368 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.491026798 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.702020776 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.732339713 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.31174942 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.265311314 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.809552757 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.507995491 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.433296644 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.652654443 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.434449907 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.525253872 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.508735247 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.924848411 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.53296681 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.641114127 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.704419613 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.398181084 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.631417317 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.455340303 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.511969708 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.443268851 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 4.971835825 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.522231207 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.652988512 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.031069495 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.441470056 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.809156382 seconds)
  done (took 186.474923141 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.278772417 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.289756011 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.276552403 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.287851467 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.275130729 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.287735083 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.287312228 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.291097922 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.273739244 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.275301816 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.273514582 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.282039924 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.277221387 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.283513098 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.274035849 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.286232301 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.274260569 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.289270377 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.280448016 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.275698226 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.274552574 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.274556821 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.277307934 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.274982076 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.285338744 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.275502594 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.278184766 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.274557911 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.274809844 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.281811436 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.278183253 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.279706279 seconds)
  done (took 202.16690701 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.279431862 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.274915154 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.276142242 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.275486289 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.287660492 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.291114809 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.277094695 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.275211879 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.285372376 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.277004274 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.275431869 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.276151235 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.29086367 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.275322503 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.275633077 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.274805672 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.288726606 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.279039449 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.28136124 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.281198608 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.278355462 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.276031695 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.275191668 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.284457905 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.276763863 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.276996868 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.27630954 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.27684037 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.275941398 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.287153022 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.278704706 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.277649525 seconds)
  done (took 202.15293589 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.474337708 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.27936989 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.279682862 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.237928403 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.280126657 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.279459084 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.271025102 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.477497541 seconds)
  done (took 13.794283603 seconds)
done (took 605.810052784 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.420541942 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.167571296 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.471650526 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.301910524 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.940447169 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.307743254 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.302689011 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.454188312 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.168069104 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.459135147 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.428811364 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.30546256 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.566016935 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.300932601 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.534462573 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.390860516 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.100079128 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.203409124 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.596811015 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.752535637 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.541896207 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.678870554 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.454606912 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.15849539 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.572919531 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.684559843 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.917662511 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.096606568 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.302416823 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.593639707 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.754920378 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.148814309 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.356015853 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.340991353 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.389427763 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.371887484 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.13669112 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.338913714 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.479464821 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.461148429 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.723166519 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 1.989753117 seconds)
  done (took 86.882765604 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.271874556 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.273378361 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.271811565 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.272262231 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.273349913 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.272424706 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.272429293 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.272112517 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.272485664 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.27183535 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.272490636 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.27348267 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.272204547 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.273380714 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.272184824 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.273229862 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.274172162 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.275028306 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.272054734 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.272068907 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.274036003 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.272092709 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.274264593 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.272913861 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.273996649 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.273393225 seconds)
  done (took 34.316674371 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.287358773 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.509408792 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.668855947 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.294831368 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.289410361 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.29360149 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.358186203 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.287843906 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.292381972 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.291765841 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.433424886 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.288344878 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.323142145 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.680508075 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.294563089 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.287797445 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.287477165 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.290787647 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.517050992 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.303030735 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.366494664 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.290146428 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.360992008 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.302978257 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.294945013 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.292196273 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.295539573 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.776806081 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.294108326 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.435275195 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.970660951 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.358606114 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.731356109 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.685077401 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.973470596 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.289694796 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.28803423 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.440171248 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.293949137 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.291963429 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.359539196 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.29353889 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.681422774 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.891014407 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.309165422 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.288466574 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.800686911 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.441112044 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.508703627 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.302230692 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.702598846 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.298028023 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.290508714 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.294389396 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.510223384 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.300562792 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.29321531 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.79824443 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.300360774 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.36234233 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.292192218 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.295150447 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.52692232 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.296058968 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.514384622 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.296240132 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.303238238 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.295713759 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.683375455 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.298058377 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.911696239 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.309378524 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.289941609 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.437880342 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.516330907 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.830405833 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.298952893 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.52860372 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.744665535 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.362037686 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.299517144 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.769560986 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.366790435 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.299620344 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.293094753 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.292247768 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.290429772 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.333761359 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.360299336 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.843604909 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.903816534 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.811982814 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.364708922 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.308647636 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.294574065 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.799800855 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.293470712 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.290792033 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.678890963 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.913608662 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.308314775 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.303152897 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.899301592 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.312353165 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.364598624 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.301573203 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.690918698 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.29827459 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.334967161 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.290711244 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.303287752 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.299053614 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.364625812 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.301108331 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.292175671 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.886683627 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.461699576 seconds)
  done (took 169.417556859 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.294850999 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.289720926 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.28940879 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.289590024 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.289681445 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.296071045 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.289950776 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.289470273 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.296307775 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.29029398 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.289817045 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.289078304 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.29073536 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.290638152 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.318645208 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.297296691 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.946095318 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.291171695 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.298659792 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.289633213 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.062176869 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.293683295 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.290626852 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.302647336 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.293073502 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.293196569 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.296036653 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.293773241 seconds)
  done (took 150.872073798 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.29239666 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.802389346 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.295538866 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.412766168 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.312529126 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.291079668 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.412077843 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.347922463 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.299744147 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.2917201 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.291230981 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.568610273 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.296086951 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.752028712 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.464117696 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.410412413 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.757181471 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.294806954 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.291264723 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.29125857 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.416160724 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.300219847 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.567414987 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.80122568 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.295225879 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.802293963 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.282533071 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.294715308 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.297723258 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.806597305 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.293252824 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.564178912 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.367218072 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.351891533 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.807978592 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.762133827 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.755359504 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.423180372 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.299054393 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.292972642 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.292374787 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.282881727 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.806109131 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.295292817 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.299098598 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.795865134 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.309813867 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.295592041 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.302854421 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.292715206 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.352171795 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.351622075 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.572923482 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.811127389 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.363161916 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.316913357 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.415963951 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.641425768 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.298782488 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.759848389 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.283551111 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.806149465 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.300257398 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.283115046 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.296120683 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.300622908 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.428237859 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.414613278 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.762676566 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.302208898 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.765075212 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.456772807 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.298891654 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.296280543 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.299374611 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.824692618 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.773887462 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.43462004 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.424891537 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.477376955 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.289769471 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.30153808 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.287047755 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.372181098 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.298259142 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.814822436 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.773750687 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.301821958 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.299462142 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.300493938 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.300055363 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.460065812 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.822476363 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.373785576 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.758955913 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.593711123 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.581714999 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.301080917 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.353180929 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.300457362 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.582305858 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.301126487 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.351682941 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.704578565 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.582307375 seconds)
  done (took 153.682239591 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.524818478 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.420687941 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.386270857 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.408594762 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.798034487 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.842958893 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.400492717 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.418585883 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.398999092 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.53444424 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.387811662 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.390180889 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.470672854 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.374575464 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 1.955602674 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.370414222 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.389635529 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.421837446 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.403145954 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.272539078 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.896063136 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.572619309 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.462620219 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.351854622 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.393530639 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.000134576 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.822009674 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.792765665 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.461754008 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.483219671 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.801212005 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.379910478 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.18143441 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.922462998 seconds)
  done (took 62.329193132 seconds)
done (took 658.71605376 seconds)
SAVING RESULT...
DONE!
