cset: moving following pidspec: 7607
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.325474826 seconds)
loading group "string"... done (took 0.596356038 seconds)
loading group "linalg"... done (took 7.277870868 seconds)
loading group "parallel"... done (took 0.171151738 seconds)
loading group "find"... done (took 1.149461847 seconds)
loading group "tuple"... done (took 2.04002956 seconds)
loading group "dates"... done (took 1.299454136 seconds)
loading group "micro"... done (took 0.241320071 seconds)
loading group "io"... done (took 0.973120259 seconds)
loading group "scalar"... done (took 39.97442444 seconds)
loading group "sparse"... done (took 12.880663133 seconds)
loading group "broadcast"... done (took 1.0266838 seconds)
loading group "union"... done (took 13.818478787 seconds)
loading group "simd"... done (took 4.676380475 seconds)
loading group "random"... done (took 9.049498473 seconds)
loading group "problem"... done (took 1.960171499 seconds)
loading group "array"... done (took 21.187952001 seconds)
loading group "misc"... done (took 1.946628655 seconds)
loading group "sort"... done (took 3.209901255 seconds)
loading group "collection"... done (took 18.08460519 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.535793475 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.144260337 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.118756078 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.142073034 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.187744868 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.131738318 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.143615412 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084832692 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.057743026 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.159670478 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.139109759 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.476603718 seconds)
done (took 5.078124815 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.22863966 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086081211 seconds)
    (2/2) benchmarking "String"...
    done (took 0.095946331 seconds)
  done (took 0.890300642 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067332164 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.125510932 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.079384194 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067002723 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067764571 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.08251159 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068256992 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066899217 seconds)
  done (took 1.266696697 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073653155 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067898816 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.083739384 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067671484 seconds)
  done (took 1.001068459 seconds)
done (took 4.170994133 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.895144735 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.235808872 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.192152062 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.455442281 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.150152554 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.188039319 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.659069235 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.361886231 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.209651959 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099638201 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104247219 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.377672187 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106193347 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.670788864 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077809516 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.109210259 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.165141862 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.483793531 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083885969 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08379311 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.10520146 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.143226047 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.10367096 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.079666949 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.169446406 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.068982941 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.147209757 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.094919598 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.068097651 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.242781274 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.189317898 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.686445587 seconds)
  done (took 10.551334593 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.098822431 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.115527098 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068323091 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139161348 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.102910637 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.087732654 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071597957 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.084101368 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.092531577 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.158653957 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.11494495 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.105181023 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.082865018 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071305952 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.102743704 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.212822394 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.108181274 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.085696221 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.088166918 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.07639527 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.124473673 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.084011472 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.095840854 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.079414937 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.153287911 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.197239592 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113143433 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.112278669 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.06980897 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.082257846 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.133162699 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144002951 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067437798 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082483575 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.139822275 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.112118678 seconds)
  done (took 4.57763484 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.041401295 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.163557454 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.092411034 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.152306333 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.085343847 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.109458341 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.082843417 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099675586 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.246808451 seconds)
    (9/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.11299554 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.051601765 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.481363719 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126938169 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.101651719 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068605742 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067369414 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.083354601 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.522609861 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.145322358 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102210677 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.10328998 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.088997211 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069994978 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.384837809 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067974819 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066451889 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084751217 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.059270559 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.145238884 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067815602 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.209926338 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.088699034 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.0873232 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101774094 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.19372174 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09384003 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.123761134 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.065149453 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.081410126 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.168346088 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074149074 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065980892 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.105050195 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117966765 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.103848055 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.083061716 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067580398 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.180699062 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06595849 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.098914494 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.893327989 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.166450994 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079097484 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.067608772 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.288945146 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.083667824 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083873776 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064016726 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.278021513 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.152504243 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068385719 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.084268591 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067382435 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068847095 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.741649112 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.070043509 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.835872115 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.0712522 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077937074 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.087266837 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068708074 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089900754 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073603527 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.100626883 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066321461 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.067861443 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.082792037 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065259381 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.083555676 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084802229 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.079717778 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064550926 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.20416609 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.06582618 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.083787713 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064543636 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.10197091 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097291094 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.085561868 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.067409582 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115913975 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068765333 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066585293 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.120416028 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069068182 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.104966462 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085041957 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113489256 seconds)
    (98/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.079074685 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066238099 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.150937188 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080672604 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.099105277 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.094330257 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116297044 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.082122698 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084067453 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.153280102 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.06470132 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064913391 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.083288984 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.064822072 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.083458692 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068716451 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.097217259 seconds)
  done (took 21.402062593 seconds)
done (took 38.279623021 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.292887199 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.093539985 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.092088523 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074040715 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.09147733 seconds)
  done (took 1.426057453 seconds)
done (took 2.181294635 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.120082727 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116477058 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063071508 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111924015 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063115519 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.116297192 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.11334595 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081006899 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117954255 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063930145 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111526666 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064487252 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063320428 seconds)
  done (took 1.989383637 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082625526 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083966565 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087007059 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083216611 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080123757 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084262755 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080994273 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106578348 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081592451 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089657229 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065014064 seconds)
  done (took 1.67797598 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081384349 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083985178 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08646164 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082792272 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079982128 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083286077 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081563725 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104867814 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082499227 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090681159 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065248219 seconds)
  done (took 1.679144369 seconds)
done (took 6.092619272 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077982004 seconds)
  done (took 0.827433591 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.695099765 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.536285654 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.083048906 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.133420511 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.220695989 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.154796827 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.444855646 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.109401007 seconds)
  done (took 10.301550671 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.10262454 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.088020524 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069659696 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.084992482 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071387677 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.084085227 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069593866 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.06902525 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.085321257 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070807306 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.083385122 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069386871 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.083409042 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071545263 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071886134 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.087092432 seconds)
  done (took 2.081777154 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093305232 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.09209587 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.090470797 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076375783 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.089157418 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072785151 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.090848786 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074494995 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.086982527 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073085209 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090661048 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074241851 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.087363293 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065415198 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.089999641 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076509467 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087918435 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.07389832 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.091185225 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075992317 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.091005066 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066276144 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087245856 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07572633 seconds)
  done (took 2.835824372 seconds)
done (took 16.805220118 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.129932782 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.076288503 seconds)
  done (took 0.965139995 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081138836 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.097337224 seconds)
  done (took 0.942546366 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082932709 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.080468264 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.088638157 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.093016634 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.0657526 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.0808347 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.101629891 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.06676534 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.081171723 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066041341 seconds)
  done (took 1.571132959 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.06816699 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.092816057 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070834277 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.096351817 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073845115 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.079861974 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072657352 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.083222684 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077837768 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078235589 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071459522 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.098274388 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071583515 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.100363554 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072989618 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.08392491 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.086187734 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067260015 seconds)
  done (took 2.212561369 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065228253 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066577324 seconds)
  done (took 0.900473871 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066918122 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063776841 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081281953 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066702937 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.07877017 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062888164 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.07812578 seconds)
  done (took 1.265726091 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.399693497 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.108906261 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.243694085 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.086851771 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.103395816 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.262005136 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.082776604 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070778321 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.088073662 seconds)
  done (took 2.251252285 seconds)
done (took 10.874736644 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079724538 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085539127 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.109160905 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.420041362 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.105341321 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066693977 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.131615978 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.219481475 seconds)
done (took 1.986734548 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.126970637 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.60927053 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.399949901 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.212895321 seconds)
  done (took 1.993914291 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.373861871 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.092852648 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.075930094 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066534431 seconds)
  done (took 1.384511484 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066156414 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069561308 seconds)
  done (took 0.910836775 seconds)
done (took 5.188772814 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06649619 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.10064492 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066409608 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.064254926 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.083213125 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.063826016 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064376315 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.08372049 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067100814 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063771695 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.081117338 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.06982453 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081644921 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064205795 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064218055 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082010246 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.066591004 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063857201 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08011589 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065968953 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063842709 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082521388 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064375295 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064148637 seconds)
  done (took 2.527435749 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085963177 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.083092134 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.07213152 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.087603946 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070083893 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.088423995 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.072078974 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067040173 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087489445 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.072443702 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085703457 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070495722 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.084305609 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070617359 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084022132 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.07075993 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087946334 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066907165 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06880215 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.087126309 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071489319 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082972783 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070305132 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086560847 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071032767 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.086048557 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068572714 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.082964793 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072358971 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.08627945 seconds)
  done (took 3.118931053 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070260553 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064036443 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.080358725 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070731681 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064131293 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.081138598 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063985427 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.080476979 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064892334 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064776625 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081011168 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063712489 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064149674 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.0807345 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.06565418 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.083645972 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.07998816 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064491676 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.079944966 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.065188261 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066693146 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.080120681 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064032621 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.08057142 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.0648045 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065283921 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.08257059 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065879024 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.066798683 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.08293025 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068986727 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.069285599 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.080439741 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071457372 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.085158071 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.06507596 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.069750426 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.08162278 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066601035 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.065418819 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.08188793 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.066114721 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.065063281 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.089280569 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.066678481 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.084855836 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065703784 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.067015742 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.082952855 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.069104147 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.082088147 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.065525169 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.067690986 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.083340505 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.06941132 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063996522 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.081180899 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064397727 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.08103525 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064460796 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063943884 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.079965287 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066395801 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064789114 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.094947056 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071275348 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.080342604 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065997923 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.065610526 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.082611611 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065813952 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078084828 seconds)
  done (took 5.996823497 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.117538637 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.0908209 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082252024 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066119217 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079722091 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064066406 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068123763 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080502946 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066291894 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086068979 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065044192 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065896451 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082259954 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077460666 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080948331 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066547728 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086271323 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062751439 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064434241 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.083991764 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065471011 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.084096143 seconds)
  done (took 2.473523597 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.186262044 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.08880597 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.109736159 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091182757 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084351233 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074452307 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070131331 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086850127 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07123983 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084933732 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068772298 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086819465 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069228041 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08510894 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069568187 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085126644 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070300921 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084717025 seconds)
  done (took 2.352515575 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078356426 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066563309 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.106240148 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066345987 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.08295911 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06904836 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088660969 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075742623 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085151841 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066523213 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.091537879 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070007808 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.084977886 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067852142 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069258768 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082817554 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069507524 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083067867 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075654467 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088053172 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07200111 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090245482 seconds)
  done (took 2.516749008 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081545495 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068094356 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.100750806 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085144976 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062966435 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06538579 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.089203046 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067259859 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.088526706 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068845828 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066393893 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.081810995 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.071675909 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.082938905 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072117163 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082740042 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069077929 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067055396 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.084599064 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063265419 seconds)
  done (took 2.307498855 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087975959 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08414039 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067581953 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092706573 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068020707 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.084235296 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076426103 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.084153518 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068222469 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.109198107 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068566198 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.086226406 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075770593 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.089687428 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067820096 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092028769 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076201877 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.091690341 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067744278 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084963764 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.220404694 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067937015 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092247876 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067617653 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084537338 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068107768 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067854065 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088747545 seconds)
  done (took 3.173543914 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066960498 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066848215 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081122312 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064360757 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064344084 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.081160773 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064321326 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064218222 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083416385 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064526988 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066045111 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.082624737 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066799091 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.082495468 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066527368 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067047355 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082499306 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063812153 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064791991 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080425875 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066624578 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06699757 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.083024682 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065227334 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079763506 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066752921 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064131372 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.080255358 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066855989 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064396965 seconds)
  done (took 2.922374337 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077270222 seconds)
    (2/2) benchmarking "in"...
    done (took 0.091292768 seconds)
  done (took 0.964652072 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064981034 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081152378 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080705967 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070613164 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087136842 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067409643 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.09093341 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070477038 seconds)
  done (took 1.405671876 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081980135 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078089759 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084961726 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.077682358 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.093279332 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084121106 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.154676273 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.083957116 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073517158 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.08186634 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079763253 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065277516 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090373564 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066870196 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.089163062 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073530434 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064818852 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.088319642 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069403987 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.081391138 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068630428 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091339565 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06889644 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062851837 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.084574107 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.076054724 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.094068886 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067861985 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086187125 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073939494 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071973869 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.076942557 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.06690638 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.083681895 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.065222644 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.093200772 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082103825 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085887565 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.07495089 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068167638 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092933114 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061797633 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087765286 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.073415748 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092593892 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.067771522 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.067784859 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.078737292 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064755272 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085163083 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062752965 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067558736 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.07802632 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074276162 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.08696052 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077631573 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.06842467 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.085588036 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069890217 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.086947055 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073366761 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.085439726 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069975086 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.067803865 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092933057 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071615227 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092241373 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062875737 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061012127 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.082048754 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.076652329 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105964804 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073132515 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.085050642 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068343991 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.081635824 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070010879 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067799506 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089046916 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074548066 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.083917227 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072734804 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09037125 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067208882 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069365858 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.090851546 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065526953 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.085557278 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064971982 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099782181 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.066307583 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.080936802 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065107394 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077172217 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.086904154 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067202862 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081207391 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074206744 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061831625 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.08437749 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067917533 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083984273 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.077605172 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088846754 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072537484 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.092082922 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.075275302 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067073271 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087488164 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065004232 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084832447 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066332208 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074458034 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.078267483 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070620366 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.08453158 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.068405448 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.075080754 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.081998787 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068240572 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090927719 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072894676 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.082609679 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063849921 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071073545 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.083882476 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071095529 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092279453 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065720689 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062506428 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.078792819 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071252283 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.083445181 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071203084 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089232725 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069656684 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061570819 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.082484256 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071404258 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092533774 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067785074 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067002717 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.089734055 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067895691 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.083085297 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073610877 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.08656841 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.06703333 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072738701 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.084541797 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063660377 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086973514 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069160384 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066685568 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.087663365 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070958576 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.086363928 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.068350865 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065763209 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.089514203 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068220577 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.08359853 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067601541 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.08238489 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077169171 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068552625 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.07901933 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064676058 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.090322927 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064876739 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066488702 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.082973455 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069485289 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.084543922 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065646513 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.06620667 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.086002931 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078069893 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.0886081 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06823156 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.089736343 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078217964 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.083483849 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069123998 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066569553 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084732017 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067615809 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.092153644 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.07211794 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087977617 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069467643 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063219669 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089342135 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074202058 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.082650193 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064750776 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065567102 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.087332743 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072955664 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086672395 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067927364 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08156715 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067552209 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070357682 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.086111767 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066346216 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.082814067 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071412735 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.082641986 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073391913 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06738642 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.093422535 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069729871 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.079598481 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070733597 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081277768 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073034175 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062698173 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.081646004 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066402546 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.083954139 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065919082 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.06994294 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.07823163 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072835832 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091599233 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067608211 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065966029 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.0833574 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073709253 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.085031376 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071594696 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069784531 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.090158318 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077326909 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.083067239 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071253043 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094383086 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.067333788 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061396998 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.088677604 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065660009 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.083727907 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.066557255 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.06497616 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086862131 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075258059 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.090541603 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061421425 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.086636496 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065377575 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065667785 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.079513132 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072150123 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.086872867 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068151948 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073576391 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085495152 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.06866323 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.087796307 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067168677 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067415923 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.085060643 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070592195 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.084560643 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069375771 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065761064 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.086796794 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066559952 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082129378 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069211159 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066521169 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.083779123 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071872699 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.08380828 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066928602 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068943708 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.085174088 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067913309 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.084320366 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066400596 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086791498 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06731191 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067361626 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085999774 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062529628 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072829453 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.083871637 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073697001 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.083748843 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063863125 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.08883115 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069098095 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071457579 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.084480036 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067801895 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.085558404 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.067348451 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.086065245 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073568276 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065029902 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094564802 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07474107 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084153979 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.06986881 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066269253 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.086022435 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066187843 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.084874286 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067840421 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066916684 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.083696533 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072000071 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.086172535 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067081453 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067929592 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.08517565 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.06830715 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.084824601 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062111399 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065757338 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.083719005 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.067088693 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093527494 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067673815 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.083862276 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.066629637 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067899274 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.08345687 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.06441139 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.091703012 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075645903 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.085157855 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074412359 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066370031 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.086011338 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077468931 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.0781435 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.066133401 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.06442702 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.082250885 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074119309 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.084523886 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075610747 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.084052958 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066612695 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.064202872 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.085348057 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065767759 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060346146 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.082006651 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07121511 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.083584957 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066342288 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.067085739 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.087496064 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068020817 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093131101 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.066527482 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.084836308 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.067077433 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.064368675 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.083715096 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067197057 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.08648541 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.068151568 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065083639 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.081601339 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.067937583 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.06735499 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.086415906 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067663094 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.086017948 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074400561 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066824881 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.087459739 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070458571 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.081785939 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070054459 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.084332619 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.067372164 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066397585 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.087492444 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070754221 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085748927 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076003172 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066044845 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084815967 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067359073 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.081970498 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.067145467 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066949521 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.084037056 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066175993 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.085469722 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075096193 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065421519 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.087708061 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067409513 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.084669383 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074302204 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.08544927 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069903225 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.092135739 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067614845 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.06983045 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.092036587 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070769044 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087562909 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068797702 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068210662 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089607307 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066871076 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.09144041 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068288147 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.085078443 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069400477 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.0653646 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084943489 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.06737397 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065823571 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.090737735 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.068605454 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.084129614 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066463396 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064870877 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.086172347 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070465375 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09210707 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069958171 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088370278 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062979289 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064440957 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086058532 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065848169 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.086129231 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070877831 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07306022 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.086613632 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.06760909 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.083797916 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.076552495 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072085288 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.088795502 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065267601 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.087983717 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.069503599 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.087399113 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068094798 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068232365 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086587992 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071509889 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.086040304 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066283155 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074619207 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.088505589 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068223591 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.086310489 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.0685104 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067874426 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.080448954 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.068925519 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.086161428 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072395171 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069427899 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084978613 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077965482 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.082839586 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067894239 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088525151 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067244912 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071044487 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.080113093 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068895135 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085892781 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069151988 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062900521 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.084438288 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065230666 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.087108524 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066476558 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.063753335 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095002984 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.076885413 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.088238136 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067374197 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066586866 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.080256325 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063261687 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.083683172 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069314514 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068902063 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.095179405 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067062869 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.084388047 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.06375056 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067505 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087771191 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070633837 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.08214221 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063334155 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066746651 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.088084407 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072713227 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083252326 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.06769763 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070257251 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.086784648 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.06603253 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089675726 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.065919834 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070452408 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097847174 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068080198 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085715019 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073462994 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092468191 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068795486 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.080079895 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.068770357 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070315482 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.084942761 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068430094 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.085554628 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082451697 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088325203 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066028316 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066206023 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.087155084 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067384073 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.092366204 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068844981 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067511017 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.088822492 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069572317 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.092946835 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070310536 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091969507 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070566085 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.087652343 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.06602829 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067929382 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.082847467 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066704705 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068437507 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.086710706 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071263124 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.093019936 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.06615782 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094920708 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076915805 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.086893717 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.064315861 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066148429 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.084378898 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063562653 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.086165772 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.066275427 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.065441448 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.083406776 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.0665437 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067431517 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091010005 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067979511 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.085789444 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067629606 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061611459 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.088280335 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069924647 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086061631 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064490561 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.067101398 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.085908927 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.071515334 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087952957 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064994221 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068466521 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.087177869 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06839472 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.080251625 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074179428 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066606251 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.087226652 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066664543 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085489313 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068790857 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070107012 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.09046721 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068285839 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.087574579 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.076180263 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087342395 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.065449368 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064321376 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.089882204 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.066267427 seconds)
  done (took 46.263570956 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108328233 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082607415 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063501523 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080771759 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07561169 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082671619 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063364012 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062947825 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081314371 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067092725 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.080734498 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062698726 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.090202905 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085513316 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09390561 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067245574 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08129412 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063659391 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.080357619 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064191954 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089233684 seconds)
  done (took 2.471805615 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.076048163 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.089629884 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074150958 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.095236855 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068753469 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.090136477 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074235015 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09007141 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.094395095 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068570199 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.094903371 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071458932 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.085960681 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.068156375 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085803536 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071883974 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.094990542 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069590941 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.089790253 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073754558 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089611863 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074108196 seconds)
  done (took 2.63208613 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068287322 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066708906 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.086346047 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062526333 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065823929 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.080220465 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.070551404 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.082848417 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.070249141 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065416463 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.083736784 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.074512024 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.086323415 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062450923 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066458105 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.082837383 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.132489743 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.070570418 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065575627 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.086661939 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062536514 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.087832075 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062964282 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062368337 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.084147892 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070344327 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.085781474 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.065327 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066247796 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.084598619 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066854266 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.082585203 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067799321 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067195947 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083995773 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066950934 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066292046 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.084801564 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062568795 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.082492878 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067964998 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062915421 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.085284278 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.06799357 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064306054 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.083284644 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068401844 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.084639592 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061892457 seconds)
  done (took 4.487860368 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.084802452 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.129707732 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.088141452 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090777201 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.1017465 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.092854088 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071239341 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.111560319 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065209833 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.084324447 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.083425247 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.103754232 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.08507348 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.071487196 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.091626601 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066910252 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067464561 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.08418431 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070628462 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084643632 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070546658 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.092226263 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.099914698 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.081024763 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.088676536 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065684933 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.084370406 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.072624518 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.098464476 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.07178828 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.08968909 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072435854 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.100656534 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.072452753 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084568951 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068827172 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.102072149 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.084230122 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.069791953 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064267483 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086478137 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.071625184 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.092263862 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.084010697 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086786006 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072052064 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084937387 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063379514 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.098145936 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.069206953 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.093885105 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.100595904 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071648467 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085085335 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071020835 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.100549232 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066787294 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.083442611 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070144719 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.098765211 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065125154 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088206347 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.081347496 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.0871493 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.074335693 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.100110057 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072244942 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089925198 seconds)
  done (took 6.64399595 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076102282 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.091608759 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081311433 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100265458 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092418123 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.0744662 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.09198065 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073951243 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.091120328 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079283617 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.092317236 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.112885416 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069372077 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.094402176 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.07391606 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092318325 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073240811 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.092323419 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073542473 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.092972616 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.091764948 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082018348 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091514907 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.100730047 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.104163072 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.088104805 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073609842 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.09231828 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081563939 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.091888748 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.103251864 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074182002 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.09164692 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.100567447 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.086318795 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091500983 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.0661068 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091289923 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.07458832 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.091818915 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069352522 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099807866 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07297999 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.087637216 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073510362 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.092360975 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.099449422 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.085058446 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.095759657 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097099189 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073917916 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.100597216 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072801228 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092699823 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.100497039 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.107743323 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100581742 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.100484306 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073318512 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.100514259 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.0994043 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.108467224 seconds)
  done (took 6.34465451 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088826196 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.094790416 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.096904405 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062737096 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065319995 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090312819 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065562612 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.082960203 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076802388 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094262977 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077531472 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0899116 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074252131 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09700476 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.088398293 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074152481 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089372847 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071457614 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.093928057 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070807648 seconds)
  done (took 2.499512074 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076355002 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103075584 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068619286 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073259973 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.089379897 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072398618 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.088433346 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069884522 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086939813 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070869952 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096371277 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07864467 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08697649 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073844326 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.095659857 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073518269 seconds)
  done (took 2.163353997 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.078560914 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.096161067 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.081631327 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.086402702 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066625966 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.08295373 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.067086367 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062388642 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.082728997 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.081517979 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.086482615 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.069778694 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.086232393 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065767707 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063880089 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.089203453 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063952401 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.083917456 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.067561791 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.10009871 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.078704943 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.084943817 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067886552 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.068182191 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.086541277 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.07225663 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.086886351 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064578575 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.084957235 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.068102722 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.086301295 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.074745335 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.08263099 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065485258 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065109644 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083409792 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067686096 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085889383 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070721346 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.066004236 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084877951 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.06732129 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086036885 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068530761 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081498009 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.068229677 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063006157 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.092402915 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065904702 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085669109 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067194827 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.087960187 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.068050605 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.076788703 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.090418977 seconds)
  done (took 5.089899556 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081311824 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069872397 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.081690268 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064765231 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088777398 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.06911334 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070657443 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088579801 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069801405 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083931365 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069227751 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089258108 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069507308 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071045474 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087379255 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071013394 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081877729 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069306442 seconds)
  done (took 2.240783145 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073085425 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066775368 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093677296 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067091219 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.086266386 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070378836 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063333423 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.084887246 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065824733 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085608929 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067746545 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068693148 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084676739 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.069814324 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086220715 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067859911 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069139077 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084596694 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067447889 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.082002581 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070633471 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065672158 seconds)
  done (took 2.506323732 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.072887584 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.093532632 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.163938558 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.107488133 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.082529244 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.099826377 seconds)
  done (took 1.486875923 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090978045 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099517685 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068574456 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108074048 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07514858 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088278386 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068666026 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087509964 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077602295 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102064144 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068591352 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097140444 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09562319 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077410906 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094008989 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07525424 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087625769 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069386875 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086923062 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106520704 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069483977 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0963363 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070364783 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088032069 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069293609 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096369903 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07837566 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101357575 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087718061 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078154349 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093193608 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069110302 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096558768 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101733431 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071108182 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096302543 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069252003 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106088963 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075015544 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09733625 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069883316 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094454799 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096389495 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074075642 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096485917 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070558498 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09340702 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068474345 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088949753 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112080022 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075521112 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096507203 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09333169 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078451028 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096618852 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113589698 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082924841 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095847959 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094134327 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082554577 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09606497 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07377838 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097480884 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101374024 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075481518 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097752754 seconds)
  done (took 6.620315311 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085815169 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106321835 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069849098 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101616227 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09697618 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069608278 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087734726 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068857885 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088052742 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068704786 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13064597 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069402458 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096413648 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096793443 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069734933 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08815963 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069525398 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095725916 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069255139 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112789019 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087645631 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077065447 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096389821 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096784965 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083739945 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095020507 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068641456 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087993833 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0685952 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088041943 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073222271 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089523501 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09601978 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.0685674 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096501159 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069825111 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087878659 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074610616 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087943065 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074981625 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097207864 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106181735 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069286112 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087929895 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082319485 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088453685 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068011104 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088660739 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068848539 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087553031 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082333134 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102748063 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101899235 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096239273 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069845003 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088247836 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070055465 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088197564 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070012593 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093769332 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07791252 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087566613 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113968607 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069713501 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08837842 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077745597 seconds)
  done (took 6.505221012 seconds)
done (took 128.491181918 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.211345998 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.204394665 seconds)
  done (took 1.283314882 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069756113 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.096215469 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.098440601 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128536322 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.087018738 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100532202 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.119411761 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.080123564 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067033648 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086838372 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.067567076 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087760572 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13190212 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.06711758 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.087089954 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069581373 seconds)
  done (took 2.323339 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.103567516 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.196203577 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109625819 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065927123 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099603436 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.078643797 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.085943247 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.0769881 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.095205986 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.06713173 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.098520056 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.07678908 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065386469 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095503597 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.074533528 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.098008161 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065623273 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.098387084 seconds)
  done (took 2.53052696 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.104219884 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.149960915 seconds)
  done (took 1.130127098 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.203036036 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.123685976 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.202821204 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.412428732 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.207436799 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.278234797 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.173169232 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.173034259 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.158846319 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.170197498 seconds)
  done (took 2.978917802 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099805438 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.171293541 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.311633309 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.138254827 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.086415006 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.116075006 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.137995733 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.090430922 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.10172625 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.100419959 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081613781 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097955868 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098093723 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.09617873 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.074706248 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.097495344 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.121238542 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074624443 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.096932721 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077396027 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.118253366 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067197328 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.075072386 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.094936606 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077700589 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.098332798 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.066814777 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.086287717 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075856015 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094602482 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078756762 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.113476552 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.097377772 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.132036547 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.082621974 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.130934655 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097263549 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.0726937 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.095340017 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073136063 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.098354434 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077676082 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.103616879 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076991783 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.086871804 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077870798 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.085964213 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.067715302 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.099683021 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.077604435 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.099399754 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079288729 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.129808194 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.097319899 seconds)
  done (took 6.233656847 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.75021655 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.110324763 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094827311 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.815613623 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08926664 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105739739 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.718699199 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117946643 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.210563308 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.777246047 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.089561823 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.098959072 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.18133518 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.233622015 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.878450199 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.284409585 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.641073194 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.105527745 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108281596 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.132749866 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.139752989 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.178015837 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.15128271 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.409739642 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.075432178 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092438195 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.137243903 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.075534441 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.160557425 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.085242541 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094398493 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.156146866 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.224440744 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.156086905 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097685654 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070132248 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091247967 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.148761502 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.218243464 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.191875293 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.158934208 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068831154 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090816217 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.140304665 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131696424 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068064764 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.139838695 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.153124295 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.170300584 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.075142005 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.095913781 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.141839187 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.139377355 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.143991053 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.100468537 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.262392859 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.289784613 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090645439 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100013834 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.104400124 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.213155934 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.104244449 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.2002166 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.1405793 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.168840317 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091182146 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.733797256 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.148118622 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091868251 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074744751 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120517297 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095415718 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.139379783 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.144838264 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.362989262 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.162564209 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073651436 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06933464 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.204671247 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083498456 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09111403 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.141948007 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.075111861 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121359414 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.164325796 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.14135135 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.147586828 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.208772079 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.142075699 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.138103167 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.095202968 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.124460384 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.075758378 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.18984712 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.193076301 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.140055334 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.188398343 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.160170644 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.142695501 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.148078004 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075277492 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.171922685 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097694434 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102273907 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138557165 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.191557341 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.124004962 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083112879 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094371362 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.140604948 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.125767858 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085814074 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.139167544 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.169798675 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.433483663 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.147074564 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067855333 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.108050353 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.140322265 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.140103921 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096715428 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.216420594 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123427407 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.146366643 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.12120572 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.089349214 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120993827 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.14133072 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.079040264 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122045714 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.136447447 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098186736 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.213706665 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.190497956 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077864537 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.194420972 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.160884665 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.095894426 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.149636252 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120192479 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.146786184 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.077746198 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.159064577 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075637418 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.747026041 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.144432282 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121496558 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07414507 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.167166976 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069855032 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104194935 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.104149492 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06883181 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.75040073 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.107811213 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.101087264 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.083488704 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095481875 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121284487 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.137816183 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073674297 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.13871939 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.204319265 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096873521 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.09691356 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.105355524 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.141077297 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.095839488 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.084584355 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.104540498 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.08425795 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123159515 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094651999 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083012736 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.146061891 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.162428742 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.171577338 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.571042664 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071322211 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.103339679 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.181091825 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091459117 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.242452033 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.15924075 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.177775125 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.140854164 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.102029697 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.291214566 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.142210964 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.165796455 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.085846214 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.15133428 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.09008513 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.138463632 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.14504576 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.07006524 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097396303 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.141134892 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.14325191 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.163271419 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.897198269 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091927756 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.20517769 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.069050203 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.149608489 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097082378 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076432548 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.260137669 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070879303 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.166649109 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.143671425 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073551902 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.103671985 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.82416041 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.104270748 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.139775259 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07509463 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.193989133 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.142847364 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.135823077 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.137166377 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096652023 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.139527043 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.186596158 seconds)
  done (took 40.493273431 seconds)
done (took 57.850477935 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.258942421 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.179434554 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.241905396 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.144149935 seconds)
  done (took 1.797558556 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.143565558 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.104201374 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.11749075 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.085848957 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.103027807 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.086521449 seconds)
  done (took 1.542395979 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.402178868 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.265652584 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.231611449 seconds)
  done (took 1.801936006 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.285921005 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.213524322 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.452495065 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.300435105 seconds)
  done (took 2.258953954 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.175799077 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.113233264 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067742692 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.106626125 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.15904005 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.252244933 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.126768244 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.187102818 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.07932947 seconds)
  done (took 2.21681765 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.197959526 seconds)
done (took 10.718868068 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.104560972 seconds)
    (2/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.104015684 seconds)
    (3/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.206541198 seconds)
    (4/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.195127257 seconds)
    (5/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.198009511 seconds)
    (6/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.136855337 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.137029798 seconds)
    (8/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.24336028 seconds)
    (9/309) benchmarking ("sort", Int8, false)...
    done (took 0.174246245 seconds)
    (10/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.231136982 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.193181767 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.083455208 seconds)
    (13/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.12606508 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.078452711 seconds)
    (15/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.214554253 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.116767636 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074464921 seconds)
    (18/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.198886096 seconds)
    (19/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.104870886 seconds)
    (20/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.169243251 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.115457485 seconds)
    (22/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.228396752 seconds)
    (23/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.085898794 seconds)
    (24/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.157492412 seconds)
    (25/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.096029134 seconds)
    (26/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.076995384 seconds)
    (27/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.164845643 seconds)
    (28/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.215824661 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.168216998 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.151416697 seconds)
    (31/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.185194303 seconds)
    (32/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.082582057 seconds)
    (33/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.159778968 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.073329546 seconds)
    (35/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.216301355 seconds)
    (36/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081787011 seconds)
    (37/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.192530674 seconds)
    (38/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.202641898 seconds)
    (39/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.20971259 seconds)
    (40/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.103843288 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.116656708 seconds)
    (42/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073930433 seconds)
    (43/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.195402808 seconds)
    (44/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.075113289 seconds)
    (45/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.124066341 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.166418287 seconds)
    (47/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.082256512 seconds)
    (48/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.128738381 seconds)
    (49/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.072729716 seconds)
    (50/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.073383664 seconds)
    (51/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.178866117 seconds)
    (52/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.120537059 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.066976413 seconds)
    (54/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.101767979 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.07472596 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.114337932 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.155549099 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.12010383 seconds)
    (59/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.119897364 seconds)
    (60/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.098421896 seconds)
    (61/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.052387502 seconds)
    (62/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069087502 seconds)
    (63/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.090050025 seconds)
    (64/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.080286474 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.090209686 seconds)
    (66/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053184706 seconds)
    (67/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.076652812 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.114079088 seconds)
    (69/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.185986195 seconds)
    (70/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.091068363 seconds)
    (71/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.09469733 seconds)
    (72/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.095627608 seconds)
    (73/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.193359092 seconds)
    (74/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.09165608 seconds)
    (75/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.122379206 seconds)
    (76/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.189049594 seconds)
    (77/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.109095106 seconds)
    (78/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.053210089 seconds)
    (79/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.088756685 seconds)
    (80/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.073885686 seconds)
    (81/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.164687239 seconds)
    (82/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.168265053 seconds)
    (83/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.147208085 seconds)
    (84/309) benchmarking ("sort", Int64, false)...
    done (took 0.088357884 seconds)
    (85/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.079843914 seconds)
    (86/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.072909688 seconds)
    (87/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.178894127 seconds)
    (88/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.067521506 seconds)
    (89/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.123737683 seconds)
    (90/309) benchmarking ("sort", Float32, false)...
    done (took 0.129116952 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.116095723 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.119970167 seconds)
    (93/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.113235609 seconds)
    (94/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.092925173 seconds)
    (95/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074581138 seconds)
    (96/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.054565707 seconds)
    (97/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.097602725 seconds)
    (98/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.120857736 seconds)
    (99/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.051942831 seconds)
    (100/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.093444696 seconds)
    (101/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.052944744 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.110309786 seconds)
    (103/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.066682534 seconds)
    (104/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.062747754 seconds)
    (105/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.054631581 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.121115624 seconds)
    (107/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.062735587 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.096729774 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.094886824 seconds)
    (110/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.187047961 seconds)
    (111/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.051290068 seconds)
    (112/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.160150208 seconds)
    (113/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.158665366 seconds)
    (114/309) benchmarking ("sort", BigInt, false)...
    done (took 0.210693956 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.144604289 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.112205372 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.118172988 seconds)
    (118/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.074256277 seconds)
    (119/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.173381509 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.118188705 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.123198157 seconds)
    (122/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.193944191 seconds)
    (123/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.201866513 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.150214294 seconds)
    (125/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.156577536 seconds)
    (126/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.065079718 seconds)
    (127/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.073792587 seconds)
    (128/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.076549504 seconds)
    (129/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.080800652 seconds)
    (130/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.098586554 seconds)
    (131/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.075121882 seconds)
    (132/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.09471797 seconds)
    (133/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.074711784 seconds)
    (134/309) benchmarking ("sort", Bool, false)...
    done (took 0.160306132 seconds)
    (135/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.106296495 seconds)
    (136/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.096241938 seconds)
    (137/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074630369 seconds)
    (138/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.120888429 seconds)
    (139/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.07810276 seconds)
    (140/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.112573925 seconds)
    (141/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.053836343 seconds)
    (142/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.072019877 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.095144592 seconds)
    (144/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.07535842 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066414082 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.095798362 seconds)
    (147/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.17258041 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.142009148 seconds)
    (149/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.172005047 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.091640726 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.089329092 seconds)
    (152/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074827869 seconds)
    (153/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.098147925 seconds)
    (154/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.162170202 seconds)
    (155/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.161172434 seconds)
    (156/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074541515 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.122285657 seconds)
    (158/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.053202444 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.110556817 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.089084044 seconds)
    (161/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.084771563 seconds)
    (162/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.075276241 seconds)
    (163/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.164763176 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.077757056 seconds)
    (165/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.051915273 seconds)
    (166/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.083430235 seconds)
    (167/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.067994723 seconds)
    (168/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.053445989 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.088823285 seconds)
    (170/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.078780016 seconds)
    (171/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.160746779 seconds)
    (172/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.067857259 seconds)
    (173/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.092926918 seconds)
    (174/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.180139897 seconds)
    (175/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.091887831 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.105895732 seconds)
    (177/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.089123077 seconds)
    (178/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.101153501 seconds)
    (179/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.088004041 seconds)
    (180/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.073250671 seconds)
    (181/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072920766 seconds)
    (182/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.089742624 seconds)
    (183/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.052204807 seconds)
    (184/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.078145272 seconds)
    (185/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.088560005 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.066747518 seconds)
    (187/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.066412852 seconds)
    (188/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.113464007 seconds)
    (189/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.076906882 seconds)
    (190/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.161085286 seconds)
    (191/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.196980223 seconds)
    (192/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.062133223 seconds)
    (193/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.073744482 seconds)
    (194/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.091003074 seconds)
    (195/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.066343692 seconds)
    (196/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.051897889 seconds)
    (197/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.074367311 seconds)
    (198/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.07317076 seconds)
    (199/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.184364197 seconds)
    (200/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.309458133 seconds)
    (201/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.074413167 seconds)
    (202/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.067759905 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.066085873 seconds)
    (204/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.107208911 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.147046927 seconds)
    (206/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.169881627 seconds)
    (207/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.097594071 seconds)
    (208/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074963339 seconds)
    (209/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.090585544 seconds)
    (210/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.071926758 seconds)
    (211/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.135862219 seconds)
    (212/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.097224745 seconds)
    (213/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.068650471 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.088345687 seconds)
    (215/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.072136882 seconds)
    (216/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.05246772 seconds)
    (217/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.073283901 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.06617356 seconds)
    (219/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072307121 seconds)
    (220/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.075642424 seconds)
    (221/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.07613528 seconds)
    (222/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.053338963 seconds)
    (223/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.098822444 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.066911748 seconds)
    (225/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.114113903 seconds)
    (226/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.065422691 seconds)
    (227/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.067625932 seconds)
    (228/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.076491692 seconds)
    (229/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.052826701 seconds)
    (230/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.053219635 seconds)
    (231/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.076383276 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.140394802 seconds)
    (233/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.073793208 seconds)
    (234/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.07226364 seconds)
    (235/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072858733 seconds)
    (236/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.089361393 seconds)
    (237/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.083346628 seconds)
    (238/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.090534603 seconds)
    (239/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051683487 seconds)
    (240/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.069067008 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.117260765 seconds)
    (242/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.052057823 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.094930948 seconds)
    (244/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.075219003 seconds)
    (245/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.052700812 seconds)
    (246/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.06895368 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.114005747 seconds)
    (248/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.089105387 seconds)
    (249/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.092452042 seconds)
    (250/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.167190951 seconds)
    (251/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.159211458 seconds)
    (252/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.066141785 seconds)
    (253/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.077113994 seconds)
    (254/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.067214696 seconds)
    (255/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.051678052 seconds)
    (256/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.200566541 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.089503172 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.11382298 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.11406992 seconds)
    (260/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.073257799 seconds)
    (261/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.053355301 seconds)
    (262/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.077151518 seconds)
    (263/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.074566291 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.110401494 seconds)
    (265/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.052042019 seconds)
    (266/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.05244146 seconds)
    (267/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065717275 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.08818751 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.098334817 seconds)
    (270/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.073582876 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065791023 seconds)
    (272/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.053288288 seconds)
    (273/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.090229018 seconds)
    (274/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073399367 seconds)
    (275/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.071142601 seconds)
    (276/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.096872728 seconds)
    (277/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.066852416 seconds)
    (278/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.079567622 seconds)
    (279/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.074754851 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.075283431 seconds)
    (281/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.06501121 seconds)
    (282/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.090728613 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.065799442 seconds)
    (284/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.15994262 seconds)
    (285/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075125767 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.113477739 seconds)
    (287/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.052285965 seconds)
    (288/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.053954965 seconds)
    (289/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.094291792 seconds)
    (290/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.068331254 seconds)
    (291/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.063117569 seconds)
    (292/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.088499611 seconds)
    (293/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.053967195 seconds)
    (294/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.052120553 seconds)
    (295/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.09239332 seconds)
    (296/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.0677432 seconds)
    (297/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.052996012 seconds)
    (298/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.077573135 seconds)
    (299/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.054066147 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.066858783 seconds)
    (301/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.076525123 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.072213811 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.102818922 seconds)
    (304/309) benchmarking ("sort", Float64, false)...
    done (took 0.149233288 seconds)
    (305/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.053406944 seconds)
    (306/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.090574524 seconds)
    (307/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073866289 seconds)
    (308/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.062683913 seconds)
    (309/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.074221905 seconds)
  done (took 33.31740304 seconds)
done (took 34.231603999 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082206742 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114906756 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.07640194 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.116227804 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081865564 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.100801926 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073829161 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.07941331 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.10361544 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082773203 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.102606874 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055388098 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097319938 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076782094 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.097815846 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092555889 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.101821187 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072741121 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074366663 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.087729603 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.07455773 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.088535929 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067880866 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054913258 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.100841827 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.072577372 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072717343 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.09836018 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066213157 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.08849593 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069736352 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073436738 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087946674 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079718193 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.094736737 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074052441 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076111798 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.09939592 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068688888 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.087930171 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074053219 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065921443 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.095334387 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074429936 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071748155 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.093758702 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075290459 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.102236195 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092422131 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090180769 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074681681 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.09898247 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.07754382 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073472618 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.092403035 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075018733 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.093236075 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092579759 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.09806606 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068721545 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074161044 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.097080974 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071265991 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.096716052 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074175586 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.07625805 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.099601532 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071630199 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097659645 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071613073 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.06582443 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.097380699 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069839539 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066279438 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.098690624 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077752901 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.087547295 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071836524 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.073233472 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.094835352 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.066047718 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089888451 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068531211 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.072762256 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090127173 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055264132 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.07073055 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.094737473 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066223512 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075519132 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.094674102 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073560969 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.089553817 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.078092198 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066613794 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.09405021 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066791857 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066105844 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.091073445 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070428905 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065671668 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090277186 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075776476 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.089789721 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072886272 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.080619086 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.088432334 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073577926 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087112503 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.066727904 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.082060684 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.098942412 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067063541 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091403693 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065970097 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.074215501 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.087702108 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.06678692 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066027802 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.088868672 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.072315611 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066186415 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091165035 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073664479 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.102732031 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066467296 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070078349 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090862318 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066653748 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.071722806 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.089508926 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066713046 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.067920739 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.086832401 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069306966 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.088898361 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.074051597 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068761921 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.097007488 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.068914117 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.097776775 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.07083906 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.072388669 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.094631245 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065934564 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059737801 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09128499 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068819089 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.068551751 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.088388106 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.068777964 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066036693 seconds)
done (took 13.229878947 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066573154 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.168303814 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.126580214 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096462617 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.111101062 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067531723 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.100430855 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.103139699 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.091303297 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.127083247 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088312064 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.108530775 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.114998432 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.088245942 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.067310438 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070775981 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.090574307 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.089830662 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.125773233 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086304544 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.140109665 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.088170392 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.120083305 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.091173835 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.112106982 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.10379544 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.08991332 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070871601 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.070220651 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.116338682 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.109516623 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070148822 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066917303 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.123135051 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.117554256 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.086652101 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.088944569 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.085387473 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.089028441 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066933508 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.114531157 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.100959274 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.104509253 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.08258007 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.095451693 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.070068702 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089887664 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.086055055 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.114216447 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.081072184 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.111901278 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.134102952 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069730993 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.105295201 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066019432 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.110849979 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.082363095 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.092691001 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067116965 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.091310878 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066352165 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070428798 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.111370271 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.115818485 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070910648 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.105455946 seconds)
  done (took 7.270353755 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085125605 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.117229647 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084085865 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.108439642 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066300087 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067320477 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.090632001 seconds)
  done (took 1.593981679 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067857648 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08934096 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.113168504 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089812456 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.109778159 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088001794 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.099913029 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068751585 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.108072221 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068576286 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08840073 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.128211634 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.068247029 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.097751406 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091907433 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.090502796 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091755301 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.090433717 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070564523 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.114467152 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070360207 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.087582329 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.09264966 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067663983 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.104721879 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.068232923 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.139122942 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072280538 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068472251 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.093569725 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065967173 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.141102214 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.104605361 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078307752 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067374898 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.106016818 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.082369862 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088518883 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.084261535 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.095509314 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082160646 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068045845 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.091961621 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066670916 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072463354 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.101230029 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.0695641 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.09180949 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070599984 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087754494 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.091346979 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082146702 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.090421377 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071309356 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069193955 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.09703105 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077820204 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.091196009 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087693111 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069508436 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.10823595 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083842073 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.105567187 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085222526 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.093053076 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.082193285 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.104787017 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.07059724 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069856431 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.09499752 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.084275244 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.088989003 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069393178 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.07868848 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.092544855 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.09142695 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.114208075 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07002038 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.100583717 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068441215 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069024316 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.091611425 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.090951708 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095074323 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067578923 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072360648 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093768574 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065488262 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066863124 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.09476912 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.066204033 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.069064936 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.094433424 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068749583 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.093288413 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085330225 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067960928 seconds)
  done (took 9.332384063 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.06937313 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069173621 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.093408452 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.06905797 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069225025 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.092156366 seconds)
  done (took 1.452865355 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.099710367 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.092767132 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.082028248 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.096242824 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.107181619 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.105876433 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.083450475 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.106099521 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.085957524 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.103708854 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.083346058 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.106381499 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.088824173 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.096489974 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.082966569 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.09591048 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.083144878 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100145097 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079904216 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09745605 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.089286969 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.097138475 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07427162 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.084805703 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.094676552 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.073883556 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101230282 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.080362513 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.102919213 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.083980843 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096712804 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071401718 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095902887 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.084023453 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.10583027 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.073423646 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096811034 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.072550157 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101145411 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.070879111 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.106762274 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074534813 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.078634146 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.09495081 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.106994267 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.072957431 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.071577822 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.10124898 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.08252862 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.095650778 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.073048741 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.096268377 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071345124 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.096434104 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072740412 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.106056706 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.072105777 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.106733385 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.073906014 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072227231 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.094241624 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.071672415 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.106067772 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071786074 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104456032 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.071869111 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096543689 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074784077 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097567321 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.073466225 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.072566798 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093563528 seconds)
  done (took 7.371479355 seconds)
done (took 27.991668535 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.652752572 seconds)
  done (took 1.638194446 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.786514538 seconds)
  done (took 1.773498186 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.094273101 seconds)
  done (took 16.086334723 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.617605811 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.765802528 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.815181599 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.135294272 seconds)
  done (took 3.32133462 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.899081023 seconds)
  done (took 1.912687124 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.23642119 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.225031619 seconds)
  done (took 1.456100847 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.744806144 seconds)
  done (took 1.746637622 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.28463226 seconds)
  done (took 2.280353014 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.321838457 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.182260862 seconds)
  done (took 1.503284491 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.52441432 seconds)
  done (took 1.523161673 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.681725293 seconds)
  done (took 7.685991275 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.231430772 seconds)
  done (took 1.246039676 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.269818985 seconds)
  done (took 1.274820538 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.222347288 seconds)
  done (took 4.227218639 seconds)
done (took 48.669361326 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078106699 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.082772614 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.105407976 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079716261 seconds)
  done (took 1.347449686 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077871276 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073969917 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101197506 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073086812 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.102475223 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.074357379 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.099280905 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.078057092 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.073146697 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.098601311 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.07433387 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.096267876 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.077359229 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.099738456 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071651021 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076175633 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.100501868 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.074382934 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.100565665 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.074681716 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071507304 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.099034798 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076816952 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.096293598 seconds)
  done (took 3.054907688 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079130681 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073813039 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.098956996 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072678843 seconds)
  done (took 1.334235089 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077669738 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.116743306 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089900725 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077944833 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.117289971 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.111553381 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.070514145 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069938376 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.09541027 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077871745 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.092256541 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.098589259 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.11220062 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077633276 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.104019296 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.067148291 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.06950826 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.111608686 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078613323 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.10212462 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070661215 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.080287858 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.092505719 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.091766381 seconds)
  done (took 3.169720577 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077671004 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.129041927 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.078983938 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.11599875 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.092622994 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066206581 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.100431874 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.11593591 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.126233389 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.090873293 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.071285938 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066742268 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.096945895 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066191863 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.07690736 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.133845402 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.137546415 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.069920128 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.122216492 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.066222663 seconds)
  done (took 2.920771632 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075364875 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071329445 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090124865 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.06903094 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077596115 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.097852922 seconds)
  done (took 1.501279146 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069071856 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068478843 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.091670235 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067578333 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072698039 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.091334625 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066553748 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067812279 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.091744605 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067851288 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067273052 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.09025667 seconds)
  done (took 1.927158496 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.38320952 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.09450989 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069778991 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.089085543 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071864318 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.091080702 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081937743 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068654805 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.115827927 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.06796767 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.092204529 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069383851 seconds)
  done (took 2.313992431 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261643716 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.0786824 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.325994693 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169284512 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141952276 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156199217 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106207864 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140356056 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.199809933 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139325977 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20108637 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226369057 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135122652 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169650773 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116593294 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.134068594 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187551019 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223674817 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105889537 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226496734 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208183069 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157372575 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182125599 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129721788 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135595138 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152489223 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072516329 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1070108 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234668864 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162274094 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204557921 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140322274 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097945214 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232722872 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22658981 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19827848 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164872795 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086332552 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.159240946 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.166695018 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2579371 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115755268 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195696207 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136105901 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107935854 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173948199 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147855723 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.148704829 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.137787198 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11727473 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175819345 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243489283 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.166717179 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113783696 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138961756 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143079279 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.145258875 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105583368 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270964869 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196529191 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162217042 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.096963231 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100276734 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211920936 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159984468 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.142197198 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.154936315 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120277872 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168125802 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.212674603 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147335575 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175093485 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.182398564 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090902939 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147864102 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.196914163 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157110253 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23014756 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155480654 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.074411643 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152558976 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130585197 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107952942 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.146668408 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10229124 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207952003 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125511555 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.139691138 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141553676 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136229229 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137581476 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195729322 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203241757 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130381465 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066832243 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131449941 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.150926169 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176292698 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115231529 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135656361 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14845873 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.080082177 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193671871 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.07621846 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154087272 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.105047006 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153353539 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163204064 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076433494 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180122861 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103597433 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.129210439 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164350753 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220613798 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117224625 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083636794 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229199349 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156793006 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.133354361 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176950827 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.21611555 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.102788066 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130671534 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205294881 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244670553 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091100712 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224433703 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134805615 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08439825 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.114619262 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155645924 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140398917 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.150364752 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109600037 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.155083482 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226807057 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.076419924 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12232205 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166784335 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083091595 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107953938 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140886404 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128779 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.097157754 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.127656067 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.134559648 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169677595 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181853904 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110408531 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179108342 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100427676 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226700288 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116492365 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.132489937 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105677785 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.097099971 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.165621483 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220095976 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080928511 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227829015 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.155488506 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133342232 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149685792 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084395795 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.196406598 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079992351 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.071661934 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201989832 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139005023 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137786218 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.185619837 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132310411 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.157294007 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.153519268 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163711037 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18777571 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.163870562 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134151244 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.08926021 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14179464 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15380459 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.100100253 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.122336799 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.083949997 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132332686 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12382999 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08530925 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199344999 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158086717 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128706002 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113919566 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124725473 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.20689369 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.078796453 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159880979 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.148674729 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122638141 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.214819415 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188161317 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16585715 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127990669 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20254835 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.072316365 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074917806 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.11741662 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156087854 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111546864 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084166316 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172031115 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180285345 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158145167 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168417751 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138289976 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150356414 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.214114872 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.072568606 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.144447624 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180138462 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154639321 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.155834039 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114140196 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.100165318 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.20150264 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109266712 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273199243 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144846424 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153246661 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181574694 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.130898015 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080730995 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132932073 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194279082 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133811386 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.183122481 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128302895 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115523539 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11193203 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.107808825 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132396915 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155802419 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14917314 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191235038 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.144209948 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162247457 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078589279 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146533835 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176070372 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151313313 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.065729457 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149411075 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220970397 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096339799 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178696245 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186141996 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106381454 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.127775932 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237648836 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201672298 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085453502 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138668024 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150241145 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184056956 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147811564 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17101203 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138634442 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163970245 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138670423 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086061437 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114848012 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126333594 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135294286 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.097079809 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.139110909 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.145865161 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.120956359 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160764032 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140237429 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139390214 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147996472 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.126735241 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.09261516 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125825178 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23608396 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151388347 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235362761 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.102955422 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.206546657 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227493084 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076113609 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106428218 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.081010703 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169868915 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111742335 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162532273 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.125602595 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132787433 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156716905 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174591262 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123403308 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069181798 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138108695 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164269585 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139901936 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125663832 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.133974911 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223911439 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.105264048 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106782336 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154418458 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107074398 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13055582 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235716427 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.062302519 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124681513 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102691843 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082432321 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158558522 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217502797 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.1089447 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.130352375 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145343097 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150077305 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159497567 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129317664 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12725157 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142804283 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180644023 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185459157 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.09105593 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141461716 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158908169 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21531495 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134660762 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.123118464 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206081781 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214582728 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.223031628 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.091123381 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144328706 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143991905 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13742647 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197281079 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08539901 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227144748 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108926477 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168268392 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132524467 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120969458 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160774604 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.125652043 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090203406 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20693707 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148717911 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102465178 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107485478 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147992205 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152180542 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135744235 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075564834 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196256699 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.074505681 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167007507 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230041614 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109058311 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10879331 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123201151 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109348274 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13728444 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131203257 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088712743 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.14545206 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23070696 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.091682094 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208113782 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171749408 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143418851 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193578302 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127406595 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.664052659 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.079945791 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214552422 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149177372 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238871838 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099216913 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147439496 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137975493 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152091943 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201941482 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133108447 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.204888297 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163294443 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.150712117 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079910153 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13123439 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139210393 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.11829392 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135408578 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143559649 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145172534 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.128866462 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.150189853 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157202961 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.083216156 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123199354 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218546152 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146756873 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17462421 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170104151 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113049599 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148232848 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197411784 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082193152 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.15221646 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215244249 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136960503 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125845334 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082079635 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.13463832 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23285435 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074501209 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222885496 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153783134 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139444283 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143236716 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.147441737 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1624924 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13568589 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180524318 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097645618 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.140701842 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145186482 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112261018 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.078861613 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134495436 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141203558 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.127729905 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130585425 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.122479396 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208044425 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072728591 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124154594 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131633594 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174946915 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240400765 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.116633087 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084994887 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147540024 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141605332 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.144513111 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154205732 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.10851146 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110251858 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.083414667 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.138412284 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.112430762 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144152773 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13138692 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139229156 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226704306 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.085353431 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.252673494 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123228158 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133702961 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.071029518 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.107324554 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097346587 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12624518 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136458772 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128233584 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206536819 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.124985311 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.117453056 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09466906 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.100619231 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084039558 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186068959 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139620524 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150839475 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099074779 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.090482967 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138204359 seconds)
  done (took 71.741571513 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.143420928 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.122120244 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.133272981 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.188501746 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.161607858 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.253977278 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.199253513 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.238211412 seconds)
  done (took 2.539608156 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070603007 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.117485135 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.102777589 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.116185089 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.090212718 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.06860737 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.296296656 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.11114097 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067321249 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.115148332 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.119592581 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.092118744 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.472601713 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065824261 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.095270443 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.086161404 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067886044 seconds)
  done (took 3.249932863 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.430703651 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.650062476 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.453498825 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073576984 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.962000438 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.10807022 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.488985387 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.165656894 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.091874812 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.442144121 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.723557778 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.152158357 seconds)
  done (took 17.843202232 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075342035 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069619921 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.11118287 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083943109 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.100917198 seconds)
  done (took 1.542609311 seconds)
done (took 115.489298875 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080851841 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.34552212 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054119128 seconds)
  done (took 1.534607141 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.083799878 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085264312 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.11162476 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08384081 seconds)
  done (took 1.47139175 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.075176313 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076954085 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.112644266 seconds)
  done (took 1.368850925 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.280197038 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.166559889 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.088254741 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083228967 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078724535 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.106154251 seconds)
  done (took 1.374319205 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.07338824 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075847568 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.099957948 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076759131 seconds)
  done (took 1.426742834 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076951674 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.054673356 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.058123389 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.085053142 seconds)
  done (took 1.381064079 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.090198122 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.107034151 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.08111346 seconds)
  done (took 1.383757979 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.107159958 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.113759898 seconds)
  done (took 1.330006581 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082106527 seconds)
  done (took 1.184580294 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.095449237 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.140655369 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.156055318 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.137674454 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.166224178 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.137069206 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.114093161 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.08837449 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.104241871 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.116150543 seconds)
  done (took 2.364025625 seconds)
done (took 16.534633119 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078804867 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.482608189 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360946994 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.118694733 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668471127 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357153487 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.003474314 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.120499925 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.123032822 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.095204026 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084273022 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.67587291 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.006833349 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.439975008 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.993097265 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.32044239 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.675648848 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068394119 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.09417533 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068968469 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.963361637 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.095007947 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068664941 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068270402 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.675564397 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371385878 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095686117 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.323382151 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068576047 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.096492991 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355543126 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095471239 seconds)
  done (took 16.211381694 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070379361 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.145846131 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074100415 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083928036 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.098046412 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069393255 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.099752451 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069852968 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.154313276 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068274396 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111840328 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068413403 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.099002017 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069213834 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087160261 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.096056936 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068840075 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068960832 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.095615604 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069077105 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.11331697 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06815899 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069054467 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.096254077 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068817554 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107118047 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068701671 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068552797 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095433265 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070935941 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.098664122 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069838249 seconds)
  done (took 3.871166741 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114602438 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.154003538 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074348361 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.130010294 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114301072 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.098139018 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.171899168 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093327085 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.156758754 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068828301 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112521036 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068777566 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.128507692 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069447629 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.115385388 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068967017 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069646383 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.096111967 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068299756 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095904493 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086988953 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.095057806 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069075933 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06948752 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.096464574 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082519673 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095317161 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068906457 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068622995 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09756834 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07289757 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095707258 seconds)
  done (took 4.185638337 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073065272 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075878128 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.10977164 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084958653 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.097106814 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072553092 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073406504 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.097438654 seconds)
  done (took 1.7965091 seconds)
done (took 27.1677131 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078908759 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.070640125 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.099634593 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081445148 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.100061295 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079131507 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067573725 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.102078509 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.077013694 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073201326 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.103407579 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068644701 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.098414655 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067242579 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074860727 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.095082534 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080371363 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.09976934 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079967534 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079480026 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.09804024 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.077048907 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.101553845 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080600998 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.107267671 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.080001586 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.083088882 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100504696 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069858184 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.097749831 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077220646 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.085430013 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.097563578 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080289962 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.095662938 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068590211 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.068085033 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.095730989 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079922657 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.101442588 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070687179 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.101977302 seconds)
  done (took 4.702722888 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.088727071 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.09157639 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.113966323 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.065820356 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.098352386 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.066565037 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.116309325 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.064358517 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059674931 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.115996945 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056317945 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059291912 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.09144342 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054496167 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059547108 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056496624 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.088842274 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056407614 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059106228 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.087032925 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058330574 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054391216 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.088112424 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.06321454 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056718568 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.08887901 seconds)
  done (took 3.078174119 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075205177 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084229122 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.114860057 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.128523939 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.133981849 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077825266 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.10579102 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.087633219 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.113137211 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068252875 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071639438 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.124024376 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087832623 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.101297413 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068217126 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.115102264 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082168302 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069667942 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.101995175 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090627372 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.112064025 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.078576748 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.120342488 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081540609 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067288119 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097330824 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072722689 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.109425898 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07352544 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.07724597 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.099886801 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071678956 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.098028872 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079600673 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072632785 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.097750993 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090095955 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.106025474 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078864688 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.06882817 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.100002469 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069272051 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.116790577 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.113107383 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.095226548 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074930872 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.07560805 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.105061682 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068277357 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.11419664 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077117716 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.06847694 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.09869377 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067935633 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.096046561 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081484539 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.07038342 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.098030814 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077522163 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.099277809 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.081050661 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072196241 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.11125472 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068099959 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.103680425 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068148459 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069128114 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.094615513 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092219597 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069809182 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.137861961 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070252368 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.097010346 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077591629 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.103503966 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074458077 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068476774 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.11159056 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077672521 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.099609869 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076718446 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071690425 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.09934743 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.088266325 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.098543982 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.070298695 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069779657 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.102122902 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071116904 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.106703948 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08122996 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.06886654 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.098362128 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085662291 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.095548172 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.070182163 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074319241 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.101108937 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067979404 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.10731735 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073958797 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.096728127 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077674959 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068576604 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.098738775 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078373708 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.100963485 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067633768 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073166365 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.101833214 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069107263 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.06965804 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.099034655 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070271205 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.105777346 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074663648 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072758956 seconds)
  done (took 11.397960315 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.193625541 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.186851865 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071173083 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.179517871 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077238745 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.108632747 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.180532565 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.096815678 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.097442802 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069229598 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069724163 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.131657588 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.125724119 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.106715762 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.107155014 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068867365 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.114639549 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.10546014 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.182902834 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.177173038 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.116759661 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077072661 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070865219 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.09900406 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071046182 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078548949 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.114181375 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077248594 seconds)
  done (took 4.29099907 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082049844 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.130357295 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074318187 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.09002637 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.120342918 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069291463 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.102501607 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.07033045 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.109419143 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079937099 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.096761939 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074686982 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075193215 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.10647644 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069037012 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.106624481 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.078677835 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069973997 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.100100951 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074043164 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.106100446 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.081621063 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072619757 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.096049764 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.075102339 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.095556188 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.065983034 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.113881529 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069518922 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.118839147 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066811201 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074535948 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.110245681 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069458423 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.096101953 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.071935689 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.07217152 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.100602283 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070421163 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068021928 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.095394035 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058007391 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067542192 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.108935913 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074689088 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.08881575 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.0741843 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073241725 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.10125231 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.06647106 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.099366131 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072152235 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.07176119 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.10619088 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073425617 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073275512 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.101539456 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.06637285 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.103793693 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.071480792 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064667261 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.095049839 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073226277 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.067528234 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.104363947 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072559595 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.095034096 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072206957 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.074090551 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.102954167 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071942081 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071555514 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.094707314 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070711752 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.101333013 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.073389222 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.07282897 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.095148393 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068754099 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.06925421 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.084202843 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069197338 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054190865 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.100084685 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067627288 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067194257 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.099698084 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.074466061 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.109979271 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069702294 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.102248057 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069915348 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067975128 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.10009813 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.064551375 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071618604 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.112136101 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.112254559 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068511908 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066242255 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.111599069 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.073482763 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068441937 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.084660112 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075457224 seconds)
  done (took 9.922980105 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.09710379 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093463379 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.098323911 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083569839 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.124892978 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.093472647 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.104318805 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.074869429 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070480245 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.113783358 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.068119686 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.105614608 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068970478 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077647043 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.125267248 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076203637 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.099228908 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078258864 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072648546 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.136467794 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.08383841 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.111583624 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.081644808 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.097653177 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.073476332 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080962371 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.12548077 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.080956517 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.10811648 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.086363867 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.081705868 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.124791315 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.087040553 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.101241183 seconds)
  done (took 4.336855851 seconds)
done (took 38.841955434 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.204237524 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.411382319 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.192102483 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.091620015 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.231223906 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.205450632 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.204921551 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.194220998 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.559266005 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.192908812 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.434577419 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.843762964 seconds)
done (took 58.905574435 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.22050447 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.333357675 seconds)
    (2/2) benchmarking "String"...
    done (took 1.460973345 seconds)
  done (took 3.941460952 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.58761572 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.091873246 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.4528775 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.194580888 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.196781973 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.509072632 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.856373595 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.047289267 seconds)
  done (took 27.485604528 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.204569147 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.574038595 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.710268099 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.702589008 seconds)
  done (took 18.330296983 seconds)
done (took 59.703908741 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.195330452 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.259374677 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.198822937 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.179542442 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.306941268 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.227094719 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.326172196 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.263818282 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.204674288 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.183051011 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.21528947 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.194793461 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.207988209 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.334744492 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.204071087 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.199488 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.274262995 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.816707574 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.587805389 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.198752231 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.242737822 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.245019839 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.203658718 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.199570988 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.217061953 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.196506904 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.196276361 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.211734382 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.554376172 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.197519749 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.299283737 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.53110052 seconds)
  done (took 190.01293493 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.196183709 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.213357336 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.328226357 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.233780624 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.482223963 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.397157213 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.321402263 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.704427453 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.215184823 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.225629093 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.473797475 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.196666078 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.55374691 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.161668555 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.208337314 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.301379745 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.384730532 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.535591175 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.213649774 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.473070565 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.218199663 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.409187287 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.310336109 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.40784713 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.223630212 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.254283006 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.244225993 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.216211827 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.388888856 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.289326486 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.24614332 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.241762265 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.801768888 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.055081257 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.206227823 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.224670763 seconds)
  done (took 149.699128267 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.463813911 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.198913956 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.198289197 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.197591806 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.228209865 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.199149771 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.75902295 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.760397952 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.743239637 seconds)
    (9/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.198354593 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.345300208 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.261221329 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.467335931 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.201590522 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.292317563 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.211503426 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.200483702 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.214363984 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.225356228 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.202299578 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.199765257 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.759893006 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.21529088 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.237372145 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.206709289 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.200868956 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.230322054 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.592695616 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.199638603 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.230813331 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.519815538 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.245097683 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.199686943 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.522821523 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.219261578 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.310255467 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.201624659 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.230744028 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.200124224 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.470703491 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.200213757 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.201625421 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.203762517 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.803259123 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.202979996 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.76329029 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.203052378 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.101567932 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.200310146 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.200213351 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.809554974 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.732567248 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.204294614 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.201018279 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.203356347 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.202155708 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.200937814 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.231279201 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.774949316 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.301260588 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.201598413 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.204162682 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.231301367 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.202074353 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.572484857 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.206697624 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.186937011 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.261104004 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.30670909 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.764660927 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.205816765 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.294858039 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.322138761 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.202102015 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.203291945 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.202230054 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.202419346 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.30905399 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.202623721 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.609372841 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.203182953 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.20290398 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.207988424 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.203998062 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.262667619 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.296331394 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.203146152 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.536904483 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.207644 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.202847094 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.915132107 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.295261212 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.203201545 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.202637122 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.202652377 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.611769773 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.764961263 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.415658344 seconds)
    (98/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.205891621 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.202950799 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.736209903 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.206232946 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.624620796 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.740882814 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.838692578 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.208485515 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.311203901 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.207636443 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.205553472 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.203566689 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.232512627 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.205069776 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.262528294 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.2042394 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.601980282 seconds)
  done (took 345.616933237 seconds)
done (took 687.932201453 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.865644615 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.844963737 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.956338606 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.844662758 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.822530961 seconds)
  done (took 10.481608516 seconds)
done (took 11.628077037 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.388009102 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.388315917 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.264463153 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.389783902 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.234190916 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.408717726 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.36899262 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.225849019 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.307199305 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.280493201 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.304564451 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.253044566 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.231691756 seconds)
  done (took 18.193102069 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.508268626 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.51312184 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.268367417 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.504640149 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.244827093 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.513312651 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.395682509 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.406163873 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.395730725 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.220209129 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.218621317 seconds)
  done (took 16.337983035 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.521862325 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.508489051 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.27250738 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.519129416 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.245544087 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.518314678 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.396020982 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.406728268 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.39209544 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.218377937 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.218025031 seconds)
  done (took 16.365403594 seconds)
done (took 52.043759628 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.217501689 seconds)
  done (took 2.365808391 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.246552825 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.415747646 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.230138303 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.218014871 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.218738756 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.214775983 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.217202384 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.215085025 seconds)
  done (took 11.126557025 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.213962367 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.212815498 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.210446512 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.211926112 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.214335633 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.211209995 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.21193757 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.212298676 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.214614628 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.213596764 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.211862326 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.211589204 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.212379049 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.215783753 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.214791618 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.214701608 seconds)
  done (took 20.557704972 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.21369906 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.211210726 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.211465858 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.212474648 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.21186962 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.213255917 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.212987658 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.21249246 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.21197789 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.212451214 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.213950207 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.211987612 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.212943468 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.212899465 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.212714278 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.213936144 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.212333235 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.212819471 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.217377714 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.213010971 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.213718779 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.213240554 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.213786554 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.213794938 seconds)
  done (took 30.264793416 seconds)
done (took 65.463287453 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.297455479 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.864735084 seconds)
  done (took 9.31328766 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.215148821 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.215576981 seconds)
  done (took 3.583467658 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.215515578 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.215815556 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.21539573 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.215417675 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.215886231 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.215529627 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.21576405 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.21650865 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.215490323 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.216106545 seconds)
  done (took 13.308258919 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.216301177 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.216694331 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.213199817 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.215714909 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.215980049 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.214166242 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.214943337 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.216462971 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.216820139 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.213301858 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.216233027 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.215020269 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.215467138 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.215161155 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.217183168 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.215033488 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.214713273 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.214361767 seconds)
  done (took 23.028433734 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.2164582 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.216850646 seconds)
  done (took 3.58557843 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.214894859 seconds)
    (2/7) benchmarking "second"...
    done (took 1.215065338 seconds)
    (3/7) benchmarking "month"...
    done (took 1.215601112 seconds)
    (4/7) benchmarking "year"...
    done (took 1.214988782 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.214903424 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.214806405 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.214764869 seconds)
  done (took 9.65762124 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.2185879 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.388900995 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.468878899 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.800435142 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.219322013 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.221606937 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.086342833 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.222171098 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.22384388 seconds)
  done (took 14.003100165 seconds)
done (took 77.630934593 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.217803112 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.209378106 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.089754629 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.215969665 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.226549731 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.5101551 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.267658129 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.339371768 seconds)
done (took 37.230336023 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.222922096 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.915029379 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.95526264 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.211782857 seconds)
  done (took 11.236308061 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.194731312 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.152011394 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.196554462 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.207837239 seconds)
  done (took 17.903144046 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.829930478 seconds)
    (2/2) benchmarking "read"...
    done (took 1.540301514 seconds)
  done (took 4.521307784 seconds)
done (took 41.037885251 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.216193885 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.213170835 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.216078348 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.213469502 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.215744847 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.21398103 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.212988021 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.215709425 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.215929331 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.213768331 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.216279895 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.215727148 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.215510307 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.214348633 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.2139553 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.217303717 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.215769035 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.213172269 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.213180973 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.216911276 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.214690369 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.217379192 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.213857549 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.214373955 seconds)
  done (took 30.310912174 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.217129014 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.216255241 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.217731423 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.217746575 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.214529794 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.218092029 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.217113474 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.214333327 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.217064068 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.216504183 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.214727601 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.214909037 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.216707912 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.215218049 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218469245 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.21625397 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.218345762 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215437742 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.216889917 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.216384856 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.216887563 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215351046 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.215436695 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.217654562 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.216345001 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.215618799 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.218731198 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.21667335 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.218134058 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.215038788 seconds)
  done (took 37.649379818 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.223037536 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.225458312 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.218197691 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.219298314 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.218568201 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.218813438 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.218702272 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.218392235 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.219023344 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.218101701 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.21856107 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.219060252 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.218203111 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.218856616 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.219576839 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.218850488 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.219163709 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.218794651 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.220322758 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.218785085 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.219808346 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.219182842 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.219114783 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.219575879 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.219645692 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.219302176 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.21996782 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.219510356 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.219756904 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.219721197 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.21929977 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.220816087 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.219942544 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.219945924 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.220000379 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.219382702 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.225022246 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.227719202 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.220323427 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.219649574 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.220048892 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.220464916 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.221204909 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.220790739 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.221573164 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.220837508 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.220967309 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.219880584 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.220893921 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.221643349 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.220517826 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.220130317 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.22126883 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.22186684 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.220942215 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.221427554 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.220832798 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.219985323 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.222133904 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.221403471 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.221237167 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.221800083 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.221229795 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.221660332 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.222244213 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.221148825 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.222356287 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.219826243 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.222213096 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.221655086 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.221858941 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.222802353 seconds)
  done (took 89.030682656 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.224859869 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.222072384 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.222410077 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.221854966 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.222098109 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.223485884 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.223365827 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.225494002 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222182076 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.225092238 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.225643643 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.223128278 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223016465 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.226293206 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.225743969 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.223687657 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.225347801 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.223658717 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.224869817 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.225812992 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.225036994 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.223169947 seconds)
  done (took 28.085900681 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.225233215 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.226388313 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.223662627 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.225879805 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.222852774 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.226157853 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.225987552 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.226083164 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.225214385 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.223017193 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.223222805 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.227198281 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.223953413 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223378677 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.223152065 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.223965036 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.226792239 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.224587844 seconds)
  done (took 23.208811306 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.223954812 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.224200138 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.226572836 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.225059112 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.224205715 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.227310377 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.224980391 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.227459454 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.227445712 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.224435727 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.228388583 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.227652994 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.228169702 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.225282479 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.227331903 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.225023269 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.227285309 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225809757 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.22860005 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.226186623 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.22538201 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.227449972 seconds)
  done (took 28.141317378 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.226969265 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.228937453 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.224732467 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.22468894 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.225121033 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.227530834 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.228297882 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.22556615 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.228172299 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.22894773 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.22624058 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.228120507 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.224539515 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.226661613 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.226012114 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.225519181 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.228388411 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.227203828 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.22836053 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.22646141 seconds)
  done (took 25.700257821 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.233115587 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.23285688 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.23303517 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.233326913 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.233081862 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.233625257 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.232556979 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.232994907 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.233507158 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.233775358 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.234413491 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.235453212 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.232849368 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.23389342 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.233991621 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.234436806 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.233825817 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.233384205 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.234088265 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.233700342 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.234350075 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.234698744 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.234485972 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.233312493 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.234411293 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.233742357 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.234384477 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.23550488 seconds)
  done (took 35.71193833 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.230525884 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.230644714 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.227643868 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.227876042 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.227808688 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.228115651 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.228317582 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.228730807 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.230007041 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.22819711 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.230806774 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.230891938 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.23086321 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.229938678 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.23074794 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.231666747 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231192795 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.228384553 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.229892728 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.228965556 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.231645204 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231600528 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.232462637 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.230211319 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.229242643 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.231639922 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.229118896 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.229884325 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.232108234 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.229027493 seconds)
  done (took 38.065331728 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.250103584 seconds)
    (2/2) benchmarking "in"...
    done (took 1.250857028 seconds)
  done (took 3.667798732 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.230170918 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.232731616 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.232448132 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.229937184 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.230619435 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.233010396 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.232903426 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.229364213 seconds)
  done (took 11.019005763 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.233154044 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.233069696 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.232395421 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.232271844 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.237421935 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.235143408 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.243320731 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.249952153 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.236753943 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.234364265 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.240612039 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.243176213 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.238185214 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.234136421 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.234431697 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.23664931 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.23372255 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.237699501 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.23719506 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.233389291 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.237296074 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.237506948 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.236870204 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.232116141 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.237739846 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.24848775 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.242063518 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.234683281 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.234327976 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.240324757 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.234388761 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.231552463 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.238509406 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.237543777 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.234298767 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.239294039 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.24693773 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.253118492 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.243648282 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.23938769 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.234323183 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.231723772 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.237767958 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.238718875 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.237900028 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.239284442 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.234837506 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.232329892 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.235609951 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.239073131 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.240658918 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.235303881 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.23202246 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.243778281 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.239386627 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.247252748 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.256551505 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.239447811 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.246430632 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.25001998 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.254006859 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.246060303 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.23968317 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.240811639 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.247748222 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.263770017 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.24684103 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.251302436 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.23372026 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.235864341 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.247870992 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.253672917 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.249398085 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.240649423 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.240597665 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.236122551 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.238175814 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.236212375 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.248318654 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.258761681 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.240570541 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.240839305 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.248138623 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.262504615 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.236986299 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.241531492 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.241019596 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.241429075 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.239744926 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.251339948 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.258707231 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.238144925 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.23785627 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.238727424 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.242716825 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.241484516 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.238864899 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.239992077 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.235620988 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.238347592 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.241052909 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.24310159 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.250441434 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.242006604 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.242211964 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.247870113 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.23878739 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.23826313 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.249771153 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.238337011 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.241791084 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.240856061 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.248205356 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.236302657 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.243737149 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.250643317 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.242789568 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.242208651 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.24327232 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.239305647 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.25206532 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.270426994 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.239696578 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.238746541 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.245809088 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.255382625 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.243334023 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.245104533 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.240121424 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.237285529 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.237411347 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.24281856 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.24100298 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.242389261 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.243781526 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.243536035 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.237717262 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.239605616 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.244614142 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.24207037 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.243562507 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.242099458 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.243311715 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.245245338 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.244289834 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.243598451 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.250237475 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.241681499 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.243624999 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.244381191 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.238628699 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.241096189 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.244881838 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.24514862 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.243654425 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.244320404 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.242044384 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.245606818 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.24144459 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.241588249 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.241192621 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.244018263 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.247218254 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.244985791 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.248587818 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.243293666 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.238827639 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.24188677 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.241627345 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.243605158 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.241570526 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.241546507 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.245770101 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.253736053 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.241187185 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.245743459 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.247137541 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.245239708 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.246129653 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.245857691 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.246149731 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.252770157 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.24633842 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.253738402 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.246400849 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.246400276 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.24383112 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.245093677 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.243511978 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.246826943 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.247323747 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.251178489 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.259202804 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.254100531 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.245693409 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.246664336 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.246563191 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.251488078 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.249965023 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.247075749 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.243776682 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.247475784 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.244329948 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.246611087 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.247643489 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.247305242 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.244615115 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.243646224 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.243474697 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.24736317 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.244639307 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.24658593 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.246169168 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.241592567 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.24519543 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.247965364 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.245123246 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.241848763 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.244605023 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.245283964 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.244991499 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.248848628 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.256438147 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.243542256 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.246191664 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.248704483 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.24703654 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.244974059 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.244720862 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.249262896 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.246842742 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.256273936 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.26461967 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.247438106 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.25419865 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.263708844 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.245339193 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.250983184 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.245955317 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.244054066 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.249457616 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.254388119 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.246313663 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.249409105 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.249810629 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.246652798 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.245053463 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.255549998 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.243745151 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.24644659 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.245730037 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.249847043 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.243827324 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.249291333 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.249326198 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.248459978 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.251176633 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.247433934 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.246851168 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.249806733 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.249364742 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.249524979 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.250693288 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.251573812 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.25832146 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.254553205 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.249631398 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.250508837 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.25019472 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.251051939 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.249790696 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.249845289 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.248103192 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.264130645 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.260281758 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.257147575 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.251460672 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.248007077 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.257126448 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.250440803 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.254310151 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.248028479 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.25064325 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.249263874 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.248296687 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.244997137 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.25051145 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.249181907 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.250370788 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.25124479 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.252541141 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.248575259 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.249685916 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.251911633 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.252590028 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.249530503 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.250230444 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.248794149 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.254770391 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.252102705 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.250329853 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.249708135 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.259291301 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.2679031 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.252354925 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.249873408 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.251320185 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.249406831 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.251194193 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.253211963 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.253259104 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.261914163 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.254615429 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.262543644 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.252353677 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.263275413 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.253119263 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.25554528 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.26262125 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.247123485 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.249845655 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.251585968 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.253859496 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.260197473 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.271321747 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.253108282 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.258281674 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.253800219 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.254519675 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.250498826 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.254395017 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.250560704 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.254033278 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.261944995 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.269396094 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.256502946 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.25323748 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.248930617 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.254458209 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.250318219 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.251054956 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.259390719 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.25435524 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.253222937 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.251780362 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.253700562 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.251462384 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.255272835 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.250857677 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.248934507 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.252622507 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.261732307 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.271297924 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.260277661 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.25178343 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.265486014 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.255324381 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.26291401 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.272104112 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.253660803 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.256852612 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.254001591 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.25659038 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.253331235 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.254022385 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.256162619 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.255936741 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.256789403 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.255995034 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.256443628 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.25392968 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.256574912 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.254821339 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.264916766 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.282189184 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.256520608 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.257288909 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.250041332 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.255122939 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.261434256 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.256438625 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.25357549 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.257548658 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.266513306 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.261691998 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.256112789 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.257628466 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.255276819 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.25758664 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.253584266 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.254085852 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.257270895 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.254460179 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.258422888 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.258034564 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.26229617 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.254208946 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.256810291 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.257254487 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.256908712 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.268111352 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.259017677 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.257349411 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.258619118 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.25407807 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.255862433 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.255888298 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.258249818 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.256972724 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.254197451 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.257185719 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.263478267 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.262441652 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.259685027 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.25584802 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.258673907 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.256865134 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.257732327 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.257595976 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.258997296 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.2587235 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.258120905 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.259111085 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.257515152 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.255291716 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.254486866 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.255992556 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.255350644 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.25966868 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.264413458 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.257686887 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.252645864 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.255484216 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.255605073 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.254993674 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.25821599 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.269707835 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.25984815 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.268843161 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.267071575 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.263429742 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.257681314 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.260081315 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.266904167 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.256653728 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.258738844 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.259841451 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.261049455 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.258884807 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.26211939 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.260029158 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.266474023 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.259302614 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.258748842 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.269253163 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.278120941 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.26130244 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.260324351 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.263142034 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.258949332 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.254084436 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.257751337 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.257541682 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.267806904 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.278677625 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.261483844 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.26209053 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.257385453 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.261444267 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.265916621 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.257871128 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.260706112 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.25507571 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.259934367 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.262408538 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.25832852 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.256148683 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.259712004 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.260074362 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.262055607 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.268770311 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.255742589 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.262866856 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.259545368 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.261136262 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.262372536 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.258834261 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.256047791 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.256761963 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.260911518 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.262312638 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.260909923 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.264038144 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.260263692 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.261552968 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.260313373 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.263644464 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.264300844 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.271165086 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.267216594 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.256481434 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.260479902 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.261227042 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.266140244 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.26426303 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.262888174 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.262208006 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.263812515 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.25934107 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.263596051 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.259057768 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.265045254 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.28063281 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.27764201 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.262679571 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.262049362 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.267614971 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.260456787 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.257642668 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.26076752 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.266151609 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.264774188 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.271910045 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.264236905 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.269791923 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.279506859 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.262455264 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.265009542 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.265099839 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.27107969 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.266200859 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.265026342 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.264830161 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.268176056 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.281465205 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.261964672 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.273209814 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.296321235 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.280589901 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.263515541 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.264714352 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.262371344 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.265062558 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.26560623 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.266138084 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.261098829 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.262862471 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.265850759 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.264504118 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.271192715 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.26543081 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.261951517 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.262147089 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.264340676 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.267552759 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.259666567 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.266376288 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.262896011 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.265717178 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.266701667 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.267513032 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.265387809 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.280104149 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.276792475 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.26308339 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.266934013 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.260102028 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.268182936 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.268012291 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.275937109 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.272020845 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.268712784 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.266901094 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.26643958 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.266641288 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.260757661 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.265321623 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.264989243 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.26509122 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.261227194 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.280773689 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.277020214 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.271526866 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.265794667 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.267286003 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.263934906 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.267358265 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.268434355 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.26785923 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.267936349 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.266519402 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.272399036 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.263970585 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.264725975 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.268593115 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.272967473 seconds)
  done (took 747.97772726 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.262727103 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.262194886 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.263041005 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.262389926 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.261634073 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.262012564 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.263004814 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.262428136 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.262949488 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.263276408 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.261804832 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.263122643 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.262092872 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.262559868 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.262695702 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.262355734 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.262018882 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.263054429 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.263124616 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.262343497 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.264578082 seconds)
  done (took 27.71451003 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.266049372 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.263681768 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.264303913 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.265912114 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.263758725 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.266760495 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.262909537 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.266287467 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.265766142 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.263594748 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.265788393 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.266608909 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.263724254 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.263710676 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.263821946 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.266190827 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.26771061 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.264257795 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.266663809 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.264560189 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.266825852 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.265192385 seconds)
  done (took 29.035229603 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.270714565 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.272227201 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.26744037 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.264063885 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.267607809 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.265207418 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.27068472 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.266869784 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.267682796 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.270056215 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.266373707 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.270409489 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.276288109 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.27398747 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.272084522 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.26663716 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.41219368 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.271005903 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.271940396 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.270842895 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.264866801 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.277364636 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.264833038 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.265497346 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.26773941 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.270803052 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.268157597 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.268012614 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.271811725 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.270536196 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.276521884 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.267773828 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.270030437 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.271548931 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.268950921 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.2712822 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.27336735 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.272826207 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.26649534 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.269015402 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.281239544 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.291507787 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.272847515 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.279144723 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.269142309 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.269295188 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.27439701 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.2810405 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.266718189 seconds)
  done (took 63.620159213 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.268674163 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.269574934 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.267310803 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.2697078 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.269809147 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.269535938 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.270176537 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.270315473 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.267152191 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.267314495 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.271338809 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.266730397 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.268056781 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.270351961 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.270297536 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.267864114 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.26685623 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.267016595 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.266967879 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.267100921 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.266911497 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.270425678 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.270402681 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.267869384 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.269999115 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.267773057 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.26893806 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.269562686 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.267863005 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.268047973 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.271195747 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.270757304 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.271255422 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.267936106 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.268519446 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.270178555 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.270260424 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.269258845 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.271912587 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.268503132 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.271324217 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.271566543 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.272000106 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.272009205 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.269081911 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.26858368 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.2697877 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.26922217 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.269322896 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.27198489 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.272576534 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.269562747 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.271825826 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.269684834 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.271764382 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.272718787 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.270481482 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.269877658 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.271880255 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.270349857 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.270002713 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.273815526 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.270520814 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.27270855 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.273554612 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.270423393 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.26996057 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.273120763 seconds)
  done (took 87.555576827 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.276772173 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.276658849 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.277281841 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.277080017 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.277684174 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.276366332 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.275817516 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.276678906 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.27655121 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.276921062 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.276833741 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.273956408 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.277178016 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.273447725 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.277981204 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.276124244 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.277507001 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.278663066 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.277799863 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.276841754 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.277582627 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.277322495 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.277839073 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.277783085 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.27759431 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.277359376 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.277495463 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.27722812 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.279113577 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.278599367 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.277381617 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.277788379 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.277562914 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.277382674 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.278125598 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.278741834 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.277939011 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.278527717 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.278104786 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.277970231 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.278349763 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.277341674 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.277812245 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.278059457 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.278404384 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.278689003 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.278555272 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.279512834 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.274543134 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.27826174 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.279128186 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.278099021 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.277910141 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.278875696 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.279271969 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.276691102 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.278224283 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.278557341 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.279143808 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.278706857 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.279817391 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.277312208 seconds)
  done (took 80.422537724 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.27647723 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.276243 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.273426542 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.273678833 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.276105223 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.273685712 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.275663683 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.276675984 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.276934388 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.276568048 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.276023256 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.274724117 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.27512435 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.276513816 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.273857683 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.274057063 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.27342199 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.273273458 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.2767029 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.274925207 seconds)
  done (took 26.714718643 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.273915309 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.275925793 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.27449892 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.274766113 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.27712381 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.274890669 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.27654769 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.277473074 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.274563757 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.277535938 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.278246774 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.277085701 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.275132169 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.275878904 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.278668207 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.275804845 seconds)
  done (took 21.629484642 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.275574886 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.278686628 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.281203218 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.281276496 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.27492123 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.27525839 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.278640912 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.276335109 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.276611376 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.279875897 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.278593052 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.27795981 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.279063055 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.28214117 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.274944575 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.278689639 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.275798952 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.275901696 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.279239536 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.283167927 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.277183333 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.275716876 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.278019888 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.278696177 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.276997109 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.276593337 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.275901109 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.276436625 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.276890289 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.279424642 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.276523234 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.276845238 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.277158147 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.275985515 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.283285464 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.277534248 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.280139095 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.279779184 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.279064323 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.279718009 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.279856624 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.2776514 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.279273473 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.280128433 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.278197265 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.280245097 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.277899908 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.278308017 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.276575377 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.277736265 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.280209392 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.284421937 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.280080986 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.281205664 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.280285196 seconds)
  done (took 71.527391056 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.280273641 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.281163931 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.277065079 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.279811949 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.280861585 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.278524431 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.280436395 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.277592576 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.278660068 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.281145624 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.279268372 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.281760551 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.278490877 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.281798055 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.278755402 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.281043058 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.278856485 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.279035327 seconds)
  done (took 24.249327481 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.278794005 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.279858508 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.282425623 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.27928622 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.279672919 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.282787582 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.279580347 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.281136749 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.282046788 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.279394507 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.280299763 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.282626125 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.281871259 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.283310032 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.280097969 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.280657941 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.283132723 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.281869906 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.280207054 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.27984948 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.282924778 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.282614143 seconds)
  done (took 29.400423309 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.282802382 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.283002805 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.3029484 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.331304175 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.318299516 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.282991703 seconds)
  done (took 9.018214263 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281586192 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283533456 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.280902541 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284454281 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28376551 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281261219 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279760663 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281047412 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284414756 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282097178 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282514392 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283151419 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283297465 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281732825 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284487861 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284103515 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28121531 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280949927 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282612492 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284652099 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281612813 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285045789 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28192543 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282845874 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282109696 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282857839 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285487612 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283147908 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282858152 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284274435 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285103662 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281871117 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284863924 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283044637 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285639548 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284672959 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283421428 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285889459 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285188077 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282006363 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.285753448 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286037666 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285923166 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283119237 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285591726 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283130782 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28401531 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283590397 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282952151 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285740895 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287477639 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283816113 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286365599 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285085521 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285425182 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286479562 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284625763 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283504124 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285676412 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284610183 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284555113 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286202971 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282777832 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284237344 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286870726 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283761127 seconds)
  done (took 85.951906323 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284043961 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.284972872 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284478311 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285266965 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285377199 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284451866 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285089775 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284623845 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284479344 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284531681 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287712663 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285608251 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284396506 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284950033 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284907996 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283822963 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285756007 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285741347 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284686373 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28882697 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284492161 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28481545 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285257735 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285747652 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286275905 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288158532 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284980316 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28532409 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285641042 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285034694 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285859667 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285261035 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285656197 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.285739693 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285421729 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286060826 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286257531 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286117449 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285481057 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289023704 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286244272 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288785864 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287246069 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285829598 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287064116 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285880997 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286419899 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28699799 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286199483 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286276802 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286998595 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287066063 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287269319 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286808202 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285962772 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286022004 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287125813 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287466939 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287602477 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290337569 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287425241 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287152726 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289201919 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287827135 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286932119 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285946635 seconds)
  done (took 86.107378181 seconds)
done (took 1742.667261146 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.394592321 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.353967432 seconds)
  done (took 13.971856059 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.452334095 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.406366834 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.290079662 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.32339234 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.28995615 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.28625075 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.305899698 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.289365034 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.289277852 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.289400641 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.289827151 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.484594771 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.286109974 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.290194319 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.290449382 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.382693919 seconds)
  done (took 42.477393227 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.318967849 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.296676626 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.414029057 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.317376106 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.318856211 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.485303857 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.351998662 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.295545106 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.47686025 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.341129866 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.91753078 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.319382897 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.295282094 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.439726899 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.313324052 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.484769728 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.555217705 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.922833748 seconds)
  done (took 30.090399619 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.771823625 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.318403955 seconds)
  done (took 9.31558792 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.331350966 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.334347276 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.326669931 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.323621565 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.323583418 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.317101607 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.354220041 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.353939333 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.317497237 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.323319017 seconds)
  done (took 64.538235983 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.314861104 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.294877391 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.296094281 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.29363728 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.286789001 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.285172994 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.294518424 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.287219327 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.122313774 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.426011971 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.31009734 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.302747072 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.295847635 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.296579121 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.291282145 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.332812259 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.452737165 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.291933965 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.291631663 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.301360991 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.296018993 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.383989741 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.338639441 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.292075655 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.428864732 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.171466726 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.301724823 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.302171836 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.434545437 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.291526184 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.296135542 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.296587174 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.29754705 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.873178497 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.758493704 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.307171968 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.321017056 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.305377835 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.292988503 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.42243282 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.296939098 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.303557705 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.29930685 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.738619574 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.461927128 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.412596534 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.577731853 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.298166249 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.297407873 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.360963986 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.298473373 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.298386801 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.326382257 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.062357229 seconds)
  done (took 109.743945882 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.331503042 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.779478921 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.46175815 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.31320419 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.088967586 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.990157639 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.289371792 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.589454857 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.329584668 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.290438083 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.633915646 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.805607241 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.29062656 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.306894369 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.921234588 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.362901027 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.294070402 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.066598337 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.291689664 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.294719526 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.720766303 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.308454612 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.290423684 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.471005392 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.332189337 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.767776347 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.82403078 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.753565928 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.296624849 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.292554946 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.767792006 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.302588286 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.371766833 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.29150796 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.57290131 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.660396589 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.64049103 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.294436758 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.320934701 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.296498049 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.320705452 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.764700715 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.648628136 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.292543508 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.309316788 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.769637301 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.291650597 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.294185519 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.292538794 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.494792846 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.047181692 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.292907253 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.824707426 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.293081644 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.569481248 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.369154999 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.351495013 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.796593826 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.292477108 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.383711574 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.313606115 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.294444563 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.298482849 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.295093327 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.297797502 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.655136438 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.4036027 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.293994997 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.656959623 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.763029546 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.294731098 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.828486511 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.216158625 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.29759097 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.362374539 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.297680675 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.878089076 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.796476175 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.321072688 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.293930606 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.640992263 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.293609801 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.622036308 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.309592273 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.296173804 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.73360339 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.313524073 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.355617229 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.294776772 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.321348432 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.921772495 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.297495769 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.569020867 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.337237997 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.294544637 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.294162025 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.298923267 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.30284711 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.294784987 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.301132501 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.831090402 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.300390431 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.610527971 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.315203584 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.295920503 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.296738894 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.298460435 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.296037547 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.515674163 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.838667764 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.301047735 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.297539443 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.303581025 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.304007665 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.431515765 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.298592314 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.61651329 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.298187141 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.299443164 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.297875857 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.034669235 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.305771442 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.297311498 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.298686919 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.138498666 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.503688138 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.330772917 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.296719567 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.298027882 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.312702817 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.73663746 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.297875756 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.330375705 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.296889713 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.014762132 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.297018068 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.315191237 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.682331652 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.304471107 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.297472611 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.299300466 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.296513057 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.607504822 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.580030737 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.342045047 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.299862812 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.297929156 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.992628859 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.317439941 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.44101832 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.318595217 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.317307269 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.496740131 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.701517208 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.299540134 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.875179806 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.296582542 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.510588473 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.298856434 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.618674577 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.799267865 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.299072573 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.303505097 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.011403599 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.979592974 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.957642063 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.304007063 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.640529498 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.313662205 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.752752675 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.298894039 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.299022328 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.74950478 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.29975075 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.305870187 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.298102887 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.299501274 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.467259898 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.475913071 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.126892162 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.307305054 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.776798807 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.311139781 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.299911852 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.299448423 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.304730894 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.654045801 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.394098015 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.300871096 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.314100909 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.300335115 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.302239737 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.78567123 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.246136676 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.304622109 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.454387755 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.946005195 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.299748886 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.300532806 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.990107327 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.448692373 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.823802716 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.353877461 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.624320981 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.308511064 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.341396052 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.033047904 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.325890913 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.829240529 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.303635069 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.300434802 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.910013675 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.302110014 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.643261332 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.30119968 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.3013598 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.857047456 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.301344243 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.306456243 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.730171043 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.300969697 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.567267943 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.301430298 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.308756752 seconds)
  done (took 1104.542447003 seconds)
done (took 1375.902844396 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.302308559 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.303160055 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.289324029 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.307780749 seconds)
  done (took 26.444281228 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.318231382 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.309321038 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.312615494 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.308472194 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.311580428 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.309540023 seconds)
  done (took 9.112549736 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.685555397 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.306025245 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.307789439 seconds)
  done (took 19.541149509 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.541352065 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.618065529 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.706835345 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.595643462 seconds)
  done (took 10.707022488 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.31341919 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.313828713 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.313458715 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.311914076 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.31948523 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.320609133 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.311914512 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.312461214 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.319351578 seconds)
  done (took 13.078299081 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.429625877 seconds)
done (took 85.553665918 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.451955014 seconds)
    (2/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.522512331 seconds)
    (3/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.97588791 seconds)
    (4/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.895468688 seconds)
    (5/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.992381672 seconds)
    (6/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.320714105 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.887602035 seconds)
    (8/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.901700618 seconds)
    (9/309) benchmarking ("sort", Int8, false)...
    done (took 4.388135683 seconds)
    (10/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.617936233 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.267199891 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.567119902 seconds)
    (13/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.688364952 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.345473366 seconds)
    (15/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.172493218 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.807068398 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.333227257 seconds)
    (18/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.304955029 seconds)
    (19/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.305049616 seconds)
    (20/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.536985968 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.178248285 seconds)
    (22/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.501264022 seconds)
    (23/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.800325454 seconds)
    (24/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.698913814 seconds)
    (25/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.23522315 seconds)
    (26/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.331152447 seconds)
    (27/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.30437856 seconds)
    (28/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.622085442 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.303907306 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.293276417 seconds)
    (31/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.267875962 seconds)
    (32/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.074644452 seconds)
    (33/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.475741037 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.434732117 seconds)
    (35/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.745421959 seconds)
    (36/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.82394915 seconds)
    (37/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.306487377 seconds)
    (38/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.326095304 seconds)
    (39/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.729843075 seconds)
    (40/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.564829177 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.726667528 seconds)
    (42/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.348343107 seconds)
    (43/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.307568629 seconds)
    (44/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.290868922 seconds)
    (45/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.515760688 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.402638141 seconds)
    (47/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.062701659 seconds)
    (48/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.708424782 seconds)
    (49/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.369870641 seconds)
    (50/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.150235789 seconds)
    (51/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.948624154 seconds)
    (52/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.32283016 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.265725723 seconds)
    (54/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.331234933 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.417572404 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.565802615 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.32788873 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.351959752 seconds)
    (59/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.102653417 seconds)
    (60/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.332389967 seconds)
    (61/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.739144116 seconds)
    (62/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.370229166 seconds)
    (63/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.899229399 seconds)
    (64/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.397042937 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.363708689 seconds)
    (66/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.312296 seconds)
    (67/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.32442282 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.901961334 seconds)
    (69/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.302082588 seconds)
    (70/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.317570687 seconds)
    (71/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.802612105 seconds)
    (72/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.538171428 seconds)
    (73/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.313925704 seconds)
    (74/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.421047124 seconds)
    (75/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.499430588 seconds)
    (76/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.975756667 seconds)
    (77/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.822745728 seconds)
    (78/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.256989161 seconds)
    (79/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.782167582 seconds)
    (80/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.781635502 seconds)
    (81/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.936583239 seconds)
    (82/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.628922788 seconds)
    (83/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.628683691 seconds)
    (84/309) benchmarking ("sort", Int64, false)...
    done (took 5.532564008 seconds)
    (85/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.310094913 seconds)
    (86/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.172156864 seconds)
    (87/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.82584704 seconds)
    (88/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.878833587 seconds)
    (89/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.964416205 seconds)
    (90/309) benchmarking ("sort", Float32, false)...
    done (took 5.340295291 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.856856494 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.041122538 seconds)
    (93/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.296614605 seconds)
    (94/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.352524555 seconds)
    (95/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.334323858 seconds)
    (96/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.293960399 seconds)
    (97/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.411095111 seconds)
    (98/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.309132429 seconds)
    (99/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.506616095 seconds)
    (100/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.451787557 seconds)
    (101/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.73542357 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.72215896 seconds)
    (103/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.14638898 seconds)
    (104/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.673105556 seconds)
    (105/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.978128758 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.980199019 seconds)
    (107/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.69484347 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.522120905 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.172344491 seconds)
    (110/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.266360646 seconds)
    (111/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.652798513 seconds)
    (112/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.691818985 seconds)
    (113/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.941083261 seconds)
    (114/309) benchmarking ("sort", BigInt, false)...
    done (took 6.314856999 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.327444208 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.727585126 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.296810385 seconds)
    (118/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.435001514 seconds)
    (119/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.308546218 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.41375315 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.296498131 seconds)
    (122/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.327443322 seconds)
    (123/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.312270208 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.438823003 seconds)
    (125/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.58615191 seconds)
    (126/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.19421616 seconds)
    (127/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.664454979 seconds)
    (128/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.415872883 seconds)
    (129/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.687540005 seconds)
    (130/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.397101403 seconds)
    (131/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.337343238 seconds)
    (132/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.092537079 seconds)
    (133/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.312109236 seconds)
    (134/309) benchmarking ("sort", Bool, false)...
    done (took 1.837499255 seconds)
    (135/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.687920945 seconds)
    (136/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.333256729 seconds)
    (137/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.589976284 seconds)
    (138/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.971502024 seconds)
    (139/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.323765073 seconds)
    (140/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.327127114 seconds)
    (141/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.985855269 seconds)
    (142/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.111011438 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.567861474 seconds)
    (144/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.321501947 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.978983934 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.442231698 seconds)
    (147/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.317631134 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.434848157 seconds)
    (149/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.311910727 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.417066905 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.117583246 seconds)
    (152/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.337847439 seconds)
    (153/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.315157931 seconds)
    (154/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.765856613 seconds)
    (155/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.673288578 seconds)
    (156/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.334077755 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.306372777 seconds)
    (158/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.531843932 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.418774297 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.972614331 seconds)
    (161/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.681531633 seconds)
    (162/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.376987428 seconds)
    (163/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.949991102 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.736506064 seconds)
    (165/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.98235525 seconds)
    (166/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.708622494 seconds)
    (167/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.326651118 seconds)
    (168/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.274063411 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.686417998 seconds)
    (170/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.452196482 seconds)
    (171/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.110944895 seconds)
    (172/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.315892738 seconds)
    (173/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.380337554 seconds)
    (174/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.306005432 seconds)
    (175/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.378514675 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.386633727 seconds)
    (177/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.314141887 seconds)
    (178/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.315605789 seconds)
    (179/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.854903897 seconds)
    (180/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.354148873 seconds)
    (181/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.340015613 seconds)
    (182/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.35014742 seconds)
    (183/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.458556705 seconds)
    (184/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.356162202 seconds)
    (185/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.395105538 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.737136488 seconds)
    (187/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.194533167 seconds)
    (188/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.341668677 seconds)
    (189/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.446710398 seconds)
    (190/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.316523812 seconds)
    (191/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.33126029 seconds)
    (192/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.687868393 seconds)
    (193/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.440235004 seconds)
    (194/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.182428528 seconds)
    (195/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.37114345 seconds)
    (196/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.345521422 seconds)
    (197/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.30727918 seconds)
    (198/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.405490057 seconds)
    (199/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.207792075 seconds)
    (200/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.322098627 seconds)
    (201/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.692624811 seconds)
    (202/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.318119318 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.22207602 seconds)
    (204/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.884573154 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.33999194 seconds)
    (206/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.331847325 seconds)
    (207/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.861283068 seconds)
    (208/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.550539154 seconds)
    (209/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.321360393 seconds)
    (210/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.34214588 seconds)
    (211/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 4.034470527 seconds)
    (212/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.339465659 seconds)
    (213/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.396838369 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.228561971 seconds)
    (215/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.331413313 seconds)
    (216/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.742790265 seconds)
    (217/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.647466133 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.068494396 seconds)
    (219/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.338225976 seconds)
    (220/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.305692703 seconds)
    (221/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.404021751 seconds)
    (222/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.301715231 seconds)
    (223/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.316655887 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.020916422 seconds)
    (225/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.316558433 seconds)
    (226/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.357687913 seconds)
    (227/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.319715861 seconds)
    (228/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.262261807 seconds)
    (229/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.510389481 seconds)
    (230/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.320533518 seconds)
    (231/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.317973209 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.317661389 seconds)
    (233/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.83479913 seconds)
    (234/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.428469854 seconds)
    (235/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.341979429 seconds)
    (236/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.317762491 seconds)
    (237/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.770894397 seconds)
    (238/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.375820186 seconds)
    (239/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.028670829 seconds)
    (240/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.320210301 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.740258356 seconds)
    (242/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.537220015 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.381340515 seconds)
    (244/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.87744602 seconds)
    (245/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.204478551 seconds)
    (246/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.446038693 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.508679172 seconds)
    (248/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.351139733 seconds)
    (249/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.429331331 seconds)
    (250/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.393631147 seconds)
    (251/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.334959996 seconds)
    (252/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.539085229 seconds)
    (253/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.318051836 seconds)
    (254/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.816009908 seconds)
    (255/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.944215808 seconds)
    (256/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.317181103 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.680893048 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.408977174 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.814394177 seconds)
    (260/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.343955194 seconds)
    (261/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.30514861 seconds)
    (262/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.338998342 seconds)
    (263/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.700804374 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.971010941 seconds)
    (265/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.800349007 seconds)
    (266/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.325444897 seconds)
    (267/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.599556132 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.943867841 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.368454819 seconds)
    (270/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.148820218 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.281511332 seconds)
    (272/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.591963924 seconds)
    (273/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.396218288 seconds)
    (274/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.344543976 seconds)
    (275/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.402924697 seconds)
    (276/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.416329229 seconds)
    (277/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.400987621 seconds)
    (278/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.407111893 seconds)
    (279/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.602785329 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.42053997 seconds)
    (281/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.401420469 seconds)
    (282/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.42884626 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.430947197 seconds)
    (284/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.756932084 seconds)
    (285/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.501156559 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.19041826 seconds)
    (287/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.710449626 seconds)
    (288/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.309851335 seconds)
    (289/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.361792329 seconds)
    (290/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.328279424 seconds)
    (291/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.701450271 seconds)
    (292/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.33266578 seconds)
    (293/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.447274505 seconds)
    (294/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.944865938 seconds)
    (295/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.458063821 seconds)
    (296/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.425490124 seconds)
    (297/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.184139337 seconds)
    (298/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.775978573 seconds)
    (299/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.350864039 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.773050742 seconds)
    (301/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.94003428 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.342528875 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.39316619 seconds)
    (304/309) benchmarking ("sort", Float64, false)...
    done (took 5.659240422 seconds)
    (305/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.719179682 seconds)
    (306/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.446740339 seconds)
    (307/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.345262851 seconds)
    (308/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.169205801 seconds)
    (309/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.04109548 seconds)
  done (took 928.349200999 seconds)
done (took 929.593270329 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.351141496 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.345774025 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.330199089 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.35133459 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.441512366 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.360935577 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.340778278 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.332185136 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.377894263 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.379482332 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.328373871 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.361842021 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.331676267 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.330202682 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.330914352 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.344026361 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.390449002 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.330373249 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.347166872 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.340670507 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.347011188 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.329291825 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.381118042 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.361563154 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.335461968 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.334823655 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.334017891 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.349561896 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.442420427 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.333373609 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.333756626 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.341851685 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.389831489 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.329424928 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.326592747 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.348990916 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.341873305 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.340991255 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.335542495 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.362977116 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.821740875 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.330479242 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.332997279 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.332995362 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.332516307 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.336626048 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.332908227 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.339243417 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.344411288 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.345826917 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.814963665 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.346477473 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.3352391 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.333378986 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.342946567 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.332014348 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.336021941 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.348118655 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.351021837 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.347694509 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.384646673 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.337319805 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.335990346 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.348768206 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.339412596 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.855551775 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.329062114 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.337501535 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.825667971 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.3390564 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.855625819 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.341651821 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.334847357 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.347418424 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.364610896 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.396430034 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.329712838 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.332567044 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.339717572 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.331703827 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.345349415 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.345727304 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.33913599 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.334895936 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.347788454 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.365688825 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.343965191 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.334637646 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.344086126 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.353313927 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.340570728 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.345958043 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.338311991 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.33036626 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.344535808 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.338882767 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.337079867 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.336733806 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.33921516 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.346041834 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.830548457 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.350703202 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.331820633 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.331328003 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.334937027 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.34774159 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.830252834 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.336712232 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.357869243 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.382302365 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.336831863 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.391900137 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.33807261 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.351116152 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.344760432 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.337805899 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.3320737 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.445739146 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.830197587 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.349762452 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.338023162 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.334932919 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.351017513 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.338373145 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.333363157 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.441122432 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.340599493 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.349313977 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.456468614 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.347162386 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.367466498 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.334946563 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.339601674 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.363913442 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.352348161 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.367516691 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.339405297 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.352417441 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.351939717 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.333451386 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.34694243 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.347593452 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.338661271 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.344088983 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.331468031 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.364705553 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.350239848 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.350211275 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.358929995 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.457688291 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.33544241 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.398329912 seconds)
done (took 226.260870066 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.398858893 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.328326345 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.429734231 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.335262842 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.438682544 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.437996979 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.332974102 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.333091599 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.333022661 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.717053862 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.332006374 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.333423828 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.332256512 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.333576085 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.42052614 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.335857971 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.333084396 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.678382915 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.339992733 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.412992223 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.334532368 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.334170612 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.336251918 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.721997306 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.332629408 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.332378066 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.408656002 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.33578008 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.686163114 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.329624619 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.331487059 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.685895527 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.42786308 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.353958175 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.346957445 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.343466167 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.439752137 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.355758792 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.420713037 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.419459301 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.432684486 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.378992447 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.332797696 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.332544456 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.338764134 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.341337111 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.335740495 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.362780993 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.337123918 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.335871709 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.680115354 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.347338534 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.335838355 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.335573996 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.336142418 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.370461776 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.335272406 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.3417068 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.435832086 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.341294217 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.401640644 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.725287432 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.717910207 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.337396956 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.340368541 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.336176095 seconds)
  done (took 148.730622096 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.408084566 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.413461741 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.455377143 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.340159951 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.389940275 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.46075939 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.340923946 seconds)
  done (took 11.07944514 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.345749818 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.338909566 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.390451028 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.388929158 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.342404161 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.48746786 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.339781096 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.352391009 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.336213413 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.392792296 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.34172479 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.340052405 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.345341757 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.337476296 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.388738263 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.352055186 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.45549657 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.341422902 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.343749184 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.497951316 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.336816982 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.34717488 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.392893636 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.352582351 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.342447402 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.34804967 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.912499431 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.343876352 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.338213762 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.341425907 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.338355704 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.380534005 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.34155928 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.339987415 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.338203293 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.457813662 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.345161643 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.337712083 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.342416268 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.338386376 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.340501078 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.3417284 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.341709919 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.339087425 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.342547419 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.365754105 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.340747684 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.341926185 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.341028823 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.342606483 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.395037828 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.341519288 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.339351657 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.339513513 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.39867615 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.348792625 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.346012562 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.33887384 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.342458687 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.339927428 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.500061091 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.391425885 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.341978481 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.392332061 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.342180231 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.342460465 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.34171693 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.342659656 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.399234138 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.342463064 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.391997303 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.340348688 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.499498488 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.367562256 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.342830419 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.345876591 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.346630456 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.347050893 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.343316873 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.350672854 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.342333545 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.344917837 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.350336081 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.340807738 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.340638545 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.448719515 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.45392727 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.340463627 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.358346996 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.353283304 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.340599789 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.399345409 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.34399449 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.340773128 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.398259923 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.460659509 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.399129434 seconds)
  done (took 154.085926755 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.350088107 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.35285067 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.347105628 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.362025852 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.346478789 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.345373528 seconds)
  done (took 9.3805468 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.348014806 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.345049402 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.344748874 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.345326463 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.34855357 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.346304604 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.349101628 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.347574863 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.352401945 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.345230406 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.346646545 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.349299237 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.347682489 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.348548293 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.348952764 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.34559035 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.349944755 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.343412211 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.346056163 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.349985754 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.451836067 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.348759741 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.34923385 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.349354316 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.352552377 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.346492393 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.35507389 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.346200677 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.345871291 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.355242039 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.352184182 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.349013609 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.348405338 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.354802114 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.353987306 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.349681908 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.351150423 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.350100493 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.344777093 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.348507676 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.351888743 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.351111443 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.347944546 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.350893685 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.350724812 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.35519889 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.355778376 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.357387195 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.35252794 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.350878171 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.351298512 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.348168257 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.349397374 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.351747249 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.354054613 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.354177762 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.356564291 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.352626635 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.351235296 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.351927146 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.350553405 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.349649405 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.352028804 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.355702825 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.345650532 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.351311255 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.351234953 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.357154829 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.352062098 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.348170461 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.352011745 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.346054483 seconds)
  done (took 99.587853016 seconds)
done (took 424.130974368 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.839178982 seconds)
  done (took 8.119107837 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.482641042 seconds)
  done (took 7.764096528 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.249207283 seconds)
  done (took 22.536471539 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.388091038 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.469460791 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.372130044 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.353073652 seconds)
  done (took 26.865265866 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.375759402 seconds)
  done (took 7.659010605 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.342963364 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.372159821 seconds)
  done (took 13.999775051 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.477113377 seconds)
  done (took 7.761008219 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.840754601 seconds)
  done (took 8.129397274 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.36149895 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.350133113 seconds)
  done (took 14.263473337 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.349745724 seconds)
  done (took 7.633392293 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.528817593 seconds)
  done (took 8.813118889 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.348916759 seconds)
  done (took 7.63396754 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.427420375 seconds)
  done (took 7.711164194 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.639296643 seconds)
  done (took 9.922563416 seconds)
done (took 160.09274041 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.345783861 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.34689773 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.349345536 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.346100833 seconds)
  done (took 26.670856096 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.386078009 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.385771023 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.387188827 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.396318105 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.388858032 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.386352448 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.377446785 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.37791208 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.396148483 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.389362482 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.387046021 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.387743499 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.385588231 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.380287202 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.389255664 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.390547134 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.396957867 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.400763097 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.38922104 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.388942776 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.353090007 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.396553622 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.389813757 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.353668299 seconds)
  done (took 34.545866006 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.553446856 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.425748467 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.508717641 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.406886986 seconds)
  done (took 7.179271333 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.404169561 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.406618294 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.418692244 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.457789332 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.488279869 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.415942788 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.380140436 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.375470832 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.362223885 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.406847102 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.482956234 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.422633198 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.506032186 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.354260156 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.539345422 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.353415104 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.353993134 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.40578833 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.457623377 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.47953945 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.354850275 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.406206607 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.410704475 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.423768622 seconds)
  done (took 35.353472822 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.354856975 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.361527842 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.359637683 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.353756118 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.354025606 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.353920563 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.359330071 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.354887446 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.374352972 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.354360157 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.353670743 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.353478885 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.35401206 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.354349133 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.353714176 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.366143202 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.367852074 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.354803382 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.356950165 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.36088111 seconds)
  done (took 28.444469168 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.350384264 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.240319748 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.701857744 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.606219572 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.349356162 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.349886348 seconds)
  done (took 28.88559503 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.434606275 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.568185569 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.357110893 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.765353571 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.848552305 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.362262565 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.357120608 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.604315781 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.941433662 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.963793974 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.421351722 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.427932672 seconds)
  done (took 20.340292249 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.361102166 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.353861165 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.353984445 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.369942456 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.416869545 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.360978812 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.363371117 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.350257393 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.418855126 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.4217218 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.362699649 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.418053017 seconds)
  done (took 37.841631881 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.439646835 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.400434587 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.431357298 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.204290688 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.734323837 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.562631278 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.249012871 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.794408778 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.356741477 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.624924699 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.352938789 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445439786 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.608383924 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.351140184 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.355834999 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.424180817 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.57841154 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874053378 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353719514 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.613655771 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380637867 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.352428717 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.801500508 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.384064434 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.563508006 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.485745588 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.613228847 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.352053314 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.65753871 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.364786243 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366431354 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.354342075 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.625802284 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.054292466 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445078029 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363097318 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.235700999 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.066533647 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.358485658 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.6980282 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.357976956 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.359567536 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363001263 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.35382869 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.287259663 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.359188742 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.809863781 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.359465635 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.064247348 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.353649948 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.36472894 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448700701 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.357471006 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.17230812 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.45479347 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.35487805 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.351784952 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36134923 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924296036 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.214157334 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.363276901 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.292356022 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.522435619 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.715342117 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01015861 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.457055774 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.358527146 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.35876492 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.288838317 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.692608619 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.375262766 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49216582 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.375741363 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.01608958 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.103391943 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.367541088 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.290510521 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937418416 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.358546043 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.292239211 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.584535907 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355522038 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.294616362 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.305793293 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.289803982 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.10826681 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365237247 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.801140787 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.365700989 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.799520444 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.366815225 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375779973 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379919358 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.580071702 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.244155444 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356190304 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.370440829 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477711898 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378289911 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.802010058 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.292549802 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.360690569 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.613417519 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.569067517 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.368375846 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.431420692 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.570032499 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36257302 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.376192588 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.369242331 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.371138831 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.974312744 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.369630529 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.229333223 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377815643 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.358880724 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.148246941 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36637662 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.461767675 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.357418393 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.622631912 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.179379481 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.35980313 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.439702894 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.360917531 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.357404161 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.751078647 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.882078114 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.358021722 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.361374527 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.371197908 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.372460754 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.363454253 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.316598394 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.3655248 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365387161 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.364751641 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.58464984 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.364483767 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.636455203 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.293144501 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496645735 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.424730313 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.582135136 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.629470341 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.358777131 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.619170876 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367889771 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.372849768 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.373075269 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378487207 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458424361 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381563617 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.366419843 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.619471032 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.362499992 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.363003705 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.748935747 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.855743292 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366386498 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.365273769 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.285984004 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.980037463 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334250824 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.368371158 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.254238519 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.375239848 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425015731 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.366468666 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.372634953 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.34939404 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.341527966 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.367459293 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.358867126 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.584995515 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.372243591 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.728582378 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.444198962 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.568990114 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.98508897 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.374460763 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.295336695 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.07301327 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.053129546 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361013399 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.296849462 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.361602927 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370087946 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.372157691 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.685586354 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.984969477 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362745816 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.640065068 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.369740936 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.374319779 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.366415995 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362536545 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.321512057 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.049633151 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.36335064 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.378720189 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.504952639 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.375501492 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.296641162 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.36628772 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.367397237 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.363605425 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.362633065 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395042607 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.650315062 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.86842453 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.623619969 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.255747261 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.375721353 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.838446074 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.397852821 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.389045918 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.37694096 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37744251 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.382249817 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371076832 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.373580471 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.709339412 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.036444512 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930341412 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.140624117 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929919351 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.370176422 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.375896899 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.36765862 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.815741999 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.299280376 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.922389837 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.568617723 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.814689147 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.32144383 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.575771087 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.642695138 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.188826637 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.374679361 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.594685999 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.364913385 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.37425282 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.377195715 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.578568608 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399236827 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.364722673 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.298431991 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.669011815 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.610520889 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.374480166 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.442668043 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.813007801 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.372759168 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.365749874 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.365013756 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.783266993 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.549902335 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.082176691 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.546273978 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.36485534 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.369732587 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.866333124 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.373723014 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.596338653 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022387672 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.366604176 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.581123137 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.306269681 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.377409213 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.376668841 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.366981425 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.823156992 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.363895595 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.63708274 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.377280505 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.300329231 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.365185752 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937055166 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.222161798 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.373038273 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367173659 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.160038958 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.380144808 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.681420393 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.374226627 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.309722739 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371835809 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.301836016 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.301667986 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.059108711 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.366978434 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33699645 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894801462 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.479400198 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.455944621 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.395983018 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.219574733 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.624713326 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.381640512 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.993252493 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.595710297 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.323765525 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393591628 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.468608844 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.384466922 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.357299416 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.36729364 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.60468104 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.278034097 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.594321562 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.478258576 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.281895515 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.368724948 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.583443188 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.367768158 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.368432731 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.631456514 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.079203867 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.371929038 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.129133567 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394917247 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.380528165 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.293602843 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.537674994 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.376846428 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448824466 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.380051779 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.381335408 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.379809331 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.552758185 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374195245 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.374782071 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.383292617 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46411873 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.28656494 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.376675766 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.376604104 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.999500845 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.151794117 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.000799947 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.383519664 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.369779454 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374632404 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.3038945 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.518722512 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.601415941 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.644105656 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489342196 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.587505075 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391684074 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.385078601 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.390865725 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.585362829 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.645267156 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.27006063 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387688275 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.387592638 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.37038905 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.382725621 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.583168707 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905863095 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963199073 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491607296 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.384223169 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.821953874 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.646248016 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.370870892 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.37227329 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.966472637 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.382481953 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.798459919 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.376811212 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372073597 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.521809673 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.381511563 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.076974366 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.381743467 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.531976885 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.145799933 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.776987202 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.633786454 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.90985858 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.384110147 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.001455268 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.124989661 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.642281876 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.440212692 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.383508947 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.489913015 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.519945801 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.386894845 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.373458877 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.374380634 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.223407611 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.082423382 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.383691076 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.010569603 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.640132656 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.370567373 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.385929593 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396447838 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.382696699 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.598298889 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.141459767 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.598713522 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.383633447 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.380462762 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.191070975 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.005839842 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.386605547 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.308685651 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.378183191 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.632133585 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.610594739 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.396522959 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.828702278 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.084201465 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966815732 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.350559752 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397141321 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.381399199 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.131638902 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.009179327 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.331435143 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906442239 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.943196264 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.379697642 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.651014348 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.381185374 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.385678323 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.653805436 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.378650282 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.375219002 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.391742732 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.003137424 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.209056668 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.38694634 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.707450294 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.316213343 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.724148394 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.089388076 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.313023858 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.385272474 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.573062284 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.377548493 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494786409 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.388549884 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.373398573 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376432935 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.135897054 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.666464227 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.382032092 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.362593372 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.374548034 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.378804574 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405583196 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.62560709 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379636763 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.050955202 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.729000046 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.633419993 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.378610725 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.363960267 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.380277756 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377534955 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.374385052 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.585016131 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.702983555 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972423993 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.378055423 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.391640804 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.38141209 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.595328031 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.58981194 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.391650789 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.389908788 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390819903 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.394861463 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.284812899 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.88563979 seconds)
  done (took 1620.148556935 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.40360381 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.398601178 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.395957184 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.439925536 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.42870161 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.414991917 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.454053664 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.422848162 seconds)
  done (took 52.674849293 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.37795853 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.60701109 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.411847716 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.394554694 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.389385577 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.393027546 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.852736944 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.379263355 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.388195781 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.388511018 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.390911784 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.381289225 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.053562394 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.38925328 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.392861057 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.373387292 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.388568379 seconds)
  done (took 66.275830613 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.385835645 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.842641964 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.405484475 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.382035895 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.837217674 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.380210809 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.730590041 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.450319648 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.38565129 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.738022137 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.048580075 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.386783535 seconds)
  done (took 81.291199713 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.387374044 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.387602143 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.387072174 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.387273114 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.387185406 seconds)
  done (took 8.253926262 seconds)
done (took 2049.191200685 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.682284215 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.155439864 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.107587191 seconds)
  done (took 5.580863671 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.529241786 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.578764731 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.712181949 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.71066003 seconds)
  done (took 7.849423885 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.655091848 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.757418248 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.572295038 seconds)
  done (took 6.302331603 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.950351079 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.38744417 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.475435938 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.378882316 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.383890837 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.381966406 seconds)
  done (took 20.46400179 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.384874482 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.387717111 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.384255084 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.38865887 seconds)
  done (took 6.866289363 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.365726032 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.148667213 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.367312369 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.388841302 seconds)
  done (took 18.589171681 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.13337338 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.145237381 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.128192003 seconds)
  done (took 7.725656032 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.392555758 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.226833874 seconds)
  done (took 9.938580431 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.709579877 seconds)
  done (took 3.028899923 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.51652605 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.651373818 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.516772262 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.419954907 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.524052009 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.626311969 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.206124831 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.787656529 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.41052156 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.79802206 seconds)
  done (took 29.777266115 seconds)
done (took 129.934968806 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.519339641 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.781903539 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.588250538 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.489868334 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.618121596 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.587875824 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.659632369 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.457773689 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.997548059 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.985033554 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.536709197 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.616615952 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.830731204 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.783082142 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.830372292 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.39532872 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.617736152 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.559986225 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.177971559 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.383380146 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.661602221 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.125650155 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.360592799 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.142485013 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.618067602 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.541996124 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.70641014 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.401249678 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.356970766 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.721457683 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.54195756 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.398530875 seconds)
  done (took 197.315361964 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.383807752 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.386570853 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.385927361 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.395812273 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.390493948 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.383996734 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.386524957 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.385098814 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.385651135 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.38574763 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.400529442 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.385887053 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.386457651 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.385280901 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.386488687 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.38540433 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.417930837 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.39561253 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.402007906 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.384817123 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.386011363 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.405620432 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.386222746 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.393141822 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.391467528 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.400883865 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.384851897 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.405665037 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.3855934 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.386104571 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.4028787 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.394155011 seconds)
  done (took 205.845700961 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.398941404 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.385974078 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.386880744 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.386555456 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.401313736 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.388059854 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.401484139 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.390111206 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.395454903 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.391416295 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.386378142 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.387087879 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.388395731 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.386365309 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.38822417 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.390831011 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.387168728 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.387416518 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.38687785 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.407573194 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.389045196 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.407386475 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.392312119 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.397708817 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.387397433 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.388949977 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.388358957 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.387115285 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.405873146 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.387575359 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.387629403 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.385945004 seconds)
  done (took 205.85202915 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.590663305 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.393445141 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.395779549 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.347160816 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.394716544 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.393953277 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.388526914 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.59290785 seconds)
  done (took 14.82176352 seconds)
done (took 625.154236357 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.827997055 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.536208663 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.597538569 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.415297374 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.258769198 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.416907566 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.414967563 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.594435348 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.348575957 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.601337549 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.714451855 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.414122552 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.860529103 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.413699014 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.678856208 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.515667698 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.314631553 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.437290918 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.749203325 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.028936925 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.681764402 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.941158472 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.595934228 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.34683592 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.87194246 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.938999707 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.169867126 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.309888761 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.414848768 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.746710407 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.208565078 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.442870484 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.482932177 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.46150023 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.517355564 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.497342671 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.412199392 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.460207578 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.607488155 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.693334497 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.028399412 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.161150224 seconds)
  done (took 95.458161654 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.385397235 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.384837869 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.384435 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.385104207 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.386742863 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.385917575 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.384663168 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.383604266 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.385867125 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.384101009 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.384695109 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.387598548 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.384614262 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.386216926 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.384842514 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.385221358 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.386871626 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.388368055 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.385647568 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.38514739 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.385635214 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.385720575 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.386240734 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.385689889 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.387003367 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.385312746 seconds)
  done (took 37.354147853 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.39851771 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.643370927 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.834937419 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.407255296 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.40015232 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.405009698 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.485368165 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.400132579 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.402986957 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.403301666 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.564751758 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.402897798 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.43939644 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.844280956 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.402819752 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.400046023 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.400120054 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.401036191 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.651355397 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.41130581 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.487198188 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.400723064 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.485940026 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.412164947 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.403008163 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.401932721 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.405584907 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.917905698 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.402743265 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.568237727 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.270946434 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.487945732 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.883463262 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.848545267 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.271533169 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.404962505 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.401385655 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.571924421 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.403046403 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.402603237 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.486184714 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.403013707 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.846040569 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.037128087 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.413837339 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.39524805 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.939385133 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.563901397 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.668794447 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.405592997 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.868467935 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.399221031 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.397306639 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.398050571 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.668092402 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.404188515 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.396334847 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.952599813 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.402524107 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.481353273 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.396679461 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.397841107 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.657385331 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.398307166 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.653388527 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.399271468 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.406625861 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.398817463 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.844203784 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.400942191 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.056092366 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.415859102 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.396380837 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.563798501 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.652661534 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.959077042 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.402241495 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.65912401 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.875864365 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.481351406 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.40260803 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.894400754 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.485602309 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.402312673 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.400437031 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.399998108 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.398143345 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.440471994 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.482498698 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.992407965 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.048854776 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.972805254 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.484927754 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.411970336 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.400026491 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.95201684 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.417243787 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.398484519 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.839305711 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.060369049 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.417740839 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.407513169 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.046386563 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.418870031 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.48430948 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.40521865 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.851386204 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.402423841 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.442442198 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.399237717 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.407693237 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.403384286 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.484891544 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.403303513 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.399723531 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.034463931 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.586839855 seconds)
  done (took 184.088909609 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.394737981 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.395175848 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.394877763 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.392942289 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.393037109 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.399400681 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.39245915 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.394706352 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.398410113 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.393699823 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.392854193 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.395652326 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.396531494 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.412131864 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.404827696 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.401015004 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.007094327 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.394179006 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.394901285 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.39479495 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.21480393 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.395719106 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.395717633 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.394770506 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.395896253 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.395969934 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.39609762 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.415529253 seconds)
  done (took 153.878825085 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.400639649 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.016954308 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.406102463 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.545808896 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.423288482 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.398786607 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.543457757 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.464216574 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.404038762 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.398549304 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.398702688 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.732006408 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.402438349 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.963083537 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.614915065 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.548087997 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.966370274 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.401592097 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.399727882 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.399171082 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.548128343 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.411573356 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.733767808 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.021045256 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.403239633 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.022913991 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.391237813 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.402413316 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.401360431 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.024219292 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.399929057 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.73505301 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.487295857 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.467468802 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.025007963 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.968187871 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.967598665 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.561088198 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.403767952 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.400784272 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.401127678 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.391643754 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.025749971 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.403981192 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.404498834 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.019532224 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.421005651 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.404102212 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.411755909 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.400309105 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.467924084 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.469653467 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.739726162 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.032323128 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.487350328 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.422966643 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.547111268 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.799709103 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.410421856 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.969243256 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.391631182 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.028126767 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.407768101 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.392937704 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.402891839 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.408028568 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.566880269 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.547173194 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.970288309 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.405394451 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.969832052 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.567964361 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.402820404 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.403185637 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.405013305 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.029121822 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.972743675 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.567878396 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.552073986 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.623814256 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.397506041 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.405311508 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.394191427 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.488392602 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.402991759 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.02943513 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.972983031 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.40637183 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.405907575 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.406085038 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.406030193 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.603516568 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.035244746 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.491161254 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.965102854 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.756666441 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.742874148 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.406145269 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.469152876 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.404799824 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.743818239 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.406951557 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.467592188 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.868365646 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.743041705 seconds)
  done (took 168.405580253 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.668136763 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.68842207 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.502614959 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.525690911 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.967735877 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.992479701 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.660943245 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.535381387 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.52187554 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.662109994 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.651598874 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.497925641 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.603742488 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.487848965 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.143724328 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.479937488 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.504138009 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.53503802 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.521887021 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.48017138 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.056037455 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.700710413 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.58884758 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.661432913 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.50470166 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.314221641 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.974509953 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.93734704 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.584683651 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.748276673 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.939740958 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.574468542 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.414214522 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.114985215 seconds)
  done (took 68.083454671 seconds)
done (took 708.593869789 seconds)
SAVING RESULT...
DONE!
