cset: moving following pidspec: 3600
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.253606662 seconds)
loading group "string"... done (took 0.557334427 seconds)
loading group "linalg"... done (took 7.793120138 seconds)
loading group "parallel"... done (took 0.173199677 seconds)
loading group "find"... done (took 1.185553296 seconds)
loading group "tuple"... done (took 2.138295468 seconds)
loading group "dates"... done (took 1.34722849 seconds)
loading group "micro"... done (took 0.250058217 seconds)
loading group "io"... done (took 0.948315864 seconds)
loading group "scalar"... done (took 42.417839116 seconds)
loading group "sparse"... done (took 14.363637813 seconds)
loading group "broadcast"... done (took 1.116613029 seconds)
loading group "union"... done (took 15.527801762 seconds)
loading group "simd"... done (took 5.220006143 seconds)
loading group "random"... done (took 10.454598928 seconds)
loading group "problem"... done (took 2.166104091 seconds)
loading group "array"... done (took 25.011880507 seconds)
loading group "misc"... done (took 2.294371109 seconds)
loading group "sort"... done (took 3.889230746 seconds)
loading group "collection"... done (took 20.899157927 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.502148773 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.142225967 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.145415845 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.152705935 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.187173871 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.139034892 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158711145 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.109801068 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.961043641 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.179740959 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.141509422 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.495446964 seconds)
done (took 5.066201877 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.247021152 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08247009 seconds)
    (2/2) benchmarking "String"...
    done (took 0.094098093 seconds)
  done (took 0.877413657 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.089384498 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.143409475 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.089757383 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.075147546 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.072890858 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.091459511 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.073124208 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.090250454 seconds)
  done (took 1.328185532 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.081316139 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.07519771 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.093177376 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.075132459 seconds)
  done (took 1.023163281 seconds)
done (took 4.269380518 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.717298435 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.274753235 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.201221173 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.517439123 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.176364833 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.209373747 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.741467738 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.373050343 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.245599586 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.104019553 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.129194253 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.396778377 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.114659158 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.736127717 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.086530358 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.124214418 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.174110262 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.473574381 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.090383942 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.090174242 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.114243068 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.153660754 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.111801365 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.083893085 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.179106194 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.077641238 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.186829562 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.106173898 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.077075966 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.270501601 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.198546334 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.744887467 seconds)
  done (took 11.019461254 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.113242386 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.136631814 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.075428384 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.152911306 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.134911752 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.079850574 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.094443202 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.076327726 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121793823 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.178584758 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.114681284 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.140143467 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.090224651 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.078767332 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.114750665 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.228347293 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.119484158 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.096412991 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.096643983 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.085580428 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.136073662 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.092697355 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.105793613 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.105211725 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.165375591 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.203686716 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.107175341 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125333652 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.076723027 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.109075314 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.139958942 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.156433223 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.075457933 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.074723531 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.17403807 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.12090012 seconds)
  done (took 5.011622721 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.126180958 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.192199884 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.101137642 seconds)
    (3/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.108068662 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.171904777 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.092348859 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.126467597 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.09484646 seconds)
    (8/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.121626858 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.247476028 seconds)
    (10/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111036851 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.187709843 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.177623528 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.14360535 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.09663101 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09285953 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082797444 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.075185217 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.517414379 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.165026862 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.112796224 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.115480919 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096158318 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.084137764 seconds)
    (24/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.073324618 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100475688 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.074633561 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097524651 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.112342082 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.684673251 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.160382195 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079272598 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.201135329 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.10049981 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.09753939 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11430755 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.210611706 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.111288322 seconds)
    (38/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.090011287 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.117883271 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09534933 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.073794177 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.18025628 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.0822019 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.094695629 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.10386655 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13333829 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.135018403 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.089825984 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.082635737 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.209130357 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.092638886 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.091880034 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.980080436 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.180186715 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.103609417 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.07448852 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.342405048 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.114544366 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.076703525 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.073885903 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.303124349 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.110862734 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.095165072 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.075630278 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095048957 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.078805789 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.735956574 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.093564693 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.150416083 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.078563425 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.086304766 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09467505 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.093895365 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084955655 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083091304 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.114459913 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.075981203 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.096073665 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.076166941 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.092307167 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.078240273 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.113932341 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.082536941 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.0937731 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.144255044 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.090958107 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.096329996 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12487275 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.07971175 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.092072138 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.126925866 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079951612 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.075794129 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.135189876 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.076824135 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.115108498 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.095336284 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.138107244 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.078460146 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.144407722 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.088184369 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.105634007 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099582302 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127768162 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.107176636 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078685178 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.09836751 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.075664395 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.073172033 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.160850256 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.076492309 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.093649486 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.077511237 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.106456313 seconds)
  done (took 23.192333732 seconds)
done (took 41.048818927 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.339498997 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.107937988 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.108779381 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.107730099 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.106501252 seconds)
  done (took 1.543409813 seconds)
done (took 2.288610669 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.274451052 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.177189238 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.075786028 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.169032637 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092732592 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.173560057 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.160332592 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.109064198 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.185553148 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.07260534 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.182697123 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073020879 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.073130637 seconds)
  done (took 2.594725724 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092442976 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112965961 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.079693834 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.090464941 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.090686213 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.091722026 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.107646583 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.097806395 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.107573061 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081910949 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071844819 seconds)
  done (took 1.771212099 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.091739926 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.093605894 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096666782 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.0897234 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.09029142 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.090365546 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.107335126 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.096609154 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.107745435 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082316963 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.072233304 seconds)
  done (took 1.762973839 seconds)
done (took 6.868639034 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.091503388 seconds)
  done (took 0.831132052 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.003031344 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.390513924 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.10146928 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.165189275 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.313186574 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.213890327 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.597387101 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.131725794 seconds)
  done (took 15.87788711 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.110468036 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.097767967 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.093063514 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.099673722 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.07664939 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.096804131 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.07874743 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.080330099 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.094968542 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.080147155 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.095031184 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.080352205 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.098027636 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.077502964 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.096121532 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.080875543 seconds)
  done (took 2.24192411 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.115202454 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.113844076 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.102297317 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.086363844 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.101188428 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.080974169 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.103098028 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.082660209 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.097964146 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.081574952 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.104064756 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.084998855 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.10243744 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.080173995 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.101537176 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.087412629 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.097973727 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.084180795 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.10241061 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.10135837 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.087219023 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.098846123 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.084912607 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.10280584 seconds)
  done (took 3.142582883 seconds)
done (took 22.840118364 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.151361199 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082343186 seconds)
  done (took 0.982603064 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.097917852 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.117249717 seconds)
  done (took 0.970341697 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.103586892 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.09601417 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.132065893 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.094702096 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.098383557 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.078433414 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.126962657 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.079824474 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.097292787 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.078520777 seconds)
  done (took 1.740550676 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.08302164 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.083133719 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.103557281 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.117399031 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.089337773 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.099140984 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.083378845 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.100065804 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.084366593 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.095034153 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.086749607 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.112358811 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.08520665 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.11372707 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.101259954 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.084944385 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.105794278 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.083698064 seconds)
  done (took 2.468706162 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.07849943 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.079856075 seconds)
  done (took 0.917500071 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081000433 seconds)
    (2/7) benchmarking "second"...
    done (took 0.076810755 seconds)
    (3/7) benchmarking "month"...
    done (took 0.097973083 seconds)
    (4/7) benchmarking "year"...
    done (took 0.097710299 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.076674026 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.075912642 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.094625439 seconds)
  done (took 1.358101599 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.491306054 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.142855302 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.269590896 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.081956924 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.119506032 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.331321401 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.075271611 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.10139535 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.080580662 seconds)
  done (took 2.490723845 seconds)
done (took 11.68043838 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.089322177 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.098464783 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.129226816 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.459002535 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.114673212 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.076277456 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.156445484 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.253774924 seconds)
done (took 2.138209625 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.139526456 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.616179143 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.435210015 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.230786815 seconds)
  done (took 2.046439921 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.411557964 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.105618636 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.086144436 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.078464537 seconds)
  done (took 1.448791612 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.076920478 seconds)
    (2/2) benchmarking "read"...
    done (took 0.079950066 seconds)
  done (took 0.922794504 seconds)
done (took 5.32348343 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077393866 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.128176291 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.076836679 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.073871238 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.094453796 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.076337227 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.094722933 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.075695909 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.075947592 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.09591313 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.076224726 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.094505124 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.077500022 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075770624 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093113207 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07398803 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094896033 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.074077829 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073950034 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092373108 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.07688427 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.093779555 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.074661112 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.074040034 seconds)
  done (took 2.815813837 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.106075982 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.095893474 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.082862513 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.100952547 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.080574993 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.101537287 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.082672087 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.095900069 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.082481784 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.097507974 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.196836555 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.099831212 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.078833896 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.099617238 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079187022 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.099061034 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.082779185 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096290281 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079476569 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.099665181 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.0818494 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095771257 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.080806916 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100793293 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.081466611 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099418871 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.078869091 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.09589686 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.082194504 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.099509118 seconds)
  done (took 3.60476504 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.081916394 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.073778605 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.093369238 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.081730992 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.092589319 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.078685901 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.07419607 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.09356418 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.075330219 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.092600937 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.075732342 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.074079992 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.093609365 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.075284433 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.094692705 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.077748172 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.105789458 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.075197135 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.074226037 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.093844868 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.077384468 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.092984585 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.076983863 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.073959611 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.093104977 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.073677061 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.093197344 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.074812416 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.074782961 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.093208952 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.077240342 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.09638364 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.074533355 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.080939758 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.096809128 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.074677507 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.097223957 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.074316213 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.074606486 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.094009333 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.074308764 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.092435275 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.075016246 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.08107694 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.097433442 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.076523038 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.093957431 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.075487132 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.075134759 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.09740443 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.074448843 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.093284311 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.076736086 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.076232147 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.098011812 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.0739079 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.094344666 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.074123203 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095115398 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.074875568 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.074212578 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.093455752 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.077003967 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.075104865 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.109478684 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.081491568 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.09343917 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.076267337 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.097909723 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.077612232 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.076054673 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.108064873 seconds)
  done (took 6.824699914 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.080180023 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104879969 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.077145577 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.076225671 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092042632 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.074879439 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.100811285 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075325156 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095450557 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.093387828 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094533803 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.076768281 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077090607 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098659497 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075335133 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.095629145 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084560446 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092419399 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.075788454 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.097933709 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075416591 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.100492843 seconds)
  done (took 2.692331306 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.209637891 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103938788 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.140056114 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092537226 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.114023264 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.092346656 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.10015562 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08468533 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100019913 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085026446 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103044317 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082963276 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.112643919 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103423577 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085420363 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.105809103 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082556567 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.105420959 seconds)
  done (took 2.679781269 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.090603992 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.096832566 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.099795587 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097078534 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.078177109 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099993731 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084164945 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.11244905 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.080676725 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.096998226 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.088227883 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0992112 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.080050534 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096455495 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080189208 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.077951166 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.09867171 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078646643 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107305813 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102660639 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.084862206 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106793605 seconds)
  done (took 2.815358106 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094189926 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099631502 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.097425601 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.101022096 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.076788052 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.09877867 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.085164668 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.096815197 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.086960995 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.079719859 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09655214 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.079142363 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.10409973 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.077971698 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.102043006 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077651365 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.098924193 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.077542163 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099429805 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077629685 seconds)
  done (took 2.58675064 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.118983813 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112061423 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092638382 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123259819 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093897802 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.112536962 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122336697 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.093600466 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111702428 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.106536153 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112549993 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.093021561 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122735718 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.120272195 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093557884 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.122750409 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.103432368 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.122456723 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113243278 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.093882953 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124445404 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.09392768 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.126739215 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093636285 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.112286695 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093132041 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112287298 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.118907048 seconds)
  done (took 3.844772848 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078729418 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077486394 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.094835121 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.07557968 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.075343405 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.094653172 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.075520126 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.095040824 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.078458469 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.075888679 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.097700431 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.077571915 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.097127193 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.078301229 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080866572 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.096901642 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078085273 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.094816497 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076313171 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075593952 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.097206246 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077801655 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.0972054 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.075587593 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075293779 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.097240357 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07516734 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095214659 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.078200849 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.075472275 seconds)
  done (took 3.300809744 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.086862866 seconds)
    (2/2) benchmarking "in"...
    done (took 0.103256893 seconds)
  done (took 0.977168106 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.07673722 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114501631 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.075214777 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081896792 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.103875189 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.078444781 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106575546 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083083765 seconds)
  done (took 1.505210416 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.09686902 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.116504061 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084156197 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.109368989 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.097266064 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.114250061 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.139228937 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.103773114 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.084259903 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.09656204 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.095001563 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.0972944 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.084271817 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.078331785 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.104672767 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085080121 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.099113948 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.088735856 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.105473302 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.080865416 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103639276 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090210808 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.081156711 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.106084206 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.079747596 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.109860879 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.088395583 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.110083678 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.081489277 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.10854316 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.084554388 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.092636947 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.083549577 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.103613558 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079934045 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.095627055 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111763537 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.102022688 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.087929436 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084601493 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106877634 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.077371273 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.104234013 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.084264504 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109406011 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.084061265 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.104441331 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.07738474 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.076337063 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.100986109 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.077936451 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.098725223 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.073009728 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106502859 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.082505611 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112875893 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.081755626 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.100213021 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.082266673 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.081667818 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.104603762 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.08191616 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.100698945 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.082269191 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10602641 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.083693477 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106066982 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.077697215 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.073365607 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.099105298 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.08805297 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.122501367 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.088013336 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.103124757 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085142125 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.099694115 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.082311268 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104432225 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.086566489 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.10761032 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.083112811 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106401666 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.08689086 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.099365213 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.08214003 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.086598601 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.100975335 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.082145768 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.096491277 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09495787 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.101361877 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.079655096 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.07672072 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.108426372 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.082758946 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.101876949 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.076875527 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105973205 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.073035633 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.103779023 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084893079 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.079662758 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.107756997 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084538226 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10420007 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.087050558 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.109599629 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.079100069 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.102140839 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.075844358 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104882677 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.081746448 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.086680577 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.093289123 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.082261732 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.101100116 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.08462814 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.107106867 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.08096586 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.104106571 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086904862 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.106988586 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.081305202 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.075568004 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.102458912 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.083721508 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108523119 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.086702855 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.101694101 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077371593 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.097406366 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.083695087 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.084067827 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.104268888 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084491454 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.102020899 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.073431274 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.100764898 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.084308458 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.107379138 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.07979739 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.080161855 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.103823454 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.080353939 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.102539192 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.085359242 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.101736842 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.078122813 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.104047008 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.081160045 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077940173 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107821164 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.082748083 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.102050663 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.083616025 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10857582 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.082006722 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.104977393 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082560506 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.08490873 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104677942 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.078520401 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099380321 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.082422147 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.109403751 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.081083693 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.098931171 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.076887914 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.086090259 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.097174508 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.08286682 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.099426614 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.081933401 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.105240126 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.08076431 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.083178374 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.100179548 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.09549282 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.112057059 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085894038 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.105711357 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.089969602 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.10340034 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.08170834 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.103304842 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084910024 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.105063159 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.08709252 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.085154921 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106368026 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.082545434 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.09627499 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.085860391 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108286859 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.079205462 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.101106973 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.079301964 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.084367183 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.106638035 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.084500267 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.104451557 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082025061 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100056844 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088040688 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.103288602 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.083804168 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.078260323 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.104633033 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.089637297 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.10568676 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085774418 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.110018191 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.08351584 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.098378645 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088290047 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101701737 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.086089423 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.079093825 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.097354067 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.07853753 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.105607344 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.082827256 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.102347856 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.074634407 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087827123 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.10789454 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.080040588 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.099403417 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.084482499 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109386115 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.081729788 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103783328 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.083440419 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.085592341 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113504733 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.079305697 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.103145311 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.08995551 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.104576187 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.074902768 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.105882845 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.081680976 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.099863959 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.083760302 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.081782356 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.1033034 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086755705 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.105538437 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.07377733 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.103111646 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.082542102 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.078905941 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.099086607 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.087050736 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.104353687 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.081843149 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109290254 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086350247 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.105291106 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.084243446 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.103954445 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.086642727 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.105216535 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.083898557 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.085499697 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.102211219 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.080305144 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.103055682 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.079044423 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.101865715 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.08232805 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.08476535 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.102478275 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.085918548 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.103932099 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.080298367 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.103575396 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.085558205 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102015593 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.081185959 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.080043325 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103561883 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.080665422 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.100229392 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.083514795 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.09949783 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087950048 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.08446943 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10883434 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.080421592 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.097189279 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.085323363 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.102972578 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.085998204 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.106353173 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.086031304 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.082084649 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.104394784 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.08350194 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109421806 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.078522404 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.11041778 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087224274 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101789083 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.083330321 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.081032156 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.102539582 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.089524746 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.102941178 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.085666476 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.10057564 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.083901293 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.105894103 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.083481464 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.080537613 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102749971 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.085844828 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.100535476 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.086554513 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.094862562 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.079623531 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.079745881 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.105087446 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088549879 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.105531141 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.084503779 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.102882303 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086791622 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.103789603 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.077463575 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.088337778 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107394145 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.086110635 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110021807 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.079853849 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.102536671 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.090669379 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.095827216 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.08237161 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.080920924 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.098307296 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088728241 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.107079208 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.090003666 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.100940014 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.079887753 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.097707839 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.086395288 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.083349216 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.094956412 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.081003646 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104040625 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.082767351 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08341328 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.106660437 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.08375125 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106255551 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088231736 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.10430801 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.082258175 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.10630164 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.077720708 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.079098813 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.100876794 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.083727772 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.106655897 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.07831077 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.09798868 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.084612698 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.082089497 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.10106144 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.084932701 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.102247223 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088152144 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105397972 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.084169898 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.109871905 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.075337534 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.084111901 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.105031965 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.084295485 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.10021238 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.084838959 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104987451 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087605809 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.10970125 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.085367947 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.080737925 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105161455 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.08188026 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.10521741 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.08444586 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.106260947 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.080321531 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.107498038 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089918246 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.081947371 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.104031403 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.080667674 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.102650494 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.08638114 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.107337964 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.083175661 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.108742715 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.083854617 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.082181828 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.108710481 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.085561403 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10555152 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086826111 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.104074012 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088119364 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.100921237 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.090061699 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.101488615 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.086777153 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.083498994 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.09932835 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084880548 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.105527714 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083795508 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.107395845 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.086271689 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.08030286 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.100803669 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.082846461 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.10343628 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.089974475 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110271162 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.084016657 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104557675 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.080240353 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.078022789 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107147831 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.079004463 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.103902443 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.083643489 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108790882 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.083382909 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.081711477 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.104973151 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.089704589 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108953961 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.086111056 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.099906622 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.086837305 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.107683884 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.083847144 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.10284105 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.081290494 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087302817 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.107281377 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.083498103 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.100918025 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090369116 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.106158805 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08725915 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.103605734 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.082117249 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.081514524 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.100590873 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.087794614 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.104465096 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.088350854 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.105011542 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085711441 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11337499 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.080820941 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.101693662 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090293884 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085452017 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.10901216 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.080317483 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.103110682 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086984786 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107200565 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.080688034 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.102094242 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.079785505 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.084020455 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.101170513 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.079613371 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112317128 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.089459418 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.104745449 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084218234 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104466136 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.0810965 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.079910768 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.102681036 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087700116 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.10391271 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.090878104 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.10175107 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.080390241 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.080574479 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10659601 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.085815355 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.1054449 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.079210061 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.101004983 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.079841762 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.084148981 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.108848646 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08507464 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.106603983 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08546234 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.10481489 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.082895263 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.111624579 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.078164879 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.085324405 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113053103 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.087171923 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102950415 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.088126456 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111320543 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.086835328 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.101284921 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.087124282 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.105050192 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.0821101 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.087230998 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.108148466 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117480561 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085979482 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.081253802 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.10583076 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.084679427 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.102296738 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.090276255 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108358623 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.087993253 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.107717909 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.083251245 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088338243 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105345968 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08834422 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.104612207 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.084357083 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.105592093 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082589341 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.083719186 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.101742653 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.088632432 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.107810969 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085988353 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.109501383 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.081513329 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113406498 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.090461806 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.107796454 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.07882923 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.08127914 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.10249183 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.080583837 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.108648655 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.080542165 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.083888145 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.104855525 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.084589633 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.10357729 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088061382 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.104938824 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.087613078 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.106076413 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.076503381 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.084078298 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.105740258 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083307966 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.100219277 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.086181484 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.089331036 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.109329015 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090013377 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.104244978 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.084130293 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.105023812 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083135057 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.101495959 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.088818344 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084599682 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.105743027 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.081520478 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.107102702 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.087715707 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106542104 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088319935 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10996198 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.084784393 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.111737161 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.089406424 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.079958422 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.100209982 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.087878323 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.103930664 seconds)
  done (took 56.289836649 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.128085692 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109213488 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077073106 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098885569 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12362182 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081737007 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077135455 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102959827 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.082089964 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.112372399 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.077639504 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098146039 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.097997929 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125796539 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123055556 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112404913 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077160719 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.103269516 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.078300873 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.0810755 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.119356348 seconds)
  done (took 2.925692197 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104379609 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.118021697 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.093303361 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.120626862 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.109853696 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.095973631 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114553699 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117042547 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099367279 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111495257 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.119321627 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095504239 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.111302519 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.090155937 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110712674 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09286349 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.120249556 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109723328 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.096345809 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.115275873 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113703142 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.094446115 seconds)
  done (took 3.19291569 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.090620902 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.085603716 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.107300556 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.077426916 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.106196023 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.076918278 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.11168308 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.079976682 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.090088762 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.101964605 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.080918443 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.102811719 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.086107983 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.077138858 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.102643887 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.079468975 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.15471419 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.111752888 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.086212475 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.108537301 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.080314522 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.083777881 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.101943248 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.08111116 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.102260256 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.095080991 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.108467593 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.086909342 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.085121523 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.103134809 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.086142181 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.10156923 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.084096484 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.104667955 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.080686312 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.081318238 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.107464567 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.085883053 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.101660803 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.082414219 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.08213041 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.10265655 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.086913575 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.104878541 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.083110682 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.079786385 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.105324198 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.085956004 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.098429663 seconds)
  done (took 5.432902851 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.11493573 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.157874487 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.107301949 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.147903833 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.099321761 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.117268428 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.085413138 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.124340474 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.102537126 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.084657027 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.125613561 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.122220149 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.086738872 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.113190563 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.089749774 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.108000162 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087229298 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103309228 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.090974698 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103367595 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.090892586 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.111377149 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.120684796 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.097196893 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.112012553 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.08510103 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103580974 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.090920115 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.119001709 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.11280924 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.092009016 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.114306479 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.121886203 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.087887201 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103403263 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.089074328 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.123734298 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.086805585 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.110051584 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.080287859 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.109578983 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.090883529 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110967029 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.123423283 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.087334655 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.10979114 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.086235058 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100717984 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.097590874 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.109722524 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.096088769 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.120664506 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.112283966 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.087485987 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.112702212 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.100018081 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.107950891 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.085563848 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.111931141 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.118089183 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.080891331 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089833179 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.120519527 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.109631896 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.095107029 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.12068499 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.108861538 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089945695 seconds)
  done (took 8.108795332 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.116437446 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.112785309 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102076509 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.123653748 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113448296 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.090907972 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112955743 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090255449 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112431509 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.097480607 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112979319 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.160768587 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.088471101 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.118211432 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.091106402 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.113419939 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.090757164 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112463911 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090249326 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112645696 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.090968517 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.123112361 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.112785578 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.101690633 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125231015 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.109985001 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.09139686 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.112974217 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101033899 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.112621411 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.126042698 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091284486 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.112989832 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.101998553 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.127106871 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.113201517 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086238607 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.113368609 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.092483559 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.112777028 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.08870184 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.122921325 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.090540512 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.110862964 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090887817 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.113293776 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.123579837 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.103623358 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.118635779 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.120012025 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.091346731 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.123471069 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.090584825 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.11415429 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.123233789 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.129833619 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101672689 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12380993 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.090860664 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.123764824 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.122694554 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.130163714 seconds)
  done (took 7.622858594 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.113983805 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.119019156 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.125528853 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.078858393 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.079840563 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.114303297 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080638604 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.103701022 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.117680818 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.096767627 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.121893333 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091167037 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.116858427 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.121145841 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091484505 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.117464587 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.112641791 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.09158359 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.118668216 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091257946 seconds)
  done (took 2.956189738 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.092008225 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.125513534 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.083771351 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112626562 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.086837313 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.113236835 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.085251657 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10885966 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085006428 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108135859 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095898318 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.117446327 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084723261 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.112180427 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.095697174 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112217508 seconds)
  done (took 2.476216441 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.104313655 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.127480929 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.10722721 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.112537812 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.080961417 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.11032361 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.086932663 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.101487258 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.079566687 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.121576785 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.089955744 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.111760254 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.086572017 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.103603833 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.084324322 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.089526122 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102324177 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.089979521 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.108738247 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.107361004 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.111876317 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.086035092 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.109206775 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.085559102 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.108388638 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.089135719 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.11309541 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.081442664 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.104130864 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.086812366 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.108427453 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.091410611 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102910687 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.088952106 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.104051803 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.081811921 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.108027569 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.087346483 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.088731697 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.108661439 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.081864134 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.107939503 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086285126 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.107053957 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.079477529 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.108853867 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.080129515 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.112453324 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.08604404 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.108849877 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.086917602 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.091506345 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.114244413 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.095317704 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.116033338 seconds)
  done (took 6.274493442 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098603606 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110301232 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.078906024 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.081266528 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.109267709 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.085845441 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.11010549 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.087013394 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107944929 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.081566223 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107494166 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088674817 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085067817 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.11129497 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.084895666 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109666859 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078784499 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107645621 seconds)
  done (took 2.586729036 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090030661 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.083383907 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.114287511 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084280813 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.105960502 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.08622026 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102719395 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.082498763 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081400377 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.10666674 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083023756 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.108488637 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082170838 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.107964518 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.084792115 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106239749 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.086716589 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082210997 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.106567872 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08007991 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.108827847 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08221663 seconds)
  done (took 2.91751522 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.121062213 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.12664769 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092061218 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.215990774 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.126560849 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.110007932 seconds)
  done (took 1.656740376 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109217963 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143005561 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085187408 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10966081 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097099167 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112371821 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088626094 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110771412 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099587006 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12471515 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111733005 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100707174 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122706578 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121361438 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096039106 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118861688 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087874521 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111932877 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084707971 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131585387 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11161754 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099324761 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111255398 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088014857 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111738697 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12267644 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100330014 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124084248 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111586702 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101407121 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118999683 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088813132 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123057363 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124636394 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086805454 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122833029 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089019509 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131306311 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118930631 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122032435 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086555657 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118151737 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100061862 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118099288 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123508184 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089708572 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11716532 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08964331 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111908863 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137881436 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096622202 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121635322 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118484029 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102022296 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122032286 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138294297 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12458215 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099959928 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118568364 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123486366 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099895833 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119073572 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121975925 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102120616 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118485479 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12192497 seconds)
  done (took 8.187532783 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123927549 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108585292 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089472019 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125859537 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12236259 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089187286 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111545579 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090068985 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111801211 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086306925 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.157088904 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112102786 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099236598 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121359486 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111040093 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089774593 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111406163 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100032491 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109273834 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138651868 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089660549 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123077698 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122286446 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0996948 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124586834 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119237222 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089252696 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111803547 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08938381 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111601045 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11816583 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089645245 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122440985 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.085914794 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122166839 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089080395 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112232797 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117941199 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089405221 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11907944 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099791146 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131718687 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111384167 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089455743 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125434487 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112116207 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089853455 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10859239 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090029371 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085360548 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126133523 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125038684 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125255458 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099849031 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112310069 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111566829 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089697613 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111732518 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089601376 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119643019 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100404085 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112254694 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139282556 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089372272 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112233585 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122790382 seconds)
  done (took 8.057791625 seconds)
done (took 153.100656315 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.239233612 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.213115746 seconds)
  done (took 1.318411868 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.100532863 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.140965026 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.099076668 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.171781567 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.08116228 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.125167421 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.135013055 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.095789959 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.108829668 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.08585249 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.108385812 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086663844 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.170657504 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.102879635 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.084106421 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.109334603 seconds)
  done (took 2.677774319 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.118133657 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.255226716 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.126494768 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.08346572 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.112686325 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.085527683 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.083222582 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.11736317 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.08598648 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.107536455 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.085726858 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.108083412 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.084453358 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.085114461 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.10991921 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.085354075 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.107569615 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.08576288 seconds)
  done (took 2.801511609 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113491495 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.156981492 seconds)
  done (took 1.147724282 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.256641996 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.157624342 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.225806399 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.361926362 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.184719055 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.338025781 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.178228664 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.176496666 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.164995428 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.172586737 seconds)
  done (took 3.086900256 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.120660653 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.179599236 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.299681289 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.157981235 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.126368172 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.100485001 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.158725051 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.129135206 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.106865677 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.130786975 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.130801755 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.09178805 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.139356038 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.118429992 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.094360297 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.115305439 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.119940945 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.115226602 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.094904589 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.116468873 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.119172693 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.107703277 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.095439108 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.115366746 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.10576255 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.129686458 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.110121058 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.084406861 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.115520343 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.093638539 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.091323218 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.122858103 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.129955415 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.388089436 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.0954187 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.175259419 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.092673794 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.113505432 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.094059116 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090342828 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.118774944 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118572782 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.100405414 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.11456642 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.084912292 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.091895948 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.108177443 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.08425481 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.116142592 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.09332989 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.116490948 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.091782595 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.150753193 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.117296094 seconds)
  done (took 7.495072031 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.821236869 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.155948702 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091634319 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.89710661 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.141319339 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.126772505 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.791876763 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.140535793 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.236696141 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.801656893 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.13331501 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.122962068 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.207812874 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.237321654 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.974107172 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.310678313 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.69797222 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.101419252 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.145693593 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.151355685 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.09458313 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139878391 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.131362435 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.428135087 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.091712903 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113092515 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.095271697 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.121464842 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159476295 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.090167349 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115272798 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.177397292 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.24728907 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.175375397 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.114816738 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.088269776 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113744131 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.166531871 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.271228445 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.194847127 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.17626765 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085624559 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.113162792 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.098764852 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132421055 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.085650602 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.186607387 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.171329734 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.170591059 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091019965 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.122641655 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.096340178 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.122183149 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.161082284 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.11078856 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.291357497 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.323125648 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112895788 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097572625 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.128140838 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.240712932 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.11358963 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.203746784 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139073728 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.212923167 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089951735 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.780882481 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.166561874 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089962913 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.119461226 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.095549137 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118156648 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.09820768 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.165533566 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.405918856 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125160602 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.091885626 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088362899 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.229768659 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.090489384 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113630335 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162775893 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.091212139 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120501157 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.101281637 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124130862 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.168074823 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.228961947 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.124846442 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.096662497 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116457029 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.100791136 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.114432486 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.213207776 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.22116704 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.16037515 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.212722971 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123681814 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.162970835 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.165042193 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097615689 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.192564916 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097022237 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12658573 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100051291 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.220031976 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.140864356 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.089496309 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116038856 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.09517798 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.144466487 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.093219013 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.119672154 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.167316613 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.458604716 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.163629547 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.111962283 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.093800933 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121687649 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.162610486 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094399238 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267926923 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122047965 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.166138236 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096112043 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.110934168 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.096296762 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.162014806 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124530537 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121291424 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.10067911 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120314371 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.236057899 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.19594386 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.125036183 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.219200794 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.180425071 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121217576 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.171924048 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.096990097 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.191484114 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.097660501 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122029689 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.091176535 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.77636825 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.099280729 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120759628 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.092909761 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.186094947 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.106470543 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.088379246 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.090189889 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.110679999 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.783453594 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.117386527 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.087334127 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.113770624 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096905252 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119786878 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095439005 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.117105765 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.161660803 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.231346775 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099228654 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119734224 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.090450112 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.160211329 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.115773897 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.090898458 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.113776264 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.091886195 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.097128191 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.117639043 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.090397503 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.193574576 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.158768433 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.19720301 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.590779883 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090062589 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.114417218 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.207614438 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114448299 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.27239251 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121719893 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.228040007 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.166254135 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.08763664 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.322660205 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.168252603 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.186844305 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.093450291 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.17089925 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111807921 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.095359797 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.160032517 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.115038483 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094151349 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.181980381 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.102489505 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.124651838 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.991299141 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.107662208 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.222627941 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.087067772 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.167732194 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.11637343 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121357768 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.272332358 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.114875312 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.106080347 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.161668594 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117740459 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.090897138 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.873894458 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.087708363 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122300475 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096970376 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.225611491 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.166093164 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120739511 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.096035734 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.123427546 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.162547619 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.212306831 seconds)
  done (took 43.339068693 seconds)
done (took 62.738806152 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.268392995 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.220236835 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.273603499 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.165723879 seconds)
  done (took 1.93636919 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.182267037 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.129006235 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.149219715 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.084354676 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.157150128 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.108933972 seconds)
  done (took 1.711374389 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.35361935 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.302383316 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.214485088 seconds)
  done (took 1.774460615 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.251634206 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.251422164 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.4721267 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.316285628 seconds)
  done (took 2.300049389 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.210299756 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.102627462 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.126789464 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.117535526 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.171422955 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.209022015 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.14353225 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.153919141 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.109235959 seconds)
  done (took 2.295794145 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.167866334 seconds)
done (took 11.09878399 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.254328321 seconds)
    (2/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.132823179 seconds)
    (3/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.256889024 seconds)
    (4/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.148396562 seconds)
    (5/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.257011003 seconds)
    (6/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.212968106 seconds)
    (7/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.195668341 seconds)
    (8/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.112203646 seconds)
    (9/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.162664978 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.238020094 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.104467915 seconds)
    (12/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.206536364 seconds)
    (13/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.26264333 seconds)
    (14/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.188257506 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.121976935 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.090769262 seconds)
    (17/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.209329397 seconds)
    (18/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.212883842 seconds)
    (19/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.093122952 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.15356769 seconds)
    (21/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.204732058 seconds)
    (22/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.083689777 seconds)
    (23/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.091692306 seconds)
    (24/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.187880088 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.173410298 seconds)
    (26/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.226187323 seconds)
    (27/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.094760559 seconds)
    (28/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.098540931 seconds)
    (29/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.093666071 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.138065005 seconds)
    (31/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.263392919 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.112531734 seconds)
    (33/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.210954666 seconds)
    (34/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.136057703 seconds)
    (35/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.14164691 seconds)
    (36/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.199186339 seconds)
    (37/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.093797414 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.143401562 seconds)
    (39/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.166905965 seconds)
    (40/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.159482903 seconds)
    (41/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.092283433 seconds)
    (42/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.18387132 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.12410632 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.131351262 seconds)
    (45/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.09436659 seconds)
    (46/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.111006627 seconds)
    (47/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.099699249 seconds)
    (48/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.093542482 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.111670216 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.117055551 seconds)
    (51/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.120203114 seconds)
    (52/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.195587339 seconds)
    (53/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.086046701 seconds)
    (54/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.11768656 seconds)
    (55/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.095327912 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.111899197 seconds)
    (57/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.069114633 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.174230506 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.092551518 seconds)
    (60/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.159977444 seconds)
    (61/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.100623935 seconds)
    (62/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.120556172 seconds)
    (63/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.072976994 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.14285812 seconds)
    (65/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.131716703 seconds)
    (66/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.113532792 seconds)
    (67/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.17351725 seconds)
    (68/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.10689152 seconds)
    (69/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.213283712 seconds)
    (70/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.180531969 seconds)
    (71/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.117141782 seconds)
    (72/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.201572656 seconds)
    (73/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.088233796 seconds)
    (74/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.192828152 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.16493252 seconds)
    (76/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.096584077 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.162072656 seconds)
    (78/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.233527938 seconds)
    (79/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.159281396 seconds)
    (80/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.110723478 seconds)
    (81/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.23778064 seconds)
    (82/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.088367675 seconds)
    (83/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.130027978 seconds)
    (84/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.09816244 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.145464551 seconds)
    (86/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.156365946 seconds)
    (87/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.136834304 seconds)
    (88/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.193046622 seconds)
    (89/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.101589681 seconds)
    (90/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.117170638 seconds)
    (91/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.088599293 seconds)
    (92/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.112046171 seconds)
    (93/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.07899161 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.131964612 seconds)
    (95/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.068581656 seconds)
    (96/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.081418594 seconds)
    (97/309) benchmarking ("sort", Int64, false)...
    done (took 0.110574644 seconds)
    (98/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.142111634 seconds)
    (99/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.12369927 seconds)
    (100/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.090044106 seconds)
    (101/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.098051956 seconds)
    (102/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.087974775 seconds)
    (103/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.074658066 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.135093605 seconds)
    (105/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.073698443 seconds)
    (106/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.116309181 seconds)
    (107/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.072187461 seconds)
    (108/309) benchmarking ("sort", Float32, false)...
    done (took 0.184327583 seconds)
    (109/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.096981314 seconds)
    (110/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.122667684 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.086244086 seconds)
    (112/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.07454205 seconds)
    (113/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.101930411 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.123435532 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.181403531 seconds)
    (116/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.14050488 seconds)
    (117/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.092323469 seconds)
    (118/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.07657918 seconds)
    (119/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.122501957 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.113005665 seconds)
    (121/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.101581367 seconds)
    (122/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.098280849 seconds)
    (123/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.097199929 seconds)
    (124/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.085006842 seconds)
    (125/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.08556619 seconds)
    (126/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.23240459 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.20469257 seconds)
    (128/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.074044689 seconds)
    (129/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.108120454 seconds)
    (130/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.086705419 seconds)
    (131/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.164525668 seconds)
    (132/309) benchmarking ("sort", Bool, false)...
    done (took 0.191380565 seconds)
    (133/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.097282164 seconds)
    (134/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.118212302 seconds)
    (135/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.160323847 seconds)
    (136/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.135284722 seconds)
    (137/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.170890291 seconds)
    (138/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.097458182 seconds)
    (139/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.113001564 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.09169671 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.134640269 seconds)
    (142/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.073478953 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.195030064 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.112135677 seconds)
    (145/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.131661886 seconds)
    (146/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.158762461 seconds)
    (147/309) benchmarking ("sort", Int8, false)...
    done (took 0.191213718 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.129435868 seconds)
    (149/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.07988576 seconds)
    (150/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.105178655 seconds)
    (151/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.071986647 seconds)
    (152/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.198932249 seconds)
    (153/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.089949412 seconds)
    (154/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.108272443 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.081262058 seconds)
    (156/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.163084372 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.18122374 seconds)
    (158/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.084759238 seconds)
    (159/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.08798051 seconds)
    (160/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.120770164 seconds)
    (161/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.074389176 seconds)
    (162/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.199786675 seconds)
    (163/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.130451325 seconds)
    (164/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.094714681 seconds)
    (165/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.194873989 seconds)
    (166/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.073902006 seconds)
    (167/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.112268168 seconds)
    (168/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.07488763 seconds)
    (169/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.110957361 seconds)
    (170/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.121287156 seconds)
    (171/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.098797935 seconds)
    (172/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.095470675 seconds)
    (173/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.089056166 seconds)
    (174/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.204507072 seconds)
    (175/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.177812065 seconds)
    (176/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.071662326 seconds)
    (177/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.069902831 seconds)
    (178/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.228748415 seconds)
    (179/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.10765724 seconds)
    (180/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.136254726 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.124056298 seconds)
    (182/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.087251644 seconds)
    (183/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.201667002 seconds)
    (184/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.07515653 seconds)
    (185/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.115759685 seconds)
    (186/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.074933792 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.112112154 seconds)
    (188/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.170506981 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.121273236 seconds)
    (190/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.074565764 seconds)
    (191/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.118216578 seconds)
    (192/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.182015297 seconds)
    (193/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.12577797 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.107768575 seconds)
    (195/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.112353794 seconds)
    (196/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.087974051 seconds)
    (197/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.092725242 seconds)
    (198/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.117254051 seconds)
    (199/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.086110246 seconds)
    (200/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.184956581 seconds)
    (201/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.097304489 seconds)
    (202/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.112564164 seconds)
    (203/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.249776719 seconds)
    (204/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.176181224 seconds)
    (205/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.180495953 seconds)
    (206/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.11710421 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.082935702 seconds)
    (208/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.071603307 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.108152073 seconds)
    (210/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.234454951 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.086343397 seconds)
    (212/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.245120226 seconds)
    (213/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.186163137 seconds)
    (214/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.084528333 seconds)
    (215/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.11473451 seconds)
    (216/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.074579948 seconds)
    (217/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.201354394 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.111300931 seconds)
    (219/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.219127255 seconds)
    (220/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.073248663 seconds)
    (221/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.11314381 seconds)
    (222/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.073682861 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.154296191 seconds)
    (224/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.086320508 seconds)
    (225/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.110415962 seconds)
    (226/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.096489119 seconds)
    (227/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.094603449 seconds)
    (228/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.100473107 seconds)
    (229/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.086510836 seconds)
    (230/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.074161953 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.13836391 seconds)
    (232/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.07408533 seconds)
    (233/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.10014575 seconds)
    (234/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.100837843 seconds)
    (235/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.117672816 seconds)
    (236/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.081246726 seconds)
    (237/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.246178973 seconds)
    (238/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.073683351 seconds)
    (239/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.101500766 seconds)
    (240/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.114127701 seconds)
    (241/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.114032762 seconds)
    (242/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.092557251 seconds)
    (243/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.074272286 seconds)
    (244/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.115067183 seconds)
    (245/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.088511558 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.19948892 seconds)
    (247/309) benchmarking ("sort", Float64, false)...
    done (took 0.183097915 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.114372606 seconds)
    (249/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.073881064 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.160807112 seconds)
    (251/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.119212413 seconds)
    (252/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.107792931 seconds)
    (253/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.176675888 seconds)
    (254/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.093373359 seconds)
    (255/309) benchmarking ("sort", BigInt, false)...
    done (took 0.22629981 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.13006209 seconds)
    (257/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.069303156 seconds)
    (258/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.108646095 seconds)
    (259/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.08314634 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.083781008 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.138208063 seconds)
    (262/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.073575856 seconds)
    (263/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.166487195 seconds)
    (264/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.086955334 seconds)
    (265/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.111371196 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.093364725 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.087049762 seconds)
    (268/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.114914251 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.116258726 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.108498361 seconds)
    (271/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.096572182 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.117543771 seconds)
    (273/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.0716755 seconds)
    (274/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.072953173 seconds)
    (275/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.114666612 seconds)
    (276/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.088654478 seconds)
    (277/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.110065777 seconds)
    (278/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.083152312 seconds)
    (279/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.08151123 seconds)
    (280/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.10074809 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.110571204 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.114701091 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.155538974 seconds)
    (284/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.069447705 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.079596567 seconds)
    (286/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.107374063 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.080405135 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.174644528 seconds)
    (289/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.074982574 seconds)
    (290/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.125513753 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.09107023 seconds)
    (292/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.094120776 seconds)
    (293/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.082478197 seconds)
    (294/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.083340069 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.107056399 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.080165429 seconds)
    (297/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.094286981 seconds)
    (298/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.082885437 seconds)
    (299/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.069644179 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.127147366 seconds)
    (301/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.07058392 seconds)
    (302/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.106689675 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.079878985 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.086808684 seconds)
    (305/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.098779534 seconds)
    (306/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.241761072 seconds)
    (307/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.074307532 seconds)
    (308/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.073981517 seconds)
    (309/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.100562326 seconds)
  done (took 40.226695331 seconds)
done (took 41.140262819 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.101322779 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.15444741 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.093497606 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.138801555 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.098206027 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.124138928 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.089568066 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.093860396 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.119855423 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.09674522 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.119563975 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.07211342 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.117680407 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.092317512 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.117194619 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113436682 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.122522843 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.092373222 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.11537833 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.082769338 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.088086667 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.10958386 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.084645769 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.071407703 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.117363589 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.089651832 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.114024407 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.093100754 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.10675089 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.08157851 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.080437318 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.116879568 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.08478291 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.119975647 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.088602322 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.110710612 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.093286838 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.092831589 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.109442733 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.083508742 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.116575932 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.083435717 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.091862383 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.117453111 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.087065337 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.107728193 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.089036917 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.128293338 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.120870592 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.118998747 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095366086 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.09779777 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.123785531 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.092683707 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.111375639 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.090962756 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.113283117 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.120701539 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.116866448 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09338451 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.095267781 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.122161723 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.086030695 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.116019092 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.085781889 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.118000242 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.092478502 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.082404671 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.119739731 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.089187363 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.107639849 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.086458413 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.083807839 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.113779059 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.097774107 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.12489816 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.085816743 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.089224662 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.121391798 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.09177924 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.109827579 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.085991785 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.082766721 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.108388883 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.086459557 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.09828743 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.080848366 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.087885126 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.107505941 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.085407181 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.112901634 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.088666594 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.083071425 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.117560909 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.083299303 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.107323069 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.082027661 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.083492212 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.10995151 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.081288594 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.106498559 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.084591685 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.090370661 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.108182134 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.083892908 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.119092748 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.081792391 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.113128936 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.080922097 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.082129955 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.124073416 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.092563607 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.106797172 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.086617153 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.08010075 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.110229067 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.081558173 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.106916282 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.081854938 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.082029872 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.108229131 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.081737114 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.109557153 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.083067693 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.096981548 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.108189107 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.08127992 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.10902326 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.081720381 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.088948535 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.110018672 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.082055426 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.108152086 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.080449798 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.084480348 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.109139204 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.083882596 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.109280087 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.085309084 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.083731478 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.112231431 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.08596658 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.111480028 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.081117736 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.080141712 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.103746721 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088562728 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.1106357 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.103264825 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.0834506 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113579254 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.085221439 seconds)
done (took 16.018681678 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.087840663 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.186853094 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.144826886 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.11797476 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.136381613 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.088113311 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.12597009 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.12053045 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.115434813 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.144975162 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.105171364 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.128642917 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.120782534 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.110253051 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.084111921 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091266698 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.114043347 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.100630065 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.147801902 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.107880252 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.142186951 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.105826781 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.111434415 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.132084429 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.091622573 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.137939119 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.08448763 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.112867437 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.085623638 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.126042652 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.102504488 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.085646126 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.108620373 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.103666861 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.124372505 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.089304691 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.108907803 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.089468552 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.107068939 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.08246626 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.130342196 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.104716846 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.115379407 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.088297387 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.111137299 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.08502281 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.085319084 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120071774 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.093506394 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.113492611 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.097783704 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.136997061 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.08457197 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.117940246 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.08221492 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.121988394 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.09405326 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.11142034 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.084405984 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.110610563 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.082087687 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.085602517 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.123931247 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.131631793 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.085958308 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.11730154 seconds)
  done (took 8.191436796 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.107023031 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.142754035 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.101239282 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.129191984 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.082818201 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.085401739 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.10947718 seconds)
  done (took 1.735646211 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.089396449 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.115603931 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.143691802 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.115198505 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.140375507 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.135558541 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.09877719 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088932295 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.137230825 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.091178131 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.142248611 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.130015285 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.11706163 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.094342089 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.145858628 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088034482 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.144264382 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088642237 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.119426971 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.117007689 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119937395 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.110519306 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.114989526 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.084420799 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.10681514 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.116258644 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.169305589 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094335129 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090818057 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.119538453 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.087228759 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.156789268 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.107047968 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.12840453 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087788784 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.134660936 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.108496784 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114400453 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.105505709 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.122127072 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.105762318 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089968458 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.118046021 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.085999842 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.115994687 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.098946937 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.092751536 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.116943166 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.091251552 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.138000538 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090756809 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.134987333 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.090141234 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.093928031 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.116955002 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.092633081 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.120910667 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.084116513 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133780547 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.086554403 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132028261 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.106261209 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.135026593 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.10981355 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091908004 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.134861635 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.110204636 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.119142306 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090809404 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.119076028 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.108789034 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.114740843 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.092336284 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.104030615 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116917844 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.113123884 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.144243058 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089866848 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.125430601 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.085560785 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.109838567 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.084059245 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.110081729 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117933846 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.087248658 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113445292 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.086395895 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.081873866 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.108642619 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.087477904 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.10729497 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.086021094 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.085899037 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.109978456 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.087318765 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.131802631 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.089329945 seconds)
  done (took 11.634149782 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.091316646 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.090542344 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.119411365 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.084645416 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.110895341 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.08531405 seconds)
  done (took 1.575265357 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.119479001 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.11079724 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.098030486 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.113455151 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.124318228 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.133443461 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.109998664 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.119490046 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.101827462 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.121157506 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.108063859 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.136063839 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.115125731 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.117628691 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.107859237 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.116284787 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.108654992 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.118938758 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.094804941 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115488556 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.101509405 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.115305922 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.089264087 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.129181557 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.09549535 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.114387404 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.089789579 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.121402333 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.095788269 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.117839943 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.089315075 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119200159 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.089726439 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.117826035 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.108488557 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.116773284 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.089894883 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.125097345 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.090297738 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.094492282 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.136656741 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.093913064 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127537194 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.102063718 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.124137541 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.093907214 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.122230762 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.092840882 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.139371042 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.101218915 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.127208044 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.094201302 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.12560943 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.099046185 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.124084752 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099791588 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.129971589 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.115906464 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.124160025 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.095616863 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.121282141 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.100600699 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.127670353 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.100243391 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.127260099 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.101683679 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.123390856 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.096295834 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124038946 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096062469 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.102004886 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.121362626 seconds)
  done (took 9.007162912 seconds)
done (took 33.114629379 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.693011089 seconds)
  done (took 1.679443849 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.708921267 seconds)
  done (took 1.694808427 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.265105239 seconds)
  done (took 19.258224048 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.473868503 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.555239441 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.831098475 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.162256495 seconds)
  done (took 3.013086565 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.979120478 seconds)
  done (took 1.987286426 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.289300834 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.231514656 seconds)
  done (took 1.516173788 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.786674842 seconds)
  done (took 1.789973054 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.459389493 seconds)
  done (took 2.461489699 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.333700041 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.153476385 seconds)
  done (took 1.499278602 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.580552178 seconds)
  done (took 1.588565297 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.212722614 seconds)
  done (took 8.223477722 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.246723188 seconds)
  done (took 1.269613273 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.291991429 seconds)
  done (took 1.299519238 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.752019719 seconds)
  done (took 4.753868941 seconds)
done (took 53.036327467 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.100851832 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.103709211 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.129773028 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.09439124 seconds)
  done (took 1.42963434 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.106125451 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.096382367 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.134372118 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.095477265 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.133988236 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.09698119 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.126826994 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.106709509 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.124161421 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.098605202 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.124573565 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.09726763 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.127978108 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.100206558 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.122220011 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.099941852 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.132666235 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.097180134 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.100754266 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.119577268 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.089376746 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.122288565 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.095572078 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.121928526 seconds)
  done (took 3.686846355 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.101293459 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.095288277 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.125951659 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.094579324 seconds)
  done (took 1.431054162 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.10184716 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.107716933 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.133283456 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.096819853 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.133237183 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.100807474 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.113133501 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.087951316 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.119505158 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.101101686 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.091603913 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.142118835 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.129311963 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.097717304 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.101430281 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.111948007 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.092018706 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.134533045 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.100397949 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.129925163 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.094414779 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.126266817 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.086852213 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.108204889 seconds)
  done (took 3.660032989 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.174649922 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.130584262 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.113972144 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.124775646 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.136497059 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.143734357 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.08594279 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.140555977 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.085548238 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.13506916 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.094169513 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.165938778 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.102870758 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.118824416 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.089472372 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.088967997 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.129223908 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.10187716 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.119561476 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.103028097 seconds)
  done (took 3.406345211 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.100580766 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.093839117 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.117582884 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.092802441 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.132458 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.098434003 seconds)
  done (took 1.660155183 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.099036905 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.091291365 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.122312049 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.092143797 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.124813254 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.089849103 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.090129414 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.119458066 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.091793466 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.117666168 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.093577099 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.089845883 seconds)
  done (took 2.248276641 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.502521405 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.08694993 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.113509014 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.083861368 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.095814259 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.119403559 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.106955835 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.122023537 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.120170728 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.11874266 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.090883489 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.092848919 seconds)
  done (took 2.682470021 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21543707 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101509547 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269109291 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.351063114 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164765449 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171386574 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.284808648 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165059065 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.181966304 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109573595 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194619358 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163565486 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157337962 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185137651 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118061599 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.159923631 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172812477 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194905913 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149567938 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208684417 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166291454 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166285555 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176533822 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153361904 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107552287 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155932915 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.118734122 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098933855 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169279971 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1660766 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170149821 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145757264 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135928897 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196244535 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208135056 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181387189 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.284282148 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131386347 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.151964672 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.162502918 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244539162 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109994783 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190684164 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152351193 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135078476 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186875217 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15797271 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.17925366 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.10841666 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147676698 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187095223 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181588629 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.185928603 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142401659 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.310817436 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125189911 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.147982716 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181262741 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181070982 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187258957 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171519934 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.123337617 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185059859 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176628569 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175449149 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.120619424 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.170040598 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131109147 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178649143 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.201874902 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184945218 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171169346 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.184609526 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136065813 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159572571 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167253892 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123334374 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182053854 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165016207 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.091393688 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146660547 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134052058 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097349606 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.19162136 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.092532157 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226781238 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104624454 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.1725595 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196835161 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155225722 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158616558 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16120208 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161716112 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117317013 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.118721102 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120938645 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.153314655 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152114525 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100895312 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153433741 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140555096 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.099076481 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148992413 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.119900186 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132276265 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.131351587 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167555008 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168197923 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.102374201 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173367892 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156736678 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.126309512 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175953948 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190500051 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13986098 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108065745 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19780813 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164949957 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.141425865 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182259698 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.19510611 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.131451198 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144482108 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172067264 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197989793 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149699499 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194235703 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146437102 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111205006 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.145472372 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164561659 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133145904 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.163277528 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129987713 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.129093611 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224838121 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.101026838 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142349838 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179115898 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104319947 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133498445 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117334868 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141821491 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.112675556 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.147217583 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.138925907 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123611759 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15730908 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152783976 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152815794 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1415194 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185197277 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10488758 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.156901878 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152819662 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.096199401 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.181586485 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190108487 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136361601 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200099243 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.16765144 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191708641 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158301841 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099074089 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174004749 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126265396 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.089850311 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166557443 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168463419 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167067189 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.185878017 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198031381 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.166205112 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.149440219 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124205365 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168358569 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.16970431 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160046643 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.141616706 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133880367 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161219952 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.12310105 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.100596591 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.133973275 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117820897 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138351807 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108686612 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214647393 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137847248 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.21724454 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156165425 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11052312 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17871287 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.126227084 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166751101 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.170524079 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111928201 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.185016703 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185288224 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173885252 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146159881 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167576223 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.089497468 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.094177947 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.13235928 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165077475 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108018552 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137750086 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142947122 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186361494 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179112628 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124971007 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232929956 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162195829 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189725012 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.092707668 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.168285546 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17288693 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163054506 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.155479309 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130000599 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.119094499 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173577939 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141438079 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189980687 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160553354 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169016081 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198689691 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.152679364 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102634098 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148244472 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167067819 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146533952 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141494385 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152610697 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142379095 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124374352 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.130413765 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100726377 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176453892 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151219988 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180576085 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.154934049 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173762981 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102063886 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152020705 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167732647 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121797151 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.122127657 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169597273 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189036835 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147022823 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132076393 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177539799 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137397569 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.312776879 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184586076 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183381324 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135922795 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115181642 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166099703 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162002122 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165948525 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181704713 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117736701 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182880432 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165271257 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.138401662 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108009402 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147349731 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15483737 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.114385561 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.136927274 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.158044994 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.113304246 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182216709 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148085513 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164272445 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169273983 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.126292223 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.149939767 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117440215 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20491402 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163510607 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18232515 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.155200561 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.16988905 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20276132 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099570067 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127802891 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.098224725 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178404107 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1298213 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156959382 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.180286883 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190534604 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156024152 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161086115 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109565089 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.118359001 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129446731 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148860275 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192454267 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138260135 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.133362047 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187077726 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.117885605 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137674934 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169673002 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287215135 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113216122 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16712516 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.112550174 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.272209594 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.093875849 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129903829 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156383549 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166111673 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.103856676 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.173329177 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131819305 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140114794 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156898765 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135695822 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182237874 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197753457 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164442736 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170856336 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.103400577 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161386062 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157551891 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171458708 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143772259 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.10755865 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164216904 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181929722 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.189237079 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.133412407 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129990987 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160491919 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159418649 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167310348 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133190224 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192013006 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098729098 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159279379 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137369816 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095107493 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159213097 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.181198324 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130350568 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169988635 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156268254 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100785939 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12383579 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119451283 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158380936 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143302263 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.101035776 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177816984 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.129749012 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167265072 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151234823 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136612046 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159040615 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119342991 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141741352 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148140197 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120476735 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142978798 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.143292135 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176386674 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.129105122 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17527051 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17332526 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165890312 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162465501 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118269485 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.67314606 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.103330797 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185737782 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15491095 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188519099 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149260061 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167540497 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128187497 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149731493 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161729104 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145724715 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.203074831 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159759752 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.154449668 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128053223 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111824323 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139930909 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.128099223 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119677147 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158085532 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139797512 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.104726264 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.156764863 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141695131 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.103041903 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13608901 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182733203 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145569579 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175095189 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175433634 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105845408 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162497783 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167618767 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130872783 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.127121726 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167394581 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144006809 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152648138 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.10521461 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.143243453 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185252544 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.09964108 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167707441 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166703179 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166113697 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137118287 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.139800572 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165694333 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14778125 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132294292 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136085789 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.155695351 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129339093 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131578799 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.124119226 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121595114 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149831614 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.149628646 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095426063 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.161290223 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17665203 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.093428371 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135402054 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.28062558 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123704515 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185185436 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.139959555 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131857342 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110547913 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144703725 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.151015963 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125726436 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.126291563 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128579734 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.098400414 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.162757704 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.110643626 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154561214 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17956429 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15320511 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196020275 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.104584991 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.27819824 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134812864 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152821755 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.091693457 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.127550922 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112076331 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134983494 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118170499 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.221622774 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146444812 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.142525411 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.129940078 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094271924 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.121718067 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103819236 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160313805 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152813345 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127339246 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148165925 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.119442234 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116237526 seconds)
  done (took 75.027172395 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.1650033 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.154740644 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.165074176 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.215394741 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.185429222 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.262737709 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.230154731 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.257063179 seconds)
  done (took 2.747070914 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.095897745 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.146283047 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.130457477 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.140992856 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.118400185 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.087553964 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.324011096 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.136724171 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.085488487 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.142517258 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.128832072 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.112723193 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.536837348 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.093343026 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.120958615 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.080955844 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.113060067 seconds)
  done (took 3.696159357 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.485876713 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.749289215 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.473652887 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.120158117 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.324196274 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.131459579 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.048997734 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.193921409 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.113189405 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.491027703 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.749884319 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.184913137 seconds)
  done (took 19.177224357 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.12768553 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.119671861 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.171481736 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.169836759 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.121829724 seconds)
  done (took 1.826785918 seconds)
done (took 123.681662971 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.106352915 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.411330267 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.073863629 seconds)
  done (took 1.635604334 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.114668764 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.146592135 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.115736723 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.14342217 seconds)
  done (took 1.644949567 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.100545004 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.101031396 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.144304791 seconds)
  done (took 1.460643348 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.317574374 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.159602086 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.166731503 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.108828023 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.104309565 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.13254429 seconds)
  done (took 1.467383953 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.099442889 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.102011899 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.129582723 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.101720835 seconds)
  done (took 1.545993021 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.107048453 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.079966445 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.108854617 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.076232341 seconds)
  done (took 1.491983044 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.116067547 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.134731318 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.100648371 seconds)
  done (took 1.470395268 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.131638216 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.143082751 seconds)
  done (took 1.393908187 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.107339588 seconds)
  done (took 1.220998255 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.120167271 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.170610558 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.183986191 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.123561382 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.183390373 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.15879225 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.095278007 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.094604816 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.12456325 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.094015242 seconds)
  done (took 2.47167066 seconds)
done (took 17.672517061 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.109197916 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.435256313 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.393582929 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.149820625 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.701498012 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.4149314 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.006293226 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.150809311 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.174414956 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.095438652 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.1419531 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.681578869 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.061065219 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.343386924 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.011146318 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.372043487 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.669270262 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.119439057 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092259064 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.116228483 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.982924886 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092438264 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.116945544 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.086870725 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.699151887 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.39713475 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.117371086 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.340250691 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.115870997 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.094916779 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.379017553 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.119076666 seconds)
  done (took 16.889650969 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.100665672 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.1862126 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.107191458 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.142411328 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.102813717 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.096098174 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.12913825 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094905151 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.188738781 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.126789138 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.113157238 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.125034765 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.094069374 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.089553526 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.137847797 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.093769397 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.117469757 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.087643346 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.116471314 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.08859287 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.106091528 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.117922566 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.087282143 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.116810858 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.087388021 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.129594485 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.088164038 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.086805227 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.116966529 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.094466585 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.123742227 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.08972559 seconds)
  done (took 4.707621238 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.146954532 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.196222904 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.106706812 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.162332684 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.177892996 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.098138421 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.205694724 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.153966446 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.161827229 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.127247243 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.113111452 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.128092013 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.129953563 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.128156603 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.116783614 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.12549024 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.091652582 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.117603431 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.088064218 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.089273649 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.139324065 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094685445 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.127449246 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.095537393 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123992444 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.105131744 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.1202822 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.090667745 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094017147 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.131466898 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.097350057 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122413495 seconds)
  done (took 5.139404193 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.098958733 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.100420876 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.14202404 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.110410382 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.128760275 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.099529607 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.130393942 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.09637677 seconds)
  done (took 2.0342605 seconds)
done (took 29.895610115 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.115037977 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.10096023 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.141102371 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.107843653 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.136916685 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.109061187 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.125998296 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.108080397 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.107921328 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.136086367 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.111636318 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.125260262 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.097704987 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.124274654 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.104797806 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.09981697 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.140490667 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.104427431 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.142298681 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.109456891 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.129190848 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.107835433 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.105087119 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.142139511 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.110500682 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.142213778 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.111590416 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.133588165 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.096755614 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.129232285 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.108819377 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.148456918 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.098282945 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.144763315 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.100370655 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.099567753 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.129105831 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.09933143 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.143867601 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.107548813 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.135181039 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.107459984 seconds)
  done (took 6.099430901 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.12179308 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.157648157 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.118506782 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.091556576 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.12650729 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.086293024 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.146483088 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.08811611 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.122244408 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.120843547 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.117238174 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.086827677 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.087866432 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.114214876 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.087154032 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.083187987 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.120134112 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.082925692 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.080093914 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.109182053 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.08102532 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.105190733 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.083180014 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.080584652 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.110080422 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.086725381 seconds)
  done (took 3.838406123 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.103347604 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.111714448 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.149280546 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.180848363 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.124460233 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.127135662 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.100434456 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.113120741 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.135416595 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.092587156 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.129104242 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.123428897 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.142471666 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.101355775 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.123634346 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.104952268 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.105864542 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.120961458 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.098525068 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.142473802 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.1105123 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.13194335 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.115423126 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.130609298 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.090679523 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.093530378 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.129961819 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.104361446 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.135390981 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.104170482 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.131915959 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.098628652 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.093816937 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.129975699 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.093242459 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.119392845 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.110908594 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128329622 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.100983155 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.119461183 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.096203202 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.094700985 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.147496124 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.173094333 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.096422475 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.102419477 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.136019995 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.104359368 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.127583065 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112419859 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128085172 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091263064 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.096185209 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.126560549 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.096073876 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.1426307 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.097745737 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.095930323 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.138044205 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.098403253 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.138887782 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.098810917 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133399109 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.092064713 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.096073168 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.119996503 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.088274592 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.117460256 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.116625746 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132100543 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.134145142 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.129912648 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.097226428 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.103719219 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.132863719 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.101904497 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.12849408 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.111486743 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.13775621 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.099850919 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.137732487 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.093743665 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.097794914 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.145290065 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.097537233 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.127909332 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.093592607 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.101637692 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.128019687 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.095250287 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134864073 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.095149128 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.12870219 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.104857799 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.090878676 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.12638663 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.094153502 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.125652724 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.093017081 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.132003715 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.094604157 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.118743658 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.100660486 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.09097266 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.125297158 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.098089674 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.123034384 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.091402654 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.122303181 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.095624852 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.087733817 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.123022669 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.091562295 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.120745117 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.09776886 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.094442413 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.122094416 seconds)
  done (took 14.504204886 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.235274289 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.213864471 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.191651372 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.265896177 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.141762492 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.125481691 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.216403143 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.165864868 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.098421386 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.165390654 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.173913284 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.182800745 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.180644176 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.192891979 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.142095722 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.120297021 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.114328192 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.171973516 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.219989498 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.303573975 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.116791485 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.138190623 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.136877629 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.167728956 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.136909145 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.104980273 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.14184698 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.100413156 seconds)
  done (took 5.813999441 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.112564924 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.159852634 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.099714562 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.141226105 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.122295765 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.126612303 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.095905423 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.11966063 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.101750896 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135243579 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.09136412 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.127850556 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.099216196 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.103694763 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.126749012 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103519363 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.134683178 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.096224287 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.129327812 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.093097702 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.093717954 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.141787774 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.098464822 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.118989277 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.096670675 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.119618242 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.09548719 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.14386871 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.094799358 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.148099746 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.086576485 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.12627922 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.097675689 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.119984503 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.087772739 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.089848287 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.121095641 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.091349571 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.120947951 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.086470522 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.086000451 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.111132625 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.087531853 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.134261585 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.094864069 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.112561162 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.094046521 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.123992733 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.089067609 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.085894478 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.12206118 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.094615126 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.121429063 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.096440787 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.092922265 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.120457646 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097504426 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.12190493 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.094891913 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.089980009 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.118499378 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.091234039 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.124042897 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.092129151 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.127464022 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.093432982 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.086632818 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.121083252 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.092521304 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.126420917 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.090336746 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.090988002 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.119936458 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.091911948 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.12188261 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.093205756 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.092672589 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.119656919 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.087550347 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.119325408 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.077796286 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.087681163 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.109845412 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.092437005 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.116957844 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.087229832 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.089974587 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.126741242 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.104031183 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.120884866 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.097327933 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.122502802 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.090103386 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.121852423 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.085119587 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.095507937 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.142251726 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.138592346 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.087938499 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.088647246 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.13782577 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.093584402 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.11812744 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.077943762 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.094898082 seconds)
  done (took 12.43906534 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.131118573 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.158201541 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.098635247 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.147878293 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.128885493 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.163397197 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.103690231 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.134971164 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.098457794 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.146285914 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.097086425 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.105092196 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.132048805 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.106219172 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.16154525 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.107406944 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.129947211 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.110488556 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.135598352 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.139587315 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.146285406 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.114417248 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.14385967 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.097287986 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.134482938 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.114804594 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.168220869 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.111424401 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.142009339 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.116092736 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.111812547 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.15842775 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.139785828 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.101479807 seconds)
  done (took 5.50077206 seconds)
done (took 49.329812307 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.229491256 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.470203821 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.217415154 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.153484569 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.285325916 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.251911966 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.23857958 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.22254396 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.530521153 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.225439182 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.486925347 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.888796398 seconds)
done (took 59.354651437 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.356447338 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.386660806 seconds)
    (2/2) benchmarking "String"...
    done (took 1.515904643 seconds)
  done (took 4.062596971 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.943739755 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.236957276 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.487393282 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.224937445 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.231735732 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.517976444 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.056613343 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.723894126 seconds)
  done (took 28.632898029 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.235980858 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.646479363 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 5.251488872 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 5.240095434 seconds)
  done (took 19.527398877 seconds)
done (took 62.675415616 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.262231999 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.234812473 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.227754319 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.205945143 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.33639839 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.257523115 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.323305503 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.26121351 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.234226119 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.212734338 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.238478325 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.2313864 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.231127818 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.323936342 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.2277145 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.242145182 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.255388715 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.833025111 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.679448632 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.229346914 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.240098876 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.240366521 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.251586006 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.243718546 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.234087272 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.229694499 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.221900911 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.230036071 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 5.201469585 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.227150651 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.256520338 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.493922294 seconds)
  done (took 191.270434209 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.229737522 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.238539072 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.358119881 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.26608142 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.670611729 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.426560761 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.36458646 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.758647176 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.24667338 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.238505515 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.44132415 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.230823504 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.519161911 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.201988558 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.239101658 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.29265727 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.428394293 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.529129669 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.249102967 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.485119511 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.245502393 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.474540938 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.384676996 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.407408117 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.234934815 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.303298547 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.252867351 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.254913891 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.422245777 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.368418545 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.248082868 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.270870284 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.909274309 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.089601446 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.254769266 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.26884271 seconds)
  done (took 150.961218149 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.541003201 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.228364363 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.230054217 seconds)
    (3/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.230633953 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.229709031 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.266824901 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.23226464 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.873637145 seconds)
    (8/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.230494489 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.806717932 seconds)
    (10/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.867704258 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.71499152 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.807632208 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.607262939 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.231690573 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.331109151 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.240535819 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.232535931 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.246913035 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.260146364 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.225568708 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.232371404 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.875567388 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.245663438 seconds)
    (24/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.234382776 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.416338705 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.24038049 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.268295698 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.633805808 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.25437395 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.227586747 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.267543112 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.576197788 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.279134773 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.233501426 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.685485928 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.692245007 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.353863347 seconds)
    (38/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.233028775 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.234344793 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.270389792 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.232806645 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.523452578 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.233610664 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.234564198 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.23550414 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.978345627 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.233416197 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.878778245 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.234419059 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.233176304 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.227876121 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.235269649 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.695705505 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.00006024 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.233836712 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.234167283 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.236013342 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.233663624 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.235156427 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.27168957 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.723528699 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.340110525 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.234860582 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.238008252 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.27109812 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.23371164 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.563136637 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.235464133 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.686219395 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.290916257 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.452401461 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.880760949 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.236616406 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.347804181 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.363843144 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.235838099 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.237076542 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.237617353 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.236421849 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.353211904 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.235379999 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.693177696 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.413768952 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.245119265 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.831709879 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.337906615 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.231357042 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.731513021 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.238576323 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.237518098 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.042213609 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.331347284 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.231236883 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.236851944 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.23652442 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.694747142 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.876468542 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.555666668 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.23832553 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.001315422 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.240166181 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.708014067 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.835769874 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.992483232 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.2366812 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.352700201 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.41563529 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.248818228 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.237933167 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.847510343 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.23686382 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.293364684 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.238336719 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.63603895 seconds)
  done (took 372.891751374 seconds)
done (took 717.818080826 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.890980315 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.872148772 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.99045895 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.867240487 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.821450919 seconds)
  done (took 10.605226094 seconds)
done (took 11.768102519 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.44292419 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.445221233 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.305126366 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.448257825 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.269119221 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.467569066 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.421242892 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.258610225 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.347582071 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.328647447 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.348800287 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.295448092 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.26718492 seconds)
  done (took 18.806379683 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.569940129 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.598477235 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.298702189 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.569479471 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.277235317 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.577837865 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.442634918 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.462576995 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.446152212 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.252123287 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.254826953 seconds)
  done (took 16.913869224 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.580901898 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.581592943 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.29803978 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.573068982 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.277197654 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.57455207 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.446553071 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.457581593 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.438861136 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.250515261 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.253589481 seconds)
  done (took 16.896815337 seconds)
done (took 53.78113622 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.250224153 seconds)
  done (took 2.413715888 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.286759229 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.459188951 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.267576758 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.25601878 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.253794072 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.252673139 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.257942127 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.250277408 seconds)
  done (took 11.447465763 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.247094165 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.247718188 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.250817722 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.249852402 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.247941232 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.24771436 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.245882242 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.249987049 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.246175975 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.249001977 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.247665268 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.250987346 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.25130994 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.246758363 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.252058521 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.251111782 seconds)
  done (took 21.147799969 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.249656463 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.247408269 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.248373393 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.248241018 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.248640734 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.248513924 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.250307348 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.247625452 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.248344723 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.247716781 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.250478377 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.249566663 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.249655081 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.249294139 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.248302878 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.248407054 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.24987723 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.249702154 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.254136284 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.248040698 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.249765156 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.248090217 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.248083712 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.250045797 seconds)
  done (took 31.146015172 seconds)
done (took 67.319860991 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.651087784 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.236000588 seconds)
  done (took 10.054016898 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.311444769 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.310359199 seconds)
  done (took 3.792903633 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.733512232 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.25365398 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.25211075 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.250287831 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.252857596 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.249933403 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.253663423 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.253141974 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.251488173 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.251761335 seconds)
  done (took 14.168816311 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.252859294 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.253528963 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.251376041 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.252235262 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.252683249 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.250252828 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.253865844 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.25365094 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.253751729 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.250699985 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.253787055 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.251203988 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.251876111 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.250899907 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.254045433 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.251586629 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.251075767 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.250592511 seconds)
  done (took 23.707424104 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.275209793 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.273755306 seconds)
  done (took 3.721190411 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.379603112 seconds)
    (2/7) benchmarking "second"...
    done (took 1.292109728 seconds)
    (3/7) benchmarking "month"...
    done (took 1.357664797 seconds)
    (4/7) benchmarking "year"...
    done (took 1.347179759 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.289664329 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.271828107 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.292584787 seconds)
  done (took 10.400082117 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.253430076 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.440097316 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.537870939 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.823638327 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.253378149 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.256632041 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.130778988 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.256994325 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.262857633 seconds)
  done (took 14.386877335 seconds)
done (took 81.399376173 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.291383261 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.239191525 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.571274615 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.26444845 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.264037958 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.546971968 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.293360998 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.375732349 seconds)
done (took 38.019095544 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.263227844 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.066948715 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.071439524 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.249601625 seconds)
  done (took 11.557543151 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.247761536 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.2875327 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.252360418 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.439336175 seconds)
  done (took 18.401067922 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.40931167 seconds)
    (2/2) benchmarking "read"...
    done (took 1.583752177 seconds)
  done (took 5.165259184 seconds)
done (took 42.559643774 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.255727109 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.253586228 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.256477402 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.251351014 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.252907355 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.255390597 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.252536871 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.254339847 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.25569968 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.256986966 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.257417073 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.257481506 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.257220776 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.253926996 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.254607861 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.253734813 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.255787787 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.255639453 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.254387079 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.252771548 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.257162456 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.256850137 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.251798605 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.254378116 seconds)
  done (took 31.287319415 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.258426435 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.255088362 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.256116032 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.257214604 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.255458419 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.25729873 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.25684535 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.254084488 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.258316416 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.256504207 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.254307622 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.256303478 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.258946553 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.258134935 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.258092317 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.25647879 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.259715166 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.255840093 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.25871366 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.255880995 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.258079818 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.256330214 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.25702134 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.258216956 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.256658716 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.256250276 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.259282363 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.256738419 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.259191593 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.255857316 seconds)
  done (took 38.885484618 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.263185379 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.268864392 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.258221904 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.257104323 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.258870465 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.256561275 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.259622787 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.25554674 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.258302407 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.258846033 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.257196286 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.258388064 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.259144794 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.258703927 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.261676522 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.259666553 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.260371801 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.26091702 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.262438985 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.260325295 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.260643629 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.26067741 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.26065024 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.260799868 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.262488116 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.261511875 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.262434711 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.262814325 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.263021128 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.262809861 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.261619873 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.261953253 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.261225277 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.261810216 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.260419391 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.260744235 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.26613767 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.271779375 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.260860622 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.259219362 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.260068363 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.261874588 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.262520483 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.260664302 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.261145865 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.260725311 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.260588239 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.261516436 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.262602661 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.260343213 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.261231197 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.263132029 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.260408676 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.260598345 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.258844022 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.26040803 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.262247872 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.260681397 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.261456239 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.261904755 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.263285771 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.263560568 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.263266968 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.264341321 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.262559887 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.262817604 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.262603482 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.263212359 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.262875181 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.263917406 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.261647419 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.265981646 seconds)
  done (took 91.998714027 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.263042435 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.257509458 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.255385433 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.256525069 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.258939835 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.260841551 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.254276244 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.262385313 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.259520143 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.26522815 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.263441785 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.261499615 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.261866542 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.25975959 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.263460228 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.259081975 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.262430428 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.258456381 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.261112831 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.264373433 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.265691957 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.258430961 seconds)
  done (took 28.912139567 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.262767914 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.267241392 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.257834323 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.26095631 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.26159932 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.263847009 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.263477189 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.263300897 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.263176926 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.261770845 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.256626945 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.260974436 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.258797026 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.260521692 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.260421496 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.260391259 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.265375993 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.260822644 seconds)
  done (took 23.892013848 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.257976605 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.257176935 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.264493221 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.262852722 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.260286121 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.266371047 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.260749351 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.260388279 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.261920619 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.26015403 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.260888002 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.261325768 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.262855939 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.259542507 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.262719447 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.260520099 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.263909814 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.26074504 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.264093602 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.261611579 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.260403766 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.263515947 seconds)
  done (took 28.935829857 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.265799606 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.261323479 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.258649286 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.259549444 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.260404556 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.261380348 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.26312068 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.260518101 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.26495642 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.262366698 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.26330994 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.270184791 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.267012466 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.26339632 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.262757561 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.265544957 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.267086877 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.265556846 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.264025378 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.26503592 seconds)
  done (took 26.455825678 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.271441221 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.26986964 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.265274253 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.266730251 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.267418007 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.27016289 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.27210616 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.269876631 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.270710735 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.268526863 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.266115906 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.269701771 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.269234621 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.27061053 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.268235466 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.27153253 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.268818801 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.268040303 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.271419954 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.270683212 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.272527402 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.268803664 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.273492468 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.268030014 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.272043263 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.268951283 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.269807041 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.269508255 seconds)
  done (took 36.733614951 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.265252422 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.267625986 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.262001404 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.2649152 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.265621061 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.265967352 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.265074095 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.262333569 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.267083709 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.263364479 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.268107679 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.269140665 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.266005713 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.266753714 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.267065752 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.270975886 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.270883725 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.26600816 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.264493899 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.266489743 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.267699674 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.266478385 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.267840506 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.267442283 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.265793239 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.269068324 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.263298637 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.264206314 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.271715314 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.263294029 seconds)
  done (took 39.176444622 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.309588649 seconds)
    (2/2) benchmarking "in"...
    done (took 1.310795791 seconds)
  done (took 3.807890517 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.269172988 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.267811022 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.271534329 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.269911132 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.26594438 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.268230006 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.274239554 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.265978113 seconds)
  done (took 11.340387699 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.26964528 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.267928912 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.268265641 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.26969957 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.274148666 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.269272277 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.272993376 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.291847064 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.272821808 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.272166794 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.28053208 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.277942163 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.275773961 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.274241504 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.27241192 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.273144382 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.276689681 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.274050599 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.276145421 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.271948091 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.272386999 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.270252497 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.272548735 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.271379229 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.270728685 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.281680655 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.27576479 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.273757843 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.2699359 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.276695786 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.271448785 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.269449318 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.274369554 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.273651523 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.272195823 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.274959236 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.27828759 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.292279668 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.277980339 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.272278022 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.273265531 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.270407207 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.272940934 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.272592061 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.273917523 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.272469308 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.271273302 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.272792698 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.270244244 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.27630948 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.281249217 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.268949679 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.271142656 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.274082763 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.274623149 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.277211145 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.29536961 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.276165948 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.282842267 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.283287076 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.29036927 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.282012997 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.274257976 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.276698475 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.284084547 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.298278586 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.279261135 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.289815547 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.269681901 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.27214526 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.276460326 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.286670594 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.303243294 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.273405208 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.27643008 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.274794578 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.272433472 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.274393824 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.277799405 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.298036331 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.275533922 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.27572543 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.284442521 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.299279309 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.271782649 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.276890824 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.274912494 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.272877053 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.275132693 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.28372163 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.294272854 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.272914195 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.27232601 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.274234084 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.273829346 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.275370581 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.274490839 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.276460621 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.273565752 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.273215781 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.275415787 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.280583327 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.286406577 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.279430106 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.276528166 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.280675104 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.276524712 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.276488257 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.280951252 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.280549838 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.281062561 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.276639838 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.283311435 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.274868471 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.277104617 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.285045453 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.279114407 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.274993444 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.277262957 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.279842311 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.288913256 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.307152528 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.280358731 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.277975152 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.283802056 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.293694329 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.280658757 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.281314411 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.277028317 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.274540192 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.273240058 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.28039892 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.275783952 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.278385186 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.280497806 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.276634859 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.278127975 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.280518995 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.277646032 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.279911064 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.28152008 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.278255927 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.275445706 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.277519614 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.281546457 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.276613636 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.284004646 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.274825821 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.277952108 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.278025813 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.275028742 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.278836031 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.276980798 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.282623194 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.277286024 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.280035202 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.277600123 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.28090733 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.283103743 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.280478893 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.278184225 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.281863399 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.284201571 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.280526154 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.28172959 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.280034179 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.277391538 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.280304181 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.281721415 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.276375398 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.283037425 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.276871382 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.283786022 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.29286174 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.281659023 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.279592464 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.282941604 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.280381493 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.282773915 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.283465667 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.28373208 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.288698159 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.280210076 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.286157149 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.280653462 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.281803086 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.282216597 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.281327387 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.27965966 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.284482821 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.282451435 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.29006552 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.294973684 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.30831635 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.283197003 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.287440603 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.284988894 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.28688857 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.286724408 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.281528063 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.283556943 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.284008572 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.280468572 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.28335488 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.284295569 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.28693271 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.283961193 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.284982814 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.282369109 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.287581647 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.28429186 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.283247773 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.284704157 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.27889706 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.284709252 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.287143191 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.28260874 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.279332425 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.283568168 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.281745673 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.287275859 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.286539039 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.290998646 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.283271569 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.287414609 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.28460025 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.284957464 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.283846403 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.286351991 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.286906449 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.285477309 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.291875531 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.303661357 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.285838084 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.292484146 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.304490016 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.283956366 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.287582315 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.285058665 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.282741179 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.288702425 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.296563619 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.286293313 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.288094312 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.287097285 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.285835499 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.287343506 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.28899213 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.283523807 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.284179572 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.287673178 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.286441254 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.284636356 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.287959344 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.28736706 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.286543903 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.286974971 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.28777477 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.282940884 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.286566525 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.28878783 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.288856778 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.288085511 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.290704218 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.29849727 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.291961519 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.28643239 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.288101847 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.285966995 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.294173562 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.290289106 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.292568469 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.286374098 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.300779959 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.318268725 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.295126837 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.286540039 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.289401824 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.292711284 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.28854439 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.291066953 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.286862344 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.287163366 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.286680638 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.285545029 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.283575505 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.288799534 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.290366464 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.28781792 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.289827772 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.295715227 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.289609612 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.286712529 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.288127763 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.291375346 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.289346944 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.284277866 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.287507533 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.291026926 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.290389242 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.28667077 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.290225609 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.295312262 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.308553067 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.288144136 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.289503984 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.288221788 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.288870495 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.288200732 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.289788919 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.292589582 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.302265113 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.292360125 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.298844573 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.291234593 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.299757526 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.292741056 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.29440701 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.302427347 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.288071496 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.290029591 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.290497984 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.294512872 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.298635476 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.312099035 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.293896027 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.297935095 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.293908196 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.292448291 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.289852753 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.292371622 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.292927788 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.295677938 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.29877827 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.315892264 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.296838301 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.293827286 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.289925266 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.294214558 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.290875966 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.291179827 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.291705533 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.293546192 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.292006376 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.291913774 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.29184063 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.293020623 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.293409112 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.29387269 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.290900387 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.294178802 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.297115158 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.314796567 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.29876074 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.293896942 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.2988249 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.294815344 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.299186256 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.316578287 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.293751479 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.295123282 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.293506824 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.291969126 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.292917734 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.293440505 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.295656859 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.293368335 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.299758751 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.293618074 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.295683885 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.295298567 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.294663494 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.294529598 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.304780063 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.324418189 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.296271182 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.3019548 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.291458849 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.295863526 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.301360885 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.296821175 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.29248884 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.2982037 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.306030924 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.304392662 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.293725783 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.2961776 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.295810441 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.298039574 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.295719607 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.294569595 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.297434964 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.297526497 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.295514776 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.298874584 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.298876336 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.296966313 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.296296112 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.296608893 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.296675608 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.306263232 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.299366137 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.297944339 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.2986505 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.298013822 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.297245878 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.296921961 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.298722072 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.297053945 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.296708787 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.298917307 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.305639042 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.304012892 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.299934562 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.295630189 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.298398818 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.294115516 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.295980084 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.301015195 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.298937623 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.300623812 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.301065258 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.30085307 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.298122357 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.298035347 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.296838702 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.297828224 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.297940599 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.300742661 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.30821187 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.296996229 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.297178409 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.297867137 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.298949422 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.294950513 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.294700551 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.304262143 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.301833609 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.310324701 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.308528817 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.304340726 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.299267576 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.300055805 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.308203604 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.296555569 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.297211224 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.301432982 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.302385937 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.299950372 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.306675883 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.300916301 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.304313698 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.299974471 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.298353724 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.308174761 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.32271299 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.302179522 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.300347351 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.305535892 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.302668068 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.298400518 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.305748077 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.302942609 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.310843746 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.323281981 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.306330009 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.30265204 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.3009953 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.299239463 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.30888603 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.300154794 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.300943725 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.298872114 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.301087983 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.304642131 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.301186942 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.299650781 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.2984723 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.30038169 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.306732906 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.309110814 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.300043704 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.304504136 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.301546177 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.302478611 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.304178709 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.301547712 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.300414392 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.299415643 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.299750284 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.303118701 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.300763273 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.301754961 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.301670723 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.302511493 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.308475721 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.307645976 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.307760976 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.318439069 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.312658864 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.300757982 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.303334269 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.305749447 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.306498508 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.303753021 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.306012654 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.306497648 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.304163969 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.3031481 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.306184396 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.303692243 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.306257409 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.320097677 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.325910087 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.302668463 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.303903648 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.305109966 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.299782622 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.300524002 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.305209569 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.304387716 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.307445829 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.315809114 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.307309068 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.307905367 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.321336502 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.304806203 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.310572164 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.308486954 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.313376878 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.307601386 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.305633833 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.310919129 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.31033764 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.32224956 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.307742492 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.314569504 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.339831903 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.325723629 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.305088097 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.307643054 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.304179699 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.307879995 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.306014198 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.309437074 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.305933585 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.307161794 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.305635531 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.307441043 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.311546147 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.304421596 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.308649364 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.305127303 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.305513747 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.306922437 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.304561204 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.308262182 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.305302329 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.309024314 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.309769211 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.31171434 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.30557319 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.320236016 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.335289889 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.308603289 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.309756537 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.305389395 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.310053234 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.309687137 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.320843627 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.316739473 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.3076852 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.308250879 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.307127391 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.308758046 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.307671148 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.307087994 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.306566085 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.305947046 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.305058791 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.319170694 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.31935585 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.311832263 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.308066523 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.31029554 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.309149433 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.309254073 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.311422638 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.310502106 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.310192041 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.311981914 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.315809281 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.30963867 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.308433892 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.311411755 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.320177582 seconds)
  done (took 771.333815076 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.308332763 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.308804486 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.305589636 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.305459439 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.307552075 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.307299246 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.307116163 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.306129683 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.307321297 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.306606704 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.309406478 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.307295168 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.306705511 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.308334424 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.307891712 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.306171545 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.306713351 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.308033102 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.305701927 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.308318349 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.309220101 seconds)
  done (took 28.68021797 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.311749208 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.308421413 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.308157692 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.312936648 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.308857764 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.311780542 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.310640001 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.311796437 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.310737218 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.30800456 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.309063095 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.312734776 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.308644291 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.310473211 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.309643298 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.311759763 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.313615615 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.309883567 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.31425113 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.309662457 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.313190496 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.308517259 seconds)
  done (took 30.061239167 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.31541364 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.315418507 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.312428505 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.311469096 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.312265066 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.309291572 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.315203058 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.313987369 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.312633883 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.312041637 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.312344102 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.310438195 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.321409374 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.319795457 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.314051252 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.312803726 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.458933637 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.315540871 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.3174703 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.316455098 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.311301764 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.315654684 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.311324447 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.310748766 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.309503243 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.314997794 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.315461035 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.313717175 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.315798238 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.316057205 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.321762954 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.315117907 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.313236191 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.316264227 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.314028849 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.314150965 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.320057426 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.316081484 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.312535618 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.316546212 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.32384047 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.34511734 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.318495799 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.320791202 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.3163301 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.316417659 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.319342211 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.32827471 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.316757725 seconds)
  done (took 65.8576446 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.322241143 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.318029904 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.316355753 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.31611488 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.316166088 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.316422712 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.316827505 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.316284376 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.314714628 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.31396021 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.316808579 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.314041558 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.313758538 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.315969358 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.315780812 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.311782324 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.314194256 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.315468501 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.31415365 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.314158948 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.314882252 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.316015064 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.317484934 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.315595441 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.318612202 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.315971271 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.314953974 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.317086147 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.314973869 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.314937899 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.3163629 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.318890096 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.319607725 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.314344446 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.313480259 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.318287204 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.31970427 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.317052383 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.319359613 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.315743642 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.318075101 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.319594587 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.320240173 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.318528723 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.317534989 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.316660792 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.315582682 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.313462328 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.317415132 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.319335139 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.31750676 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.321345148 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.320149935 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.316222487 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.319006094 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.319581605 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.316916646 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.315889635 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.318940514 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.31606031 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.316903026 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.321340491 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.317887044 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.317885837 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.319204551 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.31631247 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.316049249 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.318786856 seconds)
  done (took 90.783125964 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.322000307 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.323059039 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.321720271 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.318831132 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.320945342 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.322991307 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.322633986 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.32048539 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.323380877 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.31923051 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.32268913 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.320373366 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.323371186 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.324746569 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.320988552 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.324110778 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.322959098 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.326719988 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.322824258 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.320848587 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.321875273 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.323154648 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.324326025 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.324404512 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.326210688 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.323327103 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.321591856 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.323617207 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.322783255 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.322411815 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.325069668 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.324198688 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.325272613 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.325771401 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.326677902 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.326653647 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.325259623 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.326025446 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.325426185 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.326163109 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.326859414 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.327906767 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.327142445 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.324649821 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.326843264 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.325519306 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.324663415 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.326527425 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.3245246 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.323319649 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.324793691 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.325135972 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.324968761 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.325936366 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.325403489 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.323767593 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.325887988 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.327774501 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.326640185 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.326398102 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.327726247 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.326193719 seconds)
  done (took 83.338633185 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.327032631 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.326660863 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.324945775 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.322500008 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.325072072 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.324817046 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.326875756 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.324323116 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.325236385 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.325477849 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.326761411 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.323974885 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.322820153 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.3260692 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.323668858 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.323801913 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.325773078 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.326512795 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.326755813 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.323609841 seconds)
  done (took 27.741234803 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.325094195 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.327093919 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.322817647 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.323618498 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.325928263 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.324378677 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.327776282 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.326972629 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.323243066 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.327019504 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.327092188 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.325778651 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.324954478 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.325920138 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.327400106 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.324816929 seconds)
  done (took 22.449404848 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.328084746 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.326713632 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.328534759 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.332419905 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.32819465 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.32626044 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.333398654 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.329535158 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.327367411 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.328241288 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.327492799 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.325787749 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.331857168 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.328515416 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.324429387 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.331079386 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.324965664 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.325148117 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.328464718 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.328468413 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.329419261 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.325999107 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.332551495 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.335951198 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.330127914 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.328726466 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.327979752 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.327513338 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.327296267 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.328031523 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.328907769 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.325866801 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.3272681 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.32812731 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.331204261 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.327215516 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.329092384 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.332309487 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.33135463 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.332428298 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.330520097 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.326573143 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.332362453 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.329018455 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.329733904 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.333003198 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.330591278 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.329034838 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.328085115 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.33074458 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.330807607 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.332601788 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.330085178 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.33258986 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.32972083 seconds)
  done (took 74.34689497 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.332910582 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.334582985 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.329580274 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.331759525 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.331503422 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.32846852 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.330210052 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.33075713 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.33060653 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.331887952 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.331195961 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.334221772 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.330177996 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.329419538 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.329750871 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.331639321 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.329250401 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.330146067 seconds)
  done (took 25.199482581 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.33204524 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.331180858 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.335740165 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.33103391 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.332435053 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.334455797 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.328434965 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.331964086 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.332678032 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.332020963 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.328963991 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.336036555 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.334021707 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.332548746 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.332568805 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.332973822 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.33594194 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.336502242 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.331304179 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.330859153 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.336343777 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.335314277 seconds)
  done (took 30.569724109 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.334469268 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.332648532 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.334247245 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.35173934 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.355222008 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.360951927 seconds)
  done (took 9.316770237 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.341619064 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.335923911 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.331563897 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.335917904 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.333287967 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.331219391 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.332140137 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.331407428 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.336379299 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.332234441 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.332310768 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.336162698 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.33652095 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.333266851 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.333357714 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.336161807 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.333665949 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.333100417 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.332693581 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.33538841 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.33294333 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.334983378 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.332705652 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.333066853 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.332735269 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.330962302 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.336418634 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.335419141 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.333965166 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.334836792 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.334723368 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.332714055 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.334803998 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.33510258 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.336915386 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.338564209 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.337151277 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.337395186 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.336868152 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.336208756 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.3359832 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.335811538 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.337980398 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.334559356 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.338274963 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.335001585 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.335588509 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.334465898 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.333200998 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.336960857 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.336793405 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.335272443 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.338430109 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.337292589 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.338880542 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.338183303 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.332861651 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.333301682 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.337526482 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.337105428 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.3367634 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.338052007 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.331349457 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.335863981 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.336642596 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.336059408 seconds)
  done (took 89.397801284 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.334815416 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.334771958 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.335046992 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.33655374 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.334947614 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.336956516 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.336863014 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.335427828 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.335197137 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.336059829 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.338143413 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.337392359 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.332674715 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.335696394 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.334885502 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.336242695 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.336421784 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.33753282 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.336959752 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.340646811 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.336608504 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.335629225 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.335583686 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.335771592 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.337100304 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.338285935 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.336435107 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.334984169 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.337502135 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.336483599 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.335750749 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.336893098 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.338105602 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.335896619 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.337994791 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.335298066 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.33616354 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.336663734 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.336875473 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.33892374 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.336657237 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.338405141 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.337959073 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.336872519 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.337312337 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.3374161 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.337655993 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.33808673 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.338728898 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.336588861 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.336936161 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.339705171 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.33956717 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.338949039 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.338145578 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.339082472 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.340677955 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.335911639 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.341130615 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.341553545 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.338625676 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.33870638 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.341799256 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.34057258 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.340449687 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.341268516 seconds)
  done (took 89.515986445 seconds)
done (took 1801.191881206 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.408670014 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.424376374 seconds)
  done (took 14.085942393 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.49610626 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.447461463 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.330385957 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.335610194 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.329526791 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.349831802 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.329791409 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.329769151 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.329442868 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.32968247 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.328177956 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.517305501 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.32584489 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.331699478 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.328385965 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.424111841 seconds)
  done (took 43.113093065 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.360508542 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.33596566 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.468462383 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.359719879 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.361028089 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.546211149 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.40129015 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.339344556 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.539974085 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.386799803 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.252845355 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.366971456 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.333786485 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.683158447 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.36197385 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.549407685 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.627718049 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.245015244 seconds)
  done (took 31.767260942 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.869265388 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.349848732 seconds)
  done (took 9.466774103 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.356954254 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.359495778 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.346095822 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.356565815 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.360541983 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.375417818 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.399465549 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.407714921 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.355229485 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.369315496 seconds)
  done (took 64.937218836 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.356957751 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.334604151 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.336294918 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.332557392 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.324492212 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.325797853 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.334508803 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.327266435 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.680578611 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.487979693 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.343802243 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.343314382 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.356467065 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.336559235 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.332756443 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.372645638 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.483343227 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.335655354 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.332292446 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.340109372 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.335203706 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.443686163 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.390243185 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.34123512 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.482341464 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.665607286 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.342982302 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.3419743 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.463980817 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.33344514 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.334564371 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.334609711 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.337306584 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.997728246 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.823984909 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.356820087 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.363445162 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.344429605 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.335197337 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.47624781 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.336906545 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.342860014 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.328741847 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.813986879 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.50817752 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.471928782 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.794720694 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.343709695 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.338665363 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.406045589 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.34448084 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.339131925 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.388452827 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.1794247 seconds)
  done (took 113.454174568 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.371254688 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.739387071 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.501422327 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.362799608 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.092646692 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.039137381 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.354491467 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.685328781 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.370923811 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.339085029 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.646355337 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.918146419 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.354014399 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.365796107 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.514813233 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.378555537 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.328758729 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.225263719 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.3456352 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.332774944 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.86404538 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.336447428 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.328897826 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.499869881 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.369619019 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.831452468 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.016944379 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.917692586 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.352862272 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.330647448 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.841401957 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.350947317 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.415314364 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.333203553 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.621294286 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.73707574 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.725314569 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.343212911 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.353316341 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.333097187 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.349433662 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.821089902 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.711580622 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.330266876 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.330496119 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.823804305 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.331234557 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.341907617 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.331090735 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.546738678 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.242930071 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.334646002 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.923387529 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.330825904 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.601417916 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.34606208 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.396544057 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.855317457 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.333830227 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.550407639 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.3682798 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.331862295 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.337528874 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.332867401 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.331603869 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.720537957 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.449394594 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.339051343 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.718065186 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.836865406 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.351771182 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.939654828 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.302207026 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.356491318 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.438787772 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.330889155 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.016030157 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.873285709 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.353978347 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.332695088 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.706320059 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.338079409 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.631148359 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.349927286 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.333568426 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.875388835 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.348700675 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.386749413 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.333279486 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.333560585 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.036500352 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.336760179 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.648145192 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.367193771 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.333614524 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.333415617 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.350892989 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.334177954 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.352961394 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.338202618 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.910403429 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.355984128 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.336599968 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.35962173 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.337628439 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.340546423 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.336892828 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.333680198 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.566221637 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.788474554 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.342978301 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.341934729 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.334571155 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.337543285 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.521752846 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.339107708 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.683120569 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.336035969 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.335833764 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.347280907 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.03996026 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.364182331 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.334757523 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.341369213 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.262567933 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.547507174 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.355642417 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.335818215 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.336889744 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.354993787 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.725542225 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.357027211 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.37340302 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.338281508 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.087932371 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.361958855 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.359558023 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.911293935 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.339655754 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.336613758 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.338825377 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.33762463 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.635711235 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.621128218 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.375503597 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.33879788 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.359406317 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.096654944 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.403616964 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.486071871 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.359019386 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.359750025 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.532896135 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.651928984 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.336542128 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.93129971 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.339924728 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.561840508 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.338511458 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.66789184 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.890811517 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.362152181 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.342660443 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.08708879 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.066066444 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.131305676 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.341731982 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.632249231 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.289150067 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.821506573 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.337347804 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.337716371 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.853071231 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.344603629 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.345592449 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.338431236 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.339445284 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.401246682 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.514171682 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.793575791 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.348104709 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.831410387 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.400042064 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.340111145 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.367884274 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.339408054 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.689425087 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.412337303 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.344029433 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.362899768 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.340035377 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.339065034 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.849184234 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.204138723 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.348026711 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.494342783 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.041146531 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.366432206 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.340849977 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.032131539 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.885995125 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.934101506 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.390147214 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.690216789 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.340500709 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.380857968 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.016957299 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.382373726 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.900457462 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.343253383 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.347767006 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.984128004 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.360128409 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.697530338 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.340865164 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.342580945 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.93405719 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.36035011 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.341563468 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.742880525 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.361803157 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.622565031 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.349684222 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.369467726 seconds)
  done (took 1115.298476617 seconds)
done (took 1393.377887968 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.34478164 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.350276906 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.338102375 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.35327038 seconds)
  done (took 26.650101843 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.353147944 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.349067585 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.354264166 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.348050999 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.350944548 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.348562802 seconds)
  done (took 9.371929847 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.384798851 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.350797109 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.351461754 seconds)
  done (took 19.352930857 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.588319833 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.785097174 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.740166303 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.900204892 seconds)
  done (took 11.283021193 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.358508041 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.35315773 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.352852769 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.351862654 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.354851198 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.354715521 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.35242479 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.352027605 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.354021156 seconds)
  done (took 13.453629255 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.833512311 seconds)
done (took 87.209247662 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.34381078 seconds)
    (2/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.354534265 seconds)
    (3/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.332862108 seconds)
    (4/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.372126251 seconds)
    (5/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.335243422 seconds)
    (6/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.36185048 seconds)
    (7/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.122165521 seconds)
    (8/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.352643412 seconds)
    (9/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.473091897 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.367748679 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.624401874 seconds)
    (12/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.378428319 seconds)
    (13/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.338723989 seconds)
    (14/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.345635573 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.406160912 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.37189598 seconds)
    (17/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.971041753 seconds)
    (18/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.564159266 seconds)
    (19/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.293817259 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.210879198 seconds)
    (21/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.634128358 seconds)
    (22/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.284193201 seconds)
    (23/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.94620515 seconds)
    (24/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.59654966 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.331377457 seconds)
    (26/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.366456716 seconds)
    (27/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.351236018 seconds)
    (28/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.913728282 seconds)
    (29/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.372975204 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.043984522 seconds)
    (31/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.895840214 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.782617906 seconds)
    (33/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.086542191 seconds)
    (34/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.452015521 seconds)
    (35/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.737700011 seconds)
    (36/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.333166581 seconds)
    (37/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.518380351 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.849315525 seconds)
    (39/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.765061068 seconds)
    (40/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.069271982 seconds)
    (41/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.370180387 seconds)
    (42/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.715846792 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.397490131 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.352927703 seconds)
    (45/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.455370634 seconds)
    (46/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.408079959 seconds)
    (47/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.372789303 seconds)
    (48/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.428484075 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.218761283 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.99847593 seconds)
    (51/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.3480152 seconds)
    (52/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.392896848 seconds)
    (53/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.362823137 seconds)
    (54/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.882095607 seconds)
    (55/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.34649403 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.461448289 seconds)
    (57/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.903611543 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.375002976 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.624751679 seconds)
    (60/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.114090879 seconds)
    (61/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.463872197 seconds)
    (62/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.37531976 seconds)
    (63/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.567059913 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.397002479 seconds)
    (65/309) benchmarking ("map", identity, BigInt, true)...
    done (took 3.077155924 seconds)
    (66/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.434830509 seconds)
    (67/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.213067414 seconds)
    (68/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.405498452 seconds)
    (69/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.334681234 seconds)
    (70/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.358500265 seconds)
    (71/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.48215008 seconds)
    (72/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.479073812 seconds)
    (73/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.473556437 seconds)
    (74/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.335577914 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.472907139 seconds)
    (76/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.358396712 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.423547316 seconds)
    (78/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.101458845 seconds)
    (79/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.675030825 seconds)
    (80/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.896598962 seconds)
    (81/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.34814655 seconds)
    (82/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.49797648 seconds)
    (83/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.372994886 seconds)
    (84/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.273862162 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.420521809 seconds)
    (86/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.335720369 seconds)
    (87/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.348991596 seconds)
    (88/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.674064329 seconds)
    (89/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 6.003004848 seconds)
    (90/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.43810538 seconds)
    (91/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.218966784 seconds)
    (92/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.286105197 seconds)
    (93/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.4320491 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.371493742 seconds)
    (95/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.337630454 seconds)
    (96/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.882456227 seconds)
    (97/309) benchmarking ("sort", Int64, false)...
    done (took 5.664554634 seconds)
    (98/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.774178999 seconds)
    (99/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.349427373 seconds)
    (100/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.414324288 seconds)
    (101/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.248669345 seconds)
    (102/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.459699793 seconds)
    (103/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.338863856 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.688377291 seconds)
    (105/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.337392628 seconds)
    (106/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.395519582 seconds)
    (107/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.336771891 seconds)
    (108/309) benchmarking ("sort", Float32, false)...
    done (took 5.414894523 seconds)
    (109/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.3515846 seconds)
    (110/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.438721188 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.059888708 seconds)
    (112/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.989784882 seconds)
    (113/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.348844257 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.414135138 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.437378357 seconds)
    (116/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.350800198 seconds)
    (117/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.457011229 seconds)
    (118/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.339811341 seconds)
    (119/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.602004074 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 4.028365752 seconds)
    (121/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.340818563 seconds)
    (122/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.438717217 seconds)
    (123/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.338774951 seconds)
    (124/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.219554811 seconds)
    (125/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.469542455 seconds)
    (126/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.352174615 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.372459818 seconds)
    (128/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.456908033 seconds)
    (129/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.746037929 seconds)
    (130/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.353586955 seconds)
    (131/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.766760162 seconds)
    (132/309) benchmarking ("sort", Bool, false)...
    done (took 1.883373735 seconds)
    (133/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.383419441 seconds)
    (134/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.371722059 seconds)
    (135/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.855897203 seconds)
    (136/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.610612383 seconds)
    (137/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.369875681 seconds)
    (138/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.367797439 seconds)
    (139/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.363830787 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.220959289 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.6101204 seconds)
    (142/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.679399093 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.462642615 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.688245365 seconds)
    (145/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.080895673 seconds)
    (146/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.768959548 seconds)
    (147/309) benchmarking ("sort", Int8, false)...
    done (took 4.476872162 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.148503561 seconds)
    (149/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.380380365 seconds)
    (150/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.789648251 seconds)
    (151/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.36032927 seconds)
    (152/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.370605509 seconds)
    (153/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.484831733 seconds)
    (154/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.353511088 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.006621352 seconds)
    (156/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.852220359 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.468094703 seconds)
    (158/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.245762845 seconds)
    (159/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.480498844 seconds)
    (160/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.380057287 seconds)
    (161/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.553995371 seconds)
    (162/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.341991362 seconds)
    (163/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.139624569 seconds)
    (164/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.43405327 seconds)
    (165/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.313353744 seconds)
    (166/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.913069574 seconds)
    (167/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.366757543 seconds)
    (168/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.302212212 seconds)
    (169/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.37834564 seconds)
    (170/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.37779202 seconds)
    (171/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.072375963 seconds)
    (172/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.620599527 seconds)
    (173/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.475294807 seconds)
    (174/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.34233034 seconds)
    (175/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.369687828 seconds)
    (176/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.34637159 seconds)
    (177/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.354054539 seconds)
    (178/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.441844869 seconds)
    (179/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.87134642 seconds)
    (180/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.346774407 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.336961948 seconds)
    (182/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.357324925 seconds)
    (183/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.356636671 seconds)
    (184/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.35998891 seconds)
    (185/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.421531264 seconds)
    (186/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.342304473 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.41781721 seconds)
    (188/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.875560447 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.789859659 seconds)
    (190/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.364030482 seconds)
    (191/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.589251431 seconds)
    (192/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.376801973 seconds)
    (193/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.367535775 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.839486926 seconds)
    (195/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.629578258 seconds)
    (196/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.385737641 seconds)
    (197/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.384139938 seconds)
    (198/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.123148682 seconds)
    (199/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.440618228 seconds)
    (200/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.343366806 seconds)
    (201/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.40023653 seconds)
    (202/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.352803716 seconds)
    (203/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.358020994 seconds)
    (204/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.358039184 seconds)
    (205/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.343938881 seconds)
    (206/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.436481468 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.784504079 seconds)
    (208/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.381280862 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.414318396 seconds)
    (210/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.357083686 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.394341835 seconds)
    (212/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.357577642 seconds)
    (213/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.362591912 seconds)
    (214/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.242019697 seconds)
    (215/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.466870738 seconds)
    (216/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.356631664 seconds)
    (217/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 3.105308866 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.387040602 seconds)
    (219/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.185958599 seconds)
    (220/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.412682368 seconds)
    (221/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.243246792 seconds)
    (222/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.148174231 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.433071538 seconds)
    (224/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.478836828 seconds)
    (225/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.351348281 seconds)
    (226/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.400005312 seconds)
    (227/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.569384859 seconds)
    (228/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.086973612 seconds)
    (229/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.881326792 seconds)
    (230/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.78580772 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.266473674 seconds)
    (232/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.585517905 seconds)
    (233/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.345711128 seconds)
    (234/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.931683813 seconds)
    (235/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.386258475 seconds)
    (236/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.382303035 seconds)
    (237/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.360745349 seconds)
    (238/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.442995646 seconds)
    (239/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.368280771 seconds)
    (240/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.50254015 seconds)
    (241/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.401301697 seconds)
    (242/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.568602434 seconds)
    (243/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.364424494 seconds)
    (244/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.424004384 seconds)
    (245/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.463229992 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.359764628 seconds)
    (247/309) benchmarking ("sort", Float64, false)...
    done (took 5.751258016 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.182540468 seconds)
    (249/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.364362758 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.347339922 seconds)
    (251/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.46739299 seconds)
    (252/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.445635448 seconds)
    (253/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.659848796 seconds)
    (254/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.362679574 seconds)
    (255/309) benchmarking ("sort", BigInt, false)...
    done (took 6.493169475 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.753143167 seconds)
    (257/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.358758255 seconds)
    (258/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.449108736 seconds)
    (259/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.360744154 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.353321406 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.249646503 seconds)
    (262/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.236962976 seconds)
    (263/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.970449871 seconds)
    (264/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.594520728 seconds)
    (265/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.386741057 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.423434795 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.182373392 seconds)
    (268/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.375957041 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 4.051638892 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.738237237 seconds)
    (271/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.955643083 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.746336222 seconds)
    (273/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.110489033 seconds)
    (274/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.357394621 seconds)
    (275/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.388584825 seconds)
    (276/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.388402369 seconds)
    (277/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.36130211 seconds)
    (278/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.414918875 seconds)
    (279/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.315535199 seconds)
    (280/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.368678166 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 6.154269339 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.446962005 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.34767296 seconds)
    (284/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.349468239 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.464560143 seconds)
    (286/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.988268404 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.472879875 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.471473921 seconds)
    (289/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.348960284 seconds)
    (290/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.899600625 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.186082116 seconds)
    (292/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.356685877 seconds)
    (293/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.363544051 seconds)
    (294/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.370787624 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.406680014 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.405982776 seconds)
    (297/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.349480319 seconds)
    (298/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.50620671 seconds)
    (299/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.513003472 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.215939302 seconds)
    (301/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.594189508 seconds)
    (302/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.409774208 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.385611687 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.74350035 seconds)
    (305/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.168870994 seconds)
    (306/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.381808236 seconds)
    (307/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 3.15817888 seconds)
    (308/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.192009033 seconds)
    (309/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.656132463 seconds)
  done (took 1061.983338641 seconds)
done (took 1063.251926591 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.397281914 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.392098783 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.375264514 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.395265151 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.487182288 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.55653583 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.384588261 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.375408389 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.422737892 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.423856801 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.373470279 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.556448042 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.376223724 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.373358703 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.374174585 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.389976083 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.639951336 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.384484651 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.391379047 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.383958413 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.392747009 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.373915974 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.42461001 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.557631648 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.379743945 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.378575281 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.378100012 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.395441675 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.487717739 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.381367136 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.380272926 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.387348173 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.637632354 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.381787952 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.371127096 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.396244002 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.38800622 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.384590512 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.381335272 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.408424719 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 3.018220807 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.375905975 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.377617243 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.377718804 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.378119145 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.38148067 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.378885342 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.384348869 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.391141333 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.391845554 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 3.010169825 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.392414861 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.381744897 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.382646234 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.391634761 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.37915585 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.383453845 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.398013448 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.396835338 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.396057629 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.635942843 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.39020222 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.381219749 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.394564213 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.385283031 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 3.051230979 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.373844606 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.38211399 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 3.028132051 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.383755975 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 3.051763273 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.386911569 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.380257221 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.392977447 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.41124639 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.567325887 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.375316217 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.379054172 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.385829548 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.380027608 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.394670947 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.394582647 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.385208104 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.381080668 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.395609301 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.563777477 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.390766185 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.383085157 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.391598475 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.402215553 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.393170739 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.39430743 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.384701164 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.377166475 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.39200936 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.387280427 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.38457097 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.3865294 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.384894286 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.391355099 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 3.023138574 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.399319964 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.377577095 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.377925226 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.380590662 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.395853912 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 3.027411906 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.382001048 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.404083959 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.430340028 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.382434049 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.633068049 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.392729365 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.399688645 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.389892655 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.385446738 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.378261588 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.556500933 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 3.02330734 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.397055365 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.383822261 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.380122797 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.40202497 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.386950314 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.37953567 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.661153739 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.391613479 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.396927172 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.503368023 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.393581331 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.413592988 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.380506488 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.386984496 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.421509758 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.400680184 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.414087814 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.386707774 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.401237679 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.399371558 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.379142421 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.393194877 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.394925217 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.385637117 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.389862874 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.377969617 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.421032592 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.397714144 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.398031092 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.404660179 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.504837634 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.381279319 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.643153503 seconds)
done (took 236.548076713 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.44301092 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.381682637 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.472783045 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.381001844 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.483718214 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.492160347 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.378760041 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.378972397 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.379992089 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.761348754 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.378876789 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.378629348 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.381692489 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.3810169 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.466577141 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.382394788 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.38191048 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.725011886 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.384114624 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.452371659 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.37557191 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.38078004 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.382360644 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.766349509 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.381272046 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.379057237 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.453008271 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.383425127 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.729484295 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.379915037 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.376428903 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.729011114 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.471415609 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.401063753 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.393146534 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.39059601 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.490544549 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.405069713 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.464600214 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.465600861 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.477545976 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.424536053 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.382985873 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.37807474 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.385452074 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.387038071 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.381948534 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.410992583 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.384750271 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.382260333 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.727816552 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.39639806 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.395028507 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.384487038 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.384074985 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.406761986 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.384321748 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.387807459 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.474559694 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.388857106 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.449522926 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.767236585 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.765787587 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.386962521 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.386651713 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.385335334 seconds)
  done (took 151.826115694 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.452212808 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.458778354 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.507074125 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.386741489 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.436528975 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.512205096 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.386124207 seconds)
  done (took 11.437354741 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.392656496 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.386957571 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.435766771 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.436387544 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.388770211 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.56844353 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.38768187 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.396620359 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.385570829 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.440278471 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.387988788 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.388644696 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.39407559 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.380289667 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.433343638 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.397877073 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.501156134 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.387228481 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.390487455 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.543595667 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.386244916 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.39598587 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.440336652 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.39905373 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.387934493 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.393752362 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.209872849 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.39037009 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.385247758 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.389705661 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.386143732 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.47494612 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.389274523 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.385917079 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.386521243 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.504827002 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.391689191 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.385967751 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.389440023 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.385150866 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.39073788 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.391056814 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.390913058 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.388478152 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.389386478 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.41342833 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.390519517 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.390953489 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.392031897 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.391017058 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.439046892 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.390602402 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.387446321 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.387815078 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.446203339 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.396868101 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.393254868 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.387045918 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.391863463 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.387607832 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.546085897 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.436473918 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.39092032 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.438354822 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.390806886 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.391186008 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.391884881 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.391685698 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.444483283 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.390965332 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.43848609 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.38943949 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.580219446 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.41250272 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.39286645 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.392728261 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.393191576 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.392936101 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.389199783 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.397237249 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.39009637 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.392714272 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.396855278 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.389928107 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.389647671 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.574924471 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.50090133 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.389502019 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.40359877 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.397680311 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.38919131 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.44377435 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.393022255 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.390482802 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.443500351 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.505873982 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.444767913 seconds)
  done (took 159.148388467 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.397029468 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.399921072 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.394826924 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.415231768 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.393251817 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.392080655 seconds)
  done (took 9.697582466 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.396221981 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.395743986 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.393320839 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.394065144 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.396730692 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.393851661 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.396044356 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.394615315 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.400455716 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.39465581 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.394492789 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.403751937 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.394755075 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.396934806 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.396313828 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.394705283 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.397213644 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.392310563 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.394413354 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.396889981 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.489910049 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.396914941 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.398785201 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.395173695 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.40120416 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.394915633 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.402255002 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.395036676 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.395601469 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.402906514 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.400074818 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.395570015 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.396070715 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.402334943 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.400948854 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.396896345 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.402248091 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.404607432 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.394256172 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.395110881 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.405242278 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.398669782 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.396597263 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.405971512 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.399514621 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.402534228 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.411173302 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.404179344 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.398570925 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.405040018 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.405537743 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.39615573 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.397104704 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.406979917 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.399244564 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.421019489 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.411067293 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.399299691 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.399189987 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.398267023 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.399451208 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.396994174 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.400791668 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.404499991 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.404964314 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.406552514 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.398801338 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.405215266 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.399821465 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.399062511 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.407450722 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.396453596 seconds)
  done (took 103.168484239 seconds)
done (took 436.575835847 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.585245685 seconds)
  done (took 7.894762809 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.486793541 seconds)
  done (took 7.798718803 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 25.47830275 seconds)
  done (took 27.064143747 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.442525446 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.413371014 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.400366967 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.391192285 seconds)
  done (took 26.958285192 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.797629983 seconds)
  done (took 8.108438859 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.390608553 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.400443097 seconds)
  done (took 14.103807095 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.848896727 seconds)
  done (took 8.159261038 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.528230041 seconds)
  done (took 7.84569029 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.417053237 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.419157706 seconds)
  done (took 14.161238726 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.378890848 seconds)
  done (took 7.689012439 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.579574876 seconds)
  done (took 8.891162128 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.398891733 seconds)
  done (took 7.710637957 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.424934413 seconds)
  done (took 7.73643108 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.769672139 seconds)
  done (took 11.080065198 seconds)
done (took 166.513406711 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.391031742 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.401616774 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.398812865 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.399048853 seconds)
  done (took 26.901336082 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.43334033 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.432956623 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.43411696 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.443644907 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.436577538 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.432435197 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.42497451 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.425262277 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.443379559 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.436705349 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.434097917 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.436256341 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.433884376 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.42581142 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.436001393 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.435681062 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.445160878 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.43538159 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.427004936 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.437085848 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.401228015 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.44524651 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.4362436 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.40222743 seconds)
  done (took 35.686804674 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.922376091 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.470597659 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.554682719 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.453171124 seconds)
  done (took 7.71230958 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.451691003 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.453878178 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.466109759 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.503081974 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.529818183 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.46372578 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.427728934 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.422636308 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.408162647 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.455108831 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.529804921 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.470329333 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.538521491 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.401146184 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.605399631 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.401855333 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.401670641 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.453701802 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.505880887 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.537039491 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.401721956 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.45297327 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.45730345 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.470345882 seconds)
  done (took 36.521937806 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.401616171 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.420614885 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.40216136 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.400358077 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.408631987 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.400654193 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.402148749 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.402311757 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.401879874 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.407641098 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.400343359 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.415502918 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.400822291 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.401680578 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.408265733 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.402609298 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.40760666 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.401202894 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.401637684 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.408503709 seconds)
  done (took 29.409038909 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.395701746 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.250558582 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.74767828 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.651693422 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.396897869 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.395857105 seconds)
  done (took 28.152848731 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.487113871 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.640576145 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.403010342 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.828562523 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.902994379 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.404243835 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.4035179 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.679352911 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.065630643 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.0787598 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.478335311 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.481188959 seconds)
  done (took 21.170021235 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.403099502 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.405540299 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.411345024 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.42092819 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.466215674 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.407588351 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.417024907 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.395615368 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.475190597 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.475478833 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.406192315 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.466503226 seconds)
  done (took 38.467274789 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483622306 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.446231752 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.549683078 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.45441897 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.178269809 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.609617985 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.484870844 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.185778294 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.402667093 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.671921762 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40887101 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.489234129 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.655361775 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40676903 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.398144356 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.53873985 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.625269464 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941996685 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40063531 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.053950749 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434180028 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.404984808 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.074433146 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.669423792 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.611177638 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.381813951 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.658128791 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.173539138 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.73813969 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.420721521 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409418886 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.398238613 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.672788989 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.117161358 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.494985444 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.641712988 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40477983 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.968016627 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.405236685 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.920756847 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.401246656 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.401647132 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414810716 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404624264 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.332506468 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.404634878 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.181271672 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.403875049 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.111315135 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.398005793 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.70666882 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.502453392 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.399969679 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.97090162 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.442925264 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.404136328 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.408789444 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.49309097 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968534841 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.224903028 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.39778474 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.338812468 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.420238843 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.828327941 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065257834 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.402034141 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.400428853 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.39945535 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.33963621 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.823156146 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.412420589 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.53391594 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.420832504 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.059048647 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.159641306 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.401474891 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.33972424 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990758013 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.398186059 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.340602758 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.62484779 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.17499788 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.336590189 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.341650086 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.332051699 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.170319985 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406138598 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.922181843 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420062641 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.156617417 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.638733199 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417560027 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421694671 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.623568693 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.283268278 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398564694 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.413340884 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.515426461 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420241964 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.159007308 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.340993131 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.40139259 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.656742159 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.610565264 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.409893508 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.529804801 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.924103439 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40149108 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.423248667 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.412887067 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.646792824 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.031975782 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.415318845 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.251114006 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416648652 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.174731088 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.212645287 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401315557 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.411066666 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.399282354 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669269581 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.26264893 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.283449202 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468492276 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.405596727 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.399309333 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.844462613 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.252346283 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.295169541 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.630759106 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.419824005 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.42144758 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.402560851 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.393562055 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.396964784 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411670205 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.181144996 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.626431343 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.4022109 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.685526845 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.335006265 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.539250799 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.417458687 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.625157917 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.728656521 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.406410906 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.663330529 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408185271 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.417836547 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.421183503 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41992529 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.501410302 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424254658 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.411404729 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.668145163 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.405937171 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.405241443 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.856333348 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.180485664 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404019327 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.406467529 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403018824 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.039296296 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390178287 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.410184636 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.296356183 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.416917034 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469648699 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.408546173 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.64373359 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.499121816 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411196203 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.408790608 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.400971239 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.63234912 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.413567667 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.849487357 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.493157716 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.927753033 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.060967312 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.426881194 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.338930445 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.115747842 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.097550723 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404808181 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.594018334 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.404103685 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.642783418 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.420770499 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.407790943 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.079670447 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.415773621 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.786230375 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.410590839 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.417683139 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.410304737 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406204253 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.488709 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.260689949 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.406730718 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.446775524 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.548753973 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.41991552 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.339490591 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.922655537 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.410976174 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.406711533 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.18233026 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441253428 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.78757031 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.281070519 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.667622471 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.406875262 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.707436071 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.049212705 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.448915596 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.40977676 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.411317848 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.415117458 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.430642078 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414492024 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.416741246 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.843548724 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.855828114 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975403029 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.235385865 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.999679251 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.80824894 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.418289712 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.313482364 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.169861072 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.34085608 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.066250573 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.62745964 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.188453073 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.400346511 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.93601624 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.735637612 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.261211449 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.713067777 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.648164244 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.796725833 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.410324063 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.715011069 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.632056519 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442155425 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.418699928 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.359303685 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.694737807 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.014528448 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.40903367 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.48593756 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.179026388 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.422640567 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.187841309 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.464389516 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.261578092 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.879000054 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.049418185 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.833286544 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.416295216 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.429534965 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.273932903 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.417437795 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.938441525 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.084530283 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.421468489 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.945796338 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.350194668 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.651457148 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.421886447 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.41324758 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.93835321 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.409600804 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.666453474 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.71138399 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.354420154 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.420816929 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.01630502 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.287855803 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.415019536 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409846581 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.225617942 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.423126433 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.751656052 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.430086708 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.501790121 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.427025204 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.344893351 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.346422056 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.103468321 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.419997636 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381846812 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971923615 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.431697546 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.426494811 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.430587757 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.269134389 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.669237907 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.426045598 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.068604442 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.649381931 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.418967922 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435783489 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.415255837 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.427320987 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.407702631 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.306479367 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.647672764 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.430098285 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.64668364 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.611486352 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.328426592 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.496017673 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.634136407 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.294665545 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.413319866 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.703017216 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.132711984 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.415110851 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.284386739 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.447640602 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.430086602 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.441540055 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.414454229 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.433888221 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483388048 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.663709642 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.435608923 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.42434485 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889707671 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.436186678 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.425812758 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.428389206 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.507562491 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.513648048 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.513496715 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.197823502 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.081006217 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.223026141 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.081895096 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.731662909 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.426314711 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.421797382 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.35823085 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.562905958 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.943457981 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.688437772 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.535604757 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.417202401 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43861378 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.431875392 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.431794614 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.635539791 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.689687356 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.289672012 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.430581922 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.088287718 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.296676426 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.426603974 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.628090691 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.960790812 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023023709 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.796781524 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.416372115 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.210789488 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.689207392 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.50752708 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.416827391 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.009502135 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.434070406 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.311456382 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.422623599 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.42915509 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.573620153 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.722426254 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.141786546 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.426544144 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.578645152 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.190249245 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.912107454 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.682354966 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.019102972 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.680376464 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.092345502 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.233913737 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.691708183 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487089132 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.66912111 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.540557735 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.564922517 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.41743809 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.327720632 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.417595273 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.265142522 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.127382156 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.427592306 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.092622948 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.692827778 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.422393843 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.417935772 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.450428641 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.428912745 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.643363866 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.20590941 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.645112217 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.429905537 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.427852604 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.992879939 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.084611045 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.735884211 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.373315853 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.423665608 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.695049612 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.663516964 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.444838606 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.871834288 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.131411147 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027556772 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.395429014 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440686837 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.419666718 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.22908319 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.100041199 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.528741291 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.970227045 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.082683296 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.428777604 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.702837877 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.426930497 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.42476859 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.705073014 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.424678297 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.426608478 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.68259102 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.099714301 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.31743674 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.448576464 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.031031744 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.368556212 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.653936359 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.440577912 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.379141031 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.422134039 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.909038857 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.454053663 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.541744199 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.43440443 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.418403092 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.438103148 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.164164356 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.708667453 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.427749165 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.436034515 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.439400324 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.424716092 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.53074035 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.043467144 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.426534083 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.097130318 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.776275099 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.680023544 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.436031424 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.417810176 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.427254174 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.423444338 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.178554621 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.430264397 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.444103228 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.029984176 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.426449568 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.462788518 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.427345059 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.639996241 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.635590857 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.426409427 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.67709794 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.449082345 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.445383817 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.331203674 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.196350132 seconds)
  done (took 1690.200235402 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.455182377 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.478773535 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.46059949 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.483385744 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.472092025 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.565964059 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.470659194 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.565498541 seconds)
  done (took 53.292116481 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.435376549 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.596893256 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.45972267 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.426207782 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.443299187 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.426932022 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.963063591 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.441648932 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.442335059 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.435772087 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.437128362 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.443879938 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.164188291 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.434520934 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.442796751 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.435330152 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.443725135 seconds)
  done (took 67.221957041 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.424606345 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.583315347 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.473955378 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.432201848 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.397793994 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.45099587 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.237559004 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.445316448 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.424225934 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.497457 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.082606983 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.458242431 seconds)
  done (took 82.250177981 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.436694991 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.436999059 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.437298895 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.436294388 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.437337187 seconds)
  done (took 8.52677253 seconds)
done (took 2126.824791275 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.671978079 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.237205037 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.139594019 seconds)
  done (took 5.718603147 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.572238749 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.621077756 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.742576639 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.748086139 seconds)
  done (took 8.025915722 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.71032451 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.81899003 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.620489372 seconds)
  done (took 6.490010961 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 3.057301885 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.434390224 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.435116789 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.426088618 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.431071552 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.435288526 seconds)
  done (took 20.635700831 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.429171602 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.432190895 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.430437351 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.433391109 seconds)
  done (took 7.068641039 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.413349914 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.187400823 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.424873836 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.43993976 seconds)
  done (took 18.806933684 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.178068604 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.189326636 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.173551011 seconds)
  done (took 7.882941648 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.425612966 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.394341771 seconds)
  done (took 10.16158628 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.726461123 seconds)
  done (took 3.068282089 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.563278704 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.760455895 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.647882097 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.514663606 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.657378782 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 6.004623571 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.391518843 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.892785523 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.483120776 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 4.013196345 seconds)
  done (took 31.272331868 seconds)
done (took 138.072088814 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.796453905 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.429654532 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.63544004 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.663844283 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.680526737 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.635737774 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.626850469 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.993519213 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.473929748 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.538159682 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.679174359 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.700033451 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.791250857 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.430311758 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.789111536 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.431293347 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.658866649 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.97058526 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.360907993 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.432316786 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.632149323 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.307436866 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.495019793 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.614560507 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.666402948 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.585446064 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.890601563 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.433725581 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.438138235 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.915244761 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.58477931 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.429552875 seconds)
  done (took 201.055779162 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.429034177 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.429450073 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.430898224 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.429616771 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.440450576 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.432096699 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.429075345 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.443741012 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.429379811 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.448935369 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.430085976 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.447057751 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.430488854 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.43724003 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.4300576 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.450108763 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.434317388 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.451427123 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.44003678 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.429692137 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.432190897 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.430911661 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.42992996 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.438288007 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.439768894 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.432974682 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.449853102 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.431362541 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.431444077 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.437600197 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.433023222 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.450927061 seconds)
  done (took 207.308141111 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.440757932 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.440102981 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.434562071 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.431983101 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.450334053 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.432200975 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.432728029 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.436524086 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.444806721 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.439703439 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.430866486 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.431549866 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.433228678 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.431941745 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.433685489 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.441110836 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.444839287 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.438843948 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.431813668 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.446751275 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.433935685 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.433697107 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.454957396 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.432710693 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.43294493 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.455478163 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.445625561 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.432442674 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.443842401 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.433748432 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.434513119 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.432372145 seconds)
  done (took 207.362368365 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.62948944 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.440853755 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.44108123 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.396942404 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.442964549 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.441109538 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.434873701 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.638287952 seconds)
  done (took 15.213700498 seconds)
done (took 632.285890774 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.920372511 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.616505454 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.65269093 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.469603246 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.36246973 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.482254294 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.461695494 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.651473758 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.412986036 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.660825172 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.834334173 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.459225415 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.986111248 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.459554181 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.73781477 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.569085577 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.380880838 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.491156697 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.81339735 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.115251867 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.746578284 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.109562533 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.690484006 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.41145773 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.998318378 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.040038625 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.34781729 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.384504571 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.463067515 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.825332831 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.317519609 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.681531502 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.522674591 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.524347878 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.581119288 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.578930456 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.623392555 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.540509132 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.664306131 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.86244531 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.122391085 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.22388047 seconds)
  done (took 99.148626745 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.434004111 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.432560194 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.431140673 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.432887826 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.434666929 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.43324399 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.432261072 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.43267696 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.432802943 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.432284805 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.433565893 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.435064248 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.432786022 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.433851338 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.431966095 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.433618907 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.434203609 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.435986957 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.432710209 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.433457444 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.433994077 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.433801685 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.434403936 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.433472603 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.43459884 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.434081259 seconds)
  done (took 38.624330831 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.446320041 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.710315495 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.906924253 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.46225048 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.447070297 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.450644398 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.537294175 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.455314243 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.449815659 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.449948284 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.611847597 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.45082158 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.485635061 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.941422407 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.45961565 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.447413803 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.448230385 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.446423947 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.727766427 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.467657513 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.562868216 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.458799579 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.540057757 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.467428433 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.472266757 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.447969106 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.453150674 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.007716357 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.451478653 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.612005734 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.37768655 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.546886829 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.962069037 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.934622857 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.390683854 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.459988875 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.448959407 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.615035585 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.449676326 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.448956978 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.537976253 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.459032895 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.921231762 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.129013207 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.478830842 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.449125914 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.035124037 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.625920553 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.742458346 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.467953618 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.95194696 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.463393945 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.451508322 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.451756511 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.742884204 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.466849592 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.449391993 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.073622899 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.48443805 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.542207224 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.461549462 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.451796182 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.734922769 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.459301652 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.720189313 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.455078054 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.458631007 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.473238494 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.921461016 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.463124811 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.14606644 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.480508807 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.451091702 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.619772094 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.736521267 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.086850021 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.464259629 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.745635317 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.977971363 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.551203534 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.466235213 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.003428202 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.553582528 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.465988397 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.454129157 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.453951555 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.452668646 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.503361967 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.539441915 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.083716762 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.143040728 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.091645655 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.563280512 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.466582945 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.453743371 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.060404344 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.473937123 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.452963905 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.921172954 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.149319902 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.482537502 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.461810357 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.148231353 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.484725133 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.541725462 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.459500628 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.927469639 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.46506637 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.505029295 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.454165227 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.460454494 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.478469222 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.543337847 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.463515674 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.454906121 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.100058178 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.642254044 seconds)
  done (took 191.879765608 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.446845567 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.447843172 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.449064054 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.446925122 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.448029711 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.455328421 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.447884559 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.447218282 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.453621923 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.446499737 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.449509011 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.448879731 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.44795067 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.464680453 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.461567657 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.457096061 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.060638032 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.449471079 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.451715639 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.450430899 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.279442589 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.460953863 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.452460169 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.45075414 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.45262286 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.452970685 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.452988029 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.47517556 seconds)
  done (took 155.471179938 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.457442097 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.098855025 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.463530963 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.608936307 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.482003652 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.456190164 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.60487659 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.52709753 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.468654958 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.456078639 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.455405421 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.809237416 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.461866738 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.044354867 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.681084421 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.613796464 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.05136471 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.4788879 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.455785615 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.457331432 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.60898637 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.471000549 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.802235605 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.100988426 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.460350514 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.101583088 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.450206154 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.46102034 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.45875658 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.104352979 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.458292698 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.804944116 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.547281279 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.529072538 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.123386356 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.047879588 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.065363689 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.6306075 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.459129008 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.45853424 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.458339803 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.448815009 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.150592358 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.469936763 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.460142355 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.144826918 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.490832506 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.462488342 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.466347132 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.459291263 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.530166337 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.540610188 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.841024424 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.165570318 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.558453219 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.473814743 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.610410224 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.892312132 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.46950785 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.046005003 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.450304885 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.159488808 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.492600002 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.453654187 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.461475157 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.466465532 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.632262719 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.611884439 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.0497927 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.482245773 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.046941847 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.652080115 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.460197857 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.460166334 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.463377649 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.156652333 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.059817942 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.651898793 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.614375288 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.691077229 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.46170458 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.460778296 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.452608653 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.549485847 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.46133043 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.15872686 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.078688679 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.483900437 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.463967514 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.463695801 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.46391669 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.670959597 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.169417589 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.562099482 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.045987307 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.856979664 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.847664095 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.473974863 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.531871679 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.490802722 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.839022504 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.475353575 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.530906584 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.97675937 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.840015144 seconds)
  done (took 176.11384172 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.73460297 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.808786877 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.571966736 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.617112646 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.129966448 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.063913505 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.816748704 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.620991177 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.589493307 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.759421447 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.821647933 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.56501865 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.653451475 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.553952582 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.22241519 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.542020543 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.575879269 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.635194475 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.579522319 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.595958499 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.178076894 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.773013584 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.650583708 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.566723287 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.575947507 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.296440983 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.061586546 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.038649874 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.66588564 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.970618323 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.032827497 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.667351994 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.568284008 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.23693871 seconds)
  done (took 71.114099027 seconds)
done (took 733.701661304 seconds)
SAVING RESULT...
DONE!
