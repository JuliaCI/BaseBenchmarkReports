cset: moving following pidspec: 23124
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.295131832 seconds)
loading group "string"... done (took 0.553560224 seconds)
loading group "linalg"... done (took 7.650628482 seconds)
loading group "parallel"... done (took 0.173502314 seconds)
loading group "find"... done (took 1.192112143 seconds)
loading group "tuple"... done (took 2.14146974 seconds)
loading group "dates"... done (took 1.344099912 seconds)
loading group "micro"... done (took 0.249777863 seconds)
loading group "io"... done (took 1.044024286 seconds)
loading group "scalar"... done (took 42.32173323 seconds)
loading group "sparse"... done (took 14.207133091 seconds)
loading group "broadcast"... done (took 1.053421134 seconds)
loading group "union"... done (took 15.448417624 seconds)
loading group "simd"... done (took 4.840194346 seconds)
loading group "random"... done (took 9.750758596 seconds)
loading group "problem"... done (took 2.074814753 seconds)
loading group "array"... done (took 22.82620675 seconds)
loading group "misc"... done (took 2.132997245 seconds)
loading group "sort"... done (took 3.504361253 seconds)
loading group "collection"... done (took 19.406382601 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.491397095 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.138904123 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.143156934 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.148373126 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.183534207 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.136025336 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.153928254 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.108585179 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.928622548 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.177126586 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.138775503 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.493815524 seconds)
done (took 4.987365586 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.231130382 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08021927 seconds)
    (2/2) benchmarking "String"...
    done (took 0.092698589 seconds)
  done (took 0.863295485 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.087387595 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.140428375 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.088584494 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.073293987 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.072260137 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.089046043 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.072017747 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.088253769 seconds)
  done (took 1.315160789 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.079296665 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.07442821 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.090986871 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.074421573 seconds)
  done (took 1.00964372 seconds)
done (took 4.204542756 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.714196142 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.256944331 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.201085236 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.504128318 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.171528088 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.203597738 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.661762534 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.343359263 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.237434719 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.10042193 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.127633659 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.38835404 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.113351925 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.676464229 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.083719278 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.122373524 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.172698318 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.454703116 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.088820239 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.089295407 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.111484495 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.149402483 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.112090914 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.082275368 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.176588254 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.075656887 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.181839245 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.10202967 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.074863747 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.265193129 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.196623633 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.671550991 seconds)
  done (took 10.639223936 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.111142082 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.133497653 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.074469705 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.150027021 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.131868643 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.077116541 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.09253765 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.075369495 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.11834278 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.17449187 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.112099657 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.137235864 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.088069604 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.077304528 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.113271298 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.225644892 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.11657867 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.093805163 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.094594579 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.084841646 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.133047771 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.106689559 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.089247227 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.102419583 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.162671668 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.200392769 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.106789217 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122566937 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.075470057 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.105818506 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.138338705 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.152589132 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.073684599 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.073798903 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.17139219 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.119060274 seconds)
  done (took 4.919355987 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.099639414 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.186503715 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.098123002 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.166458735 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.089632147 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.139477658 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.073583877 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107982705 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.25355103 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.174548743 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.159598129 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.137552381 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.151955373 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.110518372 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076240903 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.09588048 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.074762128 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.557743846 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.119218336 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.149688101 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.110265184 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.077002278 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.096625452 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.36597813 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.080344105 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.071594253 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095528775 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.066556451 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.154795044 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094343026 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.161688038 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.096060853 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.096671699 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127544451 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.185717972 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.108541246 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.130323157 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092116079 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.07289529 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.174039206 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.079176994 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.092209153 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.101385887 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129840519 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.130879594 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.087955913 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.074841708 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.208655733 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.089334588 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.088594639 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.966254492 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.175408284 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.088585407 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.073095796 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.33049478 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.113607646 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073658507 seconds)
    (57/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.0898631 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.072225098 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.276885397 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.109517485 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.093005182 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.075151372 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.094517546 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.076847894 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.380741226 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.090804889 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.74321776 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.077482006 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.0863987 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.093811875 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.09180617 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082417563 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080369449 seconds)
    (74/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.088141793 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.092637419 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.091370035 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075840382 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.090798653 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.073295469 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.074783386 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.110710677 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.094655979 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.074527925 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.154302981 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.075313346 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.0945735 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125292579 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.094599229 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.075309578 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12659141 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.072342272 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076613713 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.091277167 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.11268705 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.092191694 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.109612948 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.075940274 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.13612213 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.09123594 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.136462158 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.073583109 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.120783731 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.080225346 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124083245 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.103555502 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075669038 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.095927234 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.07203083 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.088702414 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.142203281 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.07653868 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.092637021 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.075227764 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.103710882 seconds)
  done (took 21.69225365 seconds)
done (took 39.043431339 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.332030885 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.104224124 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.102911297 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.103243155 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.102995439 seconds)
  done (took 1.508470941 seconds)
done (took 2.24653564 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.264017776 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.1660038 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071440307 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.160920106 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089194583 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.169618511 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.154552333 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.105800086 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.176778894 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.070796257 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.157424284 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08825763 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.070941537 seconds)
  done (took 2.509647765 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.089748105 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.109832175 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.076785268 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.088855128 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08750624 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08926094 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103155977 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.095049731 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103836035 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.079699718 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.070229258 seconds)
  done (took 1.731943541 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.089156726 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.091076022 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093610166 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087487554 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086917825 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087544453 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103224079 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.094463102 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.104104194 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080126155 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.0701993 seconds)
  done (took 1.726223502 seconds)
done (took 6.698973493 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.088916077 seconds)
  done (took 0.822943218 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.983599712 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.957379895 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.098669459 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.160471284 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.302718965 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.208267946 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.589390104 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.127105096 seconds)
  done (took 15.374798225 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.122401102 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.0953199 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.078326056 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.092888173 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.078016765 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.090655829 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.077725242 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.089604928 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.07709038 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.075181173 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.092617189 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.075013502 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.090563085 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.074639635 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.093642105 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.07614752 seconds)
  done (took 2.175532096 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.111198529 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.109720486 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.096609855 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.083415738 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.096032777 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.078814101 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.098305655 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.081025506 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.093366417 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.079344994 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.09864324 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.081593288 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.097609459 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.077119755 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.09753887 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.083678513 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.093819428 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.081460467 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.098053319 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.096898238 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.083243981 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.094244966 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.082694584 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.098742433 seconds)
  done (took 3.033958294 seconds)
done (took 22.148626098 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.144706825 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079050052 seconds)
  done (took 0.96473708 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.095388636 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.111481761 seconds)
  done (took 0.958013317 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.09973614 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.091353547 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.127305473 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.091309549 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.092758407 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.076331809 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.121928587 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.075670704 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.092964992 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.076710298 seconds)
  done (took 1.69662853 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.080362018 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.0800687 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.098494113 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.11186758 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.085969588 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095224011 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.081507225 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.095216971 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.081529561 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.089992697 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.083890659 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.10895199 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.081997662 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.110256774 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.096965267 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.081689539 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.101234491 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.080350545 seconds)
  done (took 2.395785633 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.076037701 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.07705481 seconds)
  done (took 0.902845577 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.078569394 seconds)
    (2/7) benchmarking "second"...
    done (took 0.073842695 seconds)
    (3/7) benchmarking "month"...
    done (took 0.094248409 seconds)
    (4/7) benchmarking "year"...
    done (took 0.093595549 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.074965838 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.073503708 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.090056481 seconds)
  done (took 1.328903273 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.46978718 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135409954 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.259669631 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.078852109 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.114080678 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.319295784 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.073609996 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.096151098 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.078794767 seconds)
  done (took 2.412372586 seconds)
done (took 11.404969838 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.086326889 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.094542723 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.12333721 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.441125913 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.111012338 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.074553038 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.15057811 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.249338697 seconds)
done (took 2.088117303 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.135786311 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.600109298 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.421122066 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.221192777 seconds)
  done (took 2.002161223 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.32426809 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.118682195 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.06878386 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.091772534 seconds)
  done (took 1.362780053 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.073609103 seconds)
    (2/2) benchmarking "read"...
    done (took 0.077362122 seconds)
  done (took 0.909958664 seconds)
done (took 5.17147756 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07432561 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.073900575 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.088287307 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.074789742 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.123564273 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.07170774 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.089387409 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.075171762 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.073918524 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.09246509 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.073916547 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.091707011 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073738753 seconds)
    (14/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.070894637 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088494337 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071272213 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090778759 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.073878637 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.07122386 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088543416 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07185556 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09022574 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.071402392 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.070856686 seconds)
  done (took 2.726829206 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.102185619 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.091175117 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.080590059 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.096583151 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.07865577 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.0965175 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.079645445 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.09078799 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.079537189 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.093315179 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078263763 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.095068979 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.076599213 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.095490625 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.186954288 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.095263264 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.080384838 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09136756 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076865044 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.094554874 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.080617782 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09152568 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.078414611 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096745694 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.078357491 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095966043 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.076480086 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.091078249 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079290179 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.095567084 seconds)
  done (took 3.486958348 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.078944684 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.070699999 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.0893342 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.078246427 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.088142345 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.077945845 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.071179496 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.089017848 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.072704793 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.087518191 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.073257598 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.070978906 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.089514178 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.072755513 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.08975723 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.074852549 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.100760033 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.072649854 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.070909225 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.089686601 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.074872945 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.089118491 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.074693747 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.071234282 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.088992118 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.071862425 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.089227838 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.071768404 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.072390067 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.088976517 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.075323528 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.092258197 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.071627309 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.078132288 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.092659409 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.07206492 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.092132566 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.071236434 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.0720369 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.087824506 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.071772817 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.08847425 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.071957019 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.078320701 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.09236897 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.074044813 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.088371899 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.072883465 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.072031931 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.092298361 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.071388812 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.088879715 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.073515747 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.089969605 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.076200797 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.071778964 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.090171244 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.071562203 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.090436032 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.071803145 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.071284273 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.088494808 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.07434327 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.090245804 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.088113777 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.078694068 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.089169259 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.074717398 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.093590184 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.074842045 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.090483328 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.086395395 seconds)
  done (took 6.570795179 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.07796164 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100089308 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.074440528 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.073595199 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087795113 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.072526741 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.096446403 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071889191 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090547789 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.090450963 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089256051 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073444098 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073340101 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093379088 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072030118 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.091233018 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.081502787 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087607785 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.0730828 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.092686244 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072604987 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.09582917 seconds)
  done (took 2.600574399 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.204245074 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.0987645 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.133414009 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.089040257 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108601184 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.08873379 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.096497518 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080295339 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095787683 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081315257 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098739872 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078765372 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.107434822 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099391696 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081139533 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.100734343 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.078428293 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.100487497 seconds)
  done (took 2.589824065 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.087639191 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.092590201 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.096496271 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092113382 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.07585292 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.095074861 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080672673 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107835877 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.077629749 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.092319469 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.084883477 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094636165 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.077633659 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092642157 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077413618 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074919802 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.096089808 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07440008 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102106773 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097998131 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.081730045 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102530585 seconds)
  done (took 2.724710399 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091234391 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094776168 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.094295054 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.096289067 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.073646207 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.094564792 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.082102861 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.091893394 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.083138534 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.076864298 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092094517 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.075791703 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.09992849 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074667122 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.098152694 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07462492 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.09427079 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074764437 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094357297 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.074366218 seconds)
  done (took 2.503512246 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114102339 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.106821899 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.089347734 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117762003 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.088941453 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.108603022 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118014887 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.090577803 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106118638 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.102022469 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107515828 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.089451427 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116930999 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115551383 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.090143311 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117613736 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.10016615 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.118781884 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.1077149 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.090552923 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.120779347 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.09011243 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.11950903 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.095265548 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.109619609 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.090203691 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110699601 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.115872278 seconds)
  done (took 3.725482613 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075562896 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074551466 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.090742909 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.072708168 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.071994853 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.090137778 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.072455026 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.090723934 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074825794 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.07224058 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.092183592 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.074319063 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.092566158 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.074881435 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077178715 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.09340156 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074626891 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.089956095 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072724786 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071816768 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.09268852 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074774847 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.092644523 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072571785 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072281326 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.091929862 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072288434 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090027855 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074853808 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072148559 seconds)
  done (took 3.183760554 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.083148001 seconds)
    (2/2) benchmarking "in"...
    done (took 0.098581887 seconds)
  done (took 0.960597399 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.073364819 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109362787 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.072735431 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.078246173 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.098313886 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.075246303 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.103103778 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08089468 seconds)
  done (took 1.467413798 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.092706165 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.111154249 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.08023328 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.104534774 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.093771119 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.109288408 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134239081 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.098942148 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.080695074 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.091536664 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.091845908 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.092519258 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.080850171 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.075022152 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.09969968 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.081745015 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.094195635 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.085909995 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.100441355 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.078056549 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.09902027 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.087554906 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.078576874 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.101207034 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.076388948 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.104024033 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.084087744 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.107414375 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078598245 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.103497949 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.080748997 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.087533346 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.079984372 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.098469825 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.076510041 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.110342683 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.087937297 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096317592 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.08400899 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.081179187 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102661006 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.074078197 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.100151113 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.081117135 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.104383722 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.080466101 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.099488881 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.074196984 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.0921294 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.079062004 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.074076783 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.09436276 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.070689673 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.101006568 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.080660499 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.10732475 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.078163758 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.095336668 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.078876047 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.078784376 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.101503322 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.078075603 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096952878 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.078686176 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.100750522 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.079677923 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.101943989 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.073802544 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.069787359 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.095287615 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.084674926 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.116665536 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.084369887 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.098929852 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.081389802 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.095189516 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.079223235 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100264696 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.082832385 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.102764153 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.08050227 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103031506 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.08553931 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.096731184 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.081045457 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.085424291 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.098955676 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.081526656 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.094420452 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09291497 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.100566861 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.078965468 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.093826516 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.087691703 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.081234019 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.09966908 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.072955146 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.101668459 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.070136765 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.099151494 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.081990331 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.094237152 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.085100209 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098907457 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08242695 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.083054213 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.104676879 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.075594487 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.097163226 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.073073149 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098808956 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.078694254 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.101478484 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.070066911 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078444672 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.09571683 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.081621811 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.101959713 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.077847561 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.098293172 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.083639074 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.101355446 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.077863373 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.072439519 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.09733656 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.07989504 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102770851 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.083241784 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.096919316 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.074502273 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.09306104 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.080239789 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.097897277 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.081303388 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08180479 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.097641584 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.069887535 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.095722669 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.08074758 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.102505624 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.075976054 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.094157603 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.081286329 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.07701859 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.097622396 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.081734099 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.096527375 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.07500965 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.099334516 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.078846604 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.076916527 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106825346 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.0815922 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.099484279 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.081889457 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107303049 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.080833931 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.103573041 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081190024 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.103141953 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084555649 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.078215174 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.096971646 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.081059623 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.108245607 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.080511465 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.096739927 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.076204684 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.104681533 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.076876174 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.081996456 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.095000379 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.078717864 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.10040858 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.07768911 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.097961784 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.078732032 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.091679821 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107596525 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.081259689 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.100624084 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.086050506 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.09918943 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.077402584 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.099074938 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.081856329 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.099987565 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.083809263 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.101249283 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.081754954 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.07875105 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.091607507 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.081681703 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.103466696 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.074850073 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.095749088 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.075204698 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.099292756 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.084196074 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.082719021 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.100665507 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.079431866 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.096624892 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085590001 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.099886208 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.081622534 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.097300947 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.082525422 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.08781045 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.103955431 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084707795 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.107470197 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.082165286 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.096900223 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087887971 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099960665 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.083326299 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.096812469 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.076652847 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.077136402 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.10296552 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.078953283 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.097476496 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.071212119 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.103161643 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.084450496 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.076646246 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.094240812 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.080541297 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.104375747 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.078310505 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.098109023 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.079759569 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.10015305 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090153762 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.094485193 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.079666593 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.104181562 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.081444607 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.071343485 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.100789137 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.07856677 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.094703269 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.07920632 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.097457804 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.079489688 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.082755111 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.100716851 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.070350246 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.098625315 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.078953328 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.094739901 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.076338068 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.08382284 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.100627249 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.080915863 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108724892 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084763436 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.103806876 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.082917211 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.100440371 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.081861335 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.101310897 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.079638478 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.101183314 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.079397327 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.075679996 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.097726056 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.076184444 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.097020077 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.078720965 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.100833352 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.079468203 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.082960298 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.099093073 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.077071539 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.098532016 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.08224343 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.096976426 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.078210268 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.094870754 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.080216523 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07737329 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.095890092 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.079360419 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.093706156 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.084021051 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.099717102 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086187602 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.095321627 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.073212013 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.081212631 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.098571073 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.081677411 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.100849747 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.08191321 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.096933471 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.080456836 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.080065534 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.103868591 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.074261859 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.105664815 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.082563962 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096491955 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.080055258 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.104257742 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.078654037 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.09486324 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.079846122 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.084133798 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.096992331 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.081146237 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.100555588 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.078980435 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.095697648 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.078825442 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.10168386 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.077609037 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.082576125 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.091289298 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.075798253 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.09477355 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.081434713 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.102911146 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.082697055 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.07917451 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.097369975 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.08267475 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.098848784 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.073167927 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.103415797 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.08444012 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.100699859 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.084985757 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.075991489 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.097291381 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086051555 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.090480978 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.078961414 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.096821023 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.074466474 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.103885957 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.082468134 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.085571725 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.095466549 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.076166547 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.092934672 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.081911191 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.098310379 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.071372967 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.077649319 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.099029207 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.080043178 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098449855 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.081988448 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.098404223 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083022239 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.103439366 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.079853072 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.079375367 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.100332315 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.073852092 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.094653385 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.075936079 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.099267178 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.08334163 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.075100896 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.093834871 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.080801959 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.098527477 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.077143424 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.100018281 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.079148989 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.084718449 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100277471 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.080251097 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105054773 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.07196842 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.09970578 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.081054958 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.100817691 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.076159329 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.080959196 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.099489114 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.082404019 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.103499605 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.080988731 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.097101417 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.081619815 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.09690991 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.080274373 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.081191062 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.101613281 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.076347076 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.102345053 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.085309165 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.097238613 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.079147911 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.095713921 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.077425806 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.082428631 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.101145817 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.079517411 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104079238 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.079771258 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.097875516 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.084005234 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.101245953 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080881642 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.08259792 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.098365775 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.083597295 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.095173742 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.08532764 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.09690938 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.082494483 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.098068823 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.074841722 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08118302 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.100419269 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.080310414 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.101434354 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.081570572 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.095963577 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.076529112 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.078601965 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.098404368 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.085852707 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.104172097 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.079897216 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09968527 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.075805087 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.093546806 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.082696347 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.09378602 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.078792378 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.079816494 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.102444847 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.079439405 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.097172736 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.079631938 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.104628106 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.083725686 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.101114816 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.074496173 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.08200734 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.102726576 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.079777749 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.098591573 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.076697802 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102508097 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.082963833 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.097950152 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.076487036 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.104821275 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.081147871 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083250158 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.098335859 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.077904098 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.096530187 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.075806207 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102520976 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.07978927 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.103140958 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.079511169 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.081161272 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.106098978 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.077076393 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.096792515 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086167906 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100892131 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.083765914 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.095201532 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.078624193 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102019043 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.082647462 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.07613655 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.096187159 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.076307819 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.099546499 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.076172041 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.07571028 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.106928677 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.084853461 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.098549823 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.07995536 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099397958 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.076465315 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.0955648 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.07707903 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.082949724 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.098309724 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.087124243 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.09580962 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.076428674 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.095690954 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.080865612 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.099939459 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.080527423 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.074418196 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.095459277 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.075772409 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.099399321 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.084413375 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099900728 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.08151669 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.080697713 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.099034212 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.078789091 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106026835 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.074172091 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.101893978 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.088571952 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.103095728 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.078625744 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.102624846 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086192102 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.101646996 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.076342522 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.082168932 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.09954033 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.077540179 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.102356414 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.082825389 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112413053 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08065707 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.09642778 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.080207284 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.099499273 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.076521266 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.085109964 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102592663 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.083123028 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.102167215 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.079032554 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103933571 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.080952061 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.103783879 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.080280766 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.099940926 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.081114777 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.078089597 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.099291744 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.076230009 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.103557356 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.082638138 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101266698 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.084721131 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.076609219 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.107416089 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.086574796 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.102858232 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.074572628 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.097344874 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.077013915 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.076452173 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.103013094 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.07578672 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.10021107 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.080614761 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.099422863 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.078281147 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.10252341 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.079543272 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.083301291 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.101689479 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.071912387 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.098827636 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.080383461 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098443053 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.075365786 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.081490032 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.10561431 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.083075462 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106548639 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.078392492 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.098714735 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.079550687 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.078551801 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.096278804 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.084884777 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100111212 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.080486711 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.097230719 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.081761229 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.102862068 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.081674442 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08422171 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103785762 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.080466925 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.106111884 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084927855 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.09495116 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.07502822 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.103173198 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.079082083 seconds)
  done (took 53.833340844 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.121583815 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103397758 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07305172 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092947069 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117912241 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077801443 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073009131 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.097796211 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.077084337 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106725181 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.073514922 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.093464972 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.09309534 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.119702383 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116829995 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107495102 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073160491 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.098122792 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073739635 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077926812 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.112643937 seconds)
  done (took 2.810473983 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.1002912 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.111705619 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089069405 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.115320527 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104194241 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.089824178 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.108920609 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110999757 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093735904 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105319547 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.114384109 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090957517 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.104840772 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.085526075 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105733966 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107951892 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.093771553 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103687383 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.091508656 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.109397964 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108247121 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.089561803 seconds)
  done (took 3.063701328 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.085991123 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.081346655 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.101530959 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.072410141 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.100365044 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.072627485 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.105930729 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.07523403 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.085529172 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.096190085 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.076769926 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.096169928 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.081865939 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.072269368 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.096792592 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.075195625 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.148974878 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.106285086 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.081950173 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.103407851 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.075628134 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.080180218 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.096575652 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.076384885 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.096530896 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.090361223 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.102901897 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081686416 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.08138306 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.096365256 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.081546455 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.096599031 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.078368252 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.097815214 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.077250685 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.076469601 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.100924443 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.081788548 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.095813836 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.078095031 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.078515746 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.096387109 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.082609567 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.099131475 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.078428366 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.095372731 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.079115623 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.08140367 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.093240542 seconds)
  done (took 5.176165138 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.11033125 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.149155106 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.100584824 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.140569384 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.093992209 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.111986488 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.080943443 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.118509052 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.097046035 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.079950036 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.119212923 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.115575158 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.082162853 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.107415986 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.084700608 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.101911529 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.082385249 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.097708277 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.085853827 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.098024064 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.086063841 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.104937231 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.114812435 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.092724568 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.105724652 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.080516345 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.098828622 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.086401659 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.113051207 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.106695653 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.086626169 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.109130795 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.117107633 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.080666199 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.098482009 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.084354369 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.118165248 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.082105335 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.105236339 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.076203484 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.104407775 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.086719381 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.105051964 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.117327591 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.081432062 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.103294364 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.082481487 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.07521231 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.113256173 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.103836517 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.090599513 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.115135242 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.106230778 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.082437715 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.106643416 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.095009702 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.102163267 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.079616454 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.105016064 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.091245811 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.096224525 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.085828808 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.113613802 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.103068495 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.090376991 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.114583909 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.103346417 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.085715814 seconds)
  done (took 7.717090294 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108916005 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.107550883 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.097484341 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117767596 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106465113 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.08660931 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105939446 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.086514482 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.106689529 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.09317973 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.10632313 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.152769953 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.08336611 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.111967325 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.086934063 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.107105599 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.08581448 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.105837969 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.086081644 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10659313 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.086046619 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.116417003 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106768603 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.09648411 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.11962832 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.103990721 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.086587089 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.10733218 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09686634 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.107437759 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.118629872 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.086280869 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.10621913 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.095933873 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.11885951 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.107027067 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.081172332 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10767546 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.08673406 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.106324628 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.083557159 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.117277346 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106306773 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.083905506 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105516022 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.086300546 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.117442881 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.120284084 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.090844716 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113266818 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.086204822 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.117609347 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.106382853 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.086261667 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.116877231 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.123875252 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096962795 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116920679 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086540256 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.116664087 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.117169231 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.123875245 seconds)
  done (took 7.256754668 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.109121099 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.11376033 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.1202682 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.073418176 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.076281668 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.107581465 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.076368578 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.096795833 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.1122745 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.092048227 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114464587 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086412025 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.1103357 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114978471 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.086318345 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110703948 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106389608 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086239369 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11385283 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086789544 seconds)
  done (took 2.838496799 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.087525012 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.119745714 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.080000573 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107279193 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.082382012 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.107180792 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.081667847 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10325199 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080339383 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103096293 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09201803 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.112113197 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079843307 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106702834 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.090754782 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106773544 seconds)
  done (took 2.389449298 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.100252066 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.120143782 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.102740435 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.105023107 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.07733315 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.105043147 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.081868025 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.09597475 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.07526247 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.116574789 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085472694 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.10623996 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.082231885 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.097909789 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.07971817 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.08540606 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.095723839 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.085311234 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.102943722 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.102985815 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.105745544 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.082080588 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.104223582 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.081449828 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.102916987 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.085190092 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.107352733 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.077421575 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.098511856 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.08222097 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.103163505 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.086747835 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.09680939 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084322424 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.098747114 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.077154731 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.102771474 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.083258466 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.106149174 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.082028541 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.077079345 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.1026138 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.081432065 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.10089219 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.07583297 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.103020247 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.075105666 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.105806596 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.081690053 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.102492573 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.082454424 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.087647173 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107420309 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.110710006 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089584162 seconds)
  done (took 5.985735552 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094026621 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10425608 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.074368287 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.077267682 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103770091 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.081677011 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104955456 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.082595729 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102017242 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.077762782 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.102234397 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.083807056 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081455676 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104178671 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081976319 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104366026 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.074977524 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.102496612 seconds)
  done (took 2.49221234 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.085437775 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078991889 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.107953737 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079401589 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.10026443 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082709512 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096338974 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.078065196 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076897169 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.100022312 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078871883 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.102963951 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077859873 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.102445772 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079366032 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.1001434 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.081693653 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07705963 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099988001 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075224371 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102953422 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078228778 seconds)
  done (took 2.7950128 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.117151876 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.12013548 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.087123132 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.204524205 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.120406654 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.105326503 seconds)
  done (took 1.611265792 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104324531 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136596546 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.080339252 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103755481 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091863973 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10539613 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084390569 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105002788 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09500862 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118402724 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104299236 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095813978 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115981835 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11523324 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0910257 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112464707 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083585356 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105302813 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080269048 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124426061 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105030564 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095602255 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105419373 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104407327 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084506339 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115278928 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096298833 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117253795 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104610914 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095114566 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113291892 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084186745 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117489646 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118270955 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083193063 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117209242 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083870186 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124460211 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11338651 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116055999 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.082324206 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112164916 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095471151 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111968482 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11689291 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084186954 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112178979 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084001974 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104784659 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131691566 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092672453 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116052923 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112640439 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096379492 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116093111 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132262891 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118427432 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095226542 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112688429 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118269444 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095665633 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113079672 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115891782 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09672596 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11302203 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11538051 seconds)
  done (took 7.804296427 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117685586 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.102458914 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084661936 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119167588 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116452038 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084525019 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105247258 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084749897 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10529588 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080967813 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.149574019 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105486613 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09463684 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116690145 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105308797 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084093329 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10494704 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094952583 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102776486 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132193045 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084084091 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116136272 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116184168 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094678669 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118830287 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112509327 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085057949 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105619263 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084834035 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10533847 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111570902 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085118401 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115595658 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.081598075 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116813675 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084526655 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10569148 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112294005 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085118713 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112800265 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095207202 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126482568 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10568701 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084856551 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119887259 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105560548 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085028859 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102071243 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085372829 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102622575 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09744893 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118678189 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117942327 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095073231 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105523367 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105687712 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084734096 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105669745 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084770405 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113224645 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095143726 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106097528 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1317702 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084475629 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106708017 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116975979 seconds)
  done (took 7.670604789 seconds)
done (took 146.74488351 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.230125896 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.2173467 seconds)
  done (took 1.304083182 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.096070767 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.133969639 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.094075725 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.164660913 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.080294947 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.113829097 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.134245538 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.094400752 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.101563204 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.08055058 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.101852311 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.082068782 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.144622799 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.102465979 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.079784648 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.103572405 seconds)
  done (took 2.574557079 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.113287271 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.242936218 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.119136435 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.078228755 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.106449147 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080412404 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.07856649 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.110131644 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.081187276 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.10149203 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.080207552 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.102596956 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.079917791 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.080327402 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.102532562 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.080034009 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.100695615 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.081028822 seconds)
  done (took 2.682820875 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.107979571 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146255299 seconds)
  done (took 1.121378821 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.246637041 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.160521363 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.224307912 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.362839146 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.181583346 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.545879942 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.61116933 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.595668858 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.166726451 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.373887623 seconds)
  done (took 4.331358596 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.113715453 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.171834772 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.289131856 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.149183066 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.118805968 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.095009721 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.149969008 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.121943386 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.102500391 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.123337288 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.12369355 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.087113496 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.134750247 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.110774003 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.088553353 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.108361769 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.114135271 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.109344766 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.088721444 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.110002048 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.113432548 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.100880806 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.090221138 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.109460218 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.183407939 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.121021982 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.082595016 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.079908287 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.110546399 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.088948365 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.108070881 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.09307613 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.122124915 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.145482196 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.114213664 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.373002122 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.091502431 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.107073818 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.089068395 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.107574652 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.090531883 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.112105125 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.09494205 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.108676022 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.079730944 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.108786478 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.0805608 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.100301751 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.088629644 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.110300216 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.087694406 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.10877914 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.147820898 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.088742398 seconds)
  done (took 7.217416309 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.790657468 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.147774896 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.085622972 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.868465722 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.133846782 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120310525 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.765192171 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.131606085 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.228474239 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.77990472 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124692834 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.116542545 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.200087658 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.229095943 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.955888002 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.306484457 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.677388926 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.094883657 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.138417763 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.144777479 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.089996928 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132150456 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.123982366 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.421786833 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.086178941 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.106596554 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.089897492 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.115054322 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.15348764 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.085220281 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.10844407 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.17088187 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.238982979 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.19534707 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.086450216 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.083898067 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.106795106 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.159717189 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.257578921 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.18735378 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.168922555 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.080744241 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.106078873 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.093920415 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.125374146 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.10295681 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.155123783 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.164008475 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.164215809 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086260052 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.116272207 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.114166631 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.093605046 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.153873814 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.104776842 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.286765323 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.317978959 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.105842301 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092430652 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.121350145 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.232962885 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.106002022 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.195106986 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.132543445 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.206252661 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.084584446 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.771429609 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.160067483 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.083960877 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.113633186 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.089890992 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.110819341 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.093465274 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.158453602 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.398713614 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.11757931 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.086931206 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105008712 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.200071295 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084738717 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.106122745 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.154687802 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.085641092 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.113009154 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.117332764 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.094794083 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.161294146 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.224006228 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.117649976 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.112842163 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.088672508 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.117013569 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.087049548 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.202281844 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.212078915 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.150595331 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.206029959 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.11575383 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.156025245 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.157914839 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.11499194 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.162055945 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.090438607 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120386035 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093522 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.208418174 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.136258644 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084288019 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.110616648 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.090864746 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.137444146 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.109018802 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.091029029 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.160100521 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.47365604 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.158884286 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.082037151 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.087188871 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.113632442 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.154361392 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11248096 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.233672529 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115390661 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.159558908 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.090445589 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.103291903 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.091493755 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.177042328 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.096057667 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.114491372 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.094520146 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11372676 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.224822757 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.208850153 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096598158 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.234657848 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.151069129 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.113000995 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.163555954 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.11432541 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.163039547 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.092674188 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.115063521 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.085440216 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.765457378 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.117442587 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.091873607 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.110078625 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.156465074 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.10642553 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085782258 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.106306411 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.082106993 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.770182398 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.087477333 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.081598164 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.107028378 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091390121 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.113533435 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.089593923 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.111048944 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.153852707 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.222929951 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092915311 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.112091469 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.08456217 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.155331193 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.107854605 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.085237615 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.106641137 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.0856309 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.114318431 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.088050321 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.107010843 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.163019224 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.151418717 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.210248649 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.560996696 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.08357051 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.107379612 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.219542392 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.084503446 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.285176222 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.090316425 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.217730655 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.158638696 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.081922665 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.311232698 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.159067442 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.178365071 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.107763414 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.161476738 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.081578512 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.111690619 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.154278258 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.084330076 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.111544099 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.152226312 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.096459066 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.117808158 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.00281303 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.084441571 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.219977032 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.102513918 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.16035219 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.085734216 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11514444 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.266597203 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.106731543 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.122028709 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.15306324 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.0878703 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.106520152 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.844314224 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.084595328 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115999812 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090622436 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.213960241 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.156946781 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.113446472 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.089615144 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.114828882 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.153331354 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.203524708 seconds)
  done (took 41.664252993 seconds)
done (took 61.758795571 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.25883742 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.213468079 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.266306642 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.164280406 seconds)
  done (took 1.893200031 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.171823063 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.121039873 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.139720417 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.078856386 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.147588401 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.102225437 seconds)
  done (took 1.655162382 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.340687301 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.290551593 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.212330696 seconds)
  done (took 1.739211344 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.241345362 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.237783551 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.464040792 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.31866009 seconds)
  done (took 2.257366264 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.199619273 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.096543358 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.12025097 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.110654875 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.163515182 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.200801618 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.136287945 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.144867961 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.103179484 seconds)
  done (took 2.218341521 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.159880142 seconds)
done (took 10.821575677 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.241250287 seconds)
    (2/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.1548972 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.220670863 seconds)
    (4/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.248272859 seconds)
    (5/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.234142071 seconds)
    (6/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.219436028 seconds)
    (7/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.258752022 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.16534771 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.09970322 seconds)
    (10/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.20161657 seconds)
    (11/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.10524893 seconds)
    (12/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.236397183 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.094899423 seconds)
    (14/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.114546221 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.091164576 seconds)
    (16/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.110594754 seconds)
    (17/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.10504634 seconds)
    (18/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.192129216 seconds)
    (19/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.093926297 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.128933164 seconds)
    (21/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.14361742 seconds)
    (22/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.080771252 seconds)
    (23/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.115998158 seconds)
    (24/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.088433709 seconds)
    (25/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.213289999 seconds)
    (26/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.218641157 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.129601847 seconds)
    (28/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.141613611 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.132795752 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.144309535 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.153232935 seconds)
    (32/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.114621345 seconds)
    (33/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.09512208 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.168417522 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.144757324 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.142642254 seconds)
    (37/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.086097705 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.080233428 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.152900173 seconds)
    (40/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.088476841 seconds)
    (41/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.11157681 seconds)
    (42/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.080339795 seconds)
    (43/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.228123087 seconds)
    (44/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.116658374 seconds)
    (45/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.088366523 seconds)
    (46/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.149439709 seconds)
    (47/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.088821167 seconds)
    (48/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.107783599 seconds)
    (49/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.232480316 seconds)
    (50/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.079643394 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.131733695 seconds)
    (52/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.163550236 seconds)
    (53/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.176041785 seconds)
    (54/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.108740751 seconds)
    (55/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.079569305 seconds)
    (56/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.194362354 seconds)
    (57/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.163715061 seconds)
    (58/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.124286982 seconds)
    (59/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.089219364 seconds)
    (60/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.189905508 seconds)
    (61/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.191068327 seconds)
    (62/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.240475761 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.156786043 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.168677046 seconds)
    (65/309) benchmarking ("sort", Int8, false)...
    done (took 0.201461727 seconds)
    (66/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.193682295 seconds)
    (67/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.232863518 seconds)
    (68/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.129963393 seconds)
    (69/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.090666504 seconds)
    (70/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.115131342 seconds)
    (71/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.06814828 seconds)
    (72/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.084976935 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.129538898 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.130119439 seconds)
    (75/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.092886142 seconds)
    (76/309) benchmarking ("sort", Int64, false)...
    done (took 0.08069768 seconds)
    (77/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.233362956 seconds)
    (78/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.092635907 seconds)
    (79/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.232705278 seconds)
    (80/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.095197648 seconds)
    (81/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.187562442 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.107381983 seconds)
    (83/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.174354671 seconds)
    (84/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.113747348 seconds)
    (85/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.086378154 seconds)
    (86/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.223096121 seconds)
    (87/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.193063926 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.107817988 seconds)
    (89/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.192020479 seconds)
    (90/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.113635706 seconds)
    (91/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.175919218 seconds)
    (92/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.150125183 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.081154109 seconds)
    (94/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.112898548 seconds)
    (95/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.079250373 seconds)
    (96/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.176092668 seconds)
    (97/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.225526402 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.081130796 seconds)
    (99/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.118754021 seconds)
    (100/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.174259254 seconds)
    (101/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.196784797 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.132012731 seconds)
    (103/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.080241122 seconds)
    (104/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.165341238 seconds)
    (105/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.088952056 seconds)
    (106/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.108731745 seconds)
    (107/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.091256466 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.131527463 seconds)
    (109/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.125550656 seconds)
    (110/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.19600646 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.080713887 seconds)
    (112/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.115781881 seconds)
    (113/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.097628573 seconds)
    (114/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.133430595 seconds)
    (115/309) benchmarking ("sort", Float32, false)...
    done (took 0.17637529 seconds)
    (116/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.158160977 seconds)
    (117/309) benchmarking ("sort", Bool, false)...
    done (took 0.182676841 seconds)
    (118/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.115020317 seconds)
    (119/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.09233934 seconds)
    (120/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.178599649 seconds)
    (121/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.079688711 seconds)
    (122/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.112492859 seconds)
    (123/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.072055606 seconds)
    (124/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.11180433 seconds)
    (125/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.086345253 seconds)
    (126/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.188391968 seconds)
    (127/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.071264744 seconds)
    (128/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.11212695 seconds)
    (129/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.106857903 seconds)
    (130/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.113806081 seconds)
    (131/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.080801701 seconds)
    (132/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.153460813 seconds)
    (133/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.068409182 seconds)
    (134/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.129450177 seconds)
    (135/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.090399713 seconds)
    (136/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.088267517 seconds)
    (137/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.200331838 seconds)
    (138/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.092450786 seconds)
    (139/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.096435066 seconds)
    (140/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.113814284 seconds)
    (141/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.08313978 seconds)
    (142/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.093152873 seconds)
    (143/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.106241308 seconds)
    (144/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.081569403 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.127655712 seconds)
    (146/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.088664609 seconds)
    (147/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.101752457 seconds)
    (148/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.069300995 seconds)
    (149/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.078904626 seconds)
    (150/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.109629905 seconds)
    (151/309) benchmarking ("sort", BigInt, false)...
    done (took 0.219479496 seconds)
    (152/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.069577988 seconds)
    (153/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.093718589 seconds)
    (154/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.123156972 seconds)
    (155/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.093054973 seconds)
    (156/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.080382478 seconds)
    (157/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.081283638 seconds)
    (158/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.115190782 seconds)
    (159/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.151506976 seconds)
    (160/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.148595107 seconds)
    (161/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.176802489 seconds)
    (162/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.095679968 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.138616878 seconds)
    (164/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.079022553 seconds)
    (165/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.068127564 seconds)
    (166/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.105559428 seconds)
    (167/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.094830561 seconds)
    (168/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.093387625 seconds)
    (169/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.107304649 seconds)
    (170/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.092395113 seconds)
    (171/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.068810328 seconds)
    (172/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.080777366 seconds)
    (173/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.092254675 seconds)
    (174/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.141972712 seconds)
    (175/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.09258275 seconds)
    (176/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.068972319 seconds)
    (177/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.092721892 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.102199506 seconds)
    (179/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.197273135 seconds)
    (180/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.183131275 seconds)
    (181/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.08512059 seconds)
    (182/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.07019098 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.131137946 seconds)
    (184/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.083912856 seconds)
    (185/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.156623044 seconds)
    (186/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.148278825 seconds)
    (187/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.068688073 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.158642514 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.102020087 seconds)
    (190/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.106867481 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.086786593 seconds)
    (192/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.068829612 seconds)
    (193/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.1073667 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.092377506 seconds)
    (195/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.082810141 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.10486641 seconds)
    (197/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.094466554 seconds)
    (198/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.092809107 seconds)
    (199/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.079930646 seconds)
    (200/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.077527011 seconds)
    (201/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.115030498 seconds)
    (202/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.109190004 seconds)
    (203/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.16121207 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.079589366 seconds)
    (205/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.106284197 seconds)
    (206/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.196383041 seconds)
    (207/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.185638902 seconds)
    (208/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.093175245 seconds)
    (209/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.174620274 seconds)
    (210/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.093331741 seconds)
    (211/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.12482103 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.111301604 seconds)
    (213/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.17255147 seconds)
    (214/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.082292685 seconds)
    (215/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.236665181 seconds)
    (216/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.161347762 seconds)
    (217/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.068544379 seconds)
    (218/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.230095041 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.090412706 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.114175732 seconds)
    (221/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.069648334 seconds)
    (222/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.105214657 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.081046329 seconds)
    (224/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.082310315 seconds)
    (225/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.092305989 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.112708825 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.127508891 seconds)
    (228/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.069779891 seconds)
    (229/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.106330515 seconds)
    (230/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.084180344 seconds)
    (231/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.078721339 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.109658019 seconds)
    (233/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.069642688 seconds)
    (234/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.103159258 seconds)
    (235/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.071986736 seconds)
    (236/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.08034983 seconds)
    (237/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.095004419 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.08046273 seconds)
    (239/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.106797193 seconds)
    (240/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.136497201 seconds)
    (241/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.06922642 seconds)
    (242/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.092747481 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.192103349 seconds)
    (244/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.069027006 seconds)
    (245/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.070763625 seconds)
    (246/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.0938666 seconds)
    (247/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.08185426 seconds)
    (248/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.069519842 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.131125291 seconds)
    (250/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.083985671 seconds)
    (251/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.111560543 seconds)
    (252/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.089244787 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.105030177 seconds)
    (254/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.07802505 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.155983774 seconds)
    (256/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.07966148 seconds)
    (257/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.108260275 seconds)
    (258/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.069439318 seconds)
    (259/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.068514525 seconds)
    (260/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.109284569 seconds)
    (261/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.169672881 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.105548182 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.082020585 seconds)
    (264/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.104316283 seconds)
    (265/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.069381445 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.088337348 seconds)
    (267/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.093505837 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.123583732 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.105749447 seconds)
    (270/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.069412336 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.114402341 seconds)
    (272/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.096680029 seconds)
    (273/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.072801273 seconds)
    (274/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.09481654 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.081747876 seconds)
    (276/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.117178816 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.160012421 seconds)
    (278/309) benchmarking ("sort", Float64, false)...
    done (took 0.175133462 seconds)
    (279/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.085825752 seconds)
    (280/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.112599477 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.117484399 seconds)
    (282/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.102779807 seconds)
    (283/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.083197417 seconds)
    (284/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.192703842 seconds)
    (285/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.070455589 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.106148308 seconds)
    (287/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.087621257 seconds)
    (288/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.22461231 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.089576027 seconds)
    (290/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.108574881 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.101799646 seconds)
    (292/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.105300199 seconds)
    (293/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.084787639 seconds)
    (294/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.104935042 seconds)
    (295/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.079226019 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.090629232 seconds)
    (297/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.107534719 seconds)
    (298/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.070135044 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.080080376 seconds)
    (300/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.197730347 seconds)
    (301/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.092506299 seconds)
    (302/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.081038368 seconds)
    (303/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.084117422 seconds)
    (304/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.096462229 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.132620103 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.13211034 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.080491681 seconds)
    (308/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.094421617 seconds)
    (309/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.081601085 seconds)
  done (took 38.700300869 seconds)
done (took 39.606722374 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.094586717 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.14677617 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.091161449 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.13426945 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.094244009 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.120085264 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.090289672 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.093229477 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.118821318 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.096539971 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.117464316 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.07262193 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.117041459 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.093201046 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.116818014 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113396867 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.118786122 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.088543301 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.109875525 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.080531532 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.085169206 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.105799265 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.083467949 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.096034126 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.092770615 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.091209801 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.111961469 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.092867262 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.105460142 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.08170311 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.08052814 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.113690157 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.081339686 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.11950392 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.087744546 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.109752927 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.093665066 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.091281822 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.107646852 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.082039675 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.114050891 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.081629209 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.113237547 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.089114621 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.082872682 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.104605738 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.085301045 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.119978965 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11414887 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.110934709 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.089851927 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.091434407 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.115972665 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.088467466 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.106106092 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.084665535 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.105537431 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.113590772 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.109772031 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.087015539 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.089824224 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.114655791 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.081321418 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.109000688 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.085372353 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.116853109 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.09253782 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.08074902 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.115397451 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.087404623 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.105506396 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.085834992 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.080957088 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.106064393 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.091609354 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.116381788 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.081213195 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.083009535 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.112719118 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.087402962 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.104971694 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.084103036 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.107994252 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.083556622 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.084001127 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.095701268 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.080378932 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.088284341 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.106200695 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.085324561 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.112643871 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.088443462 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.108023244 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.093479501 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.081570751 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.105441138 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.082159388 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.106361273 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.084163072 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.080774465 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.106011528 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.084962702 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.115327778 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.082895012 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.083819233 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.11820899 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.081472373 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.112412574 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.080348763 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.08146066 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.12180301 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.092455881 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.10610563 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.08761226 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.080961766 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.107893174 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.081955914 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.105338573 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.081439897 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.08186448 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.107877484 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.081969494 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.109451479 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.082882331 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.09511495 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.105962865 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.080984786 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.108668941 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.081727962 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.087002652 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.107083667 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.082218846 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.107606864 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.079940209 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.084792997 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.106148529 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.083648138 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.108302059 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.085795253 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.083040509 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.110786351 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.086603414 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.108114379 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.081491799 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.105354495 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.076417311 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.104165269 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.108414237 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.083107059 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.080825787 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.109184921 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.081039317 seconds)
done (took 15.683806203 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.081979451 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.179347136 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.141652648 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.114666555 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.127622181 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.082141028 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.117685322 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.113642833 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.108331892 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.13777688 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.105253613 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.126320002 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.120743229 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.104951106 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.081578318 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.085832047 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.108072817 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.098312278 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.14652062 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.103746648 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.142073552 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.105584333 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.111581001 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.13039883 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.091602792 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.124499809 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.082718644 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.11083676 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.085927615 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.132922083 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.10273646 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.110673735 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.082533837 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.104301888 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.124040403 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.089979877 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.106458151 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.089328515 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.106303345 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.08183662 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.130014009 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.104538952 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.111661904 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.087814573 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.110985452 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.085322412 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.083729066 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.115737673 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.093266571 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.111561464 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.097270678 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.135409277 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.109783268 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.092843477 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.08067431 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.117569554 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.091222302 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.109843567 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.08249158 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.109091466 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.08189621 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.085969843 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.121715355 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.131569213 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.086987792 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.117032377 seconds)
  done (took 8.049746426 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.099651153 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.13700998 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.099973046 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.125093115 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.081922896 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.082650639 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.108287086 seconds)
  done (took 1.708419943 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.082765336 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.109048594 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.135431276 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.108725612 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.131510083 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.134500578 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092757404 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.083209489 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.127082199 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.083987819 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.133100712 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.123197566 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.109824176 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.091112014 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.136398198 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.083202467 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.134817942 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.08254064 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.111420515 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.109902445 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.111450972 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.105447308 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.111625111 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.083623819 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.101176922 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.109560853 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.16203081 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.088174884 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.084391698 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.111860774 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.081150847 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.146942605 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.10059766 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.119784604 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.083173786 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.127454114 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.101882762 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.105849879 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.099065507 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.113481786 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.100451244 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.083952947 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.109574886 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.082003562 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.112252481 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.097414118 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.112200844 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.084776875 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.085994237 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.132892638 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.08442309 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127059707 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.08383663 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.112607185 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.085274946 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.089479081 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.118180905 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.084561002 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.132075165 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.085497688 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.129500003 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.102937972 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.125886977 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.102404182 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.110956461 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.100991527 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103117468 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.111797408 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.085476507 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.112678742 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.103240204 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.106737398 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.085500663 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.097651053 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.111212293 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.110076744 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.135759856 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.085165197 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.120238526 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.084054075 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.110248728 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.084197438 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.135905925 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.088008573 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.083982314 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112375667 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.087095648 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.106626811 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.082902742 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.087494918 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.107181219 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.085521621 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.112647616 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.085150173 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.086771469 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.128881568 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.085245102 seconds)
  done (took 11.136317062 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.085357952 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.086290467 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.112108799 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.085469466 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.10966334 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.084882176 seconds)
  done (took 1.556891899 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.113045374 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.109772202 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.09755268 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.114053849 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.124208235 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.133196457 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.108637542 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.119046318 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.101299383 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.1214755 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.108374002 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.135121954 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.114326316 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.114531159 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.107640714 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.113903605 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.108627002 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.115793904 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.095072287 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114890689 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.100913115 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.114157604 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.089887506 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.128739496 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.093511388 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.114386182 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.089749695 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.121743164 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.094913118 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.11880306 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.089912521 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119219537 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.089775394 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.118176978 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.109041983 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.114744743 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.088826447 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.121553362 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.090546228 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.093391296 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.135589941 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.089726262 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.119810783 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.095508233 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.118707543 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.114936659 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.095867509 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.089888829 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.133298478 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.095178844 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120645721 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.089256308 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118935105 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.095752981 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.115258616 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.093587723 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.121542818 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.10895946 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.114373812 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.089945072 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.112037105 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093860122 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.119234191 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.094092717 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.118760202 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.095300341 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.114986263 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.089571657 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115256779 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.089201158 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.12049276 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.086430878 seconds)
  done (took 8.773403663 seconds)
done (took 32.196857318 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.680467043 seconds)
  done (took 1.665225224 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.694596206 seconds)
  done (took 1.682903517 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.247805371 seconds)
  done (took 18.235494119 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.45848786 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.546535312 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.821752594 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.155848341 seconds)
  done (took 2.963917768 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.955144901 seconds)
  done (took 1.962554811 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.279413737 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.22751563 seconds)
  done (took 1.495461312 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.770502561 seconds)
  done (took 1.768510674 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.440625192 seconds)
  done (took 2.440101693 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.323216728 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.152600038 seconds)
  done (took 1.484844502 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.557976015 seconds)
  done (took 1.562290933 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.686891791 seconds)
  done (took 7.69133845 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.23812447 seconds)
  done (took 1.25233947 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.2856223 seconds)
  done (took 1.290521106 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.559850824 seconds)
  done (took 4.567811325 seconds)
done (took 51.059637148 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.093798206 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.097074735 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.123389223 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.094010405 seconds)
  done (took 1.406757857 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.09852028 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.09009512 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.124108445 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.090762662 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.12494298 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.090844788 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.119230886 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100468569 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.116002349 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.092566066 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.116642832 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.090473545 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.119042004 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.09267302 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.113049393 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.093756004 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.122914477 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.091705273 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.095058793 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.117246355 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.088906225 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.118702242 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.094663816 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.115450163 seconds)
  done (took 3.530439443 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.095571152 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.089574306 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.116968389 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.088413196 seconds)
  done (took 1.401319071 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.095423609 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.101205319 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.127211598 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.094480778 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.127065023 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.10006342 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.112942936 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.086445497 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.115159748 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.094802586 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.08494314 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.133774655 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.126851506 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.094997817 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.095734967 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.109408126 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.085926393 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.126676416 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.094702396 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.121577663 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.088119123 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.120061685 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.085777118 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.10246197 seconds)
  done (took 3.54340039 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.167312912 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.123103439 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.107617666 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.116678775 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.128943094 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.137301178 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.082752893 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.136399202 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.082686448 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.124725027 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.088141148 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.154852286 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.096535282 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.109076671 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.083145795 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.082201351 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.121176456 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.095801487 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.112513914 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.097432327 seconds)
  done (took 3.267521255 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.092710187 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.087434969 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.109280081 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.089092778 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.119549893 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.090613503 seconds)
  done (took 1.610437476 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.092776551 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.084936381 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.115086899 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.086256026 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.115480874 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.083918159 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.083285679 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.110807603 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.085857092 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.10926543 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.086176181 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.083043604 seconds)
  done (took 2.158271629 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.497481871 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.086729973 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.111719608 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.107991064 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.094506186 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.083665661 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.126733029 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.085323127 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.139031658 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.083416258 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.110368356 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.086889201 seconds)
  done (took 2.636052766 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203381395 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094555721 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257901731 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.338085101 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154503074 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16128399 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.266973254 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160400758 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.18012041 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107865728 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188758062 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154604088 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150971041 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174878052 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109471508 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.153365249 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171765638 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195402354 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145454996 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198610267 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158384959 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164121741 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175103023 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148847637 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108238046 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154464283 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.116696263 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09923556 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168833856 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165139898 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169132132 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144977063 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134851744 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193810125 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203305312 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171823936 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273651495 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129553736 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.150782722 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.160578367 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243125561 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110806645 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214207136 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124733883 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127051218 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177430144 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151007402 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.173782032 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.101798573 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1376076 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175689384 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170968799 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.17330559 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132768185 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.295562813 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143757884 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.115503064 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177303016 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180202713 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182944737 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162918099 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.115228461 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178519057 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17549057 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172438955 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.113403788 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.160551863 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122426815 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1690856 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188856046 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173729737 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159905232 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.177138464 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130769947 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158225381 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164737458 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121409144 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173553589 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156919013 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.116535637 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119207979 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134059012 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096669136 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.189510493 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119835119 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197076568 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105092643 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.169168672 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196467189 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153961119 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156998122 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160418233 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160616916 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115855571 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.11367522 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141530084 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.121069698 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151583839 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128887671 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124612569 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138695883 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.123823104 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120183659 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.12017648 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155915254 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.097112148 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159897234 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161037639 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.095175927 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162469548 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146627167 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.118521769 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164107974 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179474495 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130239884 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129870108 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187385678 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127287125 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.130882435 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170741804 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.182177843 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.151857638 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106898323 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162612117 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186571717 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138942154 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182399227 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137800313 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103305118 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.137002528 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155856653 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151995751 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.126425262 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127424433 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.149052563 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185872949 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.093343356 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133189587 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169919377 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095840039 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125948699 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109553233 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132444849 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.133411863 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.111082155 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.133501815 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150974465 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127270654 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150336925 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150127613 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138996811 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183665942 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101583022 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.146515887 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144265429 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.088820721 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.170531013 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178867061 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126775321 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191381973 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.160863037 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190136816 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158779432 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127704167 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144937813 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126156631 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.087243926 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158956487 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156094229 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158417439 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.176946827 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186321356 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.159658712 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.148948092 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144690393 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159826791 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.131345367 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150946478 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.133542027 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158120067 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126490019 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.118926959 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.093480807 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.124428906 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138449165 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099793614 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130203921 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176453382 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159275761 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181604951 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155824894 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110043353 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176467634 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.122532208 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160612311 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.166177955 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106631888 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.17747357 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174779361 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16304287 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139163422 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168928072 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.088850258 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120918811 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.102041872 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159817187 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129740496 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103574222 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140170044 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177261973 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168318587 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144785264 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194142314 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161410596 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186960068 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.089799862 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.16503214 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163273355 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154308595 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.147516566 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127726129 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.14718764 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144886354 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138335246 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183162141 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156745063 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16425271 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188699531 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.147348776 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099996034 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145857722 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160721593 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136287219 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160787753 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113930527 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134003438 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146377041 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.096654051 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122163637 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168138959 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112352989 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17019339 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.143284433 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1627783 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122493282 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111262858 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158109648 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142374071 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.08445179 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16173776 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176971603 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139916918 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154009091 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166533339 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099352078 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.311348191 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181481634 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176411588 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133814474 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138970295 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132056275 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156763477 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157317733 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174760946 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143503559 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173365111 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125817975 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.132701196 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10361308 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14428394 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146501399 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.107923332 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.129645523 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.148352705 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.104952778 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170114603 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138179065 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154778563 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1597499 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.117640057 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.140604365 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138704026 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193196507 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126118861 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172208833 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.145668402 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.158845221 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192834979 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121813004 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097874578 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.123597689 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145645224 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130439763 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154963429 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.179495694 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190322271 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155620622 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161833205 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134400982 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.087837138 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154757983 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116556722 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218543541 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111014678 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.131285061 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180553748 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.140460471 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099458158 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159918538 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.279668916 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14012331 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168965091 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.083037886 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.270196104 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12001279 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100619122 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156428266 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165759351 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.104939177 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.170530599 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159452438 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112818369 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157226045 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134133597 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18299686 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198392208 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164421835 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167107556 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.129355125 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125667211 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156343362 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169588162 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140081164 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.133747828 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129839039 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177333138 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.180770892 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.129032674 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157031547 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128733716 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154391477 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163425108 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130924936 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192839843 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127653032 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130017209 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137061273 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120848206 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125416137 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.206958209 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101729155 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165518102 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153878314 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100489143 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12356707 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147181363 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155214465 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110089639 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.122732744 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167550543 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.092279862 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158794621 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175658789 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099929305 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151785629 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141071854 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104052855 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1401813 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14167381 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104559448 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.159209662 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175458004 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.098055297 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169473658 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16784684 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157864381 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154492022 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141821383 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.637596141 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.124981496 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175218395 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114034056 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177753227 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145770399 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16123449 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155679163 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116162445 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160734934 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14521148 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.226523953 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159315781 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.152951473 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099673727 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140639126 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110876659 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.128238417 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147271418 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156818313 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108724134 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.133088584 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.15174311 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111802825 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.129471523 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106999603 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179372601 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143052981 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169908216 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176787369 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105825426 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162691492 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163721666 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125692397 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.156958088 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167084897 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109079591 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146670944 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.128172553 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.102518336 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175890778 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.120410089 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127322445 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156427545 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15673898 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157491117 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.100105608 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155497566 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138857589 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156406652 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098113097 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.14936514 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153401815 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09864914 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.124501793 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152158455 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119941211 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.147468056 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123122669 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.134923178 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175804241 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.090296628 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13012266 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.279209954 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152457594 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18601355 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.110909173 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131977614 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139726454 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114651892 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.14884586 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155663699 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.097027889 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130192282 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.097958562 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.163666048 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.137889612 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12411783 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178574681 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152498303 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192511709 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.133185748 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.277541219 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107203461 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152095633 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.091351039 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.126105076 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138676876 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102873639 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138609148 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.184830056 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175815983 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.140345418 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.102901362 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12311893 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.093144224 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099845864 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157428668 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149969893 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154191757 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137582572 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.083623866 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14002699 seconds)
  done (took 72.591071286 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.152729527 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.146312342 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.159364571 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.215044431 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.181780031 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.268121485 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.221908386 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.252698633 seconds)
  done (took 2.698116648 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.089111948 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.138746337 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.123220373 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.131260657 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.112603384 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.088281497 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.321062779 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.12942022 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.085952108 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.143276767 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.129647861 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.113839249 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.527091785 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.085297917 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.112324067 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.081718098 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.111395834 seconds)
  done (took 3.625307461 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.467521705 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.715674089 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.472258205 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.122388479 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.132444495 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.130370154 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.72000956 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.1906645 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.11250009 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.478548005 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.745729623 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.176214046 seconds)
  done (took 18.568843829 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.119791284 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.112822522 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.159987941 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.159139662 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.116412833 seconds)
  done (took 1.779402609 seconds)
done (took 119.815163213 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.101083127 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.398079571 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.074348428 seconds)
  done (took 1.616180693 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.105582949 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.135697176 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.107764346 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.134510462 seconds)
  done (took 1.599749788 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.093281589 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.095292474 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.135753697 seconds)
  done (took 1.433679583 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.310454466 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.161421838 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.158926065 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.100831126 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.097936967 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.126671308 seconds)
  done (took 1.439988406 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.091992268 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.095392084 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.12207013 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.096422398 seconds)
  done (took 1.516769282 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.099770356 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.073054377 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.104519374 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.076358472 seconds)
  done (took 1.466945578 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.109182877 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.127696844 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.100885234 seconds)
  done (took 1.453736947 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.124964001 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.135865942 seconds)
  done (took 1.374802721 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.10107226 seconds)
  done (took 1.212363667 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.113541473 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.164621804 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.171823215 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.116567458 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.171347852 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.148743909 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.089193927 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087836145 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.117217044 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.08781315 seconds)
  done (took 2.387181653 seconds)
done (took 17.347654742 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.104257908 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.423549408 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.385222403 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.141134556 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.69328141 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.405166746 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.998959858 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.142349396 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.164833283 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.087654254 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.132824599 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.668383935 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.057023235 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.344215373 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.043522224 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.342706648 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.673621232 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.116947972 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.087608507 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.11590179 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.985301415 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.115121095 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.088137151 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.087226473 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.702097605 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.391236518 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.117286145 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.343029144 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.115517222 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.095697086 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.37410665 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.117267932 seconds)
  done (took 16.764993109 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.0940883 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174820376 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098518628 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.133112446 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.095239194 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.089353337 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.120179229 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.089011753 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.178055882 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.117207768 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.104360155 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.115556848 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.091585294 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.087708459 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.136845273 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.087420763 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.116467102 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.08794313 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.116299406 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.088837554 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.10603106 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.115734217 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.088013629 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.116727333 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.087678228 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.12946159 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.089069324 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.08737662 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.116308672 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.095912014 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.119178741 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.08863249 seconds)
  done (took 4.580238032 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.139509383 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.184246217 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.09922136 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.151273824 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.169681555 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.09044014 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.195283731 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.14401496 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.152780562 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.117035963 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.104608011 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.117356459 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.121111232 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.118177871 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.107518568 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.116749897 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.089197452 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.116297 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.087439347 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.088323147 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.136542823 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.088046722 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.117350481 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.087758213 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.117237549 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.1020703 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.11769103 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.087939747 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.088143409 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124789231 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.091684632 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.117418501 seconds)
  done (took 4.910996573 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.091469551 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.092957301 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.132167403 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.104055753 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.118322876 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.091669754 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.120867753 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.089572051 seconds)
  done (took 1.959463313 seconds)
done (took 29.335742192 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.106272423 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.09401926 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.13128659 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.100501255 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.127107154 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.100923776 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.115987772 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.100217557 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.100926893 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.126816597 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.104420683 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.116343923 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.089379299 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.116133269 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.102076456 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.092580432 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.130909717 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.097372657 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.132225366 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.102009926 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.119451498 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.100308833 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.098159889 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.132096003 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.102637108 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.131893787 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.10503475 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.123817198 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.088951888 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.119431173 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.101059849 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.138711003 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.091212565 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.132836658 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.093419337 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.091984778 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.119086806 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.092207193 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.131097512 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.100157969 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.124245377 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.099056199 seconds)
  done (took 5.735576084 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.114404631 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.147331841 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.110241915 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.083174192 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.12201133 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.083151815 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.143781548 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.086865944 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.113192698 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.113235794 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.106502308 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.079395619 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.080851027 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.105225595 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078961068 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.077152648 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.111970537 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.078034213 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.078596371 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.108631161 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.081786917 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.104314711 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.081902428 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.080745576 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.106914281 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.083544045 seconds)
  done (took 3.697398725 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.095367294 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.103264022 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.138420715 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.171959762 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.122714385 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.126781064 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.097613156 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.105998845 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.134106075 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.08756191 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.120471882 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.1161468 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.135273828 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.095699986 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.121037273 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.103880627 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.101563461 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.119713569 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.093082014 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.138108666 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.1038129 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.128482472 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.106676878 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.128317316 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.08847762 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090052015 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.123462091 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.097131396 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.125964562 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.096927214 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.123753843 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.092012335 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.089708244 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.129387168 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.093886715 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.118742368 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.107258534 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.127493181 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.097281535 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.119362932 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.095293055 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.090107059 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.139740729 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.157744257 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.08880197 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.094556036 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.121099638 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.097365037 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.120206013 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.107158468 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.126995419 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.088355456 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.090917479 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.119096323 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.089153746 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.133370941 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.090308136 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.089843835 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.130810452 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.093870261 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.130981128 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.092967822 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132916807 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.08899451 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.093777274 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.119443812 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.088177475 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.11662174 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.111259945 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.124174073 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.128548256 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.11943402 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.088643777 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.126557101 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.094922053 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093925962 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.119475239 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.10309255 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.127901531 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.092560555 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.128599079 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.090476753 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.090998686 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.136593349 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.090573375 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.119625981 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.089214104 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.093768342 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.120430172 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.089324509 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.13337283 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.087398656 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.120995106 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.10209965 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.08830705 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.119285143 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.094525945 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.122989514 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.087765392 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.131837395 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.093795805 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.119601298 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.098384581 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.08914935 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.12062011 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.098367945 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.123499397 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.088057763 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.122388439 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.094685086 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.088416599 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.122280165 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.091314026 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.120745967 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.097830889 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.124435531 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.092048891 seconds)
  done (took 13.937668897 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.229738926 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.221147741 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.18482229 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.262500627 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.13198276 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.146795428 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.179456865 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.155196123 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.089930126 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.156134757 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.167426231 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.18075932 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.16869457 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.179287857 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.167355482 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.08752951 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.138218429 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.134001776 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.212943813 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.289752945 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.108742143 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.128718276 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.15728115 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.126390663 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.133136337 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.098616531 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.137467585 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.10132147 seconds)
  done (took 5.624068613 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.106157757 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.152342074 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.094169267 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.141262673 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.115137604 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.119489053 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.093144484 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.120304928 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.101359679 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.133483943 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.088401998 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.124509888 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.095336972 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.097672445 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.120161158 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.097989629 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.128076624 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.089923165 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.121646803 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.093165359 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.098675323 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.136048912 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.092538518 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.117771998 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.097272435 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.118486079 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.090135555 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.140200407 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.088038853 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.140706644 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.086488054 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.128152378 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.101777238 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.119940667 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.088202011 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.090784378 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.121174277 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.09124856 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.120677311 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.08686345 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.086570376 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.111362934 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.087954763 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.134062958 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.095333516 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.113583104 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.095094886 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.124229746 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.089274094 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.085813536 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.121824986 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.092113806 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.121739059 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.097192838 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.091213536 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.120279266 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.092793893 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.118770837 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.095311212 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.090826714 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.118373012 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.087809058 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.123622407 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.092707535 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.127379753 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.093391536 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.086769997 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.121179058 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.092792124 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.125630902 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.09151534 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.094510505 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.117595139 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.091074487 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.122141676 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.094771922 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.092582701 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.118193412 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.088976307 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.120164438 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.077746927 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.08892247 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.107151051 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.092738866 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.117984117 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.087563309 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.09121181 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.125814785 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.13480143 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.090172297 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.097199221 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.120554342 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.08786645 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.121718712 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.086522453 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.092223581 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.1350401 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.139226349 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.088877281 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.086270593 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.133543172 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.091610513 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.119004903 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.079012455 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.097395136 seconds)
  done (took 12.306323329 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.126206238 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.149705012 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.09123145 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.137003949 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.122466582 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.153810647 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.095827678 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.128079306 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.090338071 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.138049982 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.089303154 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.097850649 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.119974321 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.103039302 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.153723755 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.098907713 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.121958851 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.10277724 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.123663316 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.133739084 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.137998776 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.107187542 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.137645107 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.089519631 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.125525914 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.108564521 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.155694789 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.103615834 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.132806711 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.10803586 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.13338475 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.125384022 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.138582004 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.092605787 seconds)
  done (took 5.237391389 seconds)
done (took 47.666698523 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.244273763 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.44396353 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.213972077 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.136902753 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.274747637 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.234895756 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.23100549 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.221621619 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.343233442 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.215463713 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.483883428 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.879830874 seconds)
done (took 59.073725396 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.257681899 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.375401883 seconds)
    (2/2) benchmarking "String"...
    done (took 1.521596203 seconds)
  done (took 4.048711905 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.790172677 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.152707986 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.464529165 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.205366546 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.206004269 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.497091675 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.941034978 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.626513022 seconds)
  done (took 28.22883622 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.218968772 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.617185668 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 5.016013222 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 5.019091688 seconds)
  done (took 19.010326131 seconds)
done (took 61.482533607 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.196521568 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.252714444 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.220935726 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.194118857 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.320718841 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.230923045 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.620314289 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.221313272 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.227028433 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.20098017 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.226495397 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.21146026 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.230112169 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.274049727 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.206668431 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.206504761 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.224122622 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.753585454 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.618840342 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.21516974 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.225377565 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.230898636 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.219371204 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.216906215 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.256692973 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.218246221 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.212458484 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.211357197 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.877557133 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.215245435 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.224725436 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.425510977 seconds)
  done (took 190.524869463 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.207672227 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.293686263 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.356156606 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.234576266 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.679468869 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.416024924 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.373147643 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.76138388 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.229893211 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.235076241 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.467625241 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.213076626 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.530814806 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.18518508 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.219071127 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.270431097 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.450912048 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.528722034 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.233153577 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.511381038 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.215205462 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.66225488 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.589761863 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.418831826 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.242007696 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.245380627 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.218562116 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.239372366 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.400968943 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.384949557 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.220467008 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.242532796 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.856484122 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.073743129 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.23674132 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.226607896 seconds)
  done (took 151.011472803 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.520007227 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.209128279 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.21054129 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.209308542 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.244841636 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.214677533 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.804740826 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.809255383 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.765517614 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.640256534 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.661060869 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.490324863 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.211155023 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.210579076 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.305277368 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.226431164 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.212324113 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.226929378 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.236555663 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.215770275 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.209620282 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.806788073 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.227265002 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.391340092 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.396419843 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.227931895 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.245260612 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.612737081 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.210416936 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.245278449 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.549912032 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.262453448 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.211555717 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.61403549 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.538618518 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.330626163 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.213138043 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.243605446 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.212205584 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.493798151 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.21204766 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.21326309 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.214558877 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.920183328 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.217764806 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.807543703 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.217074271 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.178845375 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.213961996 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.213353444 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.563266659 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.97868919 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.214271728 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.212506948 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.21593994 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.213242879 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.2131922 seconds)
    (57/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.212365445 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.247312435 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.494695886 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.316268853 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.213542527 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.215729175 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.247561676 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.212443236 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.800801847 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.21479435 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.638179122 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.274972075 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.441244736 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.807880426 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.218689562 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.312759165 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.336635296 seconds)
    (74/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.213996131 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.214119284 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.213711128 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.214265224 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.214422826 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.325461054 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.215084298 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.65548092 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.392832816 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.2320262 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.650923671 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.312635308 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.215391043 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.685787386 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.220208668 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.214191032 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.008930065 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.214309233 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.312168574 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.214305292 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.21552686 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.214514038 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.656077613 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.812642899 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.556742687 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.220430528 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.014732982 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.223930254 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.666978013 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.792414161 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.898021806 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.218004758 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.329235275 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.396245015 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.235143192 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.214706073 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.607239344 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.218133973 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.273907816 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.223197809 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.615627937 seconds)
  done (took 369.26449085 seconds)
done (took 713.4619347 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.830184221 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.81704853 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.934429404 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.812668406 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.77203247 seconds)
  done (took 10.31300306 seconds)
done (took 11.46116994 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.406644126 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.410989104 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.284464448 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.410882699 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.253429348 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.429313061 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.389697881 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.243386186 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.321292201 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.302736627 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.319688451 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.273147923 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.25334679 seconds)
  done (took 18.446955316 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.535723966 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.541500323 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.282948788 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.537744535 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.259568748 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.534271418 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.420053991 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.434942823 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.41506831 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.23214497 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.232095611 seconds)
  done (took 16.574043469 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.550693315 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.537293437 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.287054855 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.538179979 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.259131726 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.550487194 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.444953231 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.459814055 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.42078677 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.234015424 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.23203527 seconds)
  done (took 16.663417148 seconds)
done (took 52.833629702 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.230494411 seconds)
  done (took 2.379803152 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.264096491 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.432729758 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.251065766 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.236606617 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.233353441 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.23088614 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.236963741 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.228972782 seconds)
  done (took 11.266148389 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.229178091 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.229120161 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.228223994 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.226189386 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.229496572 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.225794687 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.228561448 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.226552845 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.228128157 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.227054797 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.230408169 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.227714312 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.225671095 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.227571133 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.229056609 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.226523672 seconds)
  done (took 20.797723295 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.227574409 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.22624445 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.225641136 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.227283993 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.226632266 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.22794761 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.228577376 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.227541048 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.227946405 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.226296715 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.229063974 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.226906108 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.22790729 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.226258976 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.227192536 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.22769722 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.227104741 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.2266851 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.231870489 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.228191468 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.227706067 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.227480061 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.227870734 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.228402131 seconds)
  done (took 30.615050976 seconds)
done (took 66.21212403 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.441163674 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.98004771 seconds)
  done (took 9.572693869 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.287956531 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.288793876 seconds)
  done (took 3.730153108 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.231203559 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.230170026 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.231343749 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.230368827 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.700532145 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.230191416 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.231092436 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.231662528 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.230875609 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.230874024 seconds)
  done (took 13.929575501 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.230361087 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.231700992 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.227203603 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.231221816 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.231398082 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.228935174 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.230933067 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.23117311 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.232201603 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.228137961 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.231910785 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.227388882 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.23190721 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.228865825 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.232199707 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.22978826 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.230279841 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.229526765 seconds)
  done (took 23.298061844 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.246074863 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.252052192 seconds)
  done (took 3.652744784 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.360836846 seconds)
    (2/7) benchmarking "second"...
    done (took 1.271302671 seconds)
    (3/7) benchmarking "month"...
    done (took 1.340403403 seconds)
    (4/7) benchmarking "year"...
    done (took 1.326334603 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.27048333 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.249936503 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.27031975 seconds)
  done (took 10.244271882 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.233157898 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.418656009 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.521414617 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.823538323 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.233910397 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.236028365 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.09436404 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.236619179 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.239400062 seconds)
  done (took 14.192197401 seconds)
done (took 79.774062453 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.271054407 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.231892371 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.511768271 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.235534673 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.245024366 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.524783994 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.232041254 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.353595116 seconds)
done (took 37.761919885 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.246528435 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.01025441 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.019604306 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.228020634 seconds)
  done (took 11.412400255 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.227161413 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.053707479 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.240138945 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.326227652 seconds)
  done (took 19.002140334 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.311044222 seconds)
    (2/2) benchmarking "read"...
    done (took 1.563535463 seconds)
  done (took 5.03117826 seconds)
done (took 42.848990746 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.235120858 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.234647129 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.232251339 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.235026776 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.232601852 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.232788605 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.232290175 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.233998058 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.23400067 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.234769889 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.234465948 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.233422439 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.234630046 seconds)
    (14/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.231524234 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.232485288 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.233118832 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.235157359 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.235118921 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.232415841 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.231904562 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.233038727 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.236148602 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.2314381 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.233361043 seconds)
  done (took 30.763439955 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.235864622 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.234595665 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.235639116 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.236938753 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.234529545 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.236605336 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.235740089 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.233434048 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.237032586 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.236720518 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.234391799 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.233309602 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.235430174 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.23374264 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.23590372 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.232941657 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.237452846 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.23396963 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.23688324 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.233625547 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.236903137 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.234420144 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.235150667 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.23836997 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.234774039 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.234572105 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.235237349 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.235874324 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.235889049 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.233484223 seconds)
  done (took 38.21760741 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.242315623 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.244953835 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.237916594 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.238981389 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.238027969 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.239610882 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.237713019 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.237634288 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.236787049 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.237544277 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.236829473 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.237138546 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.238207307 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.239707531 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.238870094 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.23884402 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.239218176 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.239390557 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.238354609 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.238819313 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.238204838 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.239047951 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.240386833 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.239606425 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.23834872 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.238966649 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.240445418 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.240393295 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.239347569 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.239246185 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.240337412 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.240964833 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.24059688 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.240238156 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.241000998 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.240063278 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.243753633 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.246629724 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.239492866 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.239684128 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.240927674 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.240042397 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.24057802 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.239486889 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.239081054 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.240664682 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.241119993 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.241722822 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.2421652 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.238952462 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.240391071 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.241824165 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.243236094 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.239622356 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.24021302 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.241292156 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.242098462 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.242028226 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.241946951 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.240939474 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.24147293 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.243340589 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.241690307 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.240988745 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.24174929 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.239576183 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.240826129 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.241790072 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.241526584 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.24082444 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.242256187 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.243918605 seconds)
  done (took 90.46365492 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.241592978 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.239291638 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.240420399 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.240886199 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.239996513 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.242530208 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.241382215 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.24320649 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.23985568 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.242930593 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.24166843 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.239847023 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.240245865 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.24266179 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.243672681 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.239832809 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.242629411 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.241065513 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.243110843 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.243970719 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.244147518 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.242204669 seconds)
  done (took 28.483796944 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.244552999 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.245237699 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.242032112 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.245329329 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.244476588 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.246418515 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.244477369 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.246744097 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.244634545 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.243003982 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.241887702 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.2436326 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.244540631 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.243398887 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.240785185 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.244241332 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.243026425 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.243535812 seconds)
  done (took 23.556696664 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.242904629 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.242129291 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.244721288 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.244709399 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.243055087 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.244841861 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.242450832 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.244333214 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.245530204 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.242789645 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.247816146 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.245806772 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.244876969 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.243938325 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.245285945 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.243698379 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.24574998 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.243205477 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.246156372 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.243897388 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.244734016 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.245865954 seconds)
  done (took 28.545171616 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.246416654 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.245191103 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.243859321 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.243670164 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.241473736 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.248092364 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.247150687 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.244923974 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.249063068 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.248069993 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.244648443 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.247820334 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.247210013 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.245289874 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.24426973 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.245593388 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.245865185 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.246210497 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.247984407 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.246290258 seconds)
  done (took 26.087953431 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.251437039 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.251924727 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.253369163 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.253788846 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.253717255 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.252777264 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.25307154 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.253721655 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.252565765 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.254556309 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.253162032 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.251846882 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.254107182 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.25596218 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.252920323 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.254870531 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.253356076 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.252890271 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.255540449 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.254615137 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.254594702 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.255622026 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.254643613 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.254487734 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.255398358 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.25536617 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.253954983 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.255310974 seconds)
  done (took 36.281684527 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.253161203 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.251924242 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.250107297 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.250105684 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.250150346 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.250012005 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.249946644 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.252641285 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.252836408 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.251452315 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.253058181 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.253415822 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.253019933 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.252613123 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.254013703 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.253016726 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.254619226 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.250016918 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.251948 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.250047212 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.253474975 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.254066097 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.25390045 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.249110155 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.251372593 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.253830739 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.250695765 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.251749726 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.254950965 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.253312987 seconds)
  done (took 38.740625529 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.297429685 seconds)
    (2/2) benchmarking "in"...
    done (took 1.297650103 seconds)
  done (took 3.771043762 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.253525439 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.25383365 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.252630897 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.252823501 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.252684793 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.253407651 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.25325333 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.251535189 seconds)
  done (took 11.199370714 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.254001406 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.25397523 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.253831058 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.255070236 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.258029594 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.253754176 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.261474445 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.274224425 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.253281854 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.252757537 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.260981191 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.260062573 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.255921425 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.253008901 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.255020282 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.256190862 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.254339077 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.256506669 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.256736379 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.253905657 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.256189758 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.25536434 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.255183412 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.25491574 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.255043357 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.264236313 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.257825791 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.255342469 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.25436244 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.25582308 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.254446913 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.251998698 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.25755356 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.258653761 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.255403158 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.256599349 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.26313438 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.278216026 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.259932221 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.25930093 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.255399989 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.251830396 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.257345562 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.257006077 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.256798776 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.256615967 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.255706083 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.254518603 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.253188161 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.258047472 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.260821031 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.2549751 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.253312386 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.258368785 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.254715692 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.260992457 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.277446833 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.259011134 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.266187018 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.264964742 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.268745828 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.263453675 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.258758365 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.260047524 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.266164183 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.282354459 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.26327725 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.272332067 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.253668861 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.255193897 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.262504709 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.268581894 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.282168397 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.259520831 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.259007094 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.256931863 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.256763137 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.257585884 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.263886139 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.278053402 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.25999946 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.261568388 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.267988636 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.280975768 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.25676206 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.261601836 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.261455323 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.261300602 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.259857952 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.268641071 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.278652934 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.257899462 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.257007391 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.259326978 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.259260736 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.262580086 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.256471012 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.258967015 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.25667929 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.258671256 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.261746534 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.263075399 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.267285681 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.261940378 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.263765553 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.264431955 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.258600026 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.2577583 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.265498849 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.258658266 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.262391341 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.26146833 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.264526922 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.256158009 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.263357381 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.268018627 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.261959524 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.259588176 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.262160067 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.26102724 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.270266706 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.287090166 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.258470397 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.260292638 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.265634953 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.274135761 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.260988616 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.261727412 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.260844175 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.256261872 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.257047619 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.261533753 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.260534826 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.259904941 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.263989927 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.261193613 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.257579468 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.261614764 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.263408801 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.261114635 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.260975991 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.262179385 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.261480848 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.262602998 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.263677411 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.263566495 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.268399825 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.262489456 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.262778695 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.263061616 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.25926631 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.262171964 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.261807451 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.263680743 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.259511448 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.265589048 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.262114557 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.264728991 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.26269541 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.263355836 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.263806141 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.262616001 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.267807565 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.265889982 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.265145625 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.263097097 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.259607793 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.263360906 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.2637657 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.260745884 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.26395668 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.262145849 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.266035079 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.27567033 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.26197377 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.266246976 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.266127468 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.265388848 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.266999899 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.266119934 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.266986756 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.271982141 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.266759958 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.270730734 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.266976664 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.26752593 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.264276284 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.26543004 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.262494225 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.267584914 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.267852458 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.273676779 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.277932945 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.291173178 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.265767556 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.268693408 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.264390612 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.271629413 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.266982395 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.269040597 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.265241527 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.26789487 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.265652623 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.267623124 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.265402841 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.267560978 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.265491801 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.267304327 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.266167974 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.269638005 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.266980715 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.26644214 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.266078037 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.263724506 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.266323491 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.269210957 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.266403117 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.264278553 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.265087706 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.265504602 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.266899232 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.270166644 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.273103092 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.265105329 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.266930919 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.267860698 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.267747848 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.264292821 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.268865804 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.27110919 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.26680794 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.273811816 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.286132445 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.267818797 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.274175465 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.284878844 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.2662231 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.26834294 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.269062008 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.264922489 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.269695488 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.275678077 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.267788268 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.271608511 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.271657838 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.267664019 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.2689081 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.273547557 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.265312667 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.267263732 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.268545403 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.269038926 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.26599461 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.270227469 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.267610534 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.267697899 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.269439801 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.26880793 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.270282929 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.270139934 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.270938939 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.271642947 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.271960672 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.27275177 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.279757164 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.273683672 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.268407888 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.269652132 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.269549139 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.273113453 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.269143649 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.271605223 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.26958911 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.281989795 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.297241698 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.275101452 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.270982626 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.27056315 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.274818886 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.271692727 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.273707315 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.271259497 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.269376344 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.269866583 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.26936186 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.269636605 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.27023561 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.271454548 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.271360958 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.271467683 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.275333232 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.271827339 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.270708701 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.274711813 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.274030346 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.272664324 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.270614777 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.272411394 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.272374918 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.273236225 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.270357099 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.270791052 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.277810724 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.292554139 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.272416357 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.272803323 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.270358128 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.271094793 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.273797417 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.274975798 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.274009664 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.284553152 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.277402431 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.281922342 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.273924014 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.282730272 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.276315599 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.27741241 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.285451807 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.272059037 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.271334114 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.273088295 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.276237404 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.27972492 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.296120018 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.27476977 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.282660179 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.277517969 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.276145177 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.274592221 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.276717284 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.274122172 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.275956773 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.283485992 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.298306122 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.277788877 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.276006805 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.271814979 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.278092398 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.275611249 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.273952593 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.277065573 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.278084771 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.274864928 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.273477829 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.275824546 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.276036757 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.278684129 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.276163532 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.272647229 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.275049426 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.28240143 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.297404655 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.283341328 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.276126059 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.282565395 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.279024912 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.282817153 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.298520173 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.276864854 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.278246004 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.275476555 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.274437702 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.275127196 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.277652028 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.278154278 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.276815854 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.279886022 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.278400048 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.277332583 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.27707447 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.279394987 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.274734855 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.285872005 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.303381408 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.277143208 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.281342471 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.27436882 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.27813076 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.284590173 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.279924958 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.275346465 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.280334302 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.288491545 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.285956015 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.278040201 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.28042356 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.276613524 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.279664983 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.277697216 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.278647419 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.281489867 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.278437862 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.277125189 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.281351293 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.279035095 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.278762827 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.27841089 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.278885096 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.279630309 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.288370901 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.281978924 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.278412394 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.281168178 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.280208114 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.278629591 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.278798301 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.281150369 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.279104578 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.279539048 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.279235592 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.286330249 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.286201359 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.280688028 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.279401307 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.281060344 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.279004505 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.28016895 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.282782924 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.281912046 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.283543533 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.281067863 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.281230771 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.279271584 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.277255378 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.281275522 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.279811749 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.27970782 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.283448645 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.288426175 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.280494895 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.279034391 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.279874775 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.281721919 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.278717764 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.280916827 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.285607362 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.284454903 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.292036409 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.289873499 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.288134215 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.27965944 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.283976706 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.288658945 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.280216021 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.281135118 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.284827682 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.280604792 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.282706302 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.284843602 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.283559627 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.287572047 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.280043437 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.281010528 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.288986928 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.304296241 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.284783979 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.2828708 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.286355412 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.280720887 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.279858952 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.28191769 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.282503581 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.287736083 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.301548363 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.28573909 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.282831925 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.282347187 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.283408251 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.289380492 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.282162264 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.283047016 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.281632051 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.282177845 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.285933414 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.281919699 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.279917801 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.2815117 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.281549986 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.287318349 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.289324832 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.282048065 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.284271057 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.283066612 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.283189943 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.286008171 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.283141683 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.282975924 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.282006752 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.282655557 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.28589828 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.283160166 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.286631604 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.282293979 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.284129398 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.28668968 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.287986508 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.287742769 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.293710465 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.29292816 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.281676111 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.283321094 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.284032863 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.285319689 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.288567486 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.287631795 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.285157834 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.285253984 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.286940855 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.288270083 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.28510417 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.287054646 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.302009179 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.307967037 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.284477661 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.285514241 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.288162714 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.284704726 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.284606372 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.286059409 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.287705358 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.289714471 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.297754977 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.289208171 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.291806947 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.306258459 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.287921829 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.292130717 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.28999053 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.293859322 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.288989514 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.291040832 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.290432685 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.291197553 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.303619062 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.28824594 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.297165358 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.318186955 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.30831993 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.288093186 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.292039429 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.287592994 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.290218527 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.288997854 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.290833835 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.289119699 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.288539462 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.290857777 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.288335106 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.292452644 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.288581324 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.290363096 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.288843016 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.288069941 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.288200076 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.28572866 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.291200696 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.289260951 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.291372249 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.291868116 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.292929458 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.289095327 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.300814718 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.317368063 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.290414581 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.292841619 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.286651657 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.293861337 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.2928346 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.300420956 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.298511552 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.291341522 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.293295784 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.292169188 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.293672313 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.289019451 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.292116766 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.288362104 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.289738388 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.28749714 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.303740816 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.303043431 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.295299443 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.289901433 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.294599068 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.291448557 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.289940846 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.295162801 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.295138128 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.290252126 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.295121669 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.298246537 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.290595941 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.291796682 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.294830741 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.300731678 seconds)
  done (took 760.933563771 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.290689532 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.289298352 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.289102894 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.289056813 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.288714022 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.288919893 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.287636754 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.28980155 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.288118921 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.290053266 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.288641105 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.289828188 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.289940888 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.290801112 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.290536479 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.291607702 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.289744063 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.289283318 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.289765624 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.290581942 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.29009897 seconds)
  done (took 28.292069008 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.293045836 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.290214153 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.290931319 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.292357808 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.29015507 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.293844414 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.291337043 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.294059527 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.293191079 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.291909791 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.294561967 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.293359256 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.29242226 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.292018415 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.291282832 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.293946737 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.293313442 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.290774748 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.294452026 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.292194812 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.293972407 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.291725463 seconds)
  done (took 29.644567737 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.296940956 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.297757734 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.291958584 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.29271109 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.294809893 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.291368696 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.297762646 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.294540668 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.294539475 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.293466055 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.294508094 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.296399712 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.302025987 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.299907771 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.294687338 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.295093545 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.439423662 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.297809262 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.29823086 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.299352581 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.293264851 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.301809407 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.293465141 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.294538693 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.294253731 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.299070341 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.295467142 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.296633366 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.298491945 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.296581315 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.303081913 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.297350801 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.29584776 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.29840193 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.295538631 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.297030055 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.300803457 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.299796371 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.29288888 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.29644406 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.306939972 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.320218142 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.301639353 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.30220072 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.296166142 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.296348411 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.299551842 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.309232571 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.294001154 seconds)
  done (took 64.942302164 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.296247746 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.298000098 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.29673294 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.299033258 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.298031041 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.297785565 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.297794491 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.297298926 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.295751535 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.295459279 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.298526547 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.296737599 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.295824656 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.298466305 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.297379683 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.296766416 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.295976742 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.295837806 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.297708325 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.295990142 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.296059379 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.299715214 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.299816934 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.296241436 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.298643463 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.296603504 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.296115971 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.301668094 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.298309105 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.29594137 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.300796116 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.299455242 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.30028948 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.29880983 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.296682484 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.300220957 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.300538441 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.297552339 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.300216029 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.2974373 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.300983711 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.300171229 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.30117965 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.299899952 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.297774959 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.299145293 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.297675878 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.298885525 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.29869101 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.300752612 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.303454902 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.300443323 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.302368361 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.298496621 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.301772988 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.300624426 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.298982941 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.298414153 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.301249859 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.29911492 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.299167087 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.302834325 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.29926263 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.302206492 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.300523085 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.300425769 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.299930346 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.302604207 seconds)
  done (took 89.537360332 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.305341389 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.304979644 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.304819851 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.305554557 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.30634694 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.305633145 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.304613525 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.305282024 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.304900333 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.304678022 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.305059704 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.302571461 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.304372593 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.30263405 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.305622675 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.303853327 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.304998694 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.305573923 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.30662257 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.306319023 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.304447662 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.304118563 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.306903003 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.307099333 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.307153835 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.305601863 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.306287985 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.306384586 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.30594755 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.306434278 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.305480278 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.305885138 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.305919414 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.307676044 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.307098658 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.307944805 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.307292887 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.305950376 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.30700655 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.306991883 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.306690741 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.30689649 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.30621396 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.305388627 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.306799893 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.306802289 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.306840572 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.306438939 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.304955177 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.307384928 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.309105199 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.309703947 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.307840501 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.308561283 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.307814864 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.305111742 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.308872334 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.308343174 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.308134695 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.308219003 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.308840965 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.306272294 seconds)
  done (took 82.208944953 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.304799068 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.306126979 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.304295832 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.303185403 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.305697008 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.305067671 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.304717953 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.306060427 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.304751705 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.30665651 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.308166863 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.304823135 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.306120273 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.308397485 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.305337186 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.305682534 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.304751226 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.304744182 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.307563562 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.303880037 seconds)
  done (took 27.332964971 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.30406531 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.307535761 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.305680505 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.306310747 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.307305246 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.305559344 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.307525077 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.307151205 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.305394938 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.308083085 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.308092963 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.308431653 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.304792691 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.306371294 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.307269789 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.307219759 seconds)
  done (took 22.129669263 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.306720742 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.307701716 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.31273528 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.312475346 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.306218177 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.307621963 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.309237909 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.305313269 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.305099821 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.308819347 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.307379794 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.308384934 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.309347149 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.312199957 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.306196411 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.30825162 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.306675884 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.306021904 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.308803121 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.310974375 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.307525184 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.307599634 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.311218161 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.309685206 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.307252117 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.306654872 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.306633136 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.308620328 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.306779191 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.311145364 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.308902103 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.308791165 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.307014255 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.308711963 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.314608251 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.308614789 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.311855446 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.31162429 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.31203884 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.311992292 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.310063718 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.310362396 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.312045011 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.310875543 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.309879009 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.31152166 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.308799753 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.310697354 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.309059018 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.31081805 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.311598513 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.3155487 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.311857802 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.312176983 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.311967371 seconds)
  done (took 73.244995654 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.313281769 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.312341681 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.309662331 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.314275925 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.313052942 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.311141799 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.313632361 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.312378305 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.31056102 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.313420747 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.312009524 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.31480444 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.311164328 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.313189277 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.313004919 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.313175485 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.310546551 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.311911578 seconds)
  done (took 24.853096221 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.312010916 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.310755381 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.313171153 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.311881303 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.311702113 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.31482509 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.312182806 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.313124177 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.313956072 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.312429393 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.312528852 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.315052133 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.314827425 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.316229231 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.312171556 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.314046015 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.315418875 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.316788183 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.312465536 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.313830947 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.316821122 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.316255847 seconds)
  done (took 30.134547127 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.314439667 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.313973645 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.315202244 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.33149901 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.33392711 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.33887389 seconds)
  done (took 9.180353211 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.324204862 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316635516 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.31533488 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31766457 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317478947 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315823227 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314248468 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316583258 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317449754 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314142656 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313143291 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317789989 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316217592 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314908393 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317050417 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318192314 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315989607 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314641081 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315219738 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317032576 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315299295 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317557305 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315107664 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31526815 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315180381 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314566116 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316025855 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313965769 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315289334 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318063712 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317274594 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315639053 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318722057 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.3158649 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319702285 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318890634 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316052539 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318289194 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318643427 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316982472 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.319235024 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318365537 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319292521 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317840328 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319818291 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316791383 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316701558 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317163392 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316515213 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320231252 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319164353 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316719049 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321108222 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320303477 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320625584 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320382955 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318249278 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318369221 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320896086 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31811966 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31863562 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320240563 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317816893 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317802916 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320486577 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319277288 seconds)
  done (took 88.213918933 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31815649 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.319172108 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319107358 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320332906 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319052152 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320214422 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.321127785 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320731035 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320216982 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320764705 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.32207981 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320425593 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321123348 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.321391061 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319699987 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320003505 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321284832 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319892444 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320172298 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323174094 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320279118 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321100002 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.32117166 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32047198 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.322808111 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323111952 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.321253263 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321359652 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31978517 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321620772 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320857393 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320992205 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.323316249 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.321203088 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321898041 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.321623029 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.322722092 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.322075652 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.321453978 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323691486 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.322184558 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323913802 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.321327253 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.321013305 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.323309911 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321985156 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.321279583 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32127456 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323845506 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322696066 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.323266672 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32299415 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.322898002 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.323602065 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322130584 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.322009456 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.322775235 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.323887742 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322371622 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.325462334 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.323303001 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322434394 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.325813472 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.323332597 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.32511961 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.323885326 seconds)
  done (took 88.477195695 seconds)
done (took 1776.394151812 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.362791559 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.426406861 seconds)
  done (took 14.030539232 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.485429341 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.443302622 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.321335876 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.317767002 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.321944338 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.344195132 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.321966036 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.321851415 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.319911439 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.320357423 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.322167455 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.529108187 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.349565873 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.321702594 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.320910715 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.416824751 seconds)
  done (took 43.029910163 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.352798896 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.329701015 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.453308113 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.349301984 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.351893677 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.529244908 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.388590866 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.327527102 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.521353888 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.373876795 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.035338651 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.35228743 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.327097949 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.541782218 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.347320746 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.528790597 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.601866673 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.144570991 seconds)
  done (took 31.095667503 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.833919751 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.338577537 seconds)
  done (took 9.413846101 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.322703953 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.33239697 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.326665623 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.328281454 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.337567849 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.575105336 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.447548693 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.449629739 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.326561978 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.518569364 seconds)
  done (took 65.215591765 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.348304212 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.327609043 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.329239038 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.324976121 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.318226857 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.337665743 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.325732323 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.321165977 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.434523132 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.471136925 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.32956023 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.335311002 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.347861908 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.32901333 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.324556949 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.36578191 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.484837171 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.325809706 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.3249353 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.33307497 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.328161196 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.422252398 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.374118716 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.326679046 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.467863935 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.446013865 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.335199103 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.335949473 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.466762658 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.327639882 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.329157304 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.328470841 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.329531393 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.952032815 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.782521331 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.340683405 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.37372189 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.337284402 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.328676046 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.488576109 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.329753183 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.335317243 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.32197033 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.788934778 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.466495652 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.452848796 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.745614943 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.336351182 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.331393853 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.394244631 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.329889501 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.333348298 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.361581273 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.131968654 seconds)
  done (took 112.363548581 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.362089552 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.715721007 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.494866958 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.342271884 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.049319977 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.116776279 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.341253222 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.641654935 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.361748842 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.324299147 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.616970874 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.86744491 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.346664937 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.329815322 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.590428873 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.39520775 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.323232978 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.212971322 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.342423876 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.329354767 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.844668989 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.329288024 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.324513319 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.492687433 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.364151284 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.81495948 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.874762246 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.926205891 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.349039636 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.324991611 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.826119236 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.349824153 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.33056366 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.328339348 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.602200069 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.715604181 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.686786691 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.328215976 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.360657396 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.326925957 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.341371056 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.804977472 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.697470299 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.325141114 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.326610642 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.808081943 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.324771685 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.325648713 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.32796797 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.536991724 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.268191636 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.327161014 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.879821681 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.325701772 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.610337232 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.346283083 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.399315439 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.839986219 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.326777407 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.53269873 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.356860585 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.325865571 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.325840078 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.327554856 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.327938742 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.705944322 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.440961039 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.327387212 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.703131337 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.822197605 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.34599347 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.918098468 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.232884846 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.348735059 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.425639017 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.327428765 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.019636641 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.852548584 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.337005812 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.327434697 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.690071796 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.330702536 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.619345838 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.344716772 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.328383324 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.85969012 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.334258914 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.369161707 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.32791052 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.345357757 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.046448191 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.332033907 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.610250384 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.366581888 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.328015823 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.329138283 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.351751181 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.327670123 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.328287899 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.33071163 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.896541566 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.349632238 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.326644741 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.352424167 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.343218278 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.329758907 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.332853032 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.32950377 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.558723178 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.784787836 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.338380844 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.331651282 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.336865137 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.333350934 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.501170254 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.332187627 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.667368916 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.329556731 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.331223567 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.333012734 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.04843604 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.360992132 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.331094391 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.334218899 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.247611444 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.539848468 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.349517431 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.331432989 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.330928874 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.331269416 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.699886435 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.351885131 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.389020966 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.332594927 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.075861798 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.386214901 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.351596397 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.934335562 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.339571524 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.33875481 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.340502562 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.33156363 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.629652172 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.612577999 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.369673117 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.344968078 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.332048039 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.046666053 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.385523774 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.481758521 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.350915719 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.335734737 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.530579325 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.673351181 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.332312746 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.955107994 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.331896564 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.556645091 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.332976917 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.641131101 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.860610216 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.351059783 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.340023686 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.068336629 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.055506412 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.182375337 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.333935198 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.622926797 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.307149035 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.811795784 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.332693417 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.333083564 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.859279043 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.33545 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.342315378 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.332975813 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.334686798 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.392785449 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.511053876 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.548998974 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.337768744 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.814577224 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.404803947 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.333404472 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.338832176 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.33730934 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.678328325 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.426592815 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.335741122 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.382568695 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.336387736 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.34308261 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.835848034 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.196733682 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.336188342 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.488970626 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.012044876 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.353435627 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.334530795 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.935428911 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.915886965 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.919947662 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.386361208 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.674300817 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.339050356 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.375447795 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.020280807 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.366924991 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.880006189 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.338678727 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.336348084 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.969071965 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.354751968 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.694051009 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.336297827 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.338603817 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.926865963 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.354250424 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.338194793 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.690625764 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.35881917 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.59514931 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.336943421 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.375054012 seconds)
  done (took 1113.033251997 seconds)
done (took 1389.424191034 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.337380236 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.336293062 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.329066201 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.340301123 seconds)
  done (took 26.600145258 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.345748867 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.341553099 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.346498192 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.34200602 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.344785152 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.341684733 seconds)
  done (took 9.320041104 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.581682335 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.337547845 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.343166317 seconds)
  done (took 19.519355303 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.568979737 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.729772739 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.719542386 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.810471395 seconds)
  done (took 11.085947684 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.348290946 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.349242911 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.35010987 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.347189149 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.349857874 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.350888913 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.347912329 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.346788892 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.351352006 seconds)
  done (took 13.400459971 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.819737475 seconds)
done (took 87.003927905 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.607012164 seconds)
    (2/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.494558822 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.463860613 seconds)
    (4/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.351645627 seconds)
    (5/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.327240702 seconds)
    (6/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.327975761 seconds)
    (7/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.747507996 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.586103974 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.629063422 seconds)
    (10/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 3.107008674 seconds)
    (11/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.340313055 seconds)
    (12/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.3282759 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.380042641 seconds)
    (14/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.366338224 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.366868876 seconds)
    (16/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.404421264 seconds)
    (17/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.400074269 seconds)
    (18/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.734629578 seconds)
    (19/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.349220003 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.710865378 seconds)
    (21/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.374236563 seconds)
    (22/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.358938076 seconds)
    (23/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.42694266 seconds)
    (24/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.366865328 seconds)
    (25/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.341816882 seconds)
    (26/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.329181884 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.033512821 seconds)
    (28/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.087088434 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.946803731 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.393643102 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.369165115 seconds)
    (32/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.450506284 seconds)
    (33/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.35082424 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.333928314 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.15828941 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.06098372 seconds)
    (37/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.632206547 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.779360295 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.405923862 seconds)
    (40/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.370780293 seconds)
    (41/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.368610722 seconds)
    (42/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.569801954 seconds)
    (43/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.359557212 seconds)
    (44/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.356970886 seconds)
    (45/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.455525715 seconds)
    (46/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.341925333 seconds)
    (47/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.641219537 seconds)
    (48/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.346336794 seconds)
    (49/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.046864394 seconds)
    (50/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.542598044 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.227136216 seconds)
    (52/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.361689293 seconds)
    (53/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.358677855 seconds)
    (54/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.840762092 seconds)
    (55/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.399876238 seconds)
    (56/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.061060819 seconds)
    (57/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.335498344 seconds)
    (58/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.009446216 seconds)
    (59/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.44829134 seconds)
    (60/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.345153173 seconds)
    (61/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.418470043 seconds)
    (62/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.370924582 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.420597029 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.449298878 seconds)
    (65/309) benchmarking ("sort", Int8, false)...
    done (took 4.379262966 seconds)
    (66/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.188015591 seconds)
    (67/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.330846452 seconds)
    (68/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.362750306 seconds)
    (69/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.426672356 seconds)
    (70/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.429055257 seconds)
    (71/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.353145689 seconds)
    (72/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.407521453 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.713970256 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.360676629 seconds)
    (75/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.353986354 seconds)
    (76/309) benchmarking ("sort", Int64, false)...
    done (took 5.638175969 seconds)
    (77/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.343621308 seconds)
    (78/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.283784928 seconds)
    (79/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.345278156 seconds)
    (80/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.105696962 seconds)
    (81/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.350948984 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.307167117 seconds)
    (83/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.333481969 seconds)
    (84/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.465143464 seconds)
    (85/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.904121971 seconds)
    (86/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.225408278 seconds)
    (87/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.579173699 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 4.05298601 seconds)
    (89/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.349417137 seconds)
    (90/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.366516534 seconds)
    (91/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.474977624 seconds)
    (92/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.542850189 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.764950832 seconds)
    (94/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.44614279 seconds)
    (95/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.569348782 seconds)
    (96/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.348184633 seconds)
    (97/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.379942658 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.791207313 seconds)
    (99/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.447678753 seconds)
    (100/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.340038987 seconds)
    (101/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.335256432 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.101058545 seconds)
    (103/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.340003718 seconds)
    (104/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.376871205 seconds)
    (105/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.562657341 seconds)
    (106/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.344391148 seconds)
    (107/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.388051598 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.237134504 seconds)
    (109/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.07864886 seconds)
    (110/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.348203695 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.354984377 seconds)
    (112/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.373176252 seconds)
    (113/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.882943112 seconds)
    (114/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.350001107 seconds)
    (115/309) benchmarking ("sort", Float32, false)...
    done (took 5.413566376 seconds)
    (116/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.659331983 seconds)
    (117/309) benchmarking ("sort", Bool, false)...
    done (took 1.890604581 seconds)
    (118/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.369510606 seconds)
    (119/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.345522441 seconds)
    (120/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.385440536 seconds)
    (121/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.472910601 seconds)
    (122/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.609397465 seconds)
    (123/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.364652295 seconds)
    (124/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.37734816 seconds)
    (125/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.187982402 seconds)
    (126/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.335372513 seconds)
    (127/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.335928247 seconds)
    (128/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.61105856 seconds)
    (129/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.376380637 seconds)
    (130/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.359404763 seconds)
    (131/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.916354853 seconds)
    (132/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.051007952 seconds)
    (133/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.908531378 seconds)
    (134/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.365022133 seconds)
    (135/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.456711042 seconds)
    (136/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.312267267 seconds)
    (137/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.337791993 seconds)
    (138/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.862513794 seconds)
    (139/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.016814259 seconds)
    (140/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.456768737 seconds)
    (141/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.34767384 seconds)
    (142/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.367768652 seconds)
    (143/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.349141662 seconds)
    (144/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.214928923 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.856725377 seconds)
    (146/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.380943643 seconds)
    (147/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.608993959 seconds)
    (148/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.064781066 seconds)
    (149/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.816973265 seconds)
    (150/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.194537825 seconds)
    (151/309) benchmarking ("sort", BigInt, false)...
    done (took 6.348076036 seconds)
    (152/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.463616273 seconds)
    (153/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.337077924 seconds)
    (154/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.40717844 seconds)
    (155/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.951402374 seconds)
    (156/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.376775154 seconds)
    (157/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.191345938 seconds)
    (158/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.373330684 seconds)
    (159/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.338192471 seconds)
    (160/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.569102184 seconds)
    (161/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.836128963 seconds)
    (162/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.461955033 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.40214667 seconds)
    (164/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.136321983 seconds)
    (165/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.198672799 seconds)
    (166/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.3856567 seconds)
    (167/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.376981981 seconds)
    (168/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.341917732 seconds)
    (169/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.363428565 seconds)
    (170/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.156562132 seconds)
    (171/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.342093529 seconds)
    (172/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.873365348 seconds)
    (173/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.346678494 seconds)
    (174/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.655227861 seconds)
    (175/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.679203316 seconds)
    (176/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.333676838 seconds)
    (177/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.347067886 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.835455841 seconds)
    (179/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.90115708 seconds)
    (180/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.268989755 seconds)
    (181/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.069800228 seconds)
    (182/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.423505433 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.378601424 seconds)
    (184/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.374341042 seconds)
    (185/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.95088335 seconds)
    (186/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.254935839 seconds)
    (187/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.339474184 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.477399916 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.313826247 seconds)
    (190/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.437838745 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.377576249 seconds)
    (192/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.181117107 seconds)
    (193/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.462675287 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.394744565 seconds)
    (195/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.452597671 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.367759246 seconds)
    (197/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.853573207 seconds)
    (198/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.340377315 seconds)
    (199/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.453011608 seconds)
    (200/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.743026098 seconds)
    (201/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.402787604 seconds)
    (202/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.439810832 seconds)
    (203/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.805455506 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.409775494 seconds)
    (205/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.378842152 seconds)
    (206/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.867591554 seconds)
    (207/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.467497727 seconds)
    (208/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.087099817 seconds)
    (209/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.455641439 seconds)
    (210/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.463245611 seconds)
    (211/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 6.020433269 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 6.155280215 seconds)
    (213/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.346931487 seconds)
    (214/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.362080459 seconds)
    (215/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.354254221 seconds)
    (216/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.199055168 seconds)
    (217/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.385031866 seconds)
    (218/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.353357289 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.437104905 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.563387865 seconds)
    (221/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.473631256 seconds)
    (222/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.38105881 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.121952759 seconds)
    (224/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.363595744 seconds)
    (225/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.637863315 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.402281362 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.614545073 seconds)
    (228/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.35883366 seconds)
    (229/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.360997751 seconds)
    (230/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.446155203 seconds)
    (231/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.860405018 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.31348243 seconds)
    (233/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.606867406 seconds)
    (234/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.378424391 seconds)
    (235/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.363024402 seconds)
    (236/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.35335225 seconds)
    (237/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.355849513 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.396263373 seconds)
    (239/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.466035085 seconds)
    (240/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.355253026 seconds)
    (241/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.343257001 seconds)
    (242/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.145615178 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.355973471 seconds)
    (244/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.344076389 seconds)
    (245/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.359647062 seconds)
    (246/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.632542981 seconds)
    (247/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.482831359 seconds)
    (248/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 3.000431283 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.639344648 seconds)
    (250/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.48459906 seconds)
    (251/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.276481331 seconds)
    (252/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.382924604 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.045668941 seconds)
    (254/309) benchmarking ("map", identity, BigInt, true)...
    done (took 3.064794239 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.387694739 seconds)
    (256/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.463754491 seconds)
    (257/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.354735732 seconds)
    (258/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.402748501 seconds)
    (259/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.374790907 seconds)
    (260/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.421984003 seconds)
    (261/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.355809517 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.604482818 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.007233406 seconds)
    (264/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.331937504 seconds)
    (265/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.290099519 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.383854804 seconds)
    (267/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.346670686 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.451548107 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.186900779 seconds)
    (270/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.083009194 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.742358144 seconds)
    (272/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.87954731 seconds)
    (273/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.346490042 seconds)
    (274/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.927804959 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.791958825 seconds)
    (276/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.509729653 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.382475791 seconds)
    (278/309) benchmarking ("sort", Float64, false)...
    done (took 5.728078911 seconds)
    (279/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.37700915 seconds)
    (280/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.385148038 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.34556909 seconds)
    (282/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.750024288 seconds)
    (283/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.442773503 seconds)
    (284/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.357570836 seconds)
    (285/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.346140424 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.367904123 seconds)
    (287/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.385533394 seconds)
    (288/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.357897383 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.46047344 seconds)
    (290/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.447727378 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.114101222 seconds)
    (292/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.4417464 seconds)
    (293/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.422979997 seconds)
    (294/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.476346876 seconds)
    (295/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.817547824 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.19883557 seconds)
    (297/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.368633449 seconds)
    (298/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.778078247 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.400912374 seconds)
    (300/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.359112538 seconds)
    (301/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.670627186 seconds)
    (302/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.225849654 seconds)
    (303/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.447865538 seconds)
    (304/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.77810634 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.436647757 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 3.025738232 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.388536641 seconds)
    (308/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.883607298 seconds)
    (309/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.29673095 seconds)
  done (took 1056.754547262 seconds)
done (took 1058.01701595 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.392282197 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.387147869 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.368072842 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.391411722 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.482310171 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.55190722 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.379871557 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.372267497 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.417252469 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.418518939 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.370210806 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.550921377 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.37185417 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.370795327 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.369349124 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.386582575 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.575758434 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.378407345 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.386789047 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.380795062 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.388365276 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.369470599 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.420944006 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.552661761 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.373752874 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.373132535 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.374992464 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.391616773 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.483201836 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.374130663 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.37257344 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.382345834 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.586928555 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.375320867 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.36641994 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.392108324 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.383389841 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.380931024 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.375709001 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.404118246 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 3.057933039 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.377600541 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.374033919 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.37368601 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.373709196 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.376184098 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.374386062 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.378403587 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.387441422 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.387711121 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 3.071449369 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.393200776 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.376481646 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.372984269 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.384307586 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.373697502 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.376768662 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.391369816 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.393873093 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.391423364 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.57577683 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.38437599 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.376867331 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.390632164 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.382742743 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 3.120818139 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.374794049 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.380531941 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 3.068057382 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.384357648 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 3.121076248 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.387014682 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.37593779 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.388373889 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.407772209 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.588729589 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.376351125 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.373846903 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.382406403 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.373781478 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.384120249 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.389193647 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.382066475 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.376913769 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.390410449 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.558095912 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.385130027 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.376946276 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.384579127 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.395541265 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.383359711 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.386806392 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.378308702 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.371604443 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.386811795 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.379293303 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.380049172 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.380233863 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.380508541 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.386454125 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 3.066786775 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.399853233 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.372460517 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.373947266 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.375947534 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.390744557 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 3.066701813 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.383291102 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.399012505 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.423459879 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.377004588 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.584295062 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.385063871 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.396062191 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.38570989 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.381579449 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.372376005 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.580571677 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 3.059993054 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.395772607 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.379298849 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.375814711 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.395254203 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.378489778 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.374552825 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.591454437 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.38506838 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.393722892 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.498134971 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.389080228 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.41049736 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.378195364 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.381735484 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.415757552 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.397410147 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.41055713 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.38151532 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.3976184 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.394755297 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.376429483 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.390374551 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.390107816 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.380349266 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.383728403 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.37350441 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.416060425 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.393842966 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.39373852 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.40020813 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.50014396 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.376951655 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.5844521 seconds)
done (took 236.007810514 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.438742308 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.376261911 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.471844912 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.377606037 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.483582568 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.480468664 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.375768163 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.374951799 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.373819984 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.75527887 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.373620704 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.375360625 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.368863227 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.375075189 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.45843806 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.378551037 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.374852651 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.719677181 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.381069188 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.449019598 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.370249104 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.376103614 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.377833899 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.76280394 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.378941447 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.375984825 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.448193094 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.379680261 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.726453945 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.373130128 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.374782647 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.726333424 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.468058751 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.396815854 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.388909903 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.385529952 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.482199237 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.400285787 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.461974567 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.462323133 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.474752159 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.420347517 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.37632681 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.38004563 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.380631797 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.384173189 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.377381896 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.407064975 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.373483791 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.378860185 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.722469046 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.390196405 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.378754781 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.378820652 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.377845199 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.412247813 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.378247228 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.384998824 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.470150598 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.383849544 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.442907837 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.765883574 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.759207218 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.380393545 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.377935162 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.37888718 seconds)
  done (took 151.504928007 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.448039342 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.453369885 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.500384844 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.382221188 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.432111176 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.505804092 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.381974121 seconds)
  done (took 11.395612261 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.387469725 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.382855137 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.432396985 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.431484439 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.38572858 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.560339128 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.38367391 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.394407595 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.3798495 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.435448303 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.383927811 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.383687642 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.389966367 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.381666378 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.43026862 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.394444396 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.497790839 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.383242064 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.386578315 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.538788043 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.381797824 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.390977845 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.435724231 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.393239154 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.384219721 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.388888469 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.205268416 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.386230064 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.381713114 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.38554054 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.381698039 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.460940074 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.384742022 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.38203381 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.382090156 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.498885331 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.386264918 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.382243149 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.384724873 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.383129915 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.385674048 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.384598699 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.385693953 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.38234199 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.384886949 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.407719933 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.384388933 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.384200982 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.384381207 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.385875417 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.434549162 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.38593033 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.383310238 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.383141575 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.439005514 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.391944264 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.388899959 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.381971111 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.3858499 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.383325433 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.541916291 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.43276619 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.386463463 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.4334047 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.386272379 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.387367887 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.385850159 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.385895129 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.44020943 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.386073573 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.433951015 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.384147372 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.57369711 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.410124363 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.389437187 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.390998085 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.388489026 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.389485068 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.385284046 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.392130838 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.383771285 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.387310549 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.392615514 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.384263382 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.384276023 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.555459425 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.495057483 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.384250202 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.399494187 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.39436182 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.383709812 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.440718929 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.387812276 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.384764707 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.439615095 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.500066758 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.439388833 seconds)
  done (took 158.66800095 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.392700636 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.394416678 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.389985826 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.409974082 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.388976534 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.387670332 seconds)
  done (took 9.661582255 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.391395249 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.389316641 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.389442187 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.388704178 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.390796141 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.388740163 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.391641013 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.390148771 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.396236469 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.388401267 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.388081739 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.399341059 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.389740635 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.392061481 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.393167016 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.389605717 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.393678278 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.387571179 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.388839105 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.392916991 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.493122756 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.393122915 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.393594955 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.391046248 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.395406246 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.390375081 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.398361573 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.390723204 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.391342463 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.398499868 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.39606476 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.391320113 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.390863986 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.397888674 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.397600549 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.392059625 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.395077874 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.403113736 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.387811226 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.391653388 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.403127029 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.395353603 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.391726079 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.402413538 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.393445568 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.396499896 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.407629471 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.399252324 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.394693783 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.402471591 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.403545997 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.39231797 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.392168641 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.403125466 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.393672042 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.415178316 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.407435107 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.395670391 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.395204053 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.392633406 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.394275197 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.392621175 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.394508122 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.399895827 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.391053331 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.40440499 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.393713825 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.400121272 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.396405605 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.392709947 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.404315891 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.391150134 seconds)
  done (took 102.832350026 seconds)
done (took 435.351418017 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.507552086 seconds)
  done (took 7.810092682 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.920816382 seconds)
  done (took 8.226069688 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.372368924 seconds)
  done (took 24.685933366 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.391569698 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.514330404 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.407913629 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.397625644 seconds)
  done (took 27.017380505 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.752407012 seconds)
  done (took 8.05741171 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.387304647 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.388356086 seconds)
  done (took 14.083414679 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.818828922 seconds)
  done (took 8.125666651 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.491063931 seconds)
  done (took 7.804311089 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.395007857 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.424112664 seconds)
  done (took 14.138539569 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.37623154 seconds)
  done (took 7.683555626 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.498777647 seconds)
  done (took 8.805875827 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.393696924 seconds)
  done (took 7.701805599 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.40460331 seconds)
  done (took 7.712481224 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.355975291 seconds)
  done (took 10.662906245 seconds)
done (took 163.818909307 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.389620803 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.393409285 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.395931014 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.391649964 seconds)
  done (took 26.877337803 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.429773833 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.430878901 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.432207079 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.441221699 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.432954492 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.430822514 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.424071361 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.423421934 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.440487123 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.433417064 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.431564952 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.437786296 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.432297644 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.423684066 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.43299612 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.432683846 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.442179739 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.432195785 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.423623498 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.434067709 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.398231289 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.442074605 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.433631042 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.398641032 seconds)
  done (took 35.625220022 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.922337475 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.467976266 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.550937891 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.4495191 seconds)
  done (took 7.698601021 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.449891828 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.452721966 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.467950854 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.505739675 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.535294136 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.461290631 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.420637111 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.42060605 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.407088624 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.453702814 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.525892667 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.467866189 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.553508163 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.398406378 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.612034329 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.400108451 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.399177326 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.45156088 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.502854549 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.52624872 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.401123964 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.45080576 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.456369323 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.469318629 seconds)
  done (took 36.499282323 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.400002044 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.417712272 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.39841281 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.397234715 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.407926208 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.399562864 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.400035272 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.400506979 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.399180962 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.405348323 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.39887277 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.413641724 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.39753172 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.400569056 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.404665667 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.400838733 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.404364814 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.398575547 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.400890557 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.406199408 seconds)
  done (took 29.362589429 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.393839386 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.3034505 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.744422372 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.648522267 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.394307746 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.396760625 seconds)
  done (took 29.192370523 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.481990877 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.631338447 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.401488936 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.813309402 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.8942461 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.403105239 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.403106611 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.674275595 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.04974776 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.045598361 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.465925499 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.479805457 seconds)
  done (took 21.057660408 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.410935002 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.394857617 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.408654751 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.411722238 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.462634353 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.404901529 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.407892333 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.395218741 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.466689577 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.468953039 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.40545691 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.466307074 seconds)
  done (took 38.416145919 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483950855 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.446980791 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.584533214 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.413576183 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.12456512 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.609640002 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.480918806 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.19139012 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.401148295 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.670369401 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395542967 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487041448 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.654664563 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397067388 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.400476797 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.542882753 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.629663761 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945374112 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399949055 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.914703354 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425064644 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.414407149 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.029585938 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.727115834 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.610754281 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.380901275 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.657920344 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.172574757 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.731295292 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.414651825 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408864426 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.397662938 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.671333248 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.117489278 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.494389741 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.638047705 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400973798 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.948218819 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.394625029 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.900951093 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.408306184 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.402196041 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412383571 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398735043 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.331818514 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.416039425 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.180497571 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.404760452 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.109978269 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.400113966 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.705408267 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.498750709 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.403726201 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.390727505 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.446127491 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.407129633 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.404183683 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.499382859 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973686574 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.472699666 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.419655167 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.334644439 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.403496717 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.013409874 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.080350697 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.407027626 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.403295388 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.402828009 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.335215204 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.833802397 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.417263561 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.538817535 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.426324907 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.064238298 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.220600708 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.407334775 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.332400971 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007530548 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.422814067 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.341325784 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.630716593 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.180961342 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.340747274 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.349894188 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.336301381 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.191329456 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411738682 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.949262228 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.422191028 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.170518414 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.645744314 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423476297 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424911051 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.626613882 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.288360843 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401863026 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.403681555 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.520513212 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424045926 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.16943042 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.337539406 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.40565963 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.661670159 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.614634112 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.414669808 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.545506004 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.939527051 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403806877 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.417210252 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.417766315 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.650555268 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.044764664 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.420834117 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.30857482 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421167529 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.179149813 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.240169273 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.42457815 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.411013735 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.416756471 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.68585132 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.296666365 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.288421644 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472945456 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.412574056 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.404176873 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.93150492 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.257078282 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.299766071 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.639852284 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.437323826 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.418022033 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.407831317 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.363840054 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.408289205 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40944812 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.185439112 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.629594272 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.410239413 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.681148743 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.340831272 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.543624978 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.421482784 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.630107254 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.810871698 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.414710303 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.668918512 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.423249656 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.408850981 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.42208118 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426247754 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.505290015 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42787388 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.421922721 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.66741248 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.410501522 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.411649622 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.930488767 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.185059953 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409574254 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.412755238 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408007171 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.068940223 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384558247 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.417080255 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.304889415 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.421651339 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476639277 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.415142675 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.653915699 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.500835062 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.410818832 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.435503682 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.422641302 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.634639568 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.418018524 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.944341769 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.492732382 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.936683347 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.068688869 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.425854044 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.342280911 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.119602005 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.102344362 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409054078 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.599610858 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.410501945 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.658107686 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.424891089 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.430846101 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.072185981 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.415796565 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.941558604 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.419070681 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.423774182 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.416573476 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411039905 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.523020988 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.515075698 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.414791765 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.425170505 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.552139689 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.425330813 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.344465856 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.927718995 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.417081617 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.412112893 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.186895375 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.445155512 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.962931398 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.288782625 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.672629726 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.435070084 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.720173451 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.132841189 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.448817515 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.41498744 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.423882406 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.425063226 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.429706664 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424183581 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.424455028 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.004026094 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.864087305 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981909256 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.256117195 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.02121287 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.820948133 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.416871474 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.312600923 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.183407179 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.349446555 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.073803536 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.638881479 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.191721322 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.370065924 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.947084667 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.816293611 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.295650545 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.723816279 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.648088101 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.922450694 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.432705631 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.725540141 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.630894838 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.449285702 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.425613605 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.347759079 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.7012974 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.029396111 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.425927189 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.492331738 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.196287503 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.415248932 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.196056572 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.483996547 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.35292214 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878313359 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.044990969 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.809368486 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.414779073 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.431169047 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.305314058 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.423756586 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.945170449 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.131132003 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.421507255 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.972768755 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.355290095 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.666454668 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.42920096 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.421840614 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.97945829 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.427675235 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.675815081 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.723649254 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.354790469 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.417657275 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.026380224 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.278288833 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.422598084 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.418927621 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.280752137 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.42212862 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.75367916 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.432394172 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.522696675 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.428312358 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.3522447 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.353346285 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.111426123 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.427540204 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389009376 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.98632112 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.424323693 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.443349332 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.423834762 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.270271509 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.676497499 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.433344117 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.086454788 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.648667129 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.442536409 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.44277708 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.423032912 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.429178862 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.409047555 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.314469935 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.655707713 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.463975805 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.644329976 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.592476576 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.33140953 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.511160232 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.631255062 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.302211859 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.420984415 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.691585729 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.129848083 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.422409532 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.273317288 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.44974253 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.426447386 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.438474229 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.42632463 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.442053366 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.491789703 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.673353869 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.434307024 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.432668764 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884739046 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.434871147 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.42477627 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.435149337 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.516382477 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.55297949 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.540278055 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.198458325 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.094773888 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.289062331 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.109271778 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.736364224 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.427681751 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.429502199 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.356321999 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.570983756 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.952783798 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.696857801 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.542708518 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.442171836 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.446403271 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.426193687 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.430202528 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.638418281 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.697490872 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.299220942 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.42363759 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.090989819 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.305682686 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.43482566 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.635811173 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.001309112 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.075858487 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.815271271 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.426572435 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.203063617 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.697933643 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.517037449 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.424290162 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.018200312 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.442285817 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.312578482 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.430344442 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.44131728 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.571257844 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.73303612 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.165482986 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.434404272 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.584465145 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.197775379 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.989127924 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.685774765 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.977014171 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.68087204 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.102468108 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.24277775 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.694444804 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.494404313 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.679875556 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.54235654 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.57328202 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.425052021 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.327637855 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.427342248 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.275721193 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.136312837 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.436423869 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.100772618 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.69420459 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.429975354 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.427866136 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.451573955 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.437914571 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.650899388 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.263999098 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.654574562 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.437507248 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.43613702 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.001273992 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.109488868 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.741469503 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.365079517 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.431500123 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.708781408 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.666589432 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.453311896 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.880621332 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.139353816 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.050543317 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.404996976 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.449348252 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.428721546 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.250694026 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.1075668 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.55653487 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.020781911 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.092593474 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.442501946 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.706677415 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.43302953 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.434927502 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.708069349 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.432353652 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.444686602 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.690139438 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.103940468 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.332721453 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.447559533 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.027136768 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.367394366 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.657792951 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.51677351 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.365739016 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.436117222 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.912807719 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.451945082 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.551037953 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.443530841 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.445888881 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.436839341 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.167465305 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.718644665 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.436943949 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.460319198 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.432987376 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.435120917 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.530244069 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.052222783 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.435621131 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.10386945 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.789281601 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.689833418 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.432156814 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.422476272 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.434936321 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.431722277 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.157039546 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.409643725 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.431104738 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055961908 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.434178332 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.46984741 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.436226568 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.648991595 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.644241415 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.449893131 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.690513381 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.445627721 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.450063677 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.345109655 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.205285633 seconds)
  done (took 1695.539258616 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.43193997 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.486823036 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.470007504 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.514705098 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.473406644 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.536774633 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.525976833 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.450323413 seconds)
  done (took 53.236352214 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.448480715 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.598926307 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.469611344 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.446592208 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.442695755 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.44994149 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.956191177 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.435190856 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.443951192 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.444403856 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.439093332 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.439377117 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.184529861 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.445610883 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.449709634 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.421368958 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.442206799 seconds)
  done (took 67.31169352 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.435323539 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.118101924 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.482540135 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.438217994 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.159902741 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.457976259 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.988671796 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.433309885 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.443580056 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.576391152 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.088779805 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.456239757 seconds)
  done (took 82.427153789 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.44519841 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.445446594 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.445566279 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.44559386 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.445475026 seconds)
  done (took 8.574067819 seconds)
done (took 2133.127659156 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.679461853 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.263780917 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.153735538 seconds)
  done (took 5.765951635 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.582378632 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.643733637 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.803436536 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.777508155 seconds)
  done (took 8.158436945 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.827570434 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.807943021 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.630553526 seconds)
  done (took 6.61678455 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 3.106065803 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.446891428 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.458068401 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.436516895 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.440179272 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.441533873 seconds)
  done (took 20.670800231 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.442060079 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.444671648 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.441967097 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.444490282 seconds)
  done (took 7.12599238 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.427145069 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.175636941 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.426956193 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.441812158 seconds)
  done (took 18.823932258 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.192890765 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.20043578 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.185662753 seconds)
  done (took 7.93033071 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.444136861 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.379025815 seconds)
  done (took 10.174101626 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.747375305 seconds)
  done (took 3.099683053 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.574900444 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.773197231 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.67888648 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.552496799 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.688987617 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.930393115 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.421042374 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.916137117 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.532356214 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 4.071225251 seconds)
  done (took 31.491894769 seconds)
done (took 138.897575987 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.766429253 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.462144606 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.642979322 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.741262676 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.67009569 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.641964601 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.718548826 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.708702105 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.254300994 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.242118121 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.747790896 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.666823633 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.889895406 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.461291879 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.893124885 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.461180047 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.674272077 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.829697502 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.431737006 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.454494762 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.714050136 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.382960469 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.575153888 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.405839855 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.670460777 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.599216761 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.960277061 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.461999619 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.451762182 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.986324921 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.601319535 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.440503594 seconds)
  done (took 200.961611916 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.442868445 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.441030444 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.441241787 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.471187428 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.44827687 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.453003272 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.442160087 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.460206698 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.446391875 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.457983984 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.453022337 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.442327476 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.444595585 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.441692246 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.444215362 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.441647664 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.440649454 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.441430018 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.442055717 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.453593583 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.443598637 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.441918704 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.441421766 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.45947239 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.442176604 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.455721263 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.442196561 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.455628285 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.446792601 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.456068433 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.459438119 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.442824487 seconds)
  done (took 207.692930595 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.441730872 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.456768212 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.444242513 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.442480889 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.464594322 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.443841049 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.445388283 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.443031336 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.460044584 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.452431376 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.442680969 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.465380567 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.464172326 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.443150703 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.445107825 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.443297607 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.4722758 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.444045746 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.463265137 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.471417988 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.446017317 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.443605843 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.444765673 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.445151172 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.448689535 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.44337211 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.463683494 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.443983248 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.446733651 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.444967946 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.444947692 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.465639445 seconds)
  done (took 207.78750211 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.642851993 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.45273892 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.454332376 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.418838505 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.453732043 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.452112517 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.444710182 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.651043933 seconds)
  done (took 15.328478246 seconds)
done (took 633.12522698 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.973829322 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.671658779 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.672909398 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.47823395 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.355063285 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.493929744 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.474549053 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.668151779 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.430571772 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.678840229 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.874691201 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.470107786 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 3.031052214 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.471836357 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.752738834 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.58348363 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.439860226 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.555143013 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.822699287 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.108002756 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.759098886 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.081571095 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.669825812 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.451462474 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 3.050332792 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.078851692 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.307934959 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.431414511 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.473051474 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.82745153 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.307907746 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.632152542 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.523982886 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.526140493 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.584036951 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.584770479 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.578313414 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.545146447 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.669593407 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.839302412 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.114656546 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.244492185 seconds)
  done (took 99.64952348 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.44552094 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.446062641 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.445369982 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.44632737 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.448959323 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.447070259 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.446135461 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.447341969 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.447200806 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.446594166 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.446008213 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.448546957 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.446993688 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.449896494 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.446331308 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.447070164 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.448149695 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.448642857 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.446722168 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.446616845 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.448965801 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.447697384 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.447554111 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.447003018 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.447835317 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.447732824 seconds)
  done (took 38.992482164 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.457288521 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.738482784 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.929236937 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.467849016 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.459851343 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.462774214 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.551358292 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.460835397 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.461254411 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.462279941 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.625664825 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.461205197 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.501410065 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.944330557 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.466369462 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.463614182 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.464175808 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.461868524 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.751795884 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.474802668 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.579915363 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.467172614 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.557535151 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.476678507 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.488796694 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.463396836 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.468040077 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.049458077 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.469844993 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.629479892 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.408916089 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.558884748 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.006799647 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.947407969 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.411074086 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.470967492 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.465246957 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.636329367 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.468497935 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.46503728 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.55509365 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.465627884 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.931633185 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.163177534 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.487829108 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.464857634 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.071711853 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.633199622 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.752021552 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.473740207 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.961847658 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.468654378 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.467523637 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.467207444 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.753260741 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.473687559 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.466365865 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.104543696 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.491673001 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.55724626 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.468943157 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.466628222 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.744462105 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.466102883 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.734313248 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.468195753 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.474466927 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.489916741 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.929715159 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.47024683 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.1892617 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.487776925 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.468247685 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.633461157 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.7375994 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.109926063 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.471733289 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.752045664 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.012874612 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.556610878 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.47238859 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.038605609 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.560353926 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.473367226 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.469676641 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.469535565 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.469328377 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.514986375 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.555883975 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.12258058 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.184896144 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.134223699 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.583231194 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.475889978 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.469677564 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.110551333 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.492337755 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.470742738 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.929962035 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.191055788 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.490900389 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.47844688 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.197642432 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.495174476 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.561530966 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.47770674 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.939842863 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.475079207 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.517892894 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.470397255 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.480304632 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.498201081 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.562466196 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.476708701 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.471445905 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.160408089 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.6676045 seconds)
  done (took 193.879641364 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.468905617 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.49373981 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.468149766 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.465807908 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.466381048 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.471894011 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.464337975 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.465309255 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.471296656 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.464916534 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.465567048 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.46785602 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.46810515 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.466307144 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.479293047 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.473451997 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.07885664 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.466857818 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.480027886 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.467651214 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.294588033 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.469088505 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.483529445 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.467913034 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.468345905 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.470371928 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.478483474 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.468991424 seconds)
  done (took 155.994015679 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.473882019 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.129385198 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.47822574 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.627953556 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.500212806 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.471664802 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.63234569 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.541097809 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.474634056 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.470974463 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.470558385 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.824563269 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.476563147 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.073599605 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.703705288 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.628574188 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.070752726 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.496030417 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.472366113 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.470819678 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.628203139 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.48856109 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.824299486 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.160844521 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.47591039 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.127891044 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.468267842 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.476215108 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.47455882 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.135735592 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.47603482 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.828355468 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.564067983 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.544822546 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.138015027 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.075814991 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.092556356 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.647810774 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.474482429 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.473549196 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.47409273 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.464969046 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.129515893 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.47774055 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.475660536 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.13249173 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.497648436 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.476153615 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.48117846 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.47730461 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.545591491 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.547572432 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.829178683 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.144337977 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.563960668 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.489939283 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.628827171 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.872905939 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.482559367 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.074510082 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.468891985 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.143152405 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.500428915 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.467472952 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.476338381 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.482022434 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.655375917 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.634909524 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.077074726 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.499295495 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.079290224 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.673397268 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.478346057 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.475586843 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.478730478 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.137989553 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.076559395 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.673352849 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.634683403 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.707103325 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.471810984 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.47766393 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.469237641 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.569539543 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.479801527 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.143901631 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.09882338 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.50273599 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.479509689 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.481248688 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.479934662 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.685032574 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.139623915 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.57197713 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.074780301 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.85356652 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.834113478 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.481906803 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.547434016 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.49796478 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.8362245 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.483191763 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.548857687 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.943191581 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.837660967 seconds)
  done (took 177.522981922 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.754633849 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.85533126 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.578444691 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.644665376 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.139549323 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.085302018 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.886869354 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.636042265 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.603710604 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.774613478 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.769547344 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.572543439 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.715457948 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.567695045 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.273340054 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.556412919 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.581915731 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.640820002 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.63127333 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.631270169 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.182745067 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.794040467 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.692248761 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.507432132 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.582499684 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.35164589 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.084108909 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.074104829 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.66997793 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.989890946 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.060832403 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.71749694 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.525811576 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.230075624 seconds)
  done (took 71.748490912 seconds)
done (took 739.147401029 seconds)
SAVING RESULT...
DONE!
