cset: moving following pidspec: 4938
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.592057302 seconds)
loading group "string"... done (took 0.522270857 seconds)
loading group "linalg"... done (took 11.150664456 seconds)
loading group "parallel"... done (took 0.183893613 seconds)
loading group "find"... done (took 1.329349501 seconds)
loading group "tuple"... done (took 2.297971652 seconds)
loading group "dates"... done (took 1.491237094 seconds)
loading group "micro"... done (took 0.205373005 seconds)
loading group "io"... done (took 0.57261016 seconds)
loading group "scalar"... done (took 65.574289722 seconds)
loading group "sparse"... done (took 14.967655754 seconds)
loading group "broadcast"... done (took 1.321982747 seconds)
loading group "union"... done (took 11.700453291 seconds)
loading group "simd"... done (took 4.115976771 seconds)
loading group "random"... done (took 14.819637344 seconds)
loading group "problem"... done (took 2.292592368 seconds)
loading group "array"... done (took 25.46357232 seconds)
loading group "misc"... done (took 1.190033682 seconds)
loading group "sort"... done (took 3.827930377 seconds)
loading group "collection"... done (took 24.506394223 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.662270697 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.144126533 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.232793797 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.347486962 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.236063343 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.164171511 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158977862 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.298664474 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.73232333 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.217179282 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.155606786 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.532385093 seconds)
done (took 6.647102965 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.25034681 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.298504472 seconds)
    (2/2) benchmarking "String"...
    done (took 0.173123242 seconds)
  done (took 1.127995091 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.093190708 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.173785817 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094331437 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.110660942 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.110432225 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.109587964 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.109235022 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.095458782 seconds)
  done (took 1.462376108 seconds)
done (took 3.601759445 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.535385512 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.848261002 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.540235317 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.161593619 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.304996055 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.312790468 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.296888546 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.202742704 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.106713575 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.105778141 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.174808579 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.413823867 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.403167478 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.982804085 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.106140967 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.095865836 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.128248774 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.762244516 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.079176808 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.133113635 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.547010102 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.187380739 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.115419289 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.132026259 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.198834425 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.118691147 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.174134451 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.102413736 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.662699705 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.129817334 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.196149598 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.098681383 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.160164457 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.221039957 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.215959591 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.108796912 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.673183446 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.200283344 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.097422073 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.099883727 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.686347997 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.127243238 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.164402356 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.103948982 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.089157646 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.182692669 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.11295374 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.094540966 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.094684074 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.10015053 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.16528813 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.475541833 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.093801982 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.170718038 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.095741695 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.704066181 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.096565211 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.276905491 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.134243098 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.107811704 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.07663049 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.103304736 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.156153134 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.106500615 seconds)
  done (took 20.352859152 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.165289979 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.169064643 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.095039694 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.141968879 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.14143007 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.096461665 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085949218 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.094688164 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.131353701 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.196173802 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.140606484 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.169356547 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.09151565 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.090672738 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.146096878 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.249309041 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.122521551 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.105048885 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.105376778 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.107858014 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.12540599 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.11329027 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.109575111 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.095135985 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.183348774 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.205055837 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.10870246 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123257459 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.104123433 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.115818753 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142008815 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.145914313 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.091773261 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.089304889 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.190815097 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.121708013 seconds)
  done (took 5.393367487 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.22685498 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.123313064 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.212150738 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.201190462 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.151541433 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.174162643 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137808442 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.306931994 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.25564142 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.184752642 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128592548 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.097084674 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096311621 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.086691205 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.115884165 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.098140866 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.527866326 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.194913733 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.125099576 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.16264428 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083426968 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.102225466 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.412941807 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098483454 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.078537329 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099757839 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.075488457 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.212624654 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082922692 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.196130112 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.084882623 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102028043 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132486549 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.191105354 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.138821339 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.126372787 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098840368 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.097471165 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.229941269 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.105147559 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.079314391 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.138921945 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13414429 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.118470891 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096942434 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.098877928 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.226571401 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.09334002 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.11695092 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.114274685 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.195527215 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.134635433 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.078724394 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.31833484 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.123662711 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.081111084 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.097062221 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.847652992 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.129912663 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.08026499 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.098352402 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082541834 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.096874262 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.431219869 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.097200931 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.12961116 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.082442279 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.159561169 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095211092 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.095906484 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10262531 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086151506 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.124997688 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079479845 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.097401095 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.079425229 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.0971701 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.08091057 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.141646606 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.100365521 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080471333 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.161041808 seconds)
    (83/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.081201945 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.107435266 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.122240835 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124455983 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.081712956 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.095856223 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.126052926 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.156418695 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080343478 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.099100603 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.166231536 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081241412 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.100791948 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.142475271 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.093610323 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.127470726 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.09297114 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.237768622 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.081717022 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.139730222 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099463232 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125985464 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.095660819 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097893593 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100469615 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.079338671 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.097996459 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.145479776 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.090353907 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.082746384 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.097909821 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.110909063 seconds)
  done (took 28.656931336 seconds)
done (took 55.06522829 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.495829423 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.115485131 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.115190846 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.097030338 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.114904438 seconds)
  done (took 1.688137114 seconds)
done (took 2.411612059 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.387466842 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.204720326 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.122249023 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.197665857 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.104765443 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.205645359 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.209434337 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.094172957 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.235502839 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.10155016 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.197874248 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.101341224 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088008844 seconds)
  done (took 3.003067924 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.102192465 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.131560295 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.101875588 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.118525226 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.100568867 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10046382 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116448694 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.114599223 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.116788972 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.110599855 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.083668409 seconds)
  done (took 1.92770799 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097468287 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.126054157 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.09742418 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11425892 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083987417 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.11502594 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.114012647 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.112185495 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.114169522 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.095788327 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.100392361 seconds)
  done (took 1.900442583 seconds)
done (took 7.549815023 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.13851756 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.011596537 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.15899878 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.203180173 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.382249007 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.260389078 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.615047198 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.173336382 seconds)
  done (took 11.843823443 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.181935437 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.08942346 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.107720404 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.107620467 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.090854565 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.108418818 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.089530729 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.105873452 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.090922236 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.104394192 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.090161029 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.10610258 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.106323321 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.091157505 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.106371576 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.089806555 seconds)
  done (took 2.466582891 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.143265824 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.143746469 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.096545931 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.11676817 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.09390664 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.110943511 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.112358217 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.096928573 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.108709507 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.10924537 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.099932863 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.112599083 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.097657678 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.10835483 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.112884883 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.099712642 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.109603705 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.113405388 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.098819599 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.112819373 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.11401706 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095937811 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.112748695 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.113378759 seconds)
  done (took 3.46615819 seconds)
done (took 18.505244944 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.169948333 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.10172684 seconds)
  done (took 1.015480821 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.152730375 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.153791033 seconds)
  done (took 1.052389462 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.115031304 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.104022153 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.143281431 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.122565246 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.090177631 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.104889642 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.137980948 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.092185898 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.106233226 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.105165657 seconds)
  done (took 1.871006605 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.093516908 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.108786821 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.100459613 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.165920145 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.101350255 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.110662391 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.0946684 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.11131519 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109549599 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.090449618 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.11326314 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.126544697 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.097927351 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.128732411 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.109742517 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.115161485 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.102865815 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.112608297 seconds)
  done (took 2.741998746 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.089375236 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.106795702 seconds)
  done (took 0.948457463 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.094820207 seconds)
    (2/7) benchmarking "second"...
    done (took 0.106069543 seconds)
    (3/7) benchmarking "month"...
    done (took 0.095055611 seconds)
    (4/7) benchmarking "year"...
    done (took 0.10982182 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.10573593 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.08974372 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.105627244 seconds)
  done (took 1.45781876 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.553044584 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.29197652 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.38676994 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.126390645 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.146686995 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.378500692 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.147963083 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.123168004 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.106320919 seconds)
  done (took 3.053287797 seconds)
done (took 12.890404449 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.091793953 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.23395815 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.633430352 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.129226064 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.090110944 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.159470307 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.296966064 seconds)
done (took 2.397194237 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.345031793 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.159005334 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.093152282 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.10484738 seconds)
  done (took 1.456017604 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081690141 seconds)
    (2/2) benchmarking "read"...
    done (took 0.113936468 seconds)
  done (took 0.955788124 seconds)
done (took 3.178007376 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088306909 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.10330456 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.089974882 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.102336092 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.087516918 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.10309537 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.087298411 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.103416122 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.086904038 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 0.103352382 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087491148 seconds)
    (12/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.138714697 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105036081 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087190571 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105069121 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.087874668 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105802439 seconds)
    (18/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087324169 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.102984914 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.086891626 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104014787 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.087060189 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.103180667 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.087689182 seconds)
  done (took 3.130852407 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.109954819 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.107267048 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.110020592 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.093946315 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.111987599 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.095233534 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.111055354 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.10645597 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.094761827 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.106236488 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.111409882 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.09674011 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.106589115 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.095186911 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106901247 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.111466701 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.095050903 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107461662 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10995908 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.096016709 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.110657973 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092547949 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.112465791 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111764918 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.095541892 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.111631843 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.106775651 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.091619306 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.1113624 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.095732441 seconds)
  done (took 3.891086483 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.097433719 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.101624923 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.08867797 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.111513308 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.086714221 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.107357369 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.085436867 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.10270403 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.089946972 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.104849809 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.091191434 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.104019268 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.085974839 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.105831159 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.091260148 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.108243203 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.11465928 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.08600693 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.102352349 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.089400334 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.107707445 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.086002701 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.104354272 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.089382525 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.104683755 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.085678727 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.105031517 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.088239127 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.104946542 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.089548721 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.107371842 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.10754039 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.088709533 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.112912329 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.091462468 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.105520243 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.093720213 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.102720417 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.091405877 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.102824706 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.086273585 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.105637336 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.086078328 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.112267888 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.105325651 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.090932774 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.102819413 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.090531902 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.10605957 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.092298461 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.101913855 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.086130454 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.108988355 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.091347615 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.108378635 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.08636578 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.10528039 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.085337702 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.106516823 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.088223205 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.101831746 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.085617059 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.109780558 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.106448518 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.105101511 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.112139914 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.087093051 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.107590129 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.090299011 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.110731182 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.10762903 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.100798512 seconds)
  done (took 7.870376543 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.101593549 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.11610576 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.092561864 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.107643461 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091869985 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.106295318 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113205702 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090256158 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10819875 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.099290977 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106238959 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.091493999 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108380546 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110044227 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091986175 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.109839625 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.100315904 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107333561 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.090457701 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.108413088 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107569803 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098050749 seconds)
  done (took 3.03795477 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.24409432 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.114874123 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.154328738 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.124720394 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.128291517 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.10605197 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.110993539 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.113650963 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094996063 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.117346258 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11668711 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094710248 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.129442226 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11889591 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100600144 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.118259646 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111466937 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.102813094 seconds)
  done (took 2.985463112 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.105909851 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.109630505 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.129936614 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092248155 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.109948213 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.092823144 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.116647744 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.124806315 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.092760333 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.108786161 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.120040705 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096544885 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.111519189 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092454231 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109351954 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.093178606 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.108843 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109442105 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102628889 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.116241126 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.11742827 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101987212 seconds)
  done (took 3.149168931 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107697302 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109052735 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.138095527 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.096855844 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.108367317 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.092412282 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.113874369 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.109724 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.100288947 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.110030761 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093466907 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.107896332 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.118001285 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093188543 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.116715429 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093002222 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108403483 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.094186523 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10960116 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.108458719 seconds)
  done (took 2.918457697 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.182355331 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10543796 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.122183039 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.135525331 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.106104249 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.12174741 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.13356309 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.106345516 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.122795902 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.137818828 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.123233153 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.105547377 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.13546188 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.1314994 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.105805573 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133942164 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.135992439 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.135179542 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.224876266 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12271792 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.137100581 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106495121 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.133970187 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.123034073 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.123780703 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.106050776 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.123210747 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114925471 seconds)
  done (took 4.384640045 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09053718 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.108009411 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.090075682 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.107028196 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.091302146 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.107882626 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.090569423 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.10714239 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090765735 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.106436454 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.090308484 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.107771571 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.089321208 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.107468278 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.091275601 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.107058239 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090828391 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.107176615 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090392898 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107373334 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.09086682 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108854096 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.090634341 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.107694079 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091008008 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.1087934 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090031997 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.10614171 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.089948751 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.106661941 seconds)
  done (took 3.761702865 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.10468415 seconds)
    (2/2) benchmarking "in"...
    done (took 0.12082634 seconds)
  done (took 1.019556442 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.098957456 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.125792641 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.090131545 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.108489915 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.11725011 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.090925821 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.119655117 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100310747 seconds)
  done (took 1.645011129 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.168123324 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.156212497 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.095274121 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.119973 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.155748344 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.157503911 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.155777811 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.095548205 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.106662222 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.081868712 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.146003289 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.101532226 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.108259112 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089733946 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.118573398 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097341383 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.108622017 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.099336502 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.114394142 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.110565391 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.096249376 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115077971 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.111090712 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.10229412 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.101792368 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094767093 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.113989115 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.120948074 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089162919 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.111210244 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.101301934 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.109086383 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.095915073 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.115270627 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.109478705 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.155519213 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100040341 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.116867297 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.091626443 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.115762611 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.117291068 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.092030355 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.11140931 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.089171686 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112074797 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.112937003 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.096086716 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.108956641 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.085753148 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.102056535 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.092105166 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104638122 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.090948105 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109896868 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.110740855 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098508877 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.110274063 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.086406414 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.103454059 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.1050602 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091366936 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.106072354 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094960581 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.112323803 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105690408 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.092403994 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.10937814 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.092337598 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.111776757 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.093354895 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.108600128 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.129762021 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.094638772 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.115061641 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.097113833 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.110144138 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106918408 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.098013377 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109974146 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.092893407 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.113141779 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.116392912 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090288214 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105359524 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.088715254 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.116555518 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.093201648 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.111096361 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.083616709 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11968165 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.111161325 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.092892846 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.103024954 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.091270561 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.114970734 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.094979559 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.102344754 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109747514 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.090643892 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.114725438 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.097820458 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103689746 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.112342063 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098393744 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.115968124 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.09179841 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.1506397 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.107314843 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088310157 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.112367695 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.116133027 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.086314776 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.114166162 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.090490773 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102880341 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.088395548 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.114470787 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.092647121 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.111376525 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.114109818 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090000922 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.112907114 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.094831424 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.109608036 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.0875892 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.11452543 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.118904369 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.096284706 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.112465876 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.092764966 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.110832878 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.093457461 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.114228928 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.107437152 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.097197976 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108603808 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.091413504 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.111476428 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.096836611 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.110915589 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.106134249 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.092337324 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.112134547 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.092873579 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.113259841 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.111429632 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.088602515 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.103640022 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.094248816 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.10645722 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.093320963 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.119014134 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.115341555 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.094427734 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.107030888 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103519145 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.106698231 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.115564903 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.095192509 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.11478251 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.098604266 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.101530589 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090191148 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.112388232 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.112793439 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.090836679 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.112999617 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.093164189 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.117442283 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.086385068 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.113620794 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.085545245 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.104620839 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.115291407 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.095460433 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.114381197 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.089499606 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.125843375 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105077213 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.117512356 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.109934029 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.091917732 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.115169176 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.095195935 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.115338169 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.118422681 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.097668091 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.108786442 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.091386141 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.11629749 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.087064673 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.114705033 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109263896 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094135346 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.102216102 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.094434847 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.102071553 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.097630883 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.113970851 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.09819558 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.115315898 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.121995529 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.093879261 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.120943685 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.100212281 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.114756181 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.085747363 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.114716486 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.121549862 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.098651735 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.117467656 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094559437 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109230449 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.111628962 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102820269 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.11300935 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.093004257 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.112395694 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.087214857 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.105399062 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.099858104 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.113320558 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.106609149 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.092322806 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.11357607 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.095393277 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.109419607 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.086553274 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.115023327 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115170274 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.089900061 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.112980544 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.089520367 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.110955185 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.119348658 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.086625663 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.107328767 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.095977976 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.1146642 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.109420386 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.090638129 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.113497013 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.099545224 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.113810505 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.094977811 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108662776 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100534422 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.109795782 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.109836153 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.09020052 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.11399554 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.086893239 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.114555052 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.093971375 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.109007279 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.107992477 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098265424 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.117462001 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.098726251 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110534952 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.09797561 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.117775312 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.11719426 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087269901 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.117250844 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.088659582 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.104677658 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.09101427 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.103288606 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.112633851 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.089501977 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.116072436 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.092841884 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111117053 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.09779364 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.11375226 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.110080729 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.098245895 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.123884333 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.105348276 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.086799469 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.111143359 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09431104 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.108358593 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.090436951 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.114208647 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112132223 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.098341468 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.115491126 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.087792393 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.111337379 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.098890711 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.108279292 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.117710619 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.099747805 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.117849303 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.089715485 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.117235182 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.090462917 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115323219 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.105378455 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094024943 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111005476 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09406777 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.109089256 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.110900796 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.089947383 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.106643256 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.091121443 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.118826069 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.087847831 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.116750208 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.110064593 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.092569383 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.106160766 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089425161 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.117809515 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.087611362 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.119190096 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.09436989 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.105717636 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.106935971 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.099912154 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113016481 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.099602781 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.108851418 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.096696979 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.120096861 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.096723782 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.112279921 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.120986396 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101329997 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.118731395 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100134177 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.103513327 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.109775037 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099086338 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.112666482 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.096227243 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.114124588 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.088691881 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.11431201 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.118209294 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.094859083 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.111268375 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.088130368 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.112259151 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.101714058 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.115521081 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.098302973 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.115640697 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.113834048 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.090760438 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.116339703 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.10005502 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.114178459 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10083145 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112999841 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.115970992 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.091122388 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.118815706 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.094941659 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.107273167 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.088137527 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.110840826 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.100282901 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.104453012 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.118513838 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.099123735 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.109858546 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.092721772 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.116785374 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.090331225 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111419039 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098331037 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.110139492 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.123320955 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.09545256 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.109915587 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.098998913 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.117474944 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.087589519 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.109795951 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107889941 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101517141 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.112362251 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.100179571 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114200033 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.099901554 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.116240628 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.117309902 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.099395915 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.119079989 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.087962256 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.121131493 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097512518 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.115196399 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.109860052 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093459437 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.106773141 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.093397263 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.120466904 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.092842719 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.123066386 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.119384027 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.092875904 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.112730966 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.099929508 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.11278749 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101262976 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.109169084 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112518464 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.088834464 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.116970346 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.094046067 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.11984404 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.091983725 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.108682717 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.117426232 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.099535351 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.118566467 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.097438095 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.119770141 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.088353037 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.10654533 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.096826305 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.109590749 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.1240482 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09191182 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.112328674 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09332959 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.11590343 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.113857761 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101253378 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.108271189 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.091214573 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.114779139 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095009004 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.108573624 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.088870642 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.116667315 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.113070257 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093950694 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.113145146 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.089103356 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.112790521 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.11997299 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.09326627 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.105977941 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.092237026 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.121460101 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.094850802 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.11133748 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.089360493 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.121065143 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.117321594 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102756923 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.108942108 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.114613294 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.093214798 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.117634752 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102530131 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.112780561 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095370898 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.112725195 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.119222473 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101258286 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.110178816 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.090084372 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.124442233 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099793966 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.115966013 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.116484722 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.094773407 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.121396737 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101771949 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.115951381 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.089586674 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.107796016 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.109402537 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.089309241 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.116361157 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101145666 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.11340757 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.092279639 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.118446932 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.117461425 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.09800132 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.11621376 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.089581339 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.122041002 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.092915844 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.117467429 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.088868132 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.107455046 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.096858489 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.119529422 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109592377 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.091738773 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.115469098 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097434082 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.109981333 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.093861642 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.11791045 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.117769612 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101826003 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.11346605 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.093231447 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.117318174 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106845314 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.115472309 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.094024739 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122471479 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.121386236 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097014137 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.11490278 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.119696708 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.101839704 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.117801737 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.103152376 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.113483631 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.091263084 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.122257573 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.121987887 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.105635615 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.115690244 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.087937623 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.118201482 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.089610826 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.110533543 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.119644382 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104259168 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.122015018 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.095269125 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.111818314 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104303734 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.11429844 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.115747809 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.094708108 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.113946432 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.099259263 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.112845606 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.098378807 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.113005224 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.12410957 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.102118891 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.121228658 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.103885786 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.10803667 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101176305 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.118357099 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.124137566 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.095514745 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.109411234 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.091241144 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.11939756 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.102982291 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.121798147 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.098268403 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.119207387 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.118277107 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.096157206 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.117702142 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.093377652 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.123287143 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.101854699 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.116312619 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.118120445 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.091421783 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.11202846 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.098283705 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.122661086 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103111774 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.11716442 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.126770045 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.103174897 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.115367656 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.094094124 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.117385938 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098142205 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.115626235 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.121280554 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.092864268 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.111317244 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100887564 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.123169702 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096066743 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.123346741 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.124814005 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.094422358 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.119212249 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104629718 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.123983953 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.098011659 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.116044022 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.09996525 seconds)
  done (took 64.103105107 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.167492794 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.105491417 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.118685726 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098866834 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.143786625 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120880846 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098178768 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.120558521 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.100411999 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.129944728 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.119244396 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098125641 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.137988181 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.147591199 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.142451607 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.132543358 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097806354 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.121135087 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099534733 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120789982 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.137884739 seconds)
  done (took 3.435596946 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.119325325 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.135602888 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.135192285 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.138051477 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.107211688 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.134194238 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.135534287 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.133980355 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.137849279 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109214932 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.138697909 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.135456362 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.129841359 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.109263665 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.130789203 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.131295322 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.119558637 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.130024366 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.13594104 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.136272172 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.110949289 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.135237312 seconds)
  done (took 3.704163524 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.104913318 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.121433454 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.094333422 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.119570056 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.101361135 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.119180165 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.100936005 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.118510105 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.106185114 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.112537311 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.088424715 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.112396676 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.095454113 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.118168587 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.112697159 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.098219738 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.127573923 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.101180888 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.123198466 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.098510057 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.109888988 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.098908233 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.118646961 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.089155559 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.123878908 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.122434053 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.099318447 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.123903393 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.09020171 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.122144301 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.098699296 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.113447499 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.089419694 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.110585339 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.090094706 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.121654556 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.101405104 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.118750457 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.097818778 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.11131771 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.100697406 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.123604311 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.110221886 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.099715055 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.118969963 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.094030314 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.122077115 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.098673902 seconds)
  done (took 6.075296385 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.134450525 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.176148268 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.103411875 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.1420967 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.139623154 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.134878934 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.103311032 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.162074877 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.10158957 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.126019421 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.144410235 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.12032985 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.126754215 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.130296094 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.105869166 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.124836174 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.128473415 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103822908 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.131846789 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.125351336 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.112369488 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.127050729 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.140442844 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.140296188 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108759825 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.125645021 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.126219885 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108795623 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.140016143 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.134510212 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.109782632 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.132210914 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.139362431 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.128682676 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103627683 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.126605183 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.143382617 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.10562734 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.126247452 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.123111349 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.105721313 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.13023545 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.106968512 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.141137746 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.12755211 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.128500743 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.105735959 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.122044378 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.139774108 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.105278268 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.134999751 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.141239425 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.12835816 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.10698656 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.130103279 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.141685367 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.105971413 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.124922996 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.127834731 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.118606424 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.123506974 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.132631682 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.120797012 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.125094616 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.133668646 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.142148391 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.107134683 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.128851867 seconds)
  done (took 9.630306603 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.130282412 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.130079216 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.142662187 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.14209857 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109466087 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.129472379 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.129495754 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.109042809 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.130379491 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.138200629 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.10909066 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.232660094 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.105456115 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.134919508 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.130815003 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108479481 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.12997944 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.130037862 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.107976541 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.129610873 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.129764719 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.12014189 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.128690196 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.140227352 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.143751718 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105044996 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.130274336 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.129404688 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.140598092 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.109776118 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.142567106 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.130972866 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.109587503 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.141149605 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.1436037 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.131245441 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10325613 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12959947 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.128916021 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.109099003 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.125802995 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.141158491 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108806092 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.12617464 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.131009367 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.109181164 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.142542835 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.14414992 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.13609718 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.137633123 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.109996999 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.140975208 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.130540959 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.109485235 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.141811401 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.149425331 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.141510036 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.141949541 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.130057775 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.120521978 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.142359231 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.150695931 seconds)
  done (took 8.963438086 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099543288 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.120743947 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.099375578 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.120496355 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.099238327 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.122625943 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.099694767 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.120759646 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099331042 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.12017912 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09900038 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.121815153 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098910696 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.122217661 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.099153698 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.120886581 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099496183 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.120727713 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09963165 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.120663251 seconds)
  done (took 3.105118978 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.110615755 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.142582801 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.102761108 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.132386382 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.125179192 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.111805374 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.12317281 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.124736191 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104148356 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.125808052 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.135846779 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.114937667 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.125160933 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.133645355 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.114167617 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.13367762 seconds)
  done (took 2.862930324 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.124382772 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.144037397 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.180530855 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.128014772 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104006751 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.133554525 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.125677414 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.103999753 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.125060107 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.108687537 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.129541397 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.107175639 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.125121289 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.1248159 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.103051281 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.129094604 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101850592 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.128405202 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.103128317 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.200712648 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.109079559 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.128830512 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.105622942 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.128206874 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.128675383 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.108829817 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.131611697 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.12529663 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.105723531 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.126185203 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.108073373 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.132820517 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.124203089 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.108219201 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.125935107 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.105021009 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.125915947 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.104408699 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.130317772 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.125684098 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.10530832 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.129732762 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.10417207 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.127726129 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.103368868 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.127880175 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.124904791 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.109953736 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.127434103 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.108729294 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.125438207 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.131487689 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.109158188 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.135009 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.132702481 seconds)
  done (took 7.627918226 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.116996012 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.127970396 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.116560834 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.124777142 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.127585406 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.106171173 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.128860247 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.108092767 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.127728464 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.102360319 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.12946509 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.129677728 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106297917 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.127864918 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.106795933 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.127612218 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.123761166 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106930794 seconds)
  done (took 3.055436878 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.108637821 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.125903931 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.109988504 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.126240297 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.103897325 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.126492978 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103648388 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.124205196 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.12560912 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.104269503 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.126018102 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.104151502 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.124770704 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.104907481 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.125896728 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104328843 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.126519542 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.124207971 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.103803836 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.124832595 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.103971508 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.126468144 seconds)
  done (took 3.476338181 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.116023337 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.182797304 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.13244403 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.194307052 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.122030881 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.122584606 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.110059658 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.122722193 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.141866676 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.101164343 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.121932032 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.100400756 seconds)
  done (took 2.484183894 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129204469 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.16305448 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.128504838 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104478602 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137926497 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132092768 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110429365 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132329716 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142467713 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.145985429 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110295544 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142001401 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143362388 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.144470103 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115742347 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13705876 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132382815 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110659202 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12866519 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.153510662 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132308701 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120620129 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132418139 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132548796 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110897377 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.144673304 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14206677 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.148171402 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111197668 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142557317 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137575541 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132865865 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121056349 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.147470291 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126323411 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144018831 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110720552 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.152223213 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13772481 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.144850081 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105908066 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138314366 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143374777 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.140504258 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120658107 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132165578 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139513877 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133568936 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111758651 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.160112934 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138088293 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.145102174 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137808781 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121474953 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141547263 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.161369241 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.148413059 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.143986139 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140218895 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.147190974 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122464374 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13763716 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.144178097 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.147508116 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139253562 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125385722 seconds)
  done (took 9.808318913 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.144942458 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.129507145 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133644714 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.147739318 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122885874 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13310495 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136196192 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110828282 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132602834 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129706809 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.178855485 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110987862 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143717606 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.145298514 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133872841 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11186732 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132615507 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.14542759 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10662513 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.159529187 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132101358 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.145316372 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144460281 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.144632629 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126332621 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138632822 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134544638 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111565167 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133352931 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134136853 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141583989 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111668266 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.145906955 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.129855214 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122969321 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134125248 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134252194 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.14104778 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111133214 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140452976 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.145879536 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.15392446 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112282411 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134319633 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.15000161 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133630673 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112976698 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130800195 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11261576 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128935987 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.148481303 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1499575 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.149612961 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123632703 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133219636 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133376399 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110969488 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13208782 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134857817 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116539814 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14389435 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134546537 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.161064152 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133996737 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111623829 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.14487351 seconds)
  done (took 9.758699411 seconds)
done (took 176.646753698 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.165926696 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.182304401 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.164025474 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.158148703 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.117595501 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.130719536 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.150944382 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.165637214 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.094859901 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.116566158 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.095243524 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.120737395 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.185615311 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.094755417 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.117851216 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.098337822 seconds)
  done (took 3.087133785 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.196247639 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.347764578 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.134629897 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.127410033 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101215522 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.119991016 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.103701767 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.128389336 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.122662694 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.108106234 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.117728091 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096467076 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.131269146 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.12013613 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.099755854 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.118775134 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.131374812 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.095645567 seconds)
  done (took 3.339376699 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.121578597 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.166449002 seconds)
  done (took 1.230215754 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.130820306 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.244802558 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.317980637 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.165823169 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.145737918 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.14277996 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.145679156 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.13577446 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.215103804 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.140338776 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.140050041 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098846349 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.14926181 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.130929715 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.139577965 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.098645581 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.153030218 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.138266427 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115128648 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.12707123 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.146168228 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.105408713 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.130816676 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.139195557 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.207612922 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.117234551 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.12787639 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.128533099 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.105607549 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.138357089 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.1275472 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.120081825 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.141108314 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.213610664 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.104500702 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.209023555 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.130797553 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.101899313 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.138067875 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.102182404 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.129831242 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.129938137 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.138112003 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.098477053 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.12850549 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.108739432 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.127283038 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.128160454 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.106297956 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.132719451 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.128979571 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.10420534 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.208119841 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.133123703 seconds)
  done (took 8.547417456 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.85981634 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.165785228 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.126650622 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.991025744 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.15315418 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117592477 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.839867783 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.149184912 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.312702046 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.847427253 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.143612623 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.139206235 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.264738458 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.296577986 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.386762598 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.390781517 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.753366475 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.117823781 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.157448174 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.176417519 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.136737681 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.153498663 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.149118114 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.678527792 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.104101287 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.125116507 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.135051291 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.137386806 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.185366175 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.103818083 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.130632738 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.231125094 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.324053639 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.242255837 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.103744754 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.124216823 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.102244819 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.223680489 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.308981855 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.25593417 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.215633257 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.1221654 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.101535769 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.134941635 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.147869999 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098756316 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.208510462 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.200076621 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.198060693 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.130507849 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.138076011 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.138451663 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.110998737 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.207145827 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.099724272 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.392749048 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.394228096 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.12297269 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137026176 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.139871521 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.304678512 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.102430213 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.260889131 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.15644725 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.247952264 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.101995442 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.936629281 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.214324427 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.102631661 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.132877497 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.13536099 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.109882011 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.134426726 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.212191816 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.638766183 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.138721724 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.1320323 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102829198 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.286732908 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.103602132 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.126109015 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.18963542 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.127286094 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.137280045 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.117883029 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.137280876 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.218675604 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.277039759 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.139320427 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.114139508 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.133250768 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.142229896 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.104265644 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.269506219 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.251968952 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.181579823 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.261811593 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.113219844 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.210399416 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.192821435 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.132241546 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.196210235 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.135913406 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.141937217 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.111401336 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.248188707 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.164029743 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.127598598 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.133081965 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.113401479 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.169947115 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.130069099 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.136975258 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.197081228 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.740433931 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.191109644 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.123499159 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106779202 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139157596 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.189429626 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.13549064 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.299285589 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115079772 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.215006355 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.136755399 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.099796974 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.13685662 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.187774046 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.136078628 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.138336064 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.111646918 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.138048531 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.294257222 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.252757983 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.138906572 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.290305978 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.222369606 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.135026912 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.202188085 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.137617979 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.19980845 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.138975414 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.134382722 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104233416 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.93122246 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.142933215 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.136873483 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.110281137 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.245930869 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.1259696 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104832062 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.126079487 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.100612862 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.915797511 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.129764569 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.10109077 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.127844388 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.134528755 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.113175571 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.137051814 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.133535355 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.186340563 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.266390137 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.138476412 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.135769942 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.102910338 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.210937576 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.105584363 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.127533519 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.103500708 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.126708624 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.137914337 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.110030791 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.130338364 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.202704188 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.20622392 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.254684885 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.776531731 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.125795649 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.127396996 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.267806562 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102601441 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.356955307 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138015635 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.262664986 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.193164193 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.12407098 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.392664495 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.220039784 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.245575408 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.106530625 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.222314635 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.10059306 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.137716946 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.185951753 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.127087055 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.11263427 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.20665448 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.141450816 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.116979948 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.378892814 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.127167765 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.282719791 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.124953592 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.197000201 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.130451651 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111857353 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.383246763 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.103174274 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.146744212 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.186361965 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.134104206 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.105342062 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 5.001541408 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.129002148 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.118211406 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.136155223 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.255339584 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.218043502 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.114509319 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.138806214 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.14033045 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.188773735 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.263129981 seconds)
  done (took 53.740115291 seconds)
done (took 70.878504192 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.324411648 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.290557246 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.348055287 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.214741273 seconds)
  done (took 2.232452089 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.219166513 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.167530127 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.197737063 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.09928606 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.198483924 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.122423013 seconds)
  done (took 1.987998323 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.52685593 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.403470095 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.341175069 seconds)
  done (took 2.252221148 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.28230593 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.300116057 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.337376718 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.516242647 seconds)
  done (took 2.520845748 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.255444872 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.15079782 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.146488579 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.196525977 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.215936686 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.218946862 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.128483604 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.172912031 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.147368479 seconds)
  done (took 2.663154604 seconds)
done (took 12.636701926 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.174519211 seconds)
    (2/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.341232523 seconds)
    (3/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.376196053 seconds)
    (4/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.192430286 seconds)
    (5/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.160246909 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.184227507 seconds)
    (7/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.101958835 seconds)
    (8/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.14059615 seconds)
    (9/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.334036165 seconds)
    (10/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.277894173 seconds)
    (11/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.205992935 seconds)
    (12/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.131723751 seconds)
    (13/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.30747613 seconds)
    (14/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.342056457 seconds)
    (15/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.372588244 seconds)
    (16/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.191916691 seconds)
    (17/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.268423124 seconds)
    (18/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.286888992 seconds)
    (19/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.223078634 seconds)
    (20/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.205113576 seconds)
    (21/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.17443531 seconds)
    (22/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.156210763 seconds)
    (23/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.365024278 seconds)
    (24/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.104713348 seconds)
    (25/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.258953804 seconds)
    (26/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.138519215 seconds)
    (27/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.141309093 seconds)
    (28/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.216374381 seconds)
    (29/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.250764184 seconds)
    (30/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.320290219 seconds)
    (31/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.212441818 seconds)
    (32/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.115921915 seconds)
    (33/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.116476639 seconds)
    (34/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.199860162 seconds)
    (35/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.118831779 seconds)
    (36/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.15432769 seconds)
    (37/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.110897829 seconds)
    (38/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.129199585 seconds)
    (39/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.130090069 seconds)
    (40/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.139947333 seconds)
    (41/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.280685832 seconds)
    (42/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.253052103 seconds)
    (43/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.217140151 seconds)
    (44/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.140828552 seconds)
    (45/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.101590212 seconds)
    (46/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.203855972 seconds)
    (47/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.281430263 seconds)
    (48/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.140937505 seconds)
    (49/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.241730455 seconds)
    (50/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.136648876 seconds)
    (51/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.161998007 seconds)
    (52/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.088254879 seconds)
    (53/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.240255401 seconds)
    (54/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.115034866 seconds)
    (55/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.167677171 seconds)
    (56/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.248311422 seconds)
    (57/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.286513017 seconds)
    (58/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.251158456 seconds)
    (59/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.203693671 seconds)
    (60/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.111961661 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.164289918 seconds)
    (62/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.233346684 seconds)
    (63/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.195737596 seconds)
    (64/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.302570233 seconds)
    (65/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.112010316 seconds)
    (66/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.172451675 seconds)
    (67/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.100672852 seconds)
    (68/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.127577617 seconds)
    (69/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.113448732 seconds)
    (70/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.116536119 seconds)
    (71/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.088714351 seconds)
    (72/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.129202276 seconds)
    (73/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.106092845 seconds)
    (74/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.151150048 seconds)
    (75/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.254265896 seconds)
    (76/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.205107432 seconds)
    (77/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.110605432 seconds)
    (78/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.238833303 seconds)
    (79/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.154632593 seconds)
    (80/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.090167508 seconds)
    (81/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.091357082 seconds)
    (82/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.234635002 seconds)
    (83/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.341950602 seconds)
    (84/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.106138611 seconds)
    (85/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.189992035 seconds)
    (86/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.277288298 seconds)
    (87/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.102008016 seconds)
    (88/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.117287272 seconds)
    (89/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.112531349 seconds)
    (90/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.115411511 seconds)
    (91/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.236232975 seconds)
    (92/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.176649673 seconds)
    (93/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.11713852 seconds)
    (94/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.12134127 seconds)
    (95/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.128815793 seconds)
    (96/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.138571888 seconds)
    (97/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.089211858 seconds)
    (98/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.093013068 seconds)
    (99/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.146342162 seconds)
    (100/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.130737647 seconds)
    (101/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.189097562 seconds)
    (102/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.157874523 seconds)
    (103/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.09122585 seconds)
    (104/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.118429986 seconds)
    (105/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.247151335 seconds)
    (106/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.091153668 seconds)
    (107/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.089960731 seconds)
    (108/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.116937298 seconds)
    (109/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.089728819 seconds)
    (110/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.115783678 seconds)
    (111/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.089547619 seconds)
    (112/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.089622313 seconds)
    (113/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.114388866 seconds)
    (114/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.110831121 seconds)
    (115/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.141510374 seconds)
    (116/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.138011994 seconds)
    (117/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.092977985 seconds)
    (118/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.138829522 seconds)
    (119/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.171598627 seconds)
    (120/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.12671633 seconds)
    (121/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.092269383 seconds)
    (122/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.092186611 seconds)
    (123/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.138222547 seconds)
    (124/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.100027831 seconds)
    (125/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.117995932 seconds)
    (126/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.08961027 seconds)
    (127/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.182313428 seconds)
    (128/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.108416924 seconds)
    (129/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.11704363 seconds)
    (130/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.088627014 seconds)
    (131/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.138315197 seconds)
    (132/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.107050814 seconds)
    (133/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.251122704 seconds)
    (134/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.13273783 seconds)
    (135/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.100097083 seconds)
    (136/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.249706618 seconds)
    (137/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.132848019 seconds)
    (138/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.126423029 seconds)
    (139/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.156524529 seconds)
    (140/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.089631919 seconds)
    (141/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.13840112 seconds)
    (142/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.092278012 seconds)
    (143/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.091906672 seconds)
    (144/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.114932054 seconds)
    (145/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.115900269 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.131763775 seconds)
    (147/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.136922995 seconds)
    (148/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.092315411 seconds)
    (149/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.232275172 seconds)
    (150/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.091286826 seconds)
    (151/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.129476094 seconds)
    (152/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.090484863 seconds)
    (153/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.11585188 seconds)
    (154/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.100563446 seconds)
    (155/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.131027891 seconds)
    (156/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.102964078 seconds)
    (157/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.114902398 seconds)
    (158/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.090666638 seconds)
    (159/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.104165456 seconds)
    (160/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.129442508 seconds)
    (161/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.132822196 seconds)
    (162/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.089055505 seconds)
    (163/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.137695302 seconds)
    (164/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.101231686 seconds)
    (165/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.090043079 seconds)
    (166/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.157951561 seconds)
    (167/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.091636392 seconds)
    (168/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.141702347 seconds)
    (169/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.101828614 seconds)
    (170/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.127834799 seconds)
    (171/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.090441385 seconds)
    (172/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.117405166 seconds)
    (173/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.106711494 seconds)
    (174/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.24549838 seconds)
    (175/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.131925832 seconds)
    (176/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.103888977 seconds)
    (177/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.198719703 seconds)
    (178/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.090733941 seconds)
    (179/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.116389096 seconds)
    (180/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.106844809 seconds)
    (181/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.116246863 seconds)
    (182/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.090003896 seconds)
    (183/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.150932995 seconds)
    (184/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.091648638 seconds)
    (185/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.090502377 seconds)
    (186/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.131699792 seconds)
    (187/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.090390072 seconds)
    (188/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.140691335 seconds)
    (189/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.10292128 seconds)
    (190/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.116463378 seconds)
    (191/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.090401592 seconds)
    (192/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.091517651 seconds)
  done (took 30.970568389 seconds)
done (took 31.964065483 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.240100451 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.11906219 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.140359592 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.141587184 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.197190194 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.115159267 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.155591551 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.142489035 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.121760029 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.140431303 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.105135176 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.1486904 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.140957159 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.205403013 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.117598441 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.130977297 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.131974502 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.125282335 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.15655693 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.12883221 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.223021647 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.105972175 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.152151865 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.106305507 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.200653301 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.133408088 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.14048355 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.116255577 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.153750666 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.11597404 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.140236587 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.131719766 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.127485475 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.153391869 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.1047654 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.140183275 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.105139544 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.125822857 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.141393474 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.115236122 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.150803442 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.115978387 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.139939429 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.133452906 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.115455289 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.141180222 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.105508059 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.145522302 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.129924856 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.116174221 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.133416538 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.128745737 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.139310694 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.104410227 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.130718062 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.133399653 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.12182059 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.131594919 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.128743466 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.130857635 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.107876967 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.131726774 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.143829415 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.105506424 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.140196874 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.105800939 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.140660139 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.14343936 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.113290857 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.133794661 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.106015789 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.1409248 seconds)
done (took 10.771798276 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.108811276 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.182991351 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.200745538 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.20763092 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.160224263 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.149758485 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.120070447 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.157325049 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.145881997 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.142914351 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.169217352 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.164474361 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.208987499 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.148553616 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.147874401 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.116519578 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.144551765 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.112087201 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.203801096 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.155603032 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.160439771 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.148200593 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.136318331 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.147235453 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.136563835 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.14241626 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.140236982 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.143845692 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.11026116 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.144927625 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.156787799 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.110211745 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.139544845 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.125783469 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.151546907 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.146642164 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.122200118 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.144400138 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.137129343 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.110302187 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.148047523 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.122466442 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.135939492 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.149079211 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.118231231 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.145148063 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.143659459 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.119365598 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.139833648 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.118309225 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.138002154 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.165214491 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.123049736 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.148386662 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.149275607 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.118861773 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.146024022 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.119388242 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.139759979 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.145322159 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.110433825 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.1364402 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.112981331 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.160397678 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.140793578 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.120341157 seconds)
  done (took 10.455133837 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.130239022 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.171935236 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.148715818 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.149426712 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.117951157 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.129507643 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.103247061 seconds)
  done (took 2.011416608 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.104854987 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.206675668 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.204305931 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.230990957 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.202662073 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.215773624 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.154968375 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.105202419 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.169455285 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.143636156 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.206140453 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.23723714 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.143122437 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.358527627 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.235863943 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.104779329 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.209841587 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.131749029 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.119877852 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.233909462 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.124253335 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.163439131 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.149231483 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.106179649 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.199372421 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.133553825 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.258121307 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.15193924 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.140979538 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.118833545 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.147285757 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.213684577 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.201272298 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.146389599 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.112792208 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.231373008 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.20212419 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.120045737 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.242334095 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.109782734 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.218536755 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.147672949 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.12049374 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.148190676 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.146492194 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.189794424 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.125470298 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.150168331 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.14516863 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.208878882 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.144149401 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.202744799 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.117415607 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.146761464 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.117895854 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.148324052 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.153011966 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.120756083 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.20800699 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.149740696 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.2023323 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.203354928 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.200676875 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.230349852 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130897451 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.204176862 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.199039512 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.146147242 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.141614212 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.120944892 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.205108405 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.147184572 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.148571156 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.191547705 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.122792143 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.230983067 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.204505263 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117722454 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.147088029 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.111059955 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.146075284 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.13339529 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.194032182 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120197337 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.144633569 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.153901319 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.119981936 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.148554506 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.111928614 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.15734987 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.147242442 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.146205897 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.126606432 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.146861688 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.150101444 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.208304079 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.145589597 seconds)
  done (took 17.073290092 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.107869339 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.134964101 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.113740927 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.135580201 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.10905641 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.13471732 seconds)
  done (took 1.808887284 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.135616674 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.150145065 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.157472424 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.124097288 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.198126311 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.209605889 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.237636184 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115130004 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.165970555 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.159867446 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.211117084 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.213674255 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.208611057 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.152298021 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.216399876 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.151843612 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.215790981 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.120494538 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.159339907 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.14660048 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.12359242 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.15125048 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.145679687 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.198118339 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.12429287 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.151498628 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.144392341 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.129996992 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.15698988 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.141895205 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.125498437 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.150694619 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.138924134 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.117030975 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.21471185 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.138895157 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.145489214 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.126541444 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.152128285 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.15108555 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.214960477 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.118911892 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.157390287 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.154147864 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.117279229 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.138811342 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.153844465 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.118092285 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.241124169 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.126537901 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.154216658 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.15169426 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.124271283 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.152538083 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.139075068 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116272508 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.153290106 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.213976575 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.152805073 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.113011128 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.151517103 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.151880034 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.116438806 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.154811821 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.152474158 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.126936681 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.139876905 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.152245567 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120736235 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.150342866 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.128259849 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.150621052 seconds)
  done (took 12.165441444 seconds)
done (took 44.560210711 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.281701878 seconds)
  done (took 2.360054333 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.975776979 seconds)
  done (took 2.05419323 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.779064309 seconds)
  done (took 18.897719547 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.587198325 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.67435165 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.169109733 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.156081179 seconds)
  done (took 3.667866555 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.084611013 seconds)
  done (took 2.195772766 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.354168298 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.30139906 seconds)
  done (took 1.740378782 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.76236655 seconds)
  done (took 1.858772205 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.544500054 seconds)
  done (took 2.632599408 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.382336694 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.214395706 seconds)
  done (took 1.702811208 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.696656738 seconds)
  done (took 1.795739728 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 17.245088255 seconds)
  done (took 18.34805115 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.247888988 seconds)
  done (took 1.360722831 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.324470134 seconds)
  done (took 1.435227429 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.75508452 seconds)
  done (took 4.860577413 seconds)
done (took 66.004290771 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.117538624 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.148119662 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.121046468 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.144733825 seconds)
  done (took 1.628544143 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.126973466 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.14949726 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.126869492 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.147723645 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.156849209 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.122180724 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.149371001 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.151103086 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121288805 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.150980782 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.122628869 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.147870979 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.151853321 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.121394952 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.14660813 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.12399401 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.152309633 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.149954248 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.123968736 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.150397584 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.12305261 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.150399019 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.153590444 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.124680886 seconds)
  done (took 4.453466281 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.116784798 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.138876111 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.113742749 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.138247653 seconds)
  done (took 1.623796892 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.130283592 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.162478728 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.133199535 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.155706452 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.163448057 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.133627428 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.148320461 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.145660466 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.12166521 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.158120088 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.166012799 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.135592819 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.16240925 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.152150504 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.13259528 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.145094324 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.122190828 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.161387112 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.156788994 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.130872777 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.149595369 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.129128002 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.155830689 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.158296526 seconds)
  done (took 4.622435245 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.226301599 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.135680044 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.174458737 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.194930663 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.184577601 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.121084742 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.180724214 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.15616778 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.128786759 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.152311042 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.152702506 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.198369833 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.128170978 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.150924288 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.12242419 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.155143643 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.163591377 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.156365594 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.193856501 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.127219865 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.157170993 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.164337637 seconds)
  done (took 4.641725902 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.124916992 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.140699754 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.109382921 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.139791827 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.153064665 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.115590784 seconds)
  done (took 1.901844502 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.119781009 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.133774924 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.112080734 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.136806991 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.109964874 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.132636654 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.106230667 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.134045953 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.107387053 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.13388603 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.110539484 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.133307514 seconds)
  done (took 2.595468136 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.330904437 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.111321247 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.142948144 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.137536421 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.119405224 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.138547613 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.125143494 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.138451448 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.252870357 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.139786179 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.152598774 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.218287222 seconds)
  done (took 3.128673289 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233069888 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12391555 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.351458822 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.417836688 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185713188 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.201265726 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.303578632 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194412883 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.244602422 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142075748 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245183616 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162885536 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183570613 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222676769 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172082393 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.205270147 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206206805 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.250537503 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171880165 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.277169236 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19373185 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.210908017 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.223510523 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182501625 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170701838 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181942725 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.123278406 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158593875 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201039485 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199279488 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204080595 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183858925 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172854085 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229812328 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216861771 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23548881 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.296205803 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160652953 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.248799656 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.223918151 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.311203192 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14432049 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.252697413 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155693176 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160816216 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22724846 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185827984 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.227248983 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.168194285 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175668434 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215924469 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211456294 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.214343197 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166191288 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.348717091 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137067711 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.17789192 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205092362 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223931761 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.264007853 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213118052 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.125909306 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.246424228 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223828889 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247211792 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.180506505 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.200164936 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15957191 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205959216 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.268636823 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217797333 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199567282 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.246547863 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132231112 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20707219 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.201039352 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185269977 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238890765 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233043699 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.123066879 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182453272 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16726364 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127119308 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.217073123 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152501795 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.254079579 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165834997 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.403298805 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236366155 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19014341 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193190283 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19523918 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200496576 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181081302 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.152090438 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172028243 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.19146469 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159582958 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161242237 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190254392 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175847862 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.160231099 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180342185 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.125365727 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205174652 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.177855563 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196918025 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205983877 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.163295126 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.214627211 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181657154 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.197902141 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201950834 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227953018 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131996241 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163094935 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.278690914 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202473779 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.143269644 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.206534857 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.263963422 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.196576148 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137325565 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193422158 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.259850302 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173371386 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233602737 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168564421 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164985137 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.181522954 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205684758 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.193113839 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.160937071 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1588162 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.20004118 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224042089 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.158898158 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170136798 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216798772 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137782326 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159706074 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172615851 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167374901 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.174380702 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.154010835 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.173322529 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185575004 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202821032 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.198916374 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188822578 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166811163 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199782774 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160802069 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.174834576 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17871322 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.152443816 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.213485744 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230694802 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162164963 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218185621 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.228471639 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23587275 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20788744 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162534006 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.21678581 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15794042 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.124092048 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19277584 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.207354609 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.194194964 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.256688672 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231242209 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.200339489 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.200955652 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1802584 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198972754 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.218719803 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190634224 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.179527242 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.207860328 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202117947 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.154121724 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.128206196 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.161629491 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172874862 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13383132 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166627426 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209922912 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195650215 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.250030055 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.202392231 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142029968 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.226925365 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.161610095 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194828144 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.219027774 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171252523 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.230151225 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225895322 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241834235 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145402862 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192541854 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.154572808 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129309087 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.169370337 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.196664199 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166957831 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166685956 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145321693 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.257060635 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205675596 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177864584 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246146033 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197383117 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.236523947 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.155431007 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.193730876 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19878327 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202552701 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.191861112 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164493193 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.196095326 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.227238173 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171675665 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227491975 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203969281 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216214514 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.27044536 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.201134799 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133535956 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.183256793 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200746986 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171658135 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.194271722 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180605542 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162324331 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157662447 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.169380715 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.175357024 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210665877 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175829777 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219581883 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.190000109 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204611544 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158713722 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173726186 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.214104058 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174316075 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.125565179 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199267593 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.265013485 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179520632 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190583643 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205476112 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133069612 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.39300776 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221460989 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214654556 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167631654 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140331997 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.208584186 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.192626065 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19503107 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.250026175 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172779203 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243732804 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.205589829 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.176696182 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133747446 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181649862 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184070945 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.183145914 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.186564388 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.201952196 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.174233546 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215286646 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172712541 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.207559891 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211632705 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.17882599 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.151368876 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171626257 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.288370903 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201876876 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207893797 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.2018533 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.200182008 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221056332 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156079172 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130184946 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.167401814 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.249231811 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133832727 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211733859 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.245379558 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236602112 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208204527 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202510427 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17065306 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.159788336 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.201019492 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152564876 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.271759463 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167096152 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.142872053 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.250638839 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.180530184 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133587747 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.228357867 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.307365623 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180821815 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206193669 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.130103713 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.331524183 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13286313 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166109614 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193573323 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201809306 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.138423548 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.21924025 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209004649 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176572956 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.195904514 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166715313 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.224350584 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240123643 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196037577 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206036627 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.17720718 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192048676 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195541919 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208102336 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179414199 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.179996887 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162643461 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.25988631 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.217221482 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.136966766 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205985081 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208620242 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.207529825 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236500587 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140378474 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249277172 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158758477 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165436766 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175025677 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160325573 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192103415 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.217058384 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163843108 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207320588 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206092265 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135534221 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160417759 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179031634 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201267539 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171538058 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.133804859 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21072017 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.163291114 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218221616 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244060389 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161206227 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.201126343 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180480668 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135057568 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172390853 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178552923 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163450332 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.180591906 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212018103 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.167184211 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207411272 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197163455 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197686604 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192564879 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178612981 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.991040939 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.133773864 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228537834 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181633446 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225535885 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.184285836 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213350345 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204692608 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181153084 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194566332 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18395908 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.247608739 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19510865 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.205263005 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135367857 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179285382 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176061507 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.166823744 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187504098 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204012637 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142470694 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.172762859 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.20603559 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179167542 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.179812098 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143760888 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.267176604 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15361976 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.246235072 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.224034181 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16815016 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212959777 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209264115 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163431342 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.196774591 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205013674 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181205332 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180651582 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.138136923 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.172595685 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246541424 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.159424395 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19324083 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210548148 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.205502116 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209416682 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.16796398 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214619282 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145512509 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239831505 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133364243 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.189917552 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.207273089 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166127662 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.13248588 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.20672917 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190118738 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.201947799 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.177779887 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.209123021 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231343985 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.127113568 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167001554 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.313186212 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18961619 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.261602225 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.181756147 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14005473 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178465324 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190536478 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.20336417 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207430027 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.134358881 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163958324 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.182976277 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.210428389 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.185983401 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.203101338 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211693289 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192912926 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223142403 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.175772171 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.277446044 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171131419 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.204685086 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.167504721 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.136663199 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174608814 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168116702 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143094802 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.256168321 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246132307 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.199952141 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.179386648 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13402244 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.15988408 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16391728 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166857306 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18616999 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205187142 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181131685 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.156393412 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169972293 seconds)
  done (took 95.219637774 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.169470252 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.16545135 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.176439426 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.227572519 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.194265489 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.288876138 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.236711553 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.24832394 seconds)
  done (took 2.947499912 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.123995681 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.16368613 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.170173818 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.15049338 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.142998089 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.448514162 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.166364242 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.151172919 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.174516152 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.185003563 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.115321524 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.587159336 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.15112765 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.154299001 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.155107441 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.139957177 seconds)
  done (took 4.413619669 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.105765126 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.787567021 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.75883068 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.337366516 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.304991494 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.209092822 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 1.020141456 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.222038723 seconds)
  done (took 16.985960416 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.152484768 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.174378989 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.352408393 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.251688094 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.187935177 seconds)
  done (took 2.364894005 seconds)
done (took 147.627510284 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.128619325 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.159731378 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.129505564 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.161544937 seconds)
  done (took 1.81407548 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.178070858 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.139193988 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.111319573 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.137039344 seconds)
  done (took 1.811541154 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.543094306 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.107810186 seconds)
  done (took 1.922961588 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.150933755 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.179385474 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.181501962 seconds)
  done (took 1.769045404 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.139357287 seconds)
  done (took 1.389987879 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.13021551 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.161421684 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.221391798 seconds)
  done (took 1.768673513 seconds)
done (took 11.728497588 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.125116129 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.9667031 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.44273541 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.13872163 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.754966963 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.43224461 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.406980617 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.185310935 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.233238504 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.145479399 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.167893083 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.695566556 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.425165494 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.878782952 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.40447765 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.906322777 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.698077251 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.145695364 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.124108794 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.147336888 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.415067506 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.115038818 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.147659731 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.115484325 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.726672957 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.46609145 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.116090999 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.92121058 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.115019127 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.154259319 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.40280885 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.144841613 seconds)
  done (took 21.505542567 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.127137433 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.210464087 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.157843185 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117806072 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.155138524 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.116964311 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.159453958 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.160275702 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.225396524 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.116022802 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.17071081 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.147019155 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.121539061 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.147516843 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141810941 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.146624078 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.117312001 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.146735711 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.155105917 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.118316871 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.168309248 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.115774244 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.148243242 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.116847328 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.145138942 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.17806456 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.115647722 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.162317143 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.146607242 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124280855 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.149427304 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.1169181 seconds)
  done (took 5.906061741 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.16657045 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.220796753 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.1608334 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.185064808 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.206757618 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.11789402 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.240214213 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.189560122 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.228815049 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.148117965 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140276081 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.146084998 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.194022875 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.117650027 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.173193577 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.146658439 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.118026244 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.147073512 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.127201959 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.149560123 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.169621324 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.115699927 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.149338536 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.117301642 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.147736209 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.150580168 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.146377036 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.16201558 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.116107674 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.155146288 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.119981968 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.147447758 seconds)
  done (took 6.290406102 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.130263837 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.163125753 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.144496405 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.175774824 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.128475597 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.160998312 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.161913515 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.128299043 seconds)
  done (took 2.462312585 seconds)
done (took 37.420956391 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.144341713 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.17042209 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.1396882 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.165174668 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.211814343 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.124283876 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.167965002 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.124418342 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.163847531 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.171886197 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.116007024 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.156017696 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.139600713 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.160952197 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.211729063 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.132820498 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.24711694 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.211069447 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.126203474 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.166796705 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.127418864 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.21749318 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.162398795 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.125683532 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.220514879 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.14995276 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.211525701 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.128878555 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.159529734 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.153137401 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.212405292 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.130377939 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.156631991 seconds)
  done (took 6.662720529 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.220232817 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.127081276 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.15731086 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.124857549 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.158387513 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.125102584 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.222522967 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.155599018 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.123868035 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.155870883 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.124396827 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.222265761 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.16310677 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.151786602 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.128404512 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.15262736 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.223480003 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.127690032 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.147200712 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.110328888 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.151616777 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.124314677 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.234759028 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.152486141 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.125829161 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.156765946 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.128558732 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.161209738 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.128433066 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.158484813 seconds)
  done (took 5.918523185 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.13140822 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.169450633 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.146672894 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.226020888 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.184996921 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.163364023 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.145268271 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.172355351 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.14560679 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.150033231 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.165086588 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.155210293 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.166827815 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.161833029 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.121278187 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.168833995 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.142756076 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.149316174 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.127830611 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.167174098 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.169788221 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.137764876 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.174148194 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.127425076 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.147053208 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.156120837 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.129285063 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.16349769 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.131280657 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.171440438 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.155332252 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.122881684 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.152571944 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.188701816 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.124521443 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.162187744 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.145957856 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.163606916 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.163178685 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.147327241 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.154640347 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.127016911 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.177857096 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.20893782 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.119934453 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.16495805 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.132805969 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.167765073 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.150669916 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.138011223 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.20227233 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.149806993 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.141040573 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.150562268 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.119905379 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.161369202 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.119880259 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.154075856 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.173683557 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.122488873 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.17520836 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125499935 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.164431868 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.122232996 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.162124919 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.150521924 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.118157391 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.153924895 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.147590128 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.159641555 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.159423328 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.151174256 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.163171499 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.133265489 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.163137508 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.132334846 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.148980742 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.131804589 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.160796479 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.156247591 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.137886364 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.153656413 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.122685007 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.167289599 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.172666289 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.134259372 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.206938411 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.16535281 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.123643928 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.153083998 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.137793362 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.152379839 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.124709198 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.173165535 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.150849711 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.124275486 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.166696693 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.131854319 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.149072571 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.146989534 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.156541509 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.150494923 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.146306645 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.159915205 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.125160335 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.159393596 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.201790473 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.119561934 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.1634912 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.134797756 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.150520656 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.158463495 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.123057588 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.149673697 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.138069164 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.166477314 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.126933437 seconds)
  done (took 19.02570509 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.313281719 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.332717619 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.231654773 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.336667028 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.134944087 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.268299771 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.297783146 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.335375073 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.125417359 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.19320377 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.245142743 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.274898907 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.152415041 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.149287896 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.334935354 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.398215678 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.183466124 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.198317513 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.195384617 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.167226926 seconds)
  done (took 6.17270631 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.143043642 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.189352818 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.177089902 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.185164927 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.130798869 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.16547728 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.120615657 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.178898456 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.162506786 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.130963278 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.153635829 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.136867744 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.16381554 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.167921174 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.136862758 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.19479415 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.159056845 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.126168399 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.178138971 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.12628504 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.15716095 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.184645222 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.160899592 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.145285897 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.170159489 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.130775923 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.149294737 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.157478166 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.126021784 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.160186196 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.125594563 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.174701191 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.157517865 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.123498853 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.16560022 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.135850607 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.15827315 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.122939784 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.157042302 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.123792715 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.167273857 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.165239552 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.12834943 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.14728977 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.139770563 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.152522683 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.136829504 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.164250056 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.128755429 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.171185795 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.133703753 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.16775795 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.159165939 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.142949691 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.158667789 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.139203252 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.163799123 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.167753079 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.126586659 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.15044246 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.118178228 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.154399511 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.129195744 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.167213833 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.16526631 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.144755102 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.169607789 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.152001913 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.125832009 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.156233105 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.1247576 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.167017295 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.184410612 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.130229339 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.159382424 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.132383171 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.159709084 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.111484601 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.162045697 seconds)
  done (took 13.247243965 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.147189759 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.16259153 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.139176627 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.187482125 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.166588876 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.127026796 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.163162957 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.139640131 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.169582516 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.139400461 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.169503708 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.168414479 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.144417465 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.162936473 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.16328808 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.138420914 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.167548669 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.192781031 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.138842784 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.187162533 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.170283903 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.12648662 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.167270082 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.131669809 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.185534896 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.165187509 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.151741908 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.167153801 seconds)
  done (took 5.756150458 seconds)
done (took 58.058707371 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.432224492 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.597980064 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.383004061 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.380897462 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.406754973 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.388544849 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.381858936 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.394213438 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.991428635 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.371823332 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.38054404 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.395142633 seconds)
done (took 30.815419517 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.412491901 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.926376386 seconds)
    (2/2) benchmarking "String"...
    done (took 1.652600375 seconds)
  done (took 4.877655292 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.373382607 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.370764028 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.631848072 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.370413507 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.389651812 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.372205113 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.373183475 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.378471737 seconds)
  done (took 17.184870055 seconds)
done (took 28.149856438 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.448070854 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.5733583 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.62754809 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.385558777 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.399542635 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.371907383 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.389999678 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.397112201 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.376752907 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.384514058 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.778784533 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.644385687 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.3883845 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.758393797 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.371162885 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.41418147 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.370408319 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.625723347 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.370261727 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.413635493 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.360110761 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.360970053 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.38033147 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.381257142 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.379171475 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.383433341 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.400024918 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.370826327 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.555195021 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.392068843 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.415313604 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.372977763 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.398089991 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.372926444 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.370052469 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.387756428 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.555323419 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.377249753 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.364660587 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.37227638 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.563466347 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.381256451 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.376497554 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.369122302 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.377027987 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.429999331 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.361451187 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.482291163 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.389019564 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.368735847 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.445784499 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.742154261 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.368860231 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.382182269 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.3932359 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.601456577 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.376958004 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.41443462 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.390695047 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.379373003 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.384900681 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.379095817 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.433658216 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.374864123 seconds)
  done (took 154.906340026 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.370362459 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.372758478 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.369066475 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.392431029 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.369852361 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.372009581 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.369015694 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.368114274 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.372421223 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.371938575 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.367474267 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.368101103 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.37033585 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.380772854 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.377587128 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.390692091 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.373053676 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.369136539 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.395025313 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.369071049 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.385403826 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.368948726 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.385371023 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.368717465 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.400672679 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.451271197 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.401714661 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.38058217 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.376850392 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.367673518 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.405287307 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.429839323 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.944706909 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.240748815 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.380234641 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.371770706 seconds)
  done (took 86.447601526 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.367946333 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.366125471 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.367691047 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.399243616 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.365788954 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.899822988 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.902318229 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.227819418 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.527883277 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.588492761 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.577112762 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.366829145 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.457732219 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.378511121 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.365563835 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.366129935 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.381698424 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.392660723 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.371391002 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.36666357 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.900080921 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.378944329 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.402000317 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.534856451 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.380902981 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.395628991 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.694687664 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.367743108 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.397099516 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.690775994 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.41014664 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.365698804 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.677844991 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.364817555 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.478514391 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.368230972 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.395518246 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.366638731 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.643278369 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.368326453 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.368348348 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.37161867 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.972546024 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.368193079 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.897236541 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.372181577 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.278360345 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.36655004 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.366938783 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.359329879 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.950443097 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.380948413 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.367794093 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.369307282 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.367641315 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.368419332 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.3977583 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.335791751 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.459892318 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.368755618 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.369813678 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.397976857 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.368073893 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.422721269 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.382222676 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.067896369 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.426209059 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.464021026 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.897770236 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.373207208 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.46186264 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.484827102 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.367574377 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.368896056 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.368315107 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.368900285 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.476352013 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.370449676 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.028504375 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.538971185 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.381784983 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.588149839 seconds)
    (83/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.370719149 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.460325459 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.364878682 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.683067979 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.368010834 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.365178027 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.046581546 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.365099131 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.458923962 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.364339869 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.364408459 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.364081686 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.364374416 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.028057403 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.894358295 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.567199913 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.368003062 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.878655658 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.366973612 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.187618696 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.885198852 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.987139328 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.366163982 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.474995005 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.536191201 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.379186088 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.365364851 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.581060991 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.370490448 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.42490391 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.367003883 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.69693543 seconds)
  done (took 390.647410447 seconds)
done (took 633.303659334 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.22402459 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.164156009 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.308019897 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.19618749 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.156768324 seconds)
  done (took 12.344052827 seconds)
done (took 13.641042248 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.632810492 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.642156181 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.411068508 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.632908622 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.386232871 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.651098714 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.553282852 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.362987123 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.514341541 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.406711932 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.513524994 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.379332159 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.373361299 seconds)
  done (took 20.74256324 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.615491204 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.350428595 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.41366825 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.611671439 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.391574392 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.604102468 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.634704347 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.344275183 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.498376763 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.357763815 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.357783564 seconds)
  done (took 19.451502803 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.594353212 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.338302454 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.424262625 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.590560134 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.381137687 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.606806222 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.629485703 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.337009918 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.487904788 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.34929165 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.347568419 seconds)
  done (took 19.345247625 seconds)
done (took 60.834671044 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.35924498 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.416137065 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.356287793 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.341076338 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.340464705 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.340469651 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.340992332 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.340516752 seconds)
  done (took 12.088071834 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.339885825 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.33930492 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.338803998 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.339596157 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.339985878 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.339983762 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.338312267 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.33903074 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.339172966 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.338125503 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.339930811 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.339940629 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.340864092 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.340640862 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.338572849 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.341070348 seconds)
  done (took 22.687878216 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.342302097 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.340655108 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.340742121 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.34007154 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.340265639 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.340300996 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.342067716 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.340469999 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.340307029 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.340111076 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.340829025 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.340774232 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.340320042 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.341095817 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.340847192 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.341542887 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.340759911 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.342953008 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.344581252 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.340791108 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.342229087 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.339996381 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.340849062 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.342442216 seconds)
  done (took 33.442822218 seconds)
done (took 69.475026887 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.32575121 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.340840874 seconds)
  done (took 5.921287176 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.39885784 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.398108493 seconds)
  done (took 4.055831979 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.343742145 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.342684784 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.343020379 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.342985539 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.340611102 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.34094731 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.34311237 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.34211735 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.343136808 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.341934943 seconds)
  done (took 14.681050206 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.342958668 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.340629584 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.342353424 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.343538125 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.344442976 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.343980503 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.342585411 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.342769659 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.344107854 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.343543519 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.342447175 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.34385137 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.343073436 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.342622305 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.343421924 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.343174448 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.343259574 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.343673582 seconds)
  done (took 25.432706513 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.356354413 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.361031975 seconds)
  done (took 3.975355969 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.471449841 seconds)
    (2/7) benchmarking "second"...
    done (took 1.385617089 seconds)
    (3/7) benchmarking "month"...
    done (took 1.447402113 seconds)
    (4/7) benchmarking "year"...
    done (took 1.439699003 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.386127116 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.364255643 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.386440915 seconds)
  done (took 11.1389974 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.344311386 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.537242668 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.670247965 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.926499499 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.345326383 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.347032282 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.228904908 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.347383147 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.348194199 seconds)
  done (took 15.352986583 seconds)
done (took 81.813912192 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.340682881 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.355957359 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.346235126 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.358171537 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.639242123 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.383669881 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.334514659 seconds)
done (took 17.017181168 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.326027102 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.322024087 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.321440683 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.355427007 seconds)
  done (took 10.583666187 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.334601922 seconds)
    (2/2) benchmarking "read"...
    done (took 1.631254736 seconds)
  done (took 5.225485832 seconds)
done (took 17.067884834 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.344206702 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.344403841 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.344763372 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.343483283 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.344924377 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.345003393 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.344681292 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.345696318 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.345368116 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 1.345343171 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.345496433 seconds)
    (12/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.346124924 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.346725557 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.345689691 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.345427274 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.345875101 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.345932363 seconds)
    (18/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.345133008 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.345342733 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.345615628 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.34638004 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.345731113 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.345983118 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.34708382 seconds)
  done (took 33.549155296 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.344663938 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.345393345 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.345241259 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.347311054 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.348492363 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.34822407 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.347368589 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.347196526 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.345027942 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.34568636 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.345710796 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.346524965 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.347025647 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.346843108 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.346836847 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.346745724 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.347047813 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.347296403 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.346987245 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.346949466 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.346721758 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.346997222 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.346948381 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.347113122 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.347281338 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.347658259 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.347168367 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.347704056 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.347354436 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.347610076 seconds)
  done (took 41.666887941 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.348638311 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.34808676 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.346417163 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.348568163 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.34651289 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.348136218 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.34768128 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.347170706 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.34760686 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.348130371 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.347465896 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.347505913 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.348980752 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.347593948 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.347848472 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.348561712 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.348396948 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.346995237 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.34863977 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.347775753 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.349021376 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.347999286 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.349117734 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.348527369 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.347741868 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.347889895 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.347781331 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.348394729 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.349037508 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.348819458 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.347295341 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.349076633 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.34986216 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.349219063 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.347953106 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.349528696 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.350495609 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.347771892 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.348662374 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.348766172 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.349853233 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.349568116 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.348713247 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.349583141 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.34890787 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.348395832 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.349867821 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.350388126 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.349298656 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.349246198 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.349813008 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.350575317 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.350058186 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.350180552 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.349559065 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.349785304 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.351214681 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.349414189 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.349936573 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.351054542 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.351537335 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.351645077 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.349915979 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.350993625 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.350432027 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.350498182 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.351332114 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.351266718 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.351236575 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.350376087 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.350744716 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.351774113 seconds)
  done (took 98.400520724 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.351908117 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.351057083 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.351221659 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.352071843 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.351446136 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.349845438 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.351417541 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.350954837 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.351354056 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.351243848 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.350593133 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.352800847 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.349607849 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.351420864 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.35120802 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.352135967 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.352820897 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.351575778 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.352432305 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.351154698 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.354439197 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.352889546 seconds)
  done (took 31.000565579 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.352869182 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.354336424 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.351271739 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.353454736 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.354829736 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.353729491 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.35317422 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.353713603 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.351720887 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.353064443 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.353525549 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.351475047 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.354735047 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.353654454 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.351410605 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.354736737 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.3516459 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.352885005 seconds)
  done (took 25.621961184 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.350959599 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.352047743 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.351148558 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.349513104 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.349599401 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.35030507 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.350122405 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.349524506 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.34977992 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.348574258 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.348534666 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.350921418 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.349568152 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.349048035 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.349529534 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.350148343 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.349709284 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.347573594 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.347646817 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.347100933 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.348741077 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.34829069 seconds)
  done (took 30.953343735 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.350634457 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.345280733 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.346811122 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.347142895 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.346013238 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.346427666 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.34748256 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.345345994 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.348674007 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.347483532 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.347515339 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.34591355 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.347973045 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.346764202 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.34564974 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.346645495 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.34617403 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.34728171 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.34503845 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.347956513 seconds)
  done (took 28.199419608 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.34659037 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.347881129 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.347028791 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.348210428 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.347316809 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.346236687 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.347500074 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.348203311 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.347231942 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.349199865 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.347861615 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.348807104 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.348137705 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.348888091 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.34852913 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.348900373 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.35008659 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.348275237 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.348421032 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.34977417 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.348236711 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.349372832 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.348920699 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.350015669 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.347991679 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.350408587 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.348026532 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.35103621 seconds)
  done (took 39.019453055 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.349355234 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.348234274 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.35005104 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.348650121 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.348517838 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.349628563 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.350037998 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.349536819 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.348536614 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.348842394 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.349448415 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.350919054 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.348726813 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.352209284 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.350847071 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.349354194 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.351138121 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.349863626 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.350543731 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.350497176 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.35067939 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.349842045 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.34972901 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.348744042 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.350148698 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.349964135 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.351324603 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.349994506 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.350798951 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.350420141 seconds)
  done (took 41.762108737 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.369004893 seconds)
    (2/2) benchmarking "in"...
    done (took 1.36860283 seconds)
  done (took 4.000998717 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.351365458 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.350602085 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.349703756 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.350544493 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.35231137 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.351551858 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.352358497 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.350764762 seconds)
  done (took 12.072682665 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.343792141 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.352473106 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.351043223 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.350898848 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.351851389 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.343160719 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.352441353 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.357443063 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.343252069 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.344775204 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.343952981 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.344258026 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.346987726 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.347041906 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.34382667 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.349329959 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.355280556 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.352908635 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.352794787 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.351807565 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.353084435 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.346346163 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.348974717 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.357467122 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.344530221 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.352871009 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.352668898 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.356463595 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.345198437 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.34979595 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.347289873 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.355346805 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.352734119 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.352892445 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.354943019 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.353835884 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.355015446 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.368686858 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.352838985 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.357618272 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.354541832 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.353693129 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.346794436 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.348946377 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.348304666 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.356788354 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.354607862 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.354030908 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.344833726 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.344985977 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.355064584 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.346060034 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.356127934 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.350477488 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.350290213 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.356635127 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.377954408 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.344817241 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.345638288 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.353803086 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.361088418 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.353196046 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.351404196 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.360007582 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.348791436 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.350239125 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.356837075 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.359502965 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.356048093 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.35515547 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.356141548 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.361518079 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.356651345 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.35726765 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.355591304 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.355744359 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.348541269 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.357386046 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.356354297 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.356813822 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.35821197 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.356780658 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.35019683 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.349826104 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.347728419 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.356784656 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.357821376 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.357036725 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.348251676 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.356942085 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.382329662 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.357911859 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.348679942 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.348660839 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.349871301 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.358902377 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.347749346 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.352191336 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.360334145 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.357310968 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.357695068 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.349669043 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.350916594 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.360070781 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.357085885 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.35711696 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.362364935 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.349183706 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.356108194 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.362390549 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.358561969 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.349139049 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.352221092 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.358585796 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.348287996 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.351854265 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.360331553 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.35204656 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.360408158 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.35856845 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.351346041 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.356581408 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.360674944 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.357667184 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.350330205 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.359325462 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.358463896 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.353551819 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.360448949 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.358551294 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.359467541 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.353642915 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.360388944 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.351347932 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.359033934 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.351467237 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.360067199 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.3587324 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.358545203 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.351974449 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.353510012 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.351423593 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.353865081 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.356351859 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.360790855 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.354484787 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.360995519 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.355747343 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.355095366 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.354728758 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.360890188 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.358962467 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.353012202 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.36087129 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.350896403 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.360787448 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.351750747 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.360516178 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.359692429 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.359248644 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.360609662 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.351827428 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.352620625 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.360153791 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.355964541 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.355690657 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.361861278 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.360537736 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.360812318 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.351497803 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.361527584 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.350821099 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.353131653 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.362307144 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.360980147 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.360191881 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.355967563 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.363792357 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.36013981 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.361114062 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.353836229 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.354798559 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.363620442 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.361918159 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.365946217 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.362355502 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.362115871 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.353398704 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.352154727 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.361484983 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.353631974 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.362983277 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.363008598 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.360978144 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.352404217 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.362641321 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.353692183 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.362547811 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.357599748 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.363777206 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.362596244 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.361306619 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.353087717 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.362737863 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.35524608 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.362448421 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.352733178 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.362502078 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.362763329 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.361372001 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.363853881 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.354885144 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.356309611 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.363367037 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.36231749 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.361270896 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.352951545 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.364491134 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.353496782 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.354445317 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.363235699 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.365522159 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.36140405 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.366245564 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.355993745 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.360614058 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.358147148 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.355607272 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.365548966 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.358462448 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.358540356 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.363189322 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.360607262 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.358129421 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.364015302 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.37998675 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.355971978 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.36050628 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.368068536 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.365329698 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.355495362 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.367836602 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.366378273 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.364446261 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.364170828 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.356019095 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.366626365 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.364815453 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.368687385 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.355458753 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.365768724 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.358247645 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.365714759 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.358426156 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.360085663 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.359716075 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.361408812 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.369459896 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.365889312 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.357619522 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.364921443 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.365518185 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.36497397 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.35661865 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.365987138 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.363431703 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.361225831 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.361542224 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.35862469 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.366801509 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.358212952 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.365761038 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.358892549 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.367809242 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.374572381 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.364698437 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.364962522 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.367995274 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.365397729 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.363767315 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.358435012 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.358040993 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.359578565 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.358508554 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.359476713 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.367998965 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.358361251 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.368585962 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.360086906 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.361541375 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.368194041 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.367807566 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.35845724 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.369013176 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.367653498 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.366694976 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.358994559 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.367193747 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.360500082 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.361462623 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.362303778 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.359278051 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.368238651 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.366612979 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.360806252 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.361225376 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.36124893 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.359527546 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.360435934 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.369289083 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.359863905 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.367408221 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.359366361 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.362839665 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.359851317 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.368026724 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.3730088 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.360552748 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.370287759 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.369948643 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.360066581 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.361090143 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.368517091 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.37034163 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.374829596 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.361200142 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.368927428 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.369235032 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.3686747 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.369250634 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.367910854 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.369333376 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.369748135 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.370395658 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.385574878 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.360522944 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.364067217 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.37134508 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.368861624 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.369576254 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.361044403 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.365701168 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.370798268 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.36310529 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.362658373 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.36152992 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.369389781 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.370284832 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.368439151 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.36990241 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.370885996 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.36891162 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.366364872 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.3699557 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.37038242 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.370581154 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.373724438 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.369805301 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.377319058 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.36187419 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.372685709 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.37140801 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.364125488 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.363178434 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.362370329 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.371356613 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.360515434 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.373800452 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.370027928 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.365637566 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.365130011 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.371284603 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.363549136 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.365507191 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.373114484 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.362215808 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.372182409 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.370989037 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.361877582 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.371918706 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.371137064 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.363237052 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.362876256 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.363303774 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.371480521 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.363715513 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.372728261 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.364323687 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.372937795 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.371536736 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.371611755 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.371663585 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.371974883 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.36365244 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.372228075 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.366546221 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.374784425 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.363050022 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.366756667 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.363820369 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.372702588 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.376240161 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.36562254 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.373946675 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.373770246 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.364855969 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.366523853 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.374993212 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.364880931 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.37429571 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.364053962 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.365512126 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.365219972 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.369998409 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.367038206 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.373822745 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.364745364 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.364537193 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.372838556 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.372961999 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.374466794 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.366103598 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.375673774 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.365322865 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.364716595 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.374680546 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.367205699 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.375309501 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.36516342 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.365819725 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.366980485 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.374306333 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.374161392 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.375049227 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.366593112 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.366313846 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.374000389 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.370462795 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.368606694 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.367353896 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.377197127 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.367371817 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.36738344 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.366960045 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.365199333 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.367218646 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.375508496 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.366464589 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.366218551 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.365791093 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.376699491 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.373993404 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.371804498 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.367933662 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.378054539 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.394322548 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.377970924 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.366739547 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.367972368 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.368791803 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.376112966 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.376749923 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.366328968 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.378351892 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.374986079 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.377817105 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.371303548 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.369358702 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.367436305 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.377053717 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.376460456 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.368901914 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.378602541 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.369680715 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.377755769 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.376348261 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.375740404 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.367106469 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.367981717 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.367771584 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.368220709 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.37802078 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.371501473 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.372491774 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.36979271 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.37818986 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.37733165 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.376498812 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.375560096 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.367684174 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.376989281 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.36935707 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.37278061 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.371473391 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.369986723 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.378683622 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.376249792 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.367630629 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.369571429 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.379663035 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.376044139 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.369469573 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.371470602 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.375386978 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.381130968 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.377118341 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.370653812 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.371074886 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.37797252 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.377521686 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.378557644 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.368958725 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.381158662 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.401170873 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.369771161 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.369532862 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.375829237 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.381533047 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.378359299 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.377380651 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.371650648 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.371007987 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.379205645 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.379428803 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.37933267 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.393268624 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.371347729 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.380291975 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.369201211 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.371693302 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.376117753 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.381136953 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.379231133 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.372324877 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.37939151 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.383129702 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.372035468 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.382972837 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.378241468 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.374610249 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.38040499 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.369902684 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.380538784 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.37460694 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.382060069 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.379696379 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.379810422 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.378673937 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.372051309 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.378332149 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.378666845 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.383179456 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.381335643 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.371548803 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.375876941 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.38042111 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.381414647 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.383463321 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.379772405 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.3813708 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.381196215 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.37164275 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.382059425 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.382907493 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.382630896 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.381120081 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.380482883 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.376339137 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.374380442 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.374029997 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.38366694 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.381043036 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.381439504 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.374146218 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.382385468 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.383617888 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.372901263 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.373370879 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.374185648 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.383191056 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.382923423 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.391280098 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.379891262 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.376773677 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.382088522 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.382951822 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.373920065 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.384650167 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.382070962 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.37543694 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.37561429 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.383148515 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.382317459 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.38189049 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.375156067 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.384107156 seconds)
  done (took 814.725716265 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.381555292 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.382781765 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.383326701 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.382907302 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.382530312 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.383587576 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.383116314 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.384301593 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.38330612 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.381792514 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.382788331 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.383234568 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.383187211 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.38365565 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.383217815 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.382110482 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.383091124 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.382779345 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.383341265 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.382964073 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.384503755 seconds)
  done (took 30.338506931 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.383228769 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.383059384 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.384640961 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.383533304 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.384287805 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.38286172 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.384840558 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.384430028 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.384000594 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.383268901 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.386034596 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.384455779 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.383691801 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.385183687 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.38307391 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.384352303 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.385000173 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.38522762 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.383496289 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.385136527 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.382642722 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.384818675 seconds)
  done (took 31.747130737 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.385347702 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.384631554 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.375362994 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.386305167 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.384999111 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.387168402 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.383933261 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.386448556 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.386130101 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.376728191 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.377126804 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.377336505 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.378225422 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.385770097 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.378255152 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.385795635 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.3843481 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.384393926 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.384376881 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.386526169 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.384141467 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.391471699 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.38657685 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.376604449 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.385881617 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.388122972 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.387619145 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.385007024 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.377776742 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.387308633 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.387526884 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.377424955 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.381876826 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.379935902 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.378921495 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.389066582 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.386396655 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.386835708 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.387682221 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.381666255 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.391170867 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.38787256 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.385813246 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.391836006 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.387329287 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.378937394 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.388613098 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.385545574 seconds)
  done (took 67.74030663 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.387417477 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.387283289 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.38704402 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.388280311 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.387367346 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.386742825 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.387084738 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.387886643 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.38963579 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.387594483 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.389695636 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.390162986 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.38913132 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.390428022 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.389343826 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.389916444 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.390394411 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.389118205 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.388158266 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.389389155 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.38812054 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.388991111 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.3890203 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.387181716 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.38990795 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.389833153 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.387914864 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.389883327 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.389639541 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.387970411 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.390079716 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.388866014 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.390493749 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.389468938 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.389519677 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.388968306 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.389349324 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.391262889 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.390408551 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.38908463 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.389459147 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.389974114 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.389927791 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.391029406 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.392511246 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.391668603 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.391376994 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.391669889 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.390937809 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.391769705 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.390418808 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.392096068 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.390352005 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.3917885 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.391693511 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.390873879 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.392414622 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.390750655 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.390238953 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.390951545 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.391290058 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.39219085 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.392808509 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.393065849 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.393368009 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.392938431 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.392983122 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.393503023 seconds)
  done (took 95.823400341 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.390082621 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.392692387 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.392225787 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.392662052 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.391779998 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.39185333 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.392883591 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.392393826 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.391890474 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.392321655 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.391037944 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.391293728 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.390719219 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.392336339 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.394050463 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.392315079 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.391442645 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.391959674 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.391594167 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.390939594 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.391957191 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.394528112 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.393784112 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.392528551 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.392922039 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.391989516 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.391708421 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.393334402 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.393346447 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.392416642 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.393020281 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.392817524 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.393605528 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.393219788 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.394796955 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.393001593 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.393570254 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.395597865 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.394012134 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.39469231 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.393513232 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.393175484 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.394037652 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.395004194 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.394776338 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.394909409 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.393379787 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.393540441 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.394788418 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.394291466 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.394998418 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.395240528 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.394976063 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.394321296 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.394955409 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.394947788 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.394588547 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.394340975 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.395229078 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.396206661 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.396827313 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.397661565 seconds)
  done (took 87.69416714 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.395806593 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.396038952 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.395083516 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.396484452 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.395745278 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.396627302 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.395586277 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.395744721 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.395939573 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.397322888 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.397186182 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.396302867 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.397142335 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.397163372 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.397655182 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.397517048 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.397346826 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.396680141 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.396036038 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.396539326 seconds)
  done (took 29.235344251 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.396795399 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.39697885 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.396106747 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.395615071 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.396772965 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.396980237 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.397164209 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.395880822 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.396818703 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.395796518 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.39621276 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.396478692 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.394614864 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.395830979 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.397162977 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.397658108 seconds)
  done (took 23.648448919 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.39673051 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.39778232 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.39788413 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.396274744 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.397177007 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.396022997 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.396550333 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.396930655 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.398275084 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.397002921 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.395937154 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.396763674 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.397948848 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.397342981 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.397620606 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.398076544 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.39833984 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.398265518 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.398879907 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.39676084 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.398020175 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.398834554 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.39887512 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.397902177 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.398658816 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.398502896 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.396061283 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.397859748 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.396954207 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.398519466 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.39924117 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.398792481 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.398563534 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.39823744 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.397671464 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.398201143 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.398076196 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.398793676 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.399418949 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.398933733 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.399781599 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.397986667 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.399089409 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.399657783 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.399288897 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.399970025 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.399499792 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.399156784 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.399081904 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.398607053 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.399496033 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.39860798 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.400547137 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.399676921 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.398870587 seconds)
  done (took 78.210101043 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.398821242 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.399340813 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.400064064 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.400210688 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.39968913 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.399654015 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.400429008 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.402598761 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.399803138 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.400125164 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.400054942 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.399922334 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.399745067 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.401433491 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.40018119 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.400992508 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.400592257 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.40132629 seconds)
  done (took 26.514237579 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.400972029 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.400072123 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.402984846 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.400174227 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.401745551 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.401736262 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.401382148 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.39954667 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.399548442 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.40305191 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.400824667 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.402289341 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.401156328 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.402968157 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.402445704 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.401813792 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.403760906 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.403117259 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.402972157 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.402226074 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.402054333 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.403284276 seconds)
  done (took 32.151303328 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.392844245 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.392108805 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.39247097 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.401535207 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.395020233 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.393178271 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.390667186 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.391406558 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.402090707 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.409125946 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.405521522 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.394751878 seconds)
  done (took 18.07290775 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.401142615 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.400271613 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.401238782 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.399894169 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.401615184 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.400843437 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.400807103 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.400347903 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.39977814 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.401278276 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.399722921 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.400340781 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.400043536 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.400661547 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.399596652 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.400652823 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.399108137 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.40154826 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.401591715 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.400949665 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.400335756 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.401445214 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.39987995 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.399236193 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.400586517 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.401272043 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.401971028 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.401260707 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.40075705 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.401397916 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.401251158 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.399837768 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.402018196 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.402142553 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.401698444 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.401875119 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.402111954 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.400992852 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.401616985 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.402095017 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.401721627 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.40265296 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.401933136 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.402254911 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.401606307 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.402733628 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.401129717 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.400976783 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.403101794 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.402722048 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.402521009 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.402264817 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.401789036 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.402913439 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.401718931 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.40319253 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.404665335 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.403603551 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.402602934 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.403826624 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.403778365 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.403293551 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.402681943 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.403508756 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.403323954 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.403408213 seconds)
  done (took 93.817799437 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.404002487 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.402729493 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.403336936 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.404470524 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.405044025 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.403105365 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.403578868 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.404984091 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.404163316 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.403675841 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.4042278 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.404886959 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.405480738 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.40364757 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.403001842 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.404736754 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.405401427 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.4054604 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.406174189 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.404792142 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.405890065 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.405033001 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.405606913 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.405245479 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.404568206 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.404660199 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.404539774 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.404544095 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.40515137 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.405498491 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.405718832 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.406821825 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.406304506 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.404604943 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.406023246 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.405835857 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.405071506 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.405640118 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.405579525 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.40527593 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.407313224 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.404512035 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.406858663 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.405879848 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.405785448 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.406049206 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.406497823 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.406229032 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.405958771 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.406939704 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.405918045 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.406347644 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.407392974 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.40609858 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.407262329 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.406699952 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.407046605 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.406299441 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.406617287 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.406404974 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.405264237 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.407133584 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.406902637 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.406355475 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.406793453 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.406032105 seconds)
  done (took 94.077799555 seconds)
done (took 1911.304844846 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.562083366 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.51791045 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.397128303 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.4056228 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.395815551 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.399635534 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.408216434 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.397417514 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.397081843 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.39813482 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.396483194 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.589006901 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.430505618 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.397684552 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.397201535 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.496597875 seconds)
  done (took 28.303357823 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.421413556 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.40546049 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.515290751 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.416539853 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.426027654 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.586373678 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.461329383 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.403116062 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.570460318 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.421406563 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.398077941 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.425202578 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.402540189 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.39946514 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.419241658 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.58615498 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.655180808 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.400278679 seconds)
  done (took 30.632208555 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.844984022 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.401964823 seconds)
  done (took 5.565899508 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.42055506 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.402591599 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.404583162 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.402293451 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.394608613 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.410217057 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.402355023 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.416297323 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.398577084 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.525413834 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.404413265 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.41716678 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.420144908 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.404786429 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.411440913 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.44676004 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.587204597 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.412321165 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.411713427 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.41094612 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.403553764 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.522258634 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.443726991 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.416593032 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.526375147 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.401161682 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.406712815 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.412558705 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.567881047 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.414124281 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.404285365 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.403924231 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.403816926 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.396461629 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.941624062 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.418701922 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.42872294 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.419188573 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.413286927 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.58345957 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.406866611 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.414649421 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.396694427 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.937696626 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.538505913 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.52238246 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.412828064 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.418932176 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.405428745 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.474553924 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.405916908 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.406715448 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.463403641 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.225127771 seconds)
  done (took 89.584822816 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.435663804 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.396776197 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.579215683 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.414602922 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.398424752 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.414669646 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.416115993 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.682085972 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.450108918 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.41308751 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.69750674 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.039387148 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.408810783 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.429889638 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.533729386 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.519785946 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.401146175 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.413070034 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.400015004 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.409094312 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.987413415 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.419786457 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.415171157 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.425810361 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.439709985 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.937705382 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.408170926 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.400090519 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.400991929 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.400922679 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.982581303 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.421847813 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.536682593 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.401102887 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.685966107 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.78706173 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.748337218 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.4038896 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.455074453 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.402022268 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.421899691 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.927703378 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.76955882 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.399756489 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.400158405 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.92639147 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.398911426 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.405491453 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.402925941 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.669200895 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.401093619 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.420659456 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.403560513 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.404781873 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.400894559 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.410005431 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.532571797 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.937065493 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.400720814 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.417592757 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.429383412 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.401186681 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.412613486 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.405711457 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.402591488 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.773277717 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.783916282 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.408344872 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.771770468 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.970932194 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.4162286 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.052333747 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.417777226 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.417694124 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.834817411 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.402494133 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.416756307 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.952046784 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.406600839 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.40169885 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.751158252 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.403080228 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.710122222 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.418197578 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.416031563 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.003499963 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.430539465 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.461105658 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.403023804 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.418108714 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.420946775 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.426169604 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.709920628 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.430066838 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.403256691 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.402665801 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.438540121 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.403419193 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.41941659 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.404144157 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.054493247 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.428558782 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.40256675 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.417144331 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.404227087 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.403855196 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.403630588 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.404871983 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.695420625 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.418048776 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.410323745 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.404290499 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.403068833 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.429142127 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.431393662 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.410139307 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.714587806 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.407613635 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.404437221 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.42050233 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.404278975 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.456894131 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.405272119 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.409526691 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.403514501 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.704645155 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.422475029 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.407340279 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.404976777 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.405673708 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.404968178 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.425858339 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.425739251 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.405783526 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.318670232 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.457735706 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.411772576 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.4057926 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.417747637 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.404527351 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.425651194 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.408467005 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.736980745 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.692664417 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.788107152 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.408505888 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.406017368 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.304063256 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.405176714 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.590032923 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.421769044 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.406586289 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.686298916 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.767879025 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.408293473 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.407104267 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.407830802 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.714737472 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.407104225 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.736749921 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.016708979 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.423442149 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.410225913 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.317447351 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.243554961 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.411722957 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.409596816 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.706087956 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.424668002 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.408127525 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.408601082 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.420334036 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.407076482 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.412694384 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.412976129 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.408941476 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.407706705 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.545812302 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.601952099 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.423603445 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.418129751 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.942951226 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.49562448 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.408567241 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.419085678 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.40982822 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.408463764 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.527930332 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.408517024 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.47849841 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.411501016 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.40846383 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.967780475 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.409479666 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.413471013 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.602165371 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.204336793 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.409042994 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.408321407 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.408496634 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.539574612 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.97544547 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.474928877 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.718834686 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.409437197 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.449475484 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.40966675 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.51813158 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.975916608 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.412227641 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.410789598 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.177868062 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.426057604 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.181480838 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.409406175 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.411334416 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.084285143 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.426668105 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.414685446 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.409872855 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.425029323 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.780550069 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.412780531 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.414819838 seconds)
  done (took 518.598384967 seconds)
done (took 674.000949962 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.410117013 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.410526539 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.405296682 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.414500303 seconds)
  done (took 10.973965952 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.432667468 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.419702154 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.429324101 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.418900894 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.4307215 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.420490776 seconds)
  done (took 9.886058117 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.410558288 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.411757876 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.415243445 seconds)
  done (took 8.572331569 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.631853591 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.431645532 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.773834434 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.432689354 seconds)
  done (took 9.604512228 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.427272737 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.428054297 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.428182627 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.428030978 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.42932275 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.430697633 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.430066909 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.428590215 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.430598264 seconds)
  done (took 14.1931505 seconds)
done (took 54.563429795 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.451665864 seconds)
    (2/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.453418299 seconds)
    (3/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.825642265 seconds)
    (4/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.601850468 seconds)
    (5/192) benchmarking ("perf_sum", Float64, false)...
    done (took 2.090496083 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.476830691 seconds)
    (7/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.598645192 seconds)
    (8/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.448959282 seconds)
    (9/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.200980616 seconds)
    (10/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.423570062 seconds)
    (11/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.518341483 seconds)
    (12/192) benchmarking ("perf_sum", Float32, true)...
    done (took 2.111909016 seconds)
    (13/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.607685474 seconds)
    (14/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.528447753 seconds)
    (15/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.036820999 seconds)
    (16/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.517795048 seconds)
    (17/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.413882898 seconds)
    (18/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.432352197 seconds)
    (19/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.003033419 seconds)
    (20/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.663621247 seconds)
    (21/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.41614092 seconds)
    (22/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.680729634 seconds)
    (23/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.663724993 seconds)
    (24/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.416014441 seconds)
    (25/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.983823246 seconds)
    (26/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.495610152 seconds)
    (27/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.692772312 seconds)
    (28/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.476077762 seconds)
    (29/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.287222812 seconds)
    (30/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.419130431 seconds)
    (31/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.416840848 seconds)
    (32/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.455016036 seconds)
    (33/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.662335367 seconds)
    (34/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.406079616 seconds)
    (35/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.415775568 seconds)
    (36/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.574111631 seconds)
    (37/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.529965818 seconds)
    (38/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.414059071 seconds)
    (39/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.429957391 seconds)
    (40/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.707458628 seconds)
    (41/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.338610741 seconds)
    (42/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.430900418 seconds)
    (43/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.406308077 seconds)
    (44/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.678763038 seconds)
    (45/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.405179782 seconds)
    (46/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.406654052 seconds)
    (47/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.406901404 seconds)
    (48/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.685063696 seconds)
    (49/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.405087684 seconds)
    (50/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.459609773 seconds)
    (51/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.425532161 seconds)
    (52/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.406233441 seconds)
    (53/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.575701077 seconds)
    (54/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.462213349 seconds)
    (55/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.416845013 seconds)
    (56/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.449707509 seconds)
    (57/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.104993646 seconds)
    (58/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.408263453 seconds)
    (59/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.486661441 seconds)
    (60/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.450934779 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.166866006 seconds)
    (62/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.845550696 seconds)
    (63/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.833090865 seconds)
    (64/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.435309453 seconds)
    (65/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.448680114 seconds)
    (66/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.839424787 seconds)
    (67/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.481488334 seconds)
    (68/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.493094217 seconds)
    (69/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.456173636 seconds)
    (70/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.502653675 seconds)
    (71/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.421559441 seconds)
    (72/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.104049713 seconds)
    (73/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.435286046 seconds)
    (74/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.853259421 seconds)
    (75/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.408318466 seconds)
    (76/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.434586922 seconds)
    (77/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.523973503 seconds)
    (78/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.408108231 seconds)
    (79/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.527158725 seconds)
    (80/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.319047355 seconds)
    (81/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.408127418 seconds)
    (82/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.410957009 seconds)
    (83/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.556259862 seconds)
    (84/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.709965373 seconds)
    (85/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.596726261 seconds)
    (86/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.318017489 seconds)
    (87/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.716975333 seconds)
    (88/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.458403973 seconds)
    (89/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.456949481 seconds)
    (90/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.406898669 seconds)
    (91/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.408977769 seconds)
    (92/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.415607722 seconds)
    (93/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.419944976 seconds)
    (94/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.422731159 seconds)
    (95/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.540418264 seconds)
    (96/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.452454237 seconds)
    (97/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.35517686 seconds)
    (98/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.422802102 seconds)
    (99/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.010405039 seconds)
    (100/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.066887221 seconds)
    (101/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.410316352 seconds)
    (102/192) benchmarking ("perf_sum", Int64, true)...
    done (took 2.193990686 seconds)
    (103/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.410455843 seconds)
    (104/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.492263585 seconds)
    (105/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.430933306 seconds)
    (106/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.423202159 seconds)
    (107/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.539919213 seconds)
    (108/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.409544593 seconds)
    (109/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.330209884 seconds)
    (110/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.409868929 seconds)
    (111/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.32094633 seconds)
    (112/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.323531147 seconds)
    (113/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.41152798 seconds)
    (114/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.487821264 seconds)
    (115/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.430505548 seconds)
    (116/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.462387149 seconds)
    (117/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.460119622 seconds)
    (118/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.515119055 seconds)
    (119/192) benchmarking ("map", abs, Int64, false)...
    done (took 2.122740229 seconds)
    (120/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.857831054 seconds)
    (121/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.427975798 seconds)
    (122/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.434010507 seconds)
    (123/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.46182614 seconds)
    (124/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.408689695 seconds)
    (125/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.420667214 seconds)
    (126/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.414867894 seconds)
    (127/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.546088334 seconds)
    (128/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.033746725 seconds)
    (129/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.413458319 seconds)
    (130/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.036863427 seconds)
    (131/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.45426881 seconds)
    (132/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.445970447 seconds)
    (133/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.201803272 seconds)
    (134/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.43775945 seconds)
    (135/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.42256624 seconds)
    (136/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.412001468 seconds)
    (137/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.715149601 seconds)
    (138/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.573190098 seconds)
    (139/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.835963287 seconds)
    (140/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.160800487 seconds)
    (141/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.456160446 seconds)
    (142/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.518188066 seconds)
    (143/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.412670183 seconds)
    (144/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.245289026 seconds)
    (145/192) benchmarking ("perf_sum", Int64, false)...
    done (took 2.234666972 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.022196381 seconds)
    (147/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.479050984 seconds)
    (148/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.422089753 seconds)
    (149/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.416331326 seconds)
    (150/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.445186849 seconds)
    (151/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.530588462 seconds)
    (152/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.413270331 seconds)
    (153/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.995778331 seconds)
    (154/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.604055353 seconds)
    (155/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.728085457 seconds)
    (156/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.532453275 seconds)
    (157/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.253452818 seconds)
    (158/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.41240204 seconds)
    (159/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.479842968 seconds)
    (160/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.486897765 seconds)
    (161/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.428403361 seconds)
    (162/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.413723075 seconds)
    (163/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.483672408 seconds)
    (164/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.584893836 seconds)
    (165/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.10805124 seconds)
    (166/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.434446039 seconds)
    (167/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.414034119 seconds)
    (168/192) benchmarking ("perf_sum", Float32, false)...
    done (took 2.148197725 seconds)
    (169/192) benchmarking ("map", abs, Int64, true)...
    done (took 2.149943883 seconds)
    (170/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.413610846 seconds)
    (171/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.79632397 seconds)
    (172/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.413230027 seconds)
    (173/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.712016518 seconds)
    (174/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.79552559 seconds)
    (175/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.06815669 seconds)
    (176/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.518143416 seconds)
    (177/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.862190325 seconds)
    (178/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.414988696 seconds)
    (179/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.445817782 seconds)
    (180/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.430862526 seconds)
    (181/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.021012419 seconds)
    (182/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.122533977 seconds)
    (183/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.657378551 seconds)
    (184/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.415410303 seconds)
    (185/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.343087132 seconds)
    (186/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.114633889 seconds)
    (187/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.440948969 seconds)
    (188/192) benchmarking ("perf_sum", Float64, true)...
    done (took 2.08327666 seconds)
    (189/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.917661838 seconds)
    (190/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.435792899 seconds)
    (191/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.41960461 seconds)
    (192/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.447807627 seconds)
  done (took 389.844153422 seconds)
done (took 391.180905988 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.456764728 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 2.331942377 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.454043013 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.45336129 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.453028954 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.429070965 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.46985 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.437553706 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.474035805 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.474669545 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.429614749 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.451096379 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.45851593 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.469126915 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.561268794 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.43724184 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.455018287 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.446658721 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.452301385 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.506869006 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.453831094 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.454353708 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.464999914 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.455427819 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.456254423 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.456675682 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.460088228 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.43960924 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.444640387 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.45237348 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.442093439 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.458940222 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.477947874 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.476017505 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.453030243 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.447775046 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.454386623 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 2.334913086 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.472906911 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.470076084 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.451199001 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.477454961 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.44284505 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.44353343 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.476812942 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.464518294 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.457864762 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.559932032 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.441382435 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.429355876 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.458922212 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.508576103 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.453056025 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.430173134 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.43927406 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.562262457 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.477423319 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.459933077 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.446297732 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.455567576 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.563731327 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.459963044 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.508722448 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.459424457 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.446782618 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.460655819 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.478373466 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.510930162 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.445326714 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.456790995 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.456099794 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.453543139 seconds)
done (took 116.51644577 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.560437991 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.436924249 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.59697508 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.448321374 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.602263494 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.577078645 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.445982263 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.44559361 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.445944273 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.2667828 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.446782902 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.44640262 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.437132128 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.446472609 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.559009133 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.447088265 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.446644181 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.165432896 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.448141968 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.573979466 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.434039609 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.446710343 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.448175144 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.274067446 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.437067331 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.431317912 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.574970961 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.447537851 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.172974507 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.433352535 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.434359027 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.17195166 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.57444254 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.468791237 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.457162155 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.456096234 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.604322634 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.465717556 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.563484013 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.563936629 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.599120945 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.485348807 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.434162469 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.436435951 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.450938542 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.448037051 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.448452086 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.477310971 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.437681426 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.448461604 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.168250712 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.460567215 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.457669804 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.449041655 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.447766943 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.468862322 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.448961092 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.448630917 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.576946274 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.449303305 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.56383924 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.276923519 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.271873282 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.449027472 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.437780892 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.449146115 seconds)
  done (took 115.948586534 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.50885645 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.515487085 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.551600028 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.440092422 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.489617308 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.551993057 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.440719482 seconds)
  done (took 11.853674805 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.446910589 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.449748188 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.488339667 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.487353099 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.448669355 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.61187955 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.45014472 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.453997531 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.449312146 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.491265915 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.449743258 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.451605788 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.459383327 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.442114248 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.488410623 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.452260184 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.558897352 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.443361603 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.450109614 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.594000429 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.449506798 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.460887099 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.492415361 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.454702426 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.451740347 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.447569643 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.227037515 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.451191739 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.452117815 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.450717262 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.44985418 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.509423448 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.451314985 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.435621479 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.451236371 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.556153493 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.452032874 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.45159303 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.452320134 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.444479079 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.45229289 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.452820865 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.452258285 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.452800271 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.452186154 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.467910548 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.452929443 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.452135336 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.453699673 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.451448743 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.492319687 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.454103356 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.451443918 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.453474808 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.498440136 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.462740087 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.454145906 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.451482248 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.452166636 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.451952667 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.595047317 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.49142131 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.453244083 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.492213147 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.45474473 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.453554659 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.454013414 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.453693318 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.535279968 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.453753219 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.491063122 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.453698525 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.624710705 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.469751673 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.453370944 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.44730745 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.44634738 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.453893132 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.442990274 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.450758502 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.453800567 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.446271727 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.451763545 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.454001315 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.454816717 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.603560563 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.552541983 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.454585026 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.460596311 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.452195044 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.454977134 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.497467397 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.45673019 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.455091627 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.496338515 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.562941827 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.497826953 seconds)
  done (took 148.857287663 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.45682839 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.458642104 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.450972654 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.474190419 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.447890695 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.447582935 seconds)
  done (took 10.096521332 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.44834935 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.456790347 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.456728108 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.456368803 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.455844754 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.45634906 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.457289024 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.448574383 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.458301265 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.457049344 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.457589545 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.457953567 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.455612664 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.457208947 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.456061904 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.457688695 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.455502814 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.45569232 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.456763895 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.458993812 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.447375339 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.457669344 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.456601028 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.448595439 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.459402851 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.457656377 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.471214536 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.456660392 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.458265981 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.455373974 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.476940066 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.456860582 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.449610606 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.452686682 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.460033321 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.449721224 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.459876207 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.460120038 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.45709712 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.459390142 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.458960741 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.458683917 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.458723739 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.460886793 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.45029861 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.451718729 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.461769274 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.472797645 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.456449491 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.459668229 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.459979183 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.45985605 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.458371879 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.460348349 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.453417226 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.470494242 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.462316916 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.459296004 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.458635314 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.451942032 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.46189394 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.459496708 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.451676257 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.460500095 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.459952642 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.460591983 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.45266461 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.461942799 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.460321936 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.459331567 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.460727112 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.459971809 seconds)
  done (took 107.328984859 seconds)
done (took 395.436736526 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.449137497 seconds)
  done (took 4.81463185 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.468704918 seconds)
  done (took 3.834414197 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.88740728 seconds)
  done (took 23.25566015 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.451060875 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.464446926 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.486347019 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.447656796 seconds)
  done (took 11.213538229 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.951921876 seconds)
  done (took 4.315906561 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.455906359 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.460286417 seconds)
  done (took 6.283845711 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.722056027 seconds)
  done (took 4.087165741 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.670622254 seconds)
  done (took 4.037343987 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.462193713 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.462797741 seconds)
  done (took 6.299488661 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.434720278 seconds)
  done (took 3.800698932 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 17.58838383 seconds)
  done (took 18.954765267 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.472170961 seconds)
  done (took 3.840392955 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.467275507 seconds)
  done (took 3.832885324 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.130751431 seconds)
  done (took 6.496064341 seconds)
done (took 106.432169594 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.446200698 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.448380796 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.44906007 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.447890743 seconds)
  done (took 11.158192683 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.514111886 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.514545085 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.518969114 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.518681479 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.52039077 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.513946949 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.488476086 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.487412312 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.513331469 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.513671222 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.519962997 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.515293652 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.514181875 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.488701536 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.51508709 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.520474716 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.515566705 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.522451118 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.49010307 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.522007274 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.464686143 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.522477312 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.514045795 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.463400087 seconds)
  done (took 37.559058069 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.972833568 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.524948587 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.608574141 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.505350098 seconds)
  done (took 7.978745325 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.598357407 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.601246861 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.609872163 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.663403991 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.6989543 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.606643563 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.489764867 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.48467552 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.471542956 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.600154086 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.632943366 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.565868257 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.862142107 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.463481321 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.853807269 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.464159757 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.464811937 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.596529083 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.661226893 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.681848603 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.465776947 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.60038183 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.600899194 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.568487781 seconds)
  done (took 39.675208384 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.472292322 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.48034452 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.472891626 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.480003462 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.466550831 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.473271728 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.467484414 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.47221645 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.465632423 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.466170544 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.471768188 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.480731417 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.465969835 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.468016032 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.473049779 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.468213111 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.481066666 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.473267809 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.473935883 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.472743584 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.468189813 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.472886899 seconds)
  done (took 33.755590849 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.449865155 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.449626284 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.801468857 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.706215823 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.451418393 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.453952778 seconds)
  done (took 14.683466674 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.526776223 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.67928963 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.456799268 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.815637291 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.899841414 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.457516853 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.45833485 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.703093933 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.028495472 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.016001787 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.516892683 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.526605685 seconds)
  done (took 21.455077716 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.454475302 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.455308447 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.457029676 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.468787363 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.511879944 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.461216798 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.463017726 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.450521885 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.516119675 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.514821884 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.46020343 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.51163451 seconds)
  done (took 23.096250578 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.543146735 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.460933196 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.465508789 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.538434983 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477533627 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.46542447 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.458685204 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.196053385 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.486164209 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.73665972 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.461309321 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.544272354 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.459822794 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.464644297 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.461160494 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.447522529 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.687668676 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.975999229 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.466525941 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.459827033 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.130805416 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.460214112 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.476630929 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.701172858 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.466757751 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.464342822 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.853379719 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.460168763 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.755321704 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.728171557 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.728119419 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.464149632 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.737725989 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.137285763 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.596885556 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.677905102 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.463706876 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.4668299 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.447180126 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.468799347 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.471158047 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.463675566 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.726007731 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.462678605 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.461303568 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.470072431 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.199133164 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.491083119 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.462767061 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.462171415 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.729061935 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.546057829 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.468255551 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.461631524 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.51476943 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.463192077 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.468728235 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.585715722 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.482618806 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.465424336 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477715173 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.461938449 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.475241293 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.464449677 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.131721435 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.47146425 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.467650035 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.46648067 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.460823424 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.478559754 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.487713399 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.476090835 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.485812682 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.462632019 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.229459233 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.480256868 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.463416945 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039361518 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.468765555 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.464290883 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.687809363 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.462461867 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.462707003 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.46051585 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.462618801 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.215588686 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.474944658 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.442154381 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.530671505 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.219148165 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.70361926 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.486947062 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.103417737 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.688193686 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.443160431 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.465123522 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.466734261 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.464522312 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.483732296 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.200619391 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.487033223 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.473228428 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.462822442 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.674558095 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472606186 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.446473312 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.960556305 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483174519 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.486203299 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.474297989 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.682127531 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.086762735 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.737023602 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.470843178 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.500984895 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.464529238 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.275208769 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.469404249 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.470966105 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.464020323 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.747650423 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.39320086 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.469226049 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.532786079 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.481169452 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.470024053 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.463762316 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.465373201 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.464227767 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.766681579 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.500068572 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.730599186 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.467429163 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.463883184 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.463985713 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.467823434 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.467136609 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.684498548 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.464673841 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.738524815 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.464897584 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.466562183 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.469073059 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.684007316 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.479841925 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.472396619 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.465089092 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.466373057 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.493405506 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.734326433 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.49957481 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.584652479 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.497371749 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.478881231 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.46658799 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.473071439 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.4733305 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.466211059 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.468113279 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.469666055 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.479664217 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.462752351 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.089347517 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.450105707 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.482447255 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.47232772 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.482483326 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.540230385 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.47500494 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.688036052 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.472562406 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.463056233 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.473965751 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.466731321 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.688413532 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.73497405 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.479426656 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.640304439 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.963302563 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.109366583 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.485781456 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.467569298 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.467960458 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.467901275 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468823773 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.467154641 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.468951611 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.686566638 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.745102997 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.464060572 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.114835001 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474448622 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.472313624 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.476621243 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.736383393 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.47838212 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468870548 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.481981528 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.475475298 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.489707417 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.735233669 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.689373171 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.484141463 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.469266978 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.031660949 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.475799681 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.470206158 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.469489209 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.49985744 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.469777053 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.298916843 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.46883051 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.459214713 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.742989363 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.471989958 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.486843926 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.469572542 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.470162768 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.471464736 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.49220399 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.47851825 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.691770277 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.475557634 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487992046 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.469997632 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.245447814 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.044895918 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.486607531 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.486389684 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.469892951 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.211498865 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.504638201 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.471192408 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.733001253 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.206855957 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490851645 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.971853791 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.499028555 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.244509787 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.739889021 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.70042868 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.475433391 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.480706657 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.741705871 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.684479482 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.503894798 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.471874586 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487414308 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.451602735 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.041263718 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.500278102 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.650435357 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.214849246 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491829642 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.472896805 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.500311833 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.488166862 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905854925 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.492276622 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472117534 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.471019503 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.473146922 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.303093534 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.49168755 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.478136905 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.125660634 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.476266686 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.970754149 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491942836 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.693549636 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.745531358 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.820184958 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.475308854 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.484975029 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.472153874 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.741402994 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.489232737 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.474339028 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.044539796 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.331799924 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.488110369 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474153062 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.28542871 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482835366 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.767775038 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.475011769 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.490503618 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.496751571 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.479489368 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.473505317 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.474344315 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.492872787 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.456382148 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.992011384 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.48359411 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.480093505 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.496180535 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.479533128 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.478402857 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.489152345 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.098926665 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.701975971 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.468096814 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.524640313 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.480542151 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474530411 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.459208314 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.493928059 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.473859931 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.547873942 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.695530946 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.479029518 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.461413557 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.544106687 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.707529765 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.475319569 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.474908475 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.726003698 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.480168773 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.480918123 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.255807418 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.139744932 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.477424647 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477528236 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.472766588 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.518429349 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.548030464 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.698688732 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.750688979 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.747308535 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906852485 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.503425341 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.479872013 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.496579501 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.560028253 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.492143016 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.481861051 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.476950251 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.098927142 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.266553948 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.111987973 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.749887804 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.479955146 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486111165 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483074422 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.718323592 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.477461105 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.755106505 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.47844614 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.475242164 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.502487614 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.476889523 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4802217 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.689211659 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.75263002 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.47950229 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.482652302 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478176474 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.478103955 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.754809532 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.689962086 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.999812057 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067975662 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485202971 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.481262137 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.221977216 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.775897552 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.479627037 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.479365603 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.479319954 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.493868546 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.495876822 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.491727871 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.47935366 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.704052015 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.749612401 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.163466364 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.767319559 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 3.09173469 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.357221804 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478288169 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.479568035 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.479480942 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.70212508 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.113291668 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.210701262 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486316886 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.552277365 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.702878612 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.48466448 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.716723866 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.484318553 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.479667405 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.479396715 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.487742219 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.485650253 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.746821755 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.109455695 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486161205 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.485487208 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.48462416 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.136909874 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.702511991 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.707412783 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.239907701 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.705314834 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.758088972 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.504236564 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.486437983 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.11853699 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.752565104 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482545402 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.487126124 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.731023332 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.499686341 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.52660942 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.353172035 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.481656024 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068774117 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.700997904 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.504649035 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484001074 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.209616832 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.11864918 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.484200765 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.004261918 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.488887627 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493717943 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.760704446 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.491139353 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.485464404 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.762152201 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.48793912 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.482833114 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.705320498 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.110605187 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.265334716 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.498759354 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484521785 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.485418114 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48240795 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.498742672 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48401591 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.50913237 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.035106519 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.503353817 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484638572 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.500195043 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.491389139 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484859094 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.483398744 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483288048 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.49089788 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.47379196 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.475305442 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.489924965 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.600296395 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.058162737 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.514929688 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.107703634 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.81892373 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.483293685 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.485868372 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.4668725 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.491665964 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48673312 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483161228 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48543136 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.480018877 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.076787459 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.492095896 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.753751972 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.491508364 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.695369344 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.695690253 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.485984085 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.711010216 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.492172622 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.505285219 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.477257456 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.489871051 seconds)
  done (took 1043.806108864 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.494969869 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.49277092 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.480210745 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.512050729 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.499987169 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.528195781 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.537547352 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.49199175 seconds)
  done (took 21.431655247 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.484444125 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.484123334 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.485114601 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.485436337 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.48355398 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.949824697 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.496938548 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.48464564 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.497701168 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.492039043 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.481178221 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.08665973 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.487668387 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.482951267 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.481693739 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.487199075 seconds)
  done (took 34.246962362 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.152511038 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.670327895 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 8.099766767 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.557790327 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.549054946 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.481605266 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.156841916 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.492971821 seconds)
  done (took 31.557681991 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.491032026 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.490986594 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.491803474 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.491775622 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.491530357 seconds)
  done (took 8.852377285 seconds)
done (took 1330.623962146 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.491986415 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.49413098 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.492229125 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.493441912 seconds)
  done (took 7.366632432 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.468385504 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.468149149 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.470296589 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.482328677 seconds)
  done (took 10.285654994 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.181668739 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.010597524 seconds)
  done (took 5.588888164 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.026831061 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.019613806 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.018176709 seconds)
  done (took 7.459694072 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.780216263 seconds)
  done (took 3.175671601 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.478102691 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.479789103 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.211359892 seconds)
  done (took 8.56742746 seconds)
done (took 43.839862714 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.477722992 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.2438144 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.635950628 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.478317907 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.639816423 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.637152256 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.724749286 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.485109675 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.478596072 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.47984558 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.494027783 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.643892412 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.711907989 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.243705931 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.713432387 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.24204618 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.641270944 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.4833028 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.478895609 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.49001467 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.725540293 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.479528101 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.491026685 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.479147435 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.641231067 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.626890691 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.483297897 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.241900614 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.479788477 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.499452249 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.627512985 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.484234223 seconds)
  done (took 86.08150536 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.480214008 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.48074158 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.496140478 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.501447567 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.507162646 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.480995084 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.498263163 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.480476446 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.494234861 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.479283206 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.480585727 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.480038324 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.482024282 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.482364376 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.485527983 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.481190916 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.498514905 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.481897097 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.481149946 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.499217697 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.482571398 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.493576437 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.481800577 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.496882077 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.482085119 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.498050142 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.497291078 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.48215474 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.483271949 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.481879546 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.482314924 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.502913406 seconds)
  done (took 81.016279257 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.480645625 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.481155811 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.483835378 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.482769915 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.482661578 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.482682418 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.484679469 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.506819505 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.482561461 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.482410858 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.490450715 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.484246004 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.482771671 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.499489303 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.485824549 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.500042526 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.482730847 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.500362596 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.483482437 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.492502286 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.484994808 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.507553603 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.485030925 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.49174975 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.492059271 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.485007356 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.499735698 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.496674296 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.48611819 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.483974209 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.487210122 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.50088253 seconds)
  done (took 81.053946913 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.724990106 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.500937384 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.50297787 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.495805188 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.504069413 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.500663624 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.494998868 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.730415727 seconds)
  done (took 15.858014074 seconds)
done (took 265.406212081 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.50897701 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.006714452 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.539380357 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.494247519 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.515494226 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.521113778 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.720759972 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.536944942 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.718949542 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.510784213 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.509974618 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.503972351 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.302573732 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.652484986 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.308001716 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.419194527 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.381014455 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.49547327 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.083711519 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.777395901 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.52070083 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.494403493 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.307072301 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.40933579 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.483001344 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.571789133 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.589452503 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.729296743 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.65459589 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.570749124 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.014592893 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.497275629 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.508004916 seconds)
  done (took 68.261340329 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.491900124 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.501224073 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.501631425 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.504022417 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.502792782 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.502995947 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.493887506 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.502095902 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.502928257 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.503620664 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.503221233 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.502391164 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.503385215 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.502179477 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.503203071 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.48755219 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.493145981 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.502640183 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.493205589 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.490571176 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.502863457 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.50490107 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.502958031 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.502786324 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.505167985 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.503188123 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.505024642 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.504456221 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.503212616 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.50381288 seconds)
  done (took 46.433260168 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.503258344 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.080104187 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.223273188 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.501237223 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.495311255 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.500124556 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.786204418 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.508045565 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.497960189 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.498323994 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.970921459 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.511769715 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.530639192 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.25183246 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.50490349 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.505624103 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.505136023 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.496372768 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.091096813 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.506015658 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.803263946 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.510523857 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.787638745 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.510403933 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.517411945 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.497505461 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.500902888 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.303747329 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.517303912 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.966635284 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.297350626 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.785241865 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.253498878 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.275045326 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.302046367 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.511436571 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.50468749 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.968746598 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.500012757 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.499048579 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.784293268 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.505046479 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.235604384 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.195951207 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.520069112 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.505525112 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.331637324 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.969551755 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.742436425 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.502965774 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.268029286 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.505528874 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.508464147 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.499411541 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.743011908 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.500779911 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.498160934 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.390004395 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.503452143 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.786173373 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.508036577 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.500143414 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.086120779 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.498972521 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.078232572 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.501128013 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.507320801 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.517724134 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.238865617 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.50115302 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.207519602 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.516838458 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.509043896 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.969738368 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.083169337 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.390678113 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.501340939 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.091612106 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.284006142 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.802076655 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.504493464 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.284808833 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.804919082 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.504915915 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.509937508 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.511736317 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.509796785 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.575298286 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.786826116 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.128317072 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.205806817 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.409309623 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.795394207 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.508070802 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.502531785 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.395058265 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.510627665 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.510903529 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.239114617 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.210831408 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.520424367 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.508620289 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.21712174 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.526178871 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.789550486 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.506741338 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.271773641 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.506795228 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.576687413 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.510738481 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.50731658 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.522444215 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.791953041 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.504935821 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.510686954 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.194472997 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.998329391 seconds)
  done (took 207.854451547 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.495125605 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.495584514 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.497711218 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.496246378 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.49571782 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.505141509 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.495470264 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.495425489 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.500275799 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.49671743 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.495772908 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.505921939 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.503473523 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.495695081 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.496275457 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.512455356 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.496778204 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.502033202 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.515361537 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.496394022 seconds)
  done (took 47.406517647 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.511679525 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.064522853 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.038722932 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.512933431 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.512227167 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.504084174 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.559226877 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.512198411 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.513526461 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.803316834 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.675919702 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.517339951 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.51314954 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.513635177 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.040681062 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.49605973 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.803934749 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.065239503 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.512845065 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.06703457 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.497116163 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.514936238 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.504141041 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.067501836 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.814295182 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.792342529 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.561617738 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.067594095 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.512239437 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.513299802 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.067536125 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.514069334 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.506881322 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.065124078 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.530423952 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.529126217 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.514158269 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.563632862 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.563116822 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.805927196 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.07240579 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.804506824 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.525704155 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.681988926 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.515999985 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.497362396 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.079791893 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.531750627 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.499380021 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.518496845 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.520783797 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.052132192 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.527148369 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.05136837 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.536365139 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.514546573 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.074068652 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.056026258 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.065298256 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.680973537 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.510960373 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.794293762 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.515230241 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.083641614 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.532385223 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.516458778 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.515739581 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.680274236 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.09338912 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.795265404 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.808355616 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.809007132 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.516453385 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.576183136 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.533357426 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.809235934 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.57488513 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.913335244 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.810771439 seconds)
  done (took 135.855347856 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.786795048 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.62750079 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.902815759 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.078158701 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.011365846 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.645951024 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.623517549 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.767353058 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.517051677 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.624532977 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.162087661 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.618734578 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.260538313 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.57327107 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.620795785 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.651896189 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.908224795 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.491596755 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.166697845 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.136407193 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.511089508 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.612686638 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.999965514 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.71807894 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.507085615 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.104682589 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.452623857 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.027437778 seconds)
  done (took 56.527184609 seconds)
done (took 563.740670786 seconds)
SAVING RESULT...
DONE!
