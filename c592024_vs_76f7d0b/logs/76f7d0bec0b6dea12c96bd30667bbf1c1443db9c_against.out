cset: moving following pidspec: 9562
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.410761852 seconds)
loading group "string"... done (took 0.504644818 seconds)
loading group "linalg"... done (took 8.683830806 seconds)
loading group "parallel"... done (took 0.172526431 seconds)
loading group "find"... done (took 1.218831443 seconds)
loading group "tuple"... done (took 1.967204038 seconds)
loading group "dates"... done (took 1.434801726 seconds)
loading group "micro"... done (took 0.199173045 seconds)
loading group "io"... done (took 0.522228058 seconds)
loading group "scalar"... done (took 49.84537693 seconds)
loading group "sparse"... done (took 13.363549022 seconds)
loading group "broadcast"... done (took 1.260537918 seconds)
loading group "union"... done (took 9.094900778 seconds)
loading group "simd"... done (took 2.996272285 seconds)
loading group "random"... done (took 11.159845528 seconds)
loading group "problem"... done (took 2.162798534 seconds)
loading group "array"... done (took 24.410418849 seconds)
loading group "misc"... done (took 1.090118797 seconds)
loading group "sort"... done (took 3.670890977 seconds)
loading group "collection"... done (took 18.917305927 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.59372791 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.126212615 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.199128377 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.336631 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.225861686 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.164820585 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.140756241 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.240146166 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.506506702 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.197924874 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.136294657 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.492556661 seconds)
done (took 6.083701821 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.246171676 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.238767471 seconds)
    (2/2) benchmarking "String"...
    done (took 0.16206929 seconds)
  done (took 1.070228059 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.074889759 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.153208545 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.105703623 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.092456143 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.090722245 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.106842547 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.090278599 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.107823895 seconds)
  done (took 1.420403974 seconds)
done (took 3.484765507 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.494238375 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.856883467 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.495886619 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.155585091 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.289771635 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.288113758 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.268978967 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.197650898 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.091424537 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.10447701 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.169158387 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.38709637 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.368190336 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.937335285 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.089717194 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.10839811 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.113850451 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.760322236 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.078771622 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.109991407 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.498795679 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.179394843 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.098506965 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.119935192 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.184333985 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.130910841 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.159319278 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.100712177 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.666577179 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.131111817 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.176543841 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.095978263 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.156959571 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.184131471 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.192182215 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.108681469 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.680445539 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.199158361 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.087262296 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.097503991 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.666442083 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.116034806 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.179796809 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.101798659 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.086623349 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.177171027 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.091191606 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.076878426 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.107765463 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.08486172 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.160951055 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.453560623 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.103264198 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.168569865 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.091258235 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.685015666 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.096958986 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.272292093 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.124196608 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.091852586 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.089236342 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.086624603 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.155656791 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.092006305 seconds)
  done (took 19.679584198 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.144298774 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.161339051 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.076787932 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.153757565 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.121486639 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.078429377 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.09918333 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.076947484 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.107033625 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.192809397 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.136056088 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.15015759 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.091170351 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.088486452 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.126499993 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.24607655 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.108452854 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.118992598 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.088900308 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.087532684 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.136468658 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.095708667 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.089309492 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.105224949 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168185998 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.202601045 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.107787424 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.121715766 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.089247393 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.092357867 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.139710459 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.145248112 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.092666435 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.086651424 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.168788276 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.121064543 seconds)
  done (took 5.106755687 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.194120187 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.120186098 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.201300258 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.158399198 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.144624171 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.165614806 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.122607459 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.266186547 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.197603367 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.176708698 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111858373 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.120369676 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078490221 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080257714 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.076699316 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.460025655 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.146631371 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.15980794 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.124553835 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10112394 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.080071355 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.385386064 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.08335427 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.0930613 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082145028 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.063639437 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.189135064 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080339149 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.121711642 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.081348859 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.10237343 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11273153 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.2091566 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.125330523 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.119354453 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098330238 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.076806892 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.224206924 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.085760655 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.076719307 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.132678082 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129492117 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.114093337 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.092877687 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.084667915 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.218364926 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.078329249 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.114300874 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.05757354 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.19350539 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.14948708 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.094143967 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.271404664 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.119614834 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07847056 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.077005064 seconds)
    (57/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.105927205 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.800765063 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.111465498 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.079244388 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.095692209 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081515037 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.076634037 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.424951565 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.097260616 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.052339031 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.08144949 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.154501949 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.079447022 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.095607325 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086323064 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084122392 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.118749142 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079230818 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.081077993 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076359815 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.09530284 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.077154207 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.079635795 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.131456579 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.083863748 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.094350024 seconds)
    (83/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.134610352 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.15903236 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.097726983 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.097427413 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124290381 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.081402036 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.092183902 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111901421 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095011173 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.080434955 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.14411659 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099795309 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.1127357 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.095100019 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.141239906 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.0804774 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.233184071 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.094768602 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.121298746 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.096078739 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111613267 seconds)
    (104/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.082362585 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.113409934 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078898003 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099405336 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.078125978 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.077519598 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.157875254 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.079487813 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.078136296 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.078337499 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.108007271 seconds)
  done (took 27.391489061 seconds)
done (took 52.847163707 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.428821233 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.080113478 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.079585739 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.097011849 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.07997278 seconds)
  done (took 1.512070911 seconds)
done (took 2.235558346 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.314751037 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.187321786 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.100291869 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.184385927 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08397621 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.189504478 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.1770272 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.092784181 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.200800847 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.082097294 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.181626492 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.0824187 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.101299492 seconds)
  done (took 2.728133549 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.101131064 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.108503079 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.100757261 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.118768804 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083723128 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099221978 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.117056949 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.110001105 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099511504 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.110507133 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.0846314 seconds)
  done (took 1.858834358 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097828331 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105829157 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097694177 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.115845412 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083490904 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.097549067 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.114013301 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108235963 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097474285 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.110218093 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.08494885 seconds)
  done (took 1.83908601 seconds)
done (took 7.150210537 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.07118083 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.328261274 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.162848754 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.20530683 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.341721609 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.230819907 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.555375493 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.149549583 seconds)
  done (took 13.91227879 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.160747859 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.108405835 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.090514561 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.088723916 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.091692728 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.111480343 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.091098119 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.091663032 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.108744534 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.093613185 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.093075366 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.103272199 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.090079897 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.089333224 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.093127026 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.105284717 seconds)
  done (took 2.39908034 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.140158787 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.13799714 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.096181089 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.097105598 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.110908375 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.097312841 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.098494218 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.113944898 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.093092386 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.09260221 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.100169217 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.111522594 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.09540171 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.091788326 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.112396468 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.115293917 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.091866305 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.113007787 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.113815853 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.111016749 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.09762979 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.094478682 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.109942133 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.097670236 seconds)
  done (took 3.34049688 seconds)
done (took 20.379695094 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.143863068 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.098609862 seconds)
  done (took 0.973418275 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.136485996 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.153613171 seconds)
  done (took 1.024856568 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.108075503 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.088578675 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.133340999 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.101179044 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.089372021 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.105558177 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.114100323 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.105166373 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.090269451 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.090115975 seconds)
  done (took 1.763626594 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.093770152 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.093213758 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.11961061 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.133896231 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.095647523 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.108970001 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.093150119 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.091163253 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.111256148 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.090076176 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.094087058 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.12306217 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.093785356 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.122392548 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.093670553 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.094781278 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.11321426 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.093175757 seconds)
  done (took 2.597572318 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.088614243 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.090509517 seconds)
  done (took 0.920291656 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.092976786 seconds)
    (2/7) benchmarking "second"...
    done (took 0.08859148 seconds)
    (3/7) benchmarking "month"...
    done (took 0.090523487 seconds)
    (4/7) benchmarking "year"...
    done (took 0.107953758 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.088731281 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.087184469 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.104095126 seconds)
  done (took 1.400830632 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.479609959 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.258470155 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.35196539 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.107073225 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.142428284 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.345804008 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.14306041 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.221407386 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.100698322 seconds)
  done (took 2.925547568 seconds)
done (took 12.344651575 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.089842903 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.216938331 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.614833679 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.110454306 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.087196505 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.157651276 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.278175608 seconds)
done (took 2.302126297 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.334669035 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.140194911 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.080956446 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.089826629 seconds)
  done (took 1.38447172 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079800534 seconds)
    (2/2) benchmarking "read"...
    done (took 0.096449792 seconds)
  done (took 0.923418142 seconds)
done (took 3.055475261 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088155171 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.119182601 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.104373419 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.08702865 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.087011983 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.085953015 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.104183227 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.086469385 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.086325935 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.085713393 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.104367418 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.087219716 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.085922667 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103769021 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086972927 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087646983 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.085594898 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10281071 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.087361663 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085149469 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102361899 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.087320893 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.086238038 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.085956617 seconds)
  done (took 2.991780649 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.105244227 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.089434825 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.106233702 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.091371656 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.092559619 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.107365339 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.090612981 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.089727755 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.106402192 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.089167473 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092246344 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.091009898 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.104822372 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.091799368 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088226373 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.107641961 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.0909466 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088178244 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104112622 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.091456627 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.090111302 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105004262 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.091610651 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090963598 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.106731622 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090897361 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.088350665 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.104530107 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090689828 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.090986285 seconds)
  done (took 3.617205037 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.09615398 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.085403882 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.087366275 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.11133266 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.084985241 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.08830941 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.10082123 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.08652813 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.089295539 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.086962131 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.105616855 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.087642312 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.085257257 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.10488726 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.089207281 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.091030711 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.095642301 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.101808308 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.084793528 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.088197869 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.10770898 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.084977245 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.087722804 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.089294591 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.103628044 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.084925209 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.087169725 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.102946634 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.089261487 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.087041044 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.089418358 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.106536801 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.087813232 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.095550177 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.106432412 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.088006185 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.091576073 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.101478974 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.088725176 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.08505879 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.084267431 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.103925263 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.08544204 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.093309093 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.103669194 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.089708287 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.086021962 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.088170189 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.104874614 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.09011011 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.08359555 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.100426399 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.090030098 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.088286366 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.089365151 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.101816216 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.089965338 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.085322834 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.103675853 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.087650708 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.085254006 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.084513512 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.108609401 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.08841975 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.102311522 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.109786866 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.085129543 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.089695127 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.105210043 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.092961086 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.090532358 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.113209244 seconds)
  done (took 7.473765786 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.099359713 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.097369701 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.087304262 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.105979105 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08884398 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.087525903 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.10857592 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088391899 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08978097 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.110431155 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088861487 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.089199539 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088481346 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108778056 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089198495 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.089398656 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.111151338 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088340819 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.086921318 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.106149876 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08909473 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.093826695 seconds)
  done (took 2.846992316 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.229846296 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.094416193 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.137849788 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.117645501 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.104800149 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.118566296 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.094694853 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.094021505 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108661954 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097389486 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097834833 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.1113481 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.105841635 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095901872 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.113997655 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098601267 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10850903 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099569938 seconds)
  done (took 2.788294685 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.102234665 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.093264782 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.126459611 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.090678361 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.091104705 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.089218029 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.112904109 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110158252 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.089012786 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.090785625 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.096704887 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09181864 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.108015548 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090951918 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090380015 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.106588638 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.090638848 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091610913 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114079227 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096165559 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.095447644 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113559743 seconds)
  done (took 2.958362053 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10308197 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.089575129 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.124336331 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.093387718 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.089021359 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.088137182 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.112791016 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.090353904 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.094810809 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.107301803 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090232469 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.088916293 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.121342147 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09051795 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.096120661 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107490924 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.091005399 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.091006476 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10633224 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.089669029 seconds)
  done (took 2.725302917 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.165400137 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122580982 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.105894525 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112947004 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.122580593 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106761012 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11232165 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.123741684 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105596193 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.132886832 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106827461 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106124171 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.130326124 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112038423 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.105417568 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.130012457 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115303664 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.12970644 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10687733 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.106183978 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.133499272 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106282376 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.129499729 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.105916544 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.104901676 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.123114381 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105829771 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109991527 seconds)
  done (took 4.0430296 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089490171 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088819471 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.088006483 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.105987181 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.089331621 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.088245754 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.087350243 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.105209226 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08980633 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.087734171 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.105713085 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.088736022 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.088898926 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.088221201 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.105173663 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.089794588 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088876278 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.105519284 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089845008 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088409959 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.087955438 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105644853 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.089505581 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.088213976 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087166849 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.105458348 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089537929 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088277357 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105843457 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088538417 seconds)
  done (took 3.562103817 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.100987326 seconds)
    (2/2) benchmarking "in"...
    done (took 0.098773413 seconds)
  done (took 0.965946972 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.096439325 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102807659 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.088026393 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.107549986 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.096523774 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.089251903 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.114385843 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095748012 seconds)
  done (took 1.55902414 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.136863198 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.157248572 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.094389051 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.099159447 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.158956339 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.148654134 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.129957243 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.093694893 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.10581388 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083501806 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.133020535 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.101558299 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.089894687 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08659102 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.108489022 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096233515 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.090680182 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.115875866 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.096201659 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.091305579 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.11264725 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095623815 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092706316 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.119079038 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085343862 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091424429 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.111066318 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.101491273 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086053523 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.109376219 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089419452 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.091408093 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.110917785 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.095512215 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.090952445 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.158091311 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098523368 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085169985 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.109145693 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.094536821 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.121985938 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.109082474 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.09213968 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.08868707 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111774271 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.093984044 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.094802657 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.108025598 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.0834185 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085952975 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.107758833 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086377804 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.090319575 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108150166 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.092303087 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095912444 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.108117464 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.088114271 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087305326 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.084797941 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.107467742 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.087699121 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094107471 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.11103668 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092260789 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.091047804 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.10678547 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.090480613 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.092550592 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.108916791 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.090284224 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106020432 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.109924399 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.09516961 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.094918353 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.108824429 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089292473 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.095654353 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107512239 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.091129949 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.09419472 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.135419072 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093136144 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087511656 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.102617719 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.097338406 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.093352588 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.093349139 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.10237381 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101063163 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.092208414 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.111506873 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.085123245 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.089001183 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.105022063 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.094219643 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.084637844 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109347799 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.091948328 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.09622335 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.095687072 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.109380187 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.093330492 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.096489167 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.116219386 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.090220858 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.151969124 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088112004 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.086858745 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.112129753 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098052371 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084476617 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.107635342 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.090715036 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088344725 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085963812 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.114169403 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.090189378 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.091767111 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.113000273 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092652242 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.092125056 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.110299989 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.090553892 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.087466926 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.111683833 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099079709 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.09354862 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.110275079 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.092030964 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.09205595 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.090784592 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.113316752 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088695154 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.096136534 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106314797 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.091190647 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.092467145 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.113130877 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092378081 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.087093938 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.107465739 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.094111536 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.091339128 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.110461683 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.092253247 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.087742871 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.101007409 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.092864791 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.087122185 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.091867474 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.11836378 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.088325345 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.092821988 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.106254839 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100732762 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.088235457 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.113207047 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.094163423 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.096698719 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.114329697 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.084010539 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088909345 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.092425069 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.111885673 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.088505768 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.091785409 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.11036509 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.098054912 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.084522527 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.113623139 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.084446603 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.089525983 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.114753266 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.095841401 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.09443401 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.086913168 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.148808281 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104074001 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.097082146 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.109508154 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.091035688 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.094810452 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.111759931 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.095182654 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.097077138 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.113820436 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.089355208 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.08982531 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.114844385 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.088466783 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.093729552 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107336025 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093362246 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084490298 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.092522593 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.102514797 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.096343536 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.093925695 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.114068148 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.097235285 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.092439164 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.108848141 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099215662 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087780496 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.113513433 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084683796 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.096562942 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.118509724 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.098423742 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.099236225 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.109569958 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091154599 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.093641166 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.098661121 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.112260367 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.093420061 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.0932625 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.103523663 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.085951624 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.09703969 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.112098299 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.089045279 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.091353423 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093223246 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.112506801 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.09093774 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.084079285 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.114319258 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096601569 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.086778327 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.111108811 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.08885843 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.089921202 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.117281038 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.085403713 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.087978785 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.111439863 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.096993345 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.091129381 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.109599657 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.094854949 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.097465185 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.094198371 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.112262302 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090173132 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.098446236 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.108832866 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.092656034 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.087263147 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.112973724 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.086767608 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.092900741 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.109038159 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.089459907 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.087785676 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112556302 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099010617 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.097809683 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089248467 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.114388293 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.097606053 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.097301453 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108728269 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.098699922 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.087049301 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.105386517 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.08993708 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.084779584 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.111498936 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.08955298 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.096784118 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.089226429 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109407968 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.096673296 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.092650808 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.10831559 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.097625592 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.119017306 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.095873869 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.085798607 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088441801 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.11062236 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.08919689 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.08804945 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.112144292 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093906284 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.095910843 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.113352918 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.089153136 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.091735445 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.115356336 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.089658981 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.098284452 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.115367922 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.098383299 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.088304401 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.095195253 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.107594492 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.0968388 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.08598348 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.109958978 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09111144 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091515332 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.106957333 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.092800339 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.087599313 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.103757892 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.089636666 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.097162992 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.109642197 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.097057725 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.091592357 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.116823638 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.090275557 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088052104 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.096488874 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.109401117 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.099504837 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.092426818 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.104641504 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085905608 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.097983471 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.11080426 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.098725374 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.089346141 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.095181505 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.118516864 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.096629684 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.092689197 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.120495772 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100487964 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.096685905 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116780419 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.086634904 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.089613307 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114353315 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.093184982 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.095704999 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.11235597 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.088895844 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095155655 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.096655521 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.114388852 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.091520501 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.086816488 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.11311391 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.099370733 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.094887793 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.114164528 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.094936781 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093276407 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.106524336 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.097013113 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.098180039 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.091887495 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.11882498 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092404377 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.095621052 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.108213503 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.098606586 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.093191183 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.105568036 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.087512161 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.089743553 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.116346274 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.087104857 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.097502208 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.095503054 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.109315627 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.091529827 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.097128908 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.10704655 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096695091 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.096750201 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.109333229 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10319765 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.092926583 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.108520392 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.098204867 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.097590509 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.085356737 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.109890586 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091955247 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.097622636 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.109317532 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.097863514 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092890292 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.117341686 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.095435642 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.09757488 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.115483905 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.098714018 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.087435907 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.098336425 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.115121304 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.095084178 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.089173299 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.111581626 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.088130637 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.091506878 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.117618122 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.090797747 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100413784 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.118129969 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.091891968 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.09026709 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.115854688 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092442745 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.098248366 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.08861934 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113872228 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.086754188 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.093677498 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.111237199 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.099805013 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.090345223 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.106779009 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098924072 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.097012863 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.114685575 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.096471939 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.100902878 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.104850562 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.08793355 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.096260259 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.089887585 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.120887195 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096614662 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.090101521 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111643636 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.095431932 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.094047809 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.11733068 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.088279878 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.089467183 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.111125128 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095591047 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.09105361 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.105941371 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.097180442 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.091689197 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093765709 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.111258111 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.08805274 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.090489652 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.119269454 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.092442509 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.088888765 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.110304602 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100657583 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.091625936 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.109232203 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.088214434 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.099241186 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.1133481 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100721961 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.089163674 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.111917066 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.092988134 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.09507155 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.09843365 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.110344828 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094076079 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.091211686 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.117584771 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099124087 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.088615629 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.11048718 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.1038419 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.097082187 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.113969278 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.097147101 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.092183706 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.118295516 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101639855 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.09612207 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.105705863 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.088817573 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.09256229 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.08679679 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.116103887 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098811807 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.091158869 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.109567793 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098228197 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.096961853 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.114494703 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.09761616 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.088276755 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.099393369 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.110733145 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.096531849 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.086310186 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.10770436 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.09649863 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.097219634 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111149461 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.094089915 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.094513178 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.11463917 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.089351703 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.091042154 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.095320916 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.117045344 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.100322476 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09207915 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.111941177 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.096591023 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101827214 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.113393207 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.092971314 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10027237 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.118349034 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094730049 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.092750125 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115692631 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.100003533 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.095762262 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.117727916 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.093694135 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.093245918 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.098604798 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.119533494 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10306473 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111167591 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.0884959 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.098236303 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.090680349 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.107295537 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.097796547 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099633733 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.119191492 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.094285125 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.090732768 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.120655982 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100076902 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092879515 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.110686438 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.091808748 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.097826216 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.110237625 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.098303073 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.090124178 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.09970744 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.120317647 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101480997 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.100839056 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.107598559 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099810854 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.09485691 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.120902052 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.096424826 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.088046431 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.107069948 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.097605529 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.100567847 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.099255016 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.117964163 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.098325362 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.098361525 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.11293693 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09433078 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.091505567 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.119543002 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.100039985 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.09566549 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.096222638 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.112888999 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.094668241 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.094750055 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.119026761 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.100646189 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.094371618 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.12330944 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.101278585 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.092348329 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.111226785 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.096236027 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.096761586 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.113155621 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098673946 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.09087071 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.087705502 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.119126096 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.100662322 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092780362 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.120899278 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102257 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.092056282 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.11536572 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102072319 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.099192666 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.113569719 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.095657533 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.096903685 seconds)
  done (took 60.338470566 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.143115981 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103148396 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.115075488 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.097560692 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112757249 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117440944 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096121304 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.09690339 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.11572556 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.105745365 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.095409359 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115207708 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11169757 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.11542413 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.13339399 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.105334179 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.1150697 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099058458 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.096235268 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.096160301 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.13050126 seconds)
  done (took 3.135840417 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.114023735 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.109428492 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.127097584 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.111181182 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102089509 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.126335807 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.106937726 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.126493463 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110499929 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103817819 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.130894227 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106491778 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.123171934 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.105461854 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104433744 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.125410553 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.110915585 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102664691 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.129549381 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.108806506 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.124356436 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.109477153 seconds)
  done (took 3.336029033 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.12793569 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.099030862 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.112428553 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.098786446 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.100864933 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.096629661 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.118781566 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.096783414 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.103038953 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.10937231 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.087647961 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.091320822 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.093536452 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.115317772 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.092048626 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.095758292 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.12343447 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.100857301 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.100413324 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.114918677 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.088415753 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.096888529 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.09702553 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.106939351 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.102341864 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.10072992 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.115679688 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.100620921 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.088325338 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.098440345 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.116657666 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.091148682 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.08819151 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.106706434 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.088345793 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.100050975 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.098169059 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.115918042 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.098747383 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.087536865 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.116680095 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.101262141 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.089337173 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.096170739 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.117092917 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.092088785 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.099073012 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.115132985 seconds)
  done (took 5.713921768 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.125268016 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.162072754 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.100589292 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.133810484 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.131452733 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.10633524 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.099249441 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.135138588 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.098074977 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.121222947 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.11096507 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.108974328 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.123835914 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.105024077 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.101796953 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.123958085 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102862866 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.099928066 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.124871483 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101872661 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.125100826 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.103597737 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.109483341 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.129441263 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.341794759 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100567327 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.120796997 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.104276338 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.108434872 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.125443797 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.105686831 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.104260119 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.130169274 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.103071248 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.119631667 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.103027331 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.110136664 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.120733893 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.101991241 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.09925813 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.120019632 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.103876737 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.101232386 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.131274006 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.10242163 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.10219084 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.121118745 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.098816427 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.108540475 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.121112211 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.106980697 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.109438355 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.121903513 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.100947512 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.102367822 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.129697821 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.102678517 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.118873965 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.102748871 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.108680748 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.118051513 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107000342 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.109183219 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.121578382 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.106804381 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.108942463 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.122519024 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.103046945 seconds)
  done (took 8.845211618 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.131424567 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.103018039 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.131208897 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11166119 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.102942742 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.124350408 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.103395085 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.10405469 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.125199259 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109005316 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123131578 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.194435209 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.120979066 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.108635943 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.103315752 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.124603768 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.105075269 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102339636 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.125386992 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105271439 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.102756885 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.131633355 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.103066679 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.130958099 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.115028399 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.10084889 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.124647984 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.104710061 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111608631 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.125686371 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.114400628 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.124261167 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.105852168 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.112990384 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.135060069 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.104354032 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.099212572 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126578957 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.105637299 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.104984545 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.121738139 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112814796 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.124010946 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.103649594 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104371819 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.124693222 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.112530038 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.113663831 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.128740702 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110372551 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.103872356 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.131634099 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103933809 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.123143657 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.112039258 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.117868152 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133343138 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111321442 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.123270018 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112979061 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.112482822 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.141608591 seconds)
  done (took 8.054575065 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099061103 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098107588 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.096885997 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.117442364 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.099141949 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09699223 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.096447848 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.118919756 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.098892351 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.097470717 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118088187 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098401692 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097607657 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097392136 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.117902314 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098256967 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.097231748 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.116822643 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100139241 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098207528 seconds)
  done (took 2.888981294 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.107623133 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.11468333 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.120846639 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.106934127 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.10104688 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.125603575 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.101239494 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100474363 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099156367 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.122465065 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108360559 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.127426054 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100787818 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105386516 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.127157874 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106173287 seconds)
  done (took 2.60729853 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.118719653 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.114784085 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.186821764 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.103215539 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.121126035 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.108458652 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.101050002 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.123881928 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.100684248 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.105315084 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.103454191 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.125386686 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.100912385 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.102164889 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.122146563 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.105293226 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.099352721 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.125270361 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.102027809 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.181821925 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.104128445 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.102576139 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.124516362 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.104199122 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.100942249 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.12511334 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.107019036 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.100992114 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.101840263 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.122328996 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.102699481 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.106535442 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.121332636 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.105261714 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.101570447 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.122556469 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.10073539 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.100036462 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.123603629 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.102208622 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.101752539 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.122354944 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.102084587 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.103353468 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.09904531 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.122053461 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.099768691 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.105629601 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.122154126 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.103035347 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.100046003 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.127915906 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106076006 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.107717727 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.126915136 seconds)
  done (took 7.015424672 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.111372997 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100371668 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.132147101 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.099118179 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.101424151 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.100860965 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.123949363 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.104745196 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100904752 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.119896845 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.102274637 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.1021799 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.121384586 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.1020028 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.101413167 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.122450714 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.099614036 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.101766173 seconds)
  done (took 2.781130008 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.105690815 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.101281283 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.104808589 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.121076251 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.100341664 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099861766 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.121189464 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.100242201 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099078746 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.099917917 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.12338092 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.099951804 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099806354 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.121377582 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.101927202 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100191786 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.12130743 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100874032 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.100155535 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097738904 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.12344077 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100198185 seconds)
  done (took 3.180633987 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.11207471 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.179778758 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.106096766 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.186817974 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.097831477 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.094709793 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.12591999 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.09791131 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.111296091 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.116753954 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.095940891 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.095678613 seconds)
  done (took 2.260589261 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126591279 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135635426 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.122300164 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102282403 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107926037 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125471792 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10549823 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105395043 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133131767 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116266744 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124540013 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113716948 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110905452 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133857631 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109315569 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129098335 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106084399 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104868408 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121060035 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120639782 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104487737 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132726102 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106157103 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104933648 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12589365 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113251509 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131813827 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116367676 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10440737 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133225454 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109700429 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105150316 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134453714 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115983683 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123500938 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112431115 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103779909 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141295942 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1089869 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134642279 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103073563 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10818286 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133752811 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109898349 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132193908 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106404062 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110811102 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125493043 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105856582 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124980421 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131014751 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112554178 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130329654 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112734019 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112473725 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.147746785 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115479687 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134969451 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109985731 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136945807 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113975481 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108975028 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134500869 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115999206 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130768053 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1138106 seconds)
  done (took 8.684190345 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140733515 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.102511753 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126360158 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115854991 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133742552 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106635223 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108120597 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125994665 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106132349 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101801637 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.168017443 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106014109 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112480832 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133938684 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106217934 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125163506 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106197143 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113034245 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123323234 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125723071 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126075625 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114759999 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112915376 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134025098 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11733524 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131999115 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106581386 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105431255 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125887248 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107535678 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110593173 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12662894 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114591021 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103731289 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13454912 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106184492 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104756254 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132508825 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106390014 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129591456 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114239613 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118345498 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12690058 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106421189 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139876587 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106820578 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106379291 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123889897 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107006854 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102487563 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139250523 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118348616 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136718889 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114439776 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105270564 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127048179 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107370322 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10662467 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126922502 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110665195 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134019476 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108909192 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125863726 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127448503 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106488242 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113226442 seconds)
  done (took 8.649144722 seconds)
done (took 163.771173259 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.14508239 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.181780948 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.141103304 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.175056334 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.092883158 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.12673144 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.14470243 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.143267458 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.090869305 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.113654673 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.091836733 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.093701468 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.180179012 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.092114858 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.091538921 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.093092862 seconds)
  done (took 2.838073308 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.189386372 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.301054624 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107159863 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.116914446 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.098132139 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.096645015 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.117056349 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.099736009 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.096699073 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.124617277 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.097835496 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.093002639 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.125780798 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095052727 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.096383169 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.096545862 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.12402152 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.097661441 seconds)
  done (took 3.028334864 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.11743722 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.13958892 seconds)
  done (took 1.10884131 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.126012559 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.208683551 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.276603409 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.163506834 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.117731587 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.136746123 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.145931991 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130203558 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.184289364 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.130616553 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.110054684 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.095446793 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.143780271 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.102104656 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.133264564 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.096428813 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.12357985 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.131195511 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.1115897 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.099085048 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.138701686 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.101291042 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.101080155 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.13229385 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.175916815 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.130691299 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.10164639 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.099878606 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.120836457 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.111899656 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.103825481 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.134777144 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.109578441 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.175339456 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.099793125 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.171366666 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.103699365 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.120077079 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.111141782 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.097829265 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.122943886 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.100724912 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.130936431 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.096858726 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.101261947 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.124514715 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.101707718 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.100014742 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.126189354 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.105798116 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.10375213 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.125556132 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.168623145 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.105710953 seconds)
  done (took 7.672862778 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.857914516 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.138932124 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097432665 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.999167862 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.146463381 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112280195 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.848939506 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.14187693 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.25467259 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.878054623 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114333934 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.109132073 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.252292448 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.254154422 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.256429655 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.373638194 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.693467513 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.133605625 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.127207677 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.160622078 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106354511 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.144224763 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.118876043 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.517500156 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.098902743 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097201373 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.127492175 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.112013836 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.174048875 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.098695505 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.123115888 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172040252 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.28678882 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.203172331 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118741045 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.097644969 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098013545 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.17999139 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.271182238 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.21279575 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.188830177 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096189621 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.097343805 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.128707646 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117026955 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.094586295 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.174957454 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.187621116 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.186959527 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.102974884 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.13112606 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.109893805 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.105872347 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.174474001 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.095692674 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.374757982 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.358763278 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097876165 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126577099 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.114378662 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266947304 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.098073591 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.226882466 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.147402213 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.206553872 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.097580005 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.883224361 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.18053525 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.097189283 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.12711328 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.105283083 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.10340943 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.129079694 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.163513479 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.499061503 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.131568843 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.10406839 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098616153 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.227582936 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.098141298 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119924133 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.155790215 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121260934 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.106582942 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.134162649 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.111709209 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.185115635 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.263954176 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.111708444 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.107861256 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.126074642 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.110818564 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.097857122 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.233692525 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.220782292 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.17183763 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.231064689 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.108205213 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.177951214 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.180287159 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.106033496 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.18459628 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.105764045 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.13693207 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107052297 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217591832 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.154185491 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.10027533 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.124705191 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.107615546 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.153648854 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.10372762 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.108171575 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.186199836 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.553252726 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.180059776 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.096738438 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104097277 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.1287139 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.155159304 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.127320901 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263737268 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108773103 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.181647094 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.106212288 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.117986234 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.108936003 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.177794897 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109672214 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126533236 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.108072614 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.106868171 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.276010004 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.218389272 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.131345468 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.245318463 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.174559477 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.126161381 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.166693765 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128403269 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.16239293 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.13189421 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107235443 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119128745 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.877082407 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.113573376 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.105466102 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.126609489 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.182914725 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.120359498 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.101637944 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.098741155 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116844665 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.854955136 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.103316906 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.096580185 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.100739208 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.128752202 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.107785837 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12624288 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.105314657 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.174106291 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.239397427 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111944492 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.127680193 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.100216873 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.175271135 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.100186283 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.099186131 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.121799177 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.101100156 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.106750949 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.125832995 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102553667 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.187892045 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.170933692 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.224935354 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.632648008 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.099449141 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.099162229 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.256431738 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10090379 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.318517812 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107049836 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.248443431 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.160522844 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.11815915 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.358174134 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.18183675 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.184539611 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.101336529 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.185731838 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.11675702 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.108274463 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.174570192 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.099845731 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.106709151 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.1726133 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.13459064 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.113091424 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.276221444 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098814627 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.252687215 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.117834736 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.163358954 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.12093834 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107875996 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.318699921 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.097394689 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.1382118 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.173051098 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.104564681 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.099300017 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.669602921 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.121492145 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.111953177 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.105468044 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.246452896 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.159551711 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.129231859 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.110994956 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.133827303 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.154307437 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.231104935 seconds)
  done (took 47.220348806 seconds)
done (took 62.719775188 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.291902823 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.251316548 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.299625366 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.205831335 seconds)
  done (took 1.998392909 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.252569447 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.158825705 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.224542343 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.095593631 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.233882297 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.095355023 seconds)
  done (took 1.944250773 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.479236212 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.359427226 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.298581262 seconds)
  done (took 2.024588451 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.249852683 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.239796699 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.326545237 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.404687565 seconds)
  done (took 2.216406181 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.258633142 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.12156937 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.122377269 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.200711854 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.222763581 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.205654373 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.125767794 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.174558272 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.126008474 seconds)
  done (took 2.490078285 seconds)
done (took 11.555507256 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.149842021 seconds)
    (2/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.339593688 seconds)
    (3/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.291445638 seconds)
    (4/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.238763116 seconds)
    (5/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.256128661 seconds)
    (6/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.255707743 seconds)
    (7/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.300771907 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.189309194 seconds)
    (9/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.094790802 seconds)
    (10/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.19545392 seconds)
    (11/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.204099621 seconds)
    (12/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.283349751 seconds)
    (13/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.276162643 seconds)
    (14/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.267016662 seconds)
    (15/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.105263695 seconds)
    (16/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.223322367 seconds)
    (17/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.105295236 seconds)
    (18/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.154900881 seconds)
    (19/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.165953621 seconds)
    (20/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.147889448 seconds)
    (21/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.188316541 seconds)
    (22/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.206801837 seconds)
    (23/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.115499667 seconds)
    (24/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.20248201 seconds)
    (25/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.167012694 seconds)
    (26/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.125168124 seconds)
    (27/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.074090675 seconds)
    (28/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.149978444 seconds)
    (29/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.10828768 seconds)
    (30/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.151264065 seconds)
    (31/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.186161987 seconds)
    (32/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.107431665 seconds)
    (33/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.151081606 seconds)
    (34/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.108253026 seconds)
    (35/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.126226919 seconds)
    (36/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.145586774 seconds)
    (37/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.162732884 seconds)
    (38/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.203314956 seconds)
    (39/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.243724886 seconds)
    (40/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.072901553 seconds)
    (41/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.126984014 seconds)
    (42/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.108625843 seconds)
    (43/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.098394269 seconds)
    (44/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.096929737 seconds)
    (45/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.131361552 seconds)
    (46/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.168871068 seconds)
    (47/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.173894026 seconds)
    (48/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.086656387 seconds)
    (49/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.127785276 seconds)
    (50/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.121848163 seconds)
    (51/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.128511883 seconds)
    (52/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.138137641 seconds)
    (53/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.135008279 seconds)
    (54/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.169055613 seconds)
    (55/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.074037955 seconds)
    (56/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.09822316 seconds)
    (57/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.170073762 seconds)
    (58/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.099744467 seconds)
    (59/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.292529168 seconds)
    (60/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.09836713 seconds)
    (61/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.176910943 seconds)
    (62/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.185315915 seconds)
    (63/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.189383543 seconds)
    (64/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.092927811 seconds)
    (65/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.17793824 seconds)
    (66/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.134040721 seconds)
    (67/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.195608493 seconds)
    (68/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.160009758 seconds)
    (69/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.108157046 seconds)
    (70/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.167720205 seconds)
    (71/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.128511041 seconds)
    (72/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.139015718 seconds)
    (73/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.100279851 seconds)
    (74/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.185155213 seconds)
    (75/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.186277648 seconds)
    (76/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.100160594 seconds)
    (77/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.16865186 seconds)
    (78/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.165523754 seconds)
    (79/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.163244645 seconds)
    (80/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.119505 seconds)
    (81/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.083894711 seconds)
    (82/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.127166544 seconds)
    (83/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.108749654 seconds)
    (84/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.120287181 seconds)
    (85/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.136982402 seconds)
    (86/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.105563226 seconds)
    (87/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.107125499 seconds)
    (88/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.099238218 seconds)
    (89/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.13042719 seconds)
    (90/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.111605932 seconds)
    (91/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.074667557 seconds)
    (92/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.076934154 seconds)
    (93/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.076371104 seconds)
    (94/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.124544627 seconds)
    (95/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.159980604 seconds)
    (96/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.07386823 seconds)
    (97/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.146712474 seconds)
    (98/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.07503788 seconds)
    (99/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.151034169 seconds)
    (100/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.075769711 seconds)
    (101/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.122666802 seconds)
    (102/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.167683424 seconds)
    (103/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.084840696 seconds)
    (104/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.099987333 seconds)
    (105/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.171056251 seconds)
    (106/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.135379482 seconds)
    (107/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.125129249 seconds)
    (108/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.186528701 seconds)
    (109/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.083831048 seconds)
    (110/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.073962951 seconds)
    (111/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.132084871 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.101817975 seconds)
    (113/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.100526809 seconds)
    (114/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.101029799 seconds)
    (115/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.185713283 seconds)
    (116/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.107185409 seconds)
    (117/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.123191594 seconds)
    (118/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.139286048 seconds)
    (119/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.086039148 seconds)
    (120/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.074505531 seconds)
    (121/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.121976201 seconds)
    (122/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.084513191 seconds)
    (123/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.07657207 seconds)
    (124/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.074473189 seconds)
    (125/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.126541946 seconds)
    (126/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.106329247 seconds)
    (127/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.100733785 seconds)
    (128/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.214134754 seconds)
    (129/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.100741783 seconds)
    (130/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.098209425 seconds)
    (131/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.07640427 seconds)
    (132/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.168933837 seconds)
    (133/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.075215697 seconds)
    (134/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.107184625 seconds)
    (135/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.07666314 seconds)
    (136/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.132075341 seconds)
    (137/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.121039108 seconds)
    (138/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.120737972 seconds)
    (139/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.099843966 seconds)
    (140/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.0759893 seconds)
    (141/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.100598538 seconds)
    (142/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.108438865 seconds)
    (143/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.106932481 seconds)
    (144/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.109762223 seconds)
    (145/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.075398555 seconds)
    (146/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.076534335 seconds)
    (147/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.077592749 seconds)
    (148/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.194565953 seconds)
    (149/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.077597285 seconds)
    (150/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.076892446 seconds)
    (151/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.075087522 seconds)
    (152/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.09951334 seconds)
    (153/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.102046618 seconds)
    (154/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.077805088 seconds)
    (155/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.076001217 seconds)
    (156/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.082661944 seconds)
    (157/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.134314062 seconds)
    (158/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.07597603 seconds)
    (159/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.157967991 seconds)
    (160/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.096659889 seconds)
    (161/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.108039592 seconds)
    (162/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.075437271 seconds)
    (163/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.075610988 seconds)
    (164/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.076449553 seconds)
    (165/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.132047661 seconds)
    (166/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.10041029 seconds)
    (167/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.097919838 seconds)
    (168/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.075062538 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.123979173 seconds)
    (170/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.108199461 seconds)
    (171/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.107150214 seconds)
    (172/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.096734283 seconds)
    (173/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.113286961 seconds)
    (174/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.121249117 seconds)
    (175/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.074930239 seconds)
    (176/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.121474617 seconds)
    (177/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.078192958 seconds)
    (178/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.100215825 seconds)
    (179/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.106361553 seconds)
    (180/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.098854044 seconds)
    (181/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.099193757 seconds)
    (182/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.076013523 seconds)
    (183/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.099870887 seconds)
    (184/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.098155334 seconds)
    (185/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.078035969 seconds)
    (186/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.075601147 seconds)
    (187/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.077735608 seconds)
    (188/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.118734491 seconds)
    (189/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.098703933 seconds)
    (190/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.078622888 seconds)
    (191/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.084142343 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.100822772 seconds)
  done (took 25.819904086 seconds)
done (took 26.718102592 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.205861984 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.125410649 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.108318464 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.107841356 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.195096305 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.114773147 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.12210902 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.13422009 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.117871051 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.107029728 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.121988799 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.120437381 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.106505523 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.199051975 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.108500299 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.125583894 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.099396886 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.117550979 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.147000019 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.124215245 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.195779453 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101915226 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.117909354 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.122460594 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.173659474 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.124640747 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.107239746 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.109088145 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.119010828 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.134033383 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.108549114 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.09937152 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.147709122 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.123650716 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098970159 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.132959373 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.099888792 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.083158597 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.131348568 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.111100342 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.121052569 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.109257338 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.132582489 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.100820798 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.109218843 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.133325601 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101085776 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.110662886 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.12313382 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.108900931 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101652478 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.147527388 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.108506261 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.098027597 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.121998247 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.102108555 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.118713978 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.122430493 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.123042172 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099623281 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.100049867 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.123747999 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.111584814 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.100155801 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.133493028 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.100355413 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.109560462 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.133290479 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109879727 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102764621 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.099826489 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.132332113 seconds)
done (took 9.63620494 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.10552155 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.144935344 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.19515405 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.204702621 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.126784023 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112720099 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.138166633 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.1238415 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.11113938 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.141289691 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.135602606 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.15471651 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.177839888 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.138732939 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.114517871 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.111917648 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.134875537 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.108987765 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.201023598 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.12376821 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.12331453 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.140016071 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.125143569 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.139326278 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.103904653 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.135033805 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.130637822 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.112419869 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.102763896 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.13691493 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.125327836 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.103744958 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.130582287 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.123126789 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.120920407 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.138215266 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.115459211 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.112065416 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.128789857 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.104754137 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.111616319 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.143218999 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.105577612 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.113396167 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.137195927 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.118552295 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.110788523 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.141042617 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.10558762 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.110978223 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.130331865 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.130351506 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.115954525 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.145643639 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.116374063 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.116760891 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.141257832 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.118046341 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.106775905 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.140859075 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.105193803 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.104060552 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.13029553 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.125387519 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.106165982 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.143092911 seconds)
  done (took 9.363387123 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.123517155 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.133174446 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.138621944 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.115871083 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.109617339 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.121978217 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.098558489 seconds)
  done (took 1.783960744 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.100300414 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.179964835 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.203649296 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.204222771 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.176144941 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.214167167 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.145476679 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.101370774 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.134253051 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.133993394 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.181421832 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.234164474 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.108654344 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.139324583 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.18250479 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.124865386 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.184631286 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.125267495 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.113684763 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.20673412 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117238403 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.129101976 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.13746143 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.100352908 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.201984111 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.101601505 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.257125339 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.118307032 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.134150913 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.114670573 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113679313 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.202017471 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.20103751 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.114094018 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.107712134 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.204452275 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.174863275 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.139947753 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.213537353 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.106130927 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.176783929 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.13996084 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115756475 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.114286663 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.140881473 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.165831096 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.143630412 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.115861462 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.11236778 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.21235231 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.110356873 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.203936103 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.111372388 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.139923274 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.11032395 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.115210156 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.148623186 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.117348462 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.209440383 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.117591546 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.205140207 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.179737038 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.203649588 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.206570538 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123823079 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.206078165 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.172744942 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.138605007 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.109656141 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.114919981 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.208085708 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.112856264 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.140451753 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.169214593 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.143403087 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.181343834 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.207820879 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.111756658 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.139053732 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.104004658 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.11221489 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.126070646 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.172071538 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.137431925 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11282631 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11747733 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.138032872 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.115162525 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.104947105 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.148228708 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.114800615 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.110763061 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.143184643 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.114574619 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.115659549 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.210592528 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.134867507 seconds)
  done (took 15.361933936 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.103293152 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.101994265 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.106124211 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.126373047 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.102085474 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.101415069 seconds)
  done (took 1.596624161 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.13841151 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.116192758 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.148966947 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.117221484 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.157547524 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.210326244 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.214460463 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.109173847 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.156041342 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.124975876 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.211656735 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.188706789 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.211195684 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.117868594 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.215962216 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.116339487 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.214617514 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.114639484 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.148678661 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113777531 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.113619312 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.144130077 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.113828539 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.203158211 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.116908288 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.116169274 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.13532418 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.124443722 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.120985529 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.136210622 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.118346188 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.116117792 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.133860739 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.108366095 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.21538892 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.107350595 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.135968765 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119143391 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.116954424 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.140334838 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.190825273 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.137277567 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.121538918 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.11773635 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.134611876 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.108535254 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.117001958 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.134288463 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.192354814 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.14515235 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.118464427 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.115769966 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.142055758 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.11756855 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.10789393 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.136725072 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.117544204 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.21695539 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.118438745 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.131814116 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117487974 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.116115674 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.135485731 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.121228336 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.11631204 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.142034135 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.108593324 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.114885525 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.137385122 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.117702656 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.117018256 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.142099853 seconds)
  done (took 10.955439574 seconds)
done (took 39.997710118 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.652910696 seconds)
  done (took 2.612222174 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.898535699 seconds)
  done (took 1.856929485 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.455234477 seconds)
  done (took 18.445351548 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.510758597 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.583555581 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.015420854 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.148205343 seconds)
  done (took 3.217356046 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.04043199 seconds)
  done (took 2.017790727 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.290637855 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.280376606 seconds)
  done (took 1.535414019 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.706690589 seconds)
  done (took 1.682501763 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.492329193 seconds)
  done (took 2.460054329 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.347726298 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.177333688 seconds)
  done (took 1.504582269 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.598283638 seconds)
  done (took 1.580053394 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.376293727 seconds)
  done (took 20.357712563 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.245725905 seconds)
  done (took 1.229664666 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.283694231 seconds)
  done (took 1.270899148 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.498216362 seconds)
  done (took 4.481713646 seconds)
done (took 65.221212477 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.112471061 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.114760355 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.113637766 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.13820371 seconds)
  done (took 1.453700107 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.120152895 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.115662991 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.137643553 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.141507054 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.12250083 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.114555265 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.14219034 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.117668521 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.113752557 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.141836481 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.116280338 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.114099473 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.143069717 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.115882828 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.112114615 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.141775396 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.118542589 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.114598871 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.139665928 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.117754561 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.114634895 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.141902408 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.118594838 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.117313589 seconds)
  done (took 3.979494505 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.111329544 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.105316795 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.108636831 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.129253096 seconds)
  done (took 1.443386406 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.124007648 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.126405191 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.149359614 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.122916746 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.126271292 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.150761951 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.114711159 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.111924221 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.138523422 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.124377418 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.130060381 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.153462788 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.127152235 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.115500786 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.150805544 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.108965476 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.115979499 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.152062789 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.123496073 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.122891927 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.141862864 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.122243368 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.119219961 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.148893356 seconds)
  done (took 4.108833794 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.188842013 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.127541594 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.168651586 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.158344632 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.172667372 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.113366063 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.141213302 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.146176204 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.12138134 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.116565691 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.143280031 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.158864735 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.145467843 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.117967171 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.115374124 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.145496131 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.127877726 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.119932085 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.186349971 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.12095973 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.14593852 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.126158171 seconds)
  done (took 4.095840181 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.118093781 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.105799517 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.101532508 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.131645194 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.11707224 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.108301094 seconds)
  done (took 1.677920965 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.105296148 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.100225372 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.100741267 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.124808634 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.104792752 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.10003393 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.098671126 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.126204987 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.100433614 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.101135019 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.125100581 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.100279989 seconds)
  done (took 2.283799955 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.32678788 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.105864653 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.131996209 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.107697462 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.110789044 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.103806901 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.142164995 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.104850788 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.267940252 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.102160497 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.141355706 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.195105834 seconds)
  done (took 2.838184528 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196102651 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14316987 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.308726989 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.35958084 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156833781 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18234498 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.262422712 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.184937684 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.196820638 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133212171 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206686312 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157290438 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174944065 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181782939 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161820377 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.156646389 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192124928 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199007412 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165592105 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233306896 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152820741 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.194495851 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183882367 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170553645 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135517592 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1828706 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.115142004 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123470005 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185535938 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183539773 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166732981 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170605514 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137217866 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210247169 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248408859 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167189959 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265416988 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153857513 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.167002999 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.210984899 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253406669 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136922134 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208781844 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174707699 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127158643 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21052474 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14953492 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.205295873 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.130077516 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169009043 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176274248 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19983392 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.195249403 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133722294 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299088227 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13108777 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.16443344 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163047544 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209690063 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218817971 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174318679 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.119051939 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200309072 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211778368 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234585519 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.139460619 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.186257537 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122622426 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186813652 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.201259901 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203485091 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182298098 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.195033208 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154813932 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164908167 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194208242 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148768619 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223651998 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193520961 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.117089578 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169715854 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131426039 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122258809 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.213401784 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118008617 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235822029 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127042464 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.338507974 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204822694 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151332671 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.180863992 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153452553 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184932049 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142053552 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.126741542 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138027132 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.182401132 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152058438 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122990358 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176708788 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134636318 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.147823916 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148027495 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.144918501 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164053355 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.129249373 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18456702 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188258308 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.1290144 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197658874 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144125891 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.182884177 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162693677 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216711917 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126274702 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154011148 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212607105 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190954275 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.132055139 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197774889 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.218272179 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.147932004 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129500177 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184520848 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215367193 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140830604 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222559103 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1342603 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158812613 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.13459204 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194063315 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155329455 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.176596728 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124138333 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.185353148 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187175648 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.150506342 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137204605 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203452378 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129591191 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120344244 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159980756 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132128405 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.165460887 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.145029446 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.135006484 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17675544 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162125445 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.187706419 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176226274 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131149228 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19140412 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126793974 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.162881347 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169824359 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.115468248 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.195553035 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217496215 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126642987 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174806923 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.18545322 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205749908 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166248901 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15139393 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178066642 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150772988 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.117016501 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184422011 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164116782 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18278519 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.182641708 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203448415 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.185742947 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.158736286 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171742653 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187030227 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.180874704 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178551014 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.139042218 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.192240112 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161920404 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.142927814 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.120616411 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.12474003 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159011475 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126863822 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132658529 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198212572 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183808107 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176319402 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.189006378 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133447994 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.214336976 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.121466469 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181041767 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.195424361 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135989047 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.210905924 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186816919 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199762125 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136568252 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184113803 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.118182421 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121554352 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.156678459 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156995616 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161785962 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131578312 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163930358 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188703799 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193266234 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143727146 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215749527 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186131156 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.223192347 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.120719941 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.158562546 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193023161 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162526122 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.206073976 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130019375 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.180313423 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.188121024 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165072544 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186498599 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191145904 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170976541 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216654816 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.188778196 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126861364 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168741087 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158070966 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133221555 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.186606482 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14238024 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154402533 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146228732 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.160754855 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136717563 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203635047 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138743178 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199478273 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.154965461 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191103515 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121873311 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163931099 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170829162 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16725571 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.103339042 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189440233 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189215723 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17151152 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149992972 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196112564 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126641826 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.340256334 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18155757 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19772974 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15784129 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135105912 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164960088 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185757346 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181931971 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180394947 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16298536 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199824113 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191528646 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.137605001 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155001157 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145215226 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174840627 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.135349138 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.17179456 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.15808426 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.138831901 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203039212 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159488705 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165191162 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197580174 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.141206246 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.172225227 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135576341 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247585995 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162270516 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194472528 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.160506455 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.190257634 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204460763 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122842063 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122867097 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.154857591 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181110432 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1241322 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198866663 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.194113385 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207507935 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1705466 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186113682 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136601664 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.150208365 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162939711 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143172478 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210689638 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157686899 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.133436254 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21204383 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.124550692 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152641168 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157814535 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.292448636 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144152763 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194782907 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.104630648 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.288706432 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127833797 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127231288 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185727554 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190865865 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.129267529 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.177457351 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195052516 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135415864 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.187462304 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131425215 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.202349268 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207775039 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160720085 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193836399 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.141597904 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.183795322 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153759603 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198822886 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141078974 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.171512481 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154717748 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216667403 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.175843157 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.155563846 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164297484 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192536724 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165609225 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193610222 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134422806 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205295157 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125147146 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186885785 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134933913 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148884327 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153235821 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.196486844 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126873069 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19930881 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189618476 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128607417 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124462663 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168777449 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160033161 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161620889 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.1267922 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203649767 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.126513864 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201388623 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200899735 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152831094 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162578576 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168344429 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12775274 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134862503 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166712039 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127569538 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.171117432 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201730712 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.126493544 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200724521 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183755667 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15776703 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179477917 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139409475 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.329268124 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.152165328 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187276018 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173708401 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217606405 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146852281 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197911408 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165795254 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171887473 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158971954 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170453806 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.217478256 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18658752 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.162180106 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154277656 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139793204 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133856176 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.156606556 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147104209 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191929911 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136687848 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.158738678 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.162446982 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139590079 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.169790558 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138007727 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222676979 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146396023 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206685716 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.210695885 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133901755 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198712286 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166287159 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152733613 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.159636277 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195324015 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139728482 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17441398 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.130246544 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.162412778 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205860974 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.148995746 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155635489 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194713506 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165111592 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195484431 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.131201351 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198936473 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136869319 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198138442 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124315459 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.148013015 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194046169 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130574301 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.150393639 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1672892 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182548635 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.161823836 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165517264 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.17176032 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2190018 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.123109311 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129045348 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.291111846 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154953514 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217266909 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.160170283 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134269441 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14158323 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182324943 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.158589024 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194216582 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.126793806 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154019435 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.141489845 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.17562834 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.142591372 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.189322205 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16898541 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182000418 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180885301 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.130818293 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.278361405 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136739641 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193585337 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.112854902 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.152657677 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136409592 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129670668 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165666657 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.20565465 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207216406 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.188571147 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.14246761 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159267206 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.12394582 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126323051 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190254026 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144953507 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192281099 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141637413 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.127374613 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138018242 seconds)
  done (took 83.838878302 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.158738466 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.149074208 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.163402587 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.21846711 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189507264 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.285015747 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.223544669 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.242440748 seconds)
  done (took 2.711263864 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.117162927 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.154756278 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.137542765 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.13947665 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.108045912 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.434065536 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.128421027 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.142972099 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.157877931 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.147612263 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.131795265 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.498074949 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.139218525 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.115258069 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.14215889 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.105623989 seconds)
  done (took 3.871501797 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.934445645 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.520048981 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.088830606 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.287388797 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.243803241 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.199009448 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.713851728 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.183432684 seconds)
  done (took 12.254277997 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.142678555 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.134175926 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.351729699 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.252188936 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.146296818 seconds)
  done (took 2.113140647 seconds)
done (took 127.648078195 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.120426665 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.11977255 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.118781234 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.149908964 seconds)
  done (took 1.580590413 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.172419474 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.089492327 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.090482758 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.114828436 seconds)
  done (took 1.549834056 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.425162286 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.089112186 seconds)
  done (took 1.62178496 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.145723158 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132310201 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.159877495 seconds)
  done (took 1.532110606 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.132271844 seconds)
  done (took 1.217801688 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.122906789 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.112184074 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.228496552 seconds)
  done (took 1.552681905 seconds)
done (took 10.14593586 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11697947 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.919668974 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.427560615 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.129400223 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.705494467 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.42322788 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.416271605 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.16919201 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.170745154 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.132783372 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.128328918 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.685259407 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.428725846 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.871400368 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.367219951 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.895403771 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.690144049 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.108426385 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.140967298 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.108556485 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.37540059 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.131514368 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.108892929 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.108587593 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.713482466 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.41655321 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.105743519 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.910206214 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.107034705 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.110266844 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.422333296 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.107501403 seconds)
  done (took 20.730046567 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115116 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.162188424 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.141585449 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.108377986 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.109718988 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.134133182 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.119260817 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118897228 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.196814508 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.106976388 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.155240549 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.107024853 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.112937155 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.133538917 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.1321597 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.106240309 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.135718999 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.110781746 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.115398153 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.134926244 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.128843809 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.106057085 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.13372591 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.110343942 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.10762868 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.154133829 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.108343473 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.118553037 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.133084838 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.111102389 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.112848798 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.106557964 seconds)
  done (took 5.079508828 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.153523894 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.171863155 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.14248042 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.144520681 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.181402654 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.109958232 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.216629389 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.145818509 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.198698854 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.108824534 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.128843371 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.133583233 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.148209633 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.107138732 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.159985664 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.107563672 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.110411017 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.136706 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.115214682 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.108458499 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.155696234 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.106950692 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.108366683 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.136538182 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.108304186 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.130415921 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.135663053 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120145121 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.107761423 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.139283142 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.113739998 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.107645934 seconds)
  done (took 5.396161314 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.123510272 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.123179361 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.12896415 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.156611792 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.117567347 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.119405156 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.148903065 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.118286959 seconds)
  done (took 2.13309198 seconds)
done (took 34.428426893 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.132576987 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.125686738 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.127073 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.14926884 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.182305123 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.142623041 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.124578397 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.115170714 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.147402232 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.129380905 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.107267715 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.11479287 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.154585145 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.119330768 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.212768022 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.123349689 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.216859855 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.185841314 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.143108148 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.124510616 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.116474979 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.217576371 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.119543987 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.114953536 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.215031175 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.109747916 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.20641089 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.117897185 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.144976715 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.110315215 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.186093438 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.149279039 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.115187722 seconds)
  done (took 5.883930961 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.201879573 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.117762349 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.144862356 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.115714157 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.116390552 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.142754854 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.204311836 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.14287698 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.116723495 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.115035663 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.115280542 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.215525553 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.121480052 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.141073171 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.119731132 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.106992553 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.231769487 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.117248753 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.106902559 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.118328019 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.112588562 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.115989381 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.243918357 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.112194952 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.11555168 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.143905977 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.120822406 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.121227502 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.144930701 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.119905878 seconds)
  done (took 5.267933315 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.12155338 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.128301808 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.1334729 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.210886712 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.143915633 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.155075932 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.135493702 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.129586819 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.16537134 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.110230553 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.124691558 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.172445433 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.126066235 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.119332791 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.141185037 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.128836535 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.130219149 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.138126313 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.118727241 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.126346981 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.157354166 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.126738139 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.131755743 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.144731666 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.109930873 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.116052765 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.14488418 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.124352768 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.117265019 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.123004879 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.139402915 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.113652532 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.11158486 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.171662471 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.111464698 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.152673957 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.134976909 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122429198 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.122319972 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.169192246 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.114311864 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.109935349 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.163493665 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.162111224 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.110760779 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.149855442 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.121442876 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.123556831 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.13817031 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128932067 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.151168294 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.137855294 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.131740189 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.10798597 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.13630991 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.11901326 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.110824668 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.141414401 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.126652964 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.112019072 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.160858397 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.119121509 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.120491321 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.110662189 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.150938191 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.10975455 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.109959565 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.141696988 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.136264668 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.117479063 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.173316464 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.111649433 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.121636945 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.149491864 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.121897326 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.121216162 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.136555463 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.122353657 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121065505 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.115136478 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.150826694 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.113030151 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.112490693 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.154341617 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.130747479 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.124024951 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.14972469 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.123581639 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.11302153 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.139637902 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.12713254 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.110916465 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.143218927 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.123786687 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.110517917 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.112985055 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.152055614 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.121189396 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.107784694 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.163519614 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.114977666 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.109793016 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.162828608 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.114433262 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.114923908 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.147451828 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.152873377 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.110392267 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.149954493 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.123721724 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.111308956 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.146446458 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.115269931 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.109309771 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.127525677 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.15441777 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.117920435 seconds)
  done (took 16.450814911 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.308976115 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.266417042 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.206851167 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.300175926 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.122580838 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.230945648 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.292865057 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.296824624 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.110344953 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.176024739 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.162099288 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.265694448 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.141958738 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.139320001 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.298536348 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.348741922 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.16917874 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.1472856 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.174748516 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.124735067 seconds)
  done (took 5.403163579 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.131886076 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.144515054 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.161063754 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.13928036 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.121302348 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.156380165 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.11129165 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.131134451 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.150604979 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.121309318 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.112328717 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.154013729 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.124937902 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.127899 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.15414012 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.144251747 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.117666523 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.143822538 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.133699984 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.114836493 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.127672346 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.138705217 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.120118393 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.160609712 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.129698028 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.120758463 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.137562958 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.11725806 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.116896611 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.146944857 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.116743993 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.127989702 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.144331666 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.103152256 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.12305612 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.12596405 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.146065731 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.114767141 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.114646457 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.141642794 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.126698504 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.123033541 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.146113438 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.097098062 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.130532761 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.106547388 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.151829293 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.124363725 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.103987625 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.129656767 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.152318144 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.126796386 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.118549639 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.162722829 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.118771244 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.127414663 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.150562983 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.127340512 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.116418794 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.137738901 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.11110232 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.116089241 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.118609619 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.155519086 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.123444339 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.156683906 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.127680704 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.111073691 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.115610511 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.143955271 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.115884573 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.124769598 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.158918304 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.119781367 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.11803049 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.150875004 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.120338605 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.092627292 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.146967445 seconds)
  done (took 11.405989359 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.137417025 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.122823315 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.128929968 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.173823275 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.124773349 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.117523648 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.150305469 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.129897144 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.124927519 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.157619603 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.126274814 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.124102712 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.160473857 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.121375978 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.120855922 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.155522232 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.126708461 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.147965283 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.158523812 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.140289417 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.125854845 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.145455086 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.124844475 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.122154625 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.168847242 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.122762061 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.137072623 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.154834894 seconds)
  done (took 4.973242135 seconds)
done (took 50.482979288 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.27594953 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.435623888 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.222940974 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.220591344 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.245784168 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.253506885 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.222368503 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.221638909 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.503731266 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.19181936 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.222758277 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.220302032 seconds)
done (took 28.358530277 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.263189064 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.748501039 seconds)
    (2/2) benchmarking "String"...
    done (took 1.509452369 seconds)
  done (took 4.37054442 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.212878509 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.21399342 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.459758962 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.211941959 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.227035661 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.213134326 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.211896163 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.217235718 seconds)
  done (took 15.868586587 seconds)
done (took 25.830158423 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.232572645 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.389637436 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.458343645 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.216571302 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.230391095 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.213573024 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.222149504 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.230799972 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.225953629 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.232988124 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.596904614 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.466117844 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.221247283 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.569531306 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.216401874 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.252590513 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.213290689 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.458253459 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.229837715 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.240271619 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.192700929 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.204275717 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.250559575 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.216223371 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.215364797 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.223395999 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.258809233 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.213358825 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.422213818 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.218772199 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.244696604 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.217937037 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.260501186 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.219727397 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.216126047 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.228528414 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.416521783 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.220572955 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.193456967 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.236597409 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.407032274 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.223239894 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.219633148 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.218769611 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.216296395 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.260891091 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.201622945 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.338093853 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.232592137 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.242970395 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.277220029 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.609708614 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.224374171 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.217687314 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.217509284 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.442340029 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.222217061 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.263405879 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.240774892 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.242734881 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.217969826 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.21636226 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.273331289 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.219063739 seconds)
  done (took 144.548326622 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.215513453 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.219500202 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.219825328 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.275764185 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.218990645 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.21909733 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.214641546 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.214470255 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.220688753 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.245882021 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.22018186 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.217240308 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.220306882 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.23970547 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.224829741 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.234809275 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.219620599 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.215112389 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.236916982 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.215637162 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.218514162 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.220796349 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.217071091 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.220332538 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.251168565 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.286024869 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.22653905 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.229484765 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.229058205 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.215988643 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.247155333 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.2642324 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.771986559 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.095466827 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.227094894 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.221800693 seconds)
  done (took 80.766442575 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.215619592 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.216669274 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.217537591 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.244437051 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.216721423 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.728701664 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.731757393 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.180767093 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.460811357 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.383006073 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.405668112 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.218168107 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.303171858 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.227398822 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.218112892 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.230290133 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.243697842 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.217052129 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.217310452 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.723637133 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.231990557 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.265640439 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.38479514 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.230269574 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.243887517 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.60274351 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.216220809 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.244639056 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.536399465 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.259645294 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.216805511 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.497082292 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.391106221 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.324499505 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.218196151 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.244923911 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.214902151 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.489912102 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.218338123 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.216023451 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.218177745 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.786241829 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.219502135 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.718375472 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.21872856 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.12345715 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.218464726 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.21646166 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.204822371 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.795654938 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.219401845 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.213894087 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.21694189 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.214951851 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.214964025 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.243820763 seconds)
    (57/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.215247248 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.187721131 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.30551452 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.214965737 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.218696701 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.242890517 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.215176914 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.366435555 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.217655176 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.992542267 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.277125201 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.314437717 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.702018934 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.216213983 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.306231704 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.326919877 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.214345267 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.214288893 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.214004283 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.213530729 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.21406435 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.320453735 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.213065441 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.839649542 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.375761683 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.228662848 seconds)
    (83/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.21452938 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.302437622 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.309752113 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.213732393 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.466639814 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.216673001 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.214188727 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.834987138 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.302567695 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.215147679 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.213597578 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.216252805 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.83962452 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.699146862 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.381386094 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.22015762 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.845164913 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.217966356 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.016138128 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.687799151 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.775422166 seconds)
    (104/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.218797211 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.214182335 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.32092352 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.375993868 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.228995229 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.213702552 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.285354173 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.217340924 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.268789978 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.214883671 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.608671038 seconds)
  done (took 372.951950721 seconds)
done (took 599.381703236 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.07200573 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.026979995 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.161815389 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.036930996 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.01910693 seconds)
  done (took 11.429759793 seconds)
done (took 12.542845241 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.385434663 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.385914567 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.266792124 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.391995725 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.243523089 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.401503553 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.370915205 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.234500616 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.316175871 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.285247117 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.315248744 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.25993058 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.244577673 seconds)
  done (took 18.214557496 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.475536943 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.227075843 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.283171095 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.455865389 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.261124823 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.479949505 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.509848135 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.227413447 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.371371938 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.236945445 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.234498724 seconds)
  done (took 17.877015547 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.478501799 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.228186607 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.285896783 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.465408033 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.263149916 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.480226706 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.518012566 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.23001889 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.368374638 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.23732252 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.235102692 seconds)
  done (took 17.903045766 seconds)
done (took 55.108828236 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.252269546 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.310075433 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.250614676 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.235622365 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.232230976 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.231054682 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.237114434 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.233134271 seconds)
  done (took 11.095369431 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.231301361 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.231470386 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.229981524 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.230900255 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.230504928 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.232701637 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.231333079 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.230854318 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.231410297 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.23166875 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.231613127 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.232086123 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.230943546 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.232063255 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.232656024 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.231249535 seconds)
  done (took 20.818312899 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.233834453 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.231139945 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.230987547 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.233212008 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.232654585 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.232761987 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.234396498 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.232119635 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.232339924 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.231389809 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.234820282 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.232314096 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.232542913 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.232222833 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.23259283 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.234918324 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.233816173 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.233428453 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.236886322 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.233608608 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.232824937 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.234402076 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.233304655 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.232577825 seconds)
  done (took 30.710861903 seconds)
done (took 63.741278773 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.22076975 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.220508266 seconds)
  done (took 5.55902669 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.291458021 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.290788848 seconds)
  done (took 3.700832115 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.235288445 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.234324114 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.235379568 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.234326796 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.234576035 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.235993595 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.235366929 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.233562662 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.235602073 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.235541913 seconds)
  done (took 13.468217741 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.23502641 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.235262281 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.234896836 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.233989457 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.23458277 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.233902456 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.232973239 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.234817691 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.23566284 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.233192327 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.235236542 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.235991531 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.236415887 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.236485769 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.235134816 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.233086752 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.236694068 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.235003506 seconds)
  done (took 23.346917813 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.248728097 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.253007681 seconds)
  done (took 3.619507218 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.36406932 seconds)
    (2/7) benchmarking "second"...
    done (took 1.276396674 seconds)
    (3/7) benchmarking "month"...
    done (took 1.340807074 seconds)
    (4/7) benchmarking "year"...
    done (took 1.331308095 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.27712119 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.255934814 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.278805261 seconds)
  done (took 10.242471704 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.237044767 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.432001295 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.559141375 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.821157213 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.236779671 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.241550684 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.157099639 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.241083308 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.243034416 seconds)
  done (took 14.28961692 seconds)
done (took 75.344934472 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.221397533 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.238200002 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.240026096 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.24248754 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.574888288 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.245829555 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.226417778 seconds)
done (took 16.109846503 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.206754329 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.208768707 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.199853917 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.20286871 seconds)
  done (took 9.937322512 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.163649711 seconds)
    (2/2) benchmarking "read"...
    done (took 1.54702472 seconds)
  done (took 4.829429347 seconds)
done (took 15.887899449 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.239463796 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.23826366 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.23926099 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.237182622 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.237641279 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.237458078 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.237762671 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.237897929 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.238915883 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.237351982 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.239277866 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.237911597 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.236952423 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.238026395 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.238445053 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.238490824 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.238021161 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.238809715 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.238992233 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.238391643 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.239136972 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.239171621 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.23950661 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.237615163 seconds)
  done (took 30.840967214 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.240045599 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.23812512 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.239618674 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.238571971 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.240144205 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.238953593 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.23943971 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.2379192 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.239375983 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.239494211 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.238663673 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.239096523 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.240461967 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.237469337 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.240364102 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.237598078 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.239685967 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.24015043 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.240017356 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.239798483 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.240019216 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.240039431 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.23949551 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.24115821 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.239413744 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.240633472 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.238787814 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.239239252 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.240032264 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.240750717 seconds)
  done (took 38.30779553 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.244063393 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.241071496 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.241227247 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.239489289 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.241424836 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.239750202 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.240713081 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.241858512 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.240823568 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.241709767 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.241595704 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.240894862 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.240322949 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.242251196 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.239127719 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.241641546 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.240839873 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.241590565 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.242708351 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.241677403 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.241324901 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.24235436 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.241678023 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.24147944 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.241182407 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.241703587 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.242805808 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.24070441 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.240454915 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.243811413 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.24214715 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.24059525 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.241660767 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.242162121 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.242759405 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.242187824 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.244525369 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.243025941 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.2405852 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.243658379 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.243638738 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.243860752 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.243019851 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.242664873 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.241197987 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.242162171 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.242838852 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.242811201 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.243137558 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.242116844 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.242593341 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.243489553 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.24338906 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.243193662 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.242961011 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.242760547 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.242831987 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.244673432 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.242731396 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.244017067 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.242874438 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.242996527 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.244971357 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.243942352 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.243137925 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.24469086 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.243437198 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.243875486 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.244338607 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.246390684 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.245224255 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.245182225 seconds)
  done (took 90.580781603 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.245689495 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.244112294 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.244642221 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.243055986 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.242853128 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.245286125 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.246024594 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.242958372 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.245772939 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.246977011 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.246034157 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.245765416 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.24509165 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.246193843 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.246333715 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.245681323 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.245738148 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.246133233 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.245379665 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.245336251 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.245701888 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.246485323 seconds)
  done (took 28.52390386 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.247224356 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.247799172 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.247401298 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.246579162 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.249498859 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.247615832 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.245706548 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.247221567 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.247458917 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.245433894 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.246768675 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.247885895 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.249482863 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.248657276 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.246807699 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.248921706 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.247762951 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.250946764 seconds)
  done (took 23.586965954 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.24596307 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.246566391 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.248968695 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.249862016 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.247580422 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.248786254 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.247401453 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.248030037 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.247772223 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.248961987 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.248776642 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.248966456 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.247937644 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.247756365 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.24931916 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.247746859 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.247462357 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.248280111 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.25161507 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.248224324 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.24797488 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.247075417 seconds)
  done (took 28.589672111 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.247440542 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.249826131 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.248393379 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.247513379 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.247087149 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.249115748 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.249311284 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.248419725 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.249989458 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.248962681 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.247476271 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.249018818 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.251031075 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.249317707 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.248586884 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.248306832 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.249609251 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.250531663 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.249693954 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.250586965 seconds)
  done (took 26.110279619 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.249728454 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.248813713 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.249807842 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.249880049 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.250676325 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.249109434 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.249399406 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.25062519 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.251386012 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.250229329 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.250260915 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.251455877 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.250700868 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.249614761 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.251735823 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.251387536 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.251769728 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.250394382 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.252609503 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.25079266 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.251904424 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.251465676 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.250679595 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.250438085 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.25184105 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.252094678 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.25314539 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.251550237 seconds)
  done (took 36.155173111 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.25124803 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.250444042 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.251164783 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.252414558 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.251156505 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.251706689 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.251180491 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.252033954 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.253287692 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.252825478 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.253431845 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.251484991 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.251425137 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.251877654 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.251785905 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.252868793 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.2535492 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.252046198 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.25417821 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.253745355 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.254421153 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.25213178 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.253904113 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.252484971 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.253264572 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.2529102 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.254412348 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.25595846 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.254029403 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.252187449 seconds)
  done (took 38.71345348 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.272038525 seconds)
    (2/2) benchmarking "in"...
    done (took 1.271464835 seconds)
  done (took 3.676977941 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.25396581 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.252551695 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.253642566 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.253661012 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.253694711 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.254304062 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.254029356 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.253709527 seconds)
  done (took 11.163319128 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.247106064 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.255299518 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.25332825 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.25529604 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.254391149 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.245379906 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.252579402 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.258835512 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.245946137 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.245770774 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.247813401 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.246659477 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.247542917 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.238363455 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.236878994 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.239285253 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.245898231 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.2434421 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.243744709 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.244201243 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.243081757 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.229090771 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.230928968 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.236789784 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.22821773 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.234416705 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.23567117 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.238662922 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.224918046 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.225719567 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.220832809 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.228277413 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.226057595 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.228129332 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.226864572 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.228129535 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.228495749 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.220649551 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.222929246 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.225891219 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.219945578 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.22277153 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.216011054 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.220342431 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.221966822 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.221832095 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.217529801 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.216189978 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.21028402 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.213103883 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.221073032 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.209882279 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.219244427 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.213125627 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.208510184 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.214723181 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.22032131 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.205564972 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.206166079 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.213905954 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.219796482 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.214279932 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.207644156 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.213860132 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.207447714 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.208890241 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.213196799 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.215684867 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.209826144 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.209836566 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.211041717 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.221490493 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.214911912 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.215432959 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.211674286 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.210835938 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.205088278 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.215693563 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.211771736 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.214547781 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.216365842 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.212166906 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.20876638 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.20975325 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.20596833 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.215640542 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.213533612 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.210528503 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.203873482 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.212666272 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.218780901 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.212014669 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.204050987 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.206601582 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.207012008 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.209578419 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.199496718 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.20303521 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.209738084 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.209208137 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.20909708 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.20014153 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.205695343 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.207888326 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.203383756 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.204304017 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.211176526 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.198040849 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.206517868 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.210619591 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.205034732 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.193035855 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.195819581 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.204206641 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.193895586 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.199188684 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.206628944 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.198499054 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.206449723 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.201938113 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.196057259 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.203573631 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.204420116 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.200489463 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.194086646 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.202702263 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.198830512 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.197812407 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.205735827 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.200043164 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.199070013 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.195947622 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.205507307 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.194681945 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.20345239 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.193013131 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.202672528 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.198842136 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.200632389 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.196452013 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.199213736 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.196491952 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.199514816 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.202615719 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.206088732 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.196324043 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.206252035 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.199679723 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.198218213 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.201963984 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.204370949 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.200663535 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.195266414 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.203570067 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.193293795 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.202298155 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.194263095 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.204357442 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.199911501 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.20046798 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.199974607 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.192427757 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.197321097 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.20426826 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.200444835 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.200534203 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.203499036 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.201081657 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.200727647 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.192880023 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.203188973 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.192134765 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.196206462 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.204404188 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.202561482 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.20555259 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.198774943 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.208940738 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.201736098 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.201842537 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.1938588 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.199584752 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.206929529 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.20502224 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.209473359 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.203409283 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.202489479 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.196742994 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.198865536 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.20555667 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.195608303 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.206246804 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.207701861 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.209844383 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.198910699 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.204917734 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.195059978 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.204772695 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.203498329 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.211915463 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.205060997 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.203898758 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.197289832 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.207968686 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.199089059 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.207260483 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.196119465 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.205854709 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.204420671 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.203014934 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.204334161 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.197690698 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.200815507 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.207461535 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.20294139 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.204884564 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.196287191 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.206057482 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.195914632 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.200097478 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.206561071 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.204050487 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.206478748 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.210477003 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.202224839 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.207790932 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.205301101 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.199874879 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.206949894 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.201900917 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.204242567 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.209812333 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.206056492 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.201095348 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.210174401 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.207438927 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.198441143 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.20485528 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.211815528 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.205062015 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.19787249 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.206923403 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.206670016 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.205971498 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.206015286 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.199705321 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.209248927 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.208717637 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.213951328 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.201069068 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.209325687 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.2003904 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.208826093 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.202535878 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.206410383 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.206786273 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.208779284 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.214682688 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.208231357 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.200893515 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.208881567 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.205820075 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.206017871 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.199097079 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.210134017 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.206351847 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.207110654 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.205309204 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.203268685 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.208718589 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.199730398 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.209591166 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.200848113 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.216491128 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.222167475 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.21123685 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.211334655 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.210566788 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.209898449 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.209519016 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.202126632 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.203104187 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.204263254 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.203172421 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.201849315 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.211515494 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.199671089 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.207961672 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.203541547 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.206667882 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.20730249 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.206475397 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.198157299 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.213354291 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.201673226 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.201490981 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.193662256 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.203547866 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.196805988 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.203264775 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.203665825 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.198432603 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.210368024 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.202549686 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.196054442 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.195673838 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.195306205 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.192760911 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.195964842 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.203297339 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.192837218 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.199904359 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.191069353 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.196278425 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.194152833 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.202440882 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.206463226 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.191294528 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.202030855 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.198837581 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.191297154 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.194037433 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.200773079 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.203001103 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.210403371 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.192820154 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.200547539 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.198925559 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.198618353 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.199414184 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.199140623 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.199644548 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.199537263 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.20416696 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.203807798 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.195815386 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.201531158 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.20989618 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.199312931 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.199064416 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.192449738 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.201537996 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.20947563 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.196247698 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.19853719 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.196299313 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.202524504 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.200428668 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.200270026 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.200655637 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.200876849 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.20519837 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.20526351 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.203201631 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.200511536 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.204514021 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.211353143 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.205253015 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.21246278 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.197074028 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.206007403 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.203877247 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.19618261 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.197883199 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.197886219 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.204811549 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.193470777 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.205289848 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.203505644 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.197641516 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.203832356 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.2087127 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.194079996 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.202438191 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.210726956 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.195036482 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.206194804 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.203308912 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.195071623 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.205014223 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.202328145 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.194897858 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.197405874 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.198574705 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.206614045 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.197305771 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.207729486 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.197726077 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.207307207 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.203233297 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.204044977 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.203958442 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.203747531 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.196301543 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.20516244 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.20470469 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.214552119 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.200357658 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.203604565 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.198711539 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.210122636 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.216495447 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.200051993 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.208719004 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.205390376 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.198521396 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.202298819 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.208359703 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.199261316 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.208331718 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.197523981 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.200080152 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.199522392 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.205447318 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.20833613 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.206770869 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.197206611 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.199488882 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.20693076 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.204170326 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.204842739 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.200422608 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.211565915 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.197730134 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.19906653 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.207592195 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.200809142 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.210473162 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.198656165 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.202778329 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.202342565 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.209495662 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.205751448 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.204800423 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.198899387 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.199771631 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.210965335 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.210729121 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.20234321 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.200233198 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.209262191 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.199577136 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.202006086 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.203098722 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.203178841 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.20233806 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.210351908 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.201182792 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.202610084 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.200489496 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.210217204 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.211235953 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.210481137 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.201589082 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.214139198 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.215473708 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.213557825 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.198869922 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.20492306 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.202716496 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.210397403 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.20708732 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.20132536 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.214062412 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.216594181 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.21081555 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.207417453 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.209639768 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.201398043 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.210934793 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.208521316 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.20422444 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.213013936 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.204358918 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.214810388 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.208328247 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.208482063 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.203709472 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.203099084 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.203378299 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.204002145 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.211417928 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.208005688 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.212531785 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.205268167 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.214380762 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.209678832 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.209569586 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.207872595 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.202264687 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.211842194 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.20298784 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.210862954 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.211954615 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.202837508 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.211513532 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.209815994 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.204493648 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.205326453 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.212659844 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.208282627 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.203743069 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.207847404 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.215338905 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.21943772 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.211811899 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.20572434 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.207605576 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.213499597 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.210789752 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.211223731 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.203416655 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.219358157 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.22241774 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.204372085 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.207692314 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.213714961 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.220023071 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.210900148 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.212416289 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.208279962 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.209119259 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.214773296 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.21215363 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.214675906 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.217527317 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.207108019 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.214635993 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.205019282 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.207979963 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.214260738 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.222398321 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.21243013 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.205972518 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.2180759 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.222417453 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.209932027 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.224886778 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.21861787 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.212526378 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.21754638 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.204897586 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.2142727 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.209498195 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.216986256 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.212316901 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.213554482 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.212904254 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.204001801 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.213016963 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.220463572 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.222784536 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.213353184 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.206108112 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.208877349 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.215998068 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.213476364 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.214638209 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.214725224 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.213154476 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.213501202 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.207311004 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.223595504 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.227234712 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.217993471 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.214557389 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.213818447 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.213930898 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.217978 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.210477457 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.217618205 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.216403662 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.215129383 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.21356924 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.22314761 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.216373631 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.208677168 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.211357191 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.209656426 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.217637627 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.222289693 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.233282206 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.217400826 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.219888925 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.217499998 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.21541904 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.209998901 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.220493012 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.216594544 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.210270241 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.212068333 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.21945209 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.218192611 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.214692366 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.209184045 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.220359725 seconds)
  done (took 721.34084298 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.217035002 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.216004807 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.217264609 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.21594513 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.218283724 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.216794888 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.21615385 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.215867467 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.218115362 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.216642578 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.216256907 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.216347487 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.218297518 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.216942854 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.216372101 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.217647559 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.218319643 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.216977961 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.217942423 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.217289148 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.217459212 seconds)
  done (took 26.661623123 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.217819006 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.218100695 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.218296413 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.217860282 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.216772413 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.218274937 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.217987326 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.220283434 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.218316635 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21719689 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.21853452 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.218525414 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.219203111 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.218268939 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217567776 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.219395846 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.219151123 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.217898707 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.21886571 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.219053594 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.218058656 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.218619204 seconds)
  done (took 27.910084888 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.220305836 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.218532657 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.212304939 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.22169238 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.218692752 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.218403081 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.219781779 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.218679131 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.220119305 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.212300277 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.212560645 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.213707928 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.213809481 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.222967752 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.215104707 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.22374687 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.220856216 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.220785673 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.219242969 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.218575916 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.22276066 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.229765316 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.219116863 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.211451752 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.221748081 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.219472668 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.220071668 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.220289521 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.212180358 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.22334007 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.220368657 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.214414127 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.223451102 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.223166325 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.215494359 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.223416573 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.221173894 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.220865554 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.22017877 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.218003808 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.228043376 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.221429356 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.225593851 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.231926369 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.22234488 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.214960565 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.226599836 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.221497409 seconds)
  done (took 59.662236522 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.221890755 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.222886027 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.22183981 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.2223587 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.222921842 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.222249435 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.223672861 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.22330885 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.222236539 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.22303579 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.223247488 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.223479473 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.223119762 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.222208047 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.222638016 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.223955553 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.224496507 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.223029959 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.223293673 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.221839502 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.224539875 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.223478311 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.223011602 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.223519336 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.224098939 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.223875538 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.222572415 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.223248561 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.223398667 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.222644538 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.222093409 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.222826855 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.224941334 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.223680218 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.224044673 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.223967198 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.224061895 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.222906151 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.222622806 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.224028226 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.223454814 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.225781886 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.223674645 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.22329956 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.22321566 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.22446762 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.223724206 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.224151927 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.22443235 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.224490666 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.223830449 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.225560297 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.224046423 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.224678544 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.224155188 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.226375985 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.223966374 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.225989822 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.224350912 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.22489832 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.225011311 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.224441858 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.225254663 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.226757395 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.225027426 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.225956844 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.225488643 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.224827789 seconds)
  done (took 84.330188703 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.227154419 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.226346495 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.226250898 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.225996016 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.226751685 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.225780109 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.226974203 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.226744417 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.228042097 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.227404835 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.22646161 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.227561088 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.227818615 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.228493996 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.228479547 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.227802389 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.227708269 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.226625553 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.227490259 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.228660074 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.227567722 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.227613247 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.229097975 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.227379842 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.230064354 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.228645423 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.227935338 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.228295017 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.228684997 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.229188975 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.230290972 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.229692632 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.228844149 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.228807506 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.228673887 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.229492649 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.230080301 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.228841365 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.229024698 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.228680652 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.230604876 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.230341034 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.230318542 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.229501547 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.229891928 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.22891326 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.228682861 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.230336803 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.229000553 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.228521748 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.230524604 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.230531476 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.231116761 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.229336845 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.229019357 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.230702258 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.230230444 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.229908912 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.231125404 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.229965937 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.230646031 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.229752062 seconds)
  done (took 77.294900407 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.230640473 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.23095039 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.230114093 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.228681976 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.230113995 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.230047074 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.229878509 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.230872541 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.22977566 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.230534792 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231609505 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.230933415 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.232197686 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.230857608 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.23084874 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232704072 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.23259889 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.231325176 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.231880111 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.231029818 seconds)
  done (took 25.733555753 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.232367688 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.231246391 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.232003141 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.231610579 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.23231656 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.231943781 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.231504394 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.232049415 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.231211927 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.232365215 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.2327705 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.232692826 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232450054 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.233244994 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.233089967 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.232794494 seconds)
  done (took 20.833101849 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.233101126 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.232569168 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.234991607 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.234017567 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.232893498 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.232955953 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.234155746 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.234026461 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.232394092 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.233851369 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.234417085 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.233340397 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.233849184 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.233859372 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.233675247 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.235379018 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.234597715 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.234166619 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.234854686 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.234891635 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.236262846 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.233463921 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.234629299 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.235051919 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.234966259 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.235071535 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.23466289 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.234398078 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.234171411 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.234943204 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.236336883 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.235609984 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.235341713 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.234816934 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.236294463 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.235754441 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.235760997 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.235774919 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.235187541 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.236688664 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.235635537 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.235045831 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.236001981 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.235603087 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.235191981 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.236053959 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.236178347 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.235504695 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.236744778 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.236878342 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.236109904 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.237701434 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.236931703 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.237773487 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.236970388 seconds)
  done (took 69.047466587 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.237042564 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.23699279 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.237211661 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.236032892 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.236468665 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.23732937 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.236505044 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.238715374 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.238505141 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.23681668 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.237043369 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.23731379 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.237868751 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.23706266 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.237084407 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.238382793 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.237092684 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.237648001 seconds)
  done (took 23.392069677 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.238123447 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.237508982 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.237650745 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.237737438 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.238619956 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.237503323 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.238512728 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.238877044 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.238851474 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.237958121 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.237121807 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.238073375 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.238370169 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.238953949 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.238936437 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.238003627 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.23842087 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.239047523 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.239702513 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.23814035 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.238692396 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.239462255 seconds)
  done (took 28.366668426 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.229682872 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.228752019 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.229543165 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.242477736 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.238273382 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.228527064 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.22843453 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.229266952 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.247318909 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.2526587 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.248348545 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.235735389 seconds)
  done (took 15.961722406 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.240398377 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.239570079 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.240245653 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.242043414 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.24064179 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.240327604 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.239592671 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.238983165 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.239950914 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.240684578 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.239716423 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.240119745 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.241396891 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.240490694 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.239766321 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.239972178 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.240331155 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.240852581 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.241214932 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.240598662 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.239396455 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.240420944 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.241289554 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.239061812 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.242268174 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.2413726 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.241814649 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.241105161 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.241561582 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.241397989 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.242528253 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.241925205 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.242293415 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.241359334 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.243147682 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.241329816 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.242012628 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.241127166 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.242550271 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.243055478 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.242853611 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.242604056 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.242426681 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.243562173 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.243115309 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.242482195 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.243560504 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.24186731 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.243116024 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.244273778 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.243668562 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.243023668 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.243707029 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.245057394 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.243485967 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.243316183 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.243668507 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.243586707 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.242778125 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.244551235 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.244990658 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.244276836 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.242820876 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.244542491 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.24325831 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.243693442 seconds)
  done (took 83.093724409 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.243613563 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.243541944 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.244551163 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.244428432 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.244266153 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.244425488 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.243494634 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.244432984 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.244522862 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.244594001 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.244087497 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.244496991 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.243665471 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.244295098 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.244784867 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.243496733 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.245903312 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.245304984 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.244376406 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.245916721 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.243014945 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.243658193 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.244887316 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.247113645 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.24475271 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.247047106 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.245065307 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.245207625 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.245151675 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.246325773 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.246720198 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.245108756 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.245356704 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.245697129 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.246808606 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.247089884 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.245279947 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.247286695 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.245877238 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.246157808 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.245476664 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.24676338 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.245048177 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.246568471 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.246653625 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.245499517 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.246202462 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.246640774 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.245926862 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.247903953 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.247108114 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.246154486 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.246311446 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.247181743 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.247360214 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.246657932 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.245773022 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.247137045 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.247715706 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.247721282 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.247146661 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.247716508 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.249192655 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.249655197 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.247435316 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.248051026 seconds)
  done (took 83.352647491 seconds)
done (took 1704.351375746 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.40377156 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.36116598 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.238437834 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.247190903 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.23908661 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.237104768 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.251972145 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.238902641 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.239206898 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.238512341 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.238326294 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.429584284 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.273049576 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.239375327 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.238946039 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.337491347 seconds)
  done (took 25.583267285 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.261889457 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.254934064 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.355372356 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.259865473 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.275889773 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.428459898 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.312618162 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.258463578 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.408819923 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.277789754 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.246650433 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.277117168 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.254330721 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.257555842 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.277316816 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.428438436 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.502269126 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.254890982 seconds)
  done (took 27.726223081 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.656714769 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.265826288 seconds)
  done (took 5.064496586 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.272731389 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.254824757 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.256971408 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.254495029 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.24790983 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.247753378 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.254909112 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.254327426 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.253965301 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.373717246 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.262173308 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.268518369 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.271436115 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.256011838 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.26372883 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.298352991 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.418855332 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.265504711 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.263932372 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.263206161 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.255681876 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.345448884 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.298141605 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.269161612 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.370137753 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.264222644 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.265747886 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.263449124 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.370660744 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.266861898 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.256692711 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.257053523 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.258599037 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.1651444 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.779783676 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.254967754 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.279206066 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.264873058 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.265073886 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.407165792 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.258826839 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.263395429 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.250056676 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.776513626 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.360787487 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.369195997 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.270677138 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.259858224 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.259254053 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.318738371 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.258311444 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.258890563 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.314349742 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.024516057 seconds)
  done (took 81.05057894 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.257092937 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.251917551 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.432579355 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.272506221 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.260863461 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.252866982 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.251569879 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.513109585 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.267786352 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.253096756 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.553823207 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.856650137 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.26201282 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.319112379 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.289508948 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.313304651 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.252595994 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.272469495 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.252266912 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.258435642 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.811602279 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.256218326 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.254564081 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.34743941 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.293125907 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.766196545 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.252726144 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.25569634 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.268353015 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.254230473 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.813627405 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.264909468 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.302774749 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.256699918 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.530509677 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.619960342 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.580277039 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.255761828 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.272225453 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.257527796 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.280502502 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.757855274 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.601331091 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.262287196 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.254915983 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.75795547 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.253249987 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.261932073 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.262214786 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.520189945 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.258860605 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.25576577 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.254801124 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.2558105 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.254195536 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.320677406 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.32262465 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.770529242 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.255554537 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.254643815 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.319068543 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.254221864 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.257926346 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.258393879 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.257776743 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.606136417 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.606620669 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.262581552 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.601953737 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.806168996 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.264652329 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.888887748 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.258567336 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.280406458 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.303236067 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.254838597 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.271192372 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.766458402 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.264127629 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.255367864 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.582911714 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.256543313 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.549857805 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.274519854 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.258699727 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.832794706 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.273889899 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.301157117 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.256765656 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.265541239 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.256261878 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.261005259 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.537523048 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.319605071 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.256794544 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.256586988 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.266373713 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.257891967 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.272050371 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.260393887 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.888971859 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.265844099 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.257870305 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.278440278 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.258002647 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.257892264 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.261409299 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.261055051 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.543725831 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.26382168 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.261866868 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.258290456 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.260044223 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.268349218 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.352717985 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.259366666 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.545921468 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.258033746 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.260792528 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.264596816 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.2608493 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.313568686 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.259916436 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.280584091 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.260389451 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.572710456 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.275081326 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.274092681 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.260377006 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.259398882 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.274141785 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.260686281 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.31383283 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.25886787 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.098689997 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.263189977 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.272652516 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.259089771 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.268985878 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.271914003 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.270183689 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.258997423 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.56417654 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.543367797 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.604424671 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.262183834 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.260086727 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.071172584 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.270403204 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.44226455 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.278722846 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.261759231 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.540471819 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.57999301 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.261971636 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.261329442 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.264032152 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.540110012 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.276487424 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.578827444 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.85188121 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.260855646 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.264848735 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.084232613 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.065126922 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.268283223 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.265433041 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.548322977 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.277184849 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.261715009 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.262454522 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.263996835 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.262574267 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.265717349 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.266040377 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.262166671 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.262613399 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.55253337 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.456288131 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.278946871 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.267092003 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.774525447 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.286297026 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.262521523 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.266014205 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.266914527 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.262335518 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.325565152 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.263525978 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.269094776 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.26574955 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.272345025 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.799912091 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.262880046 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.279576279 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.456976679 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.011548921 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.262963846 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.264440201 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.265097185 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.322678201 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.808059858 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.290732482 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.552028392 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.272498831 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.303174757 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.264646681 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.273481632 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.809989864 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.2649928 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.280799311 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.978703521 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.265730751 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.744259943 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.265576623 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.266247148 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.905581634 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.267460866 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.268937245 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.265287233 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.267259394 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.594873125 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.267310106 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.289412571 seconds)
  done (took 482.197930958 seconds)
done (took 622.75343371 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.265072162 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.271848382 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.249251776 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.270592884 seconds)
  done (took 10.214109217 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.285155287 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.271411431 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.280488913 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.271629915 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.282027635 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.272116712 seconds)
  done (took 8.821821817 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.265955439 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.266696219 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.271462185 seconds)
  done (took 7.962493327 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.46740346 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.29682909 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.60330071 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.282184095 seconds)
  done (took 8.80955099 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.281503876 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.281202615 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.281364722 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.281189457 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.282954827 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.284078217 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.283794531 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.281735992 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.283827239 seconds)
  done (took 12.700948811 seconds)
done (took 49.667119264 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.267618806 seconds)
    (2/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.163924127 seconds)
    (3/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.506753263 seconds)
    (4/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.282253051 seconds)
    (5/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.412777375 seconds)
    (6/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.470336666 seconds)
    (7/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.006343691 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.335810969 seconds)
    (9/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.244698043 seconds)
    (10/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.476391837 seconds)
    (11/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.250612092 seconds)
    (12/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.427550386 seconds)
    (13/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.136572734 seconds)
    (14/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.962705155 seconds)
    (15/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.303400242 seconds)
    (16/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.107644067 seconds)
    (17/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.333827531 seconds)
    (18/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.340589857 seconds)
    (19/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.005595362 seconds)
    (20/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.373871009 seconds)
    (21/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.085229569 seconds)
    (22/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.275593651 seconds)
    (23/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.271492089 seconds)
    (24/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.363964436 seconds)
    (25/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.411774761 seconds)
    (26/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.35385315 seconds)
    (27/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.274800961 seconds)
    (28/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.347683512 seconds)
    (29/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.382695884 seconds)
    (30/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.379607266 seconds)
    (31/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.246533714 seconds)
    (32/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.321769325 seconds)
    (33/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.419642427 seconds)
    (34/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.30854785 seconds)
    (35/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.346558459 seconds)
    (36/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.354707718 seconds)
    (37/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.246342009 seconds)
    (38/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.253652723 seconds)
    (39/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.318120221 seconds)
    (40/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.266314535 seconds)
    (41/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.379379856 seconds)
    (42/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.34380685 seconds)
    (43/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.372198789 seconds)
    (44/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.959954416 seconds)
    (45/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.42372383 seconds)
    (46/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.957268546 seconds)
    (47/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.370435014 seconds)
    (48/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.386583884 seconds)
    (49/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.274012188 seconds)
    (50/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.354121773 seconds)
    (51/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.294769571 seconds)
    (52/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.473309155 seconds)
    (53/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.352132012 seconds)
    (54/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.248657292 seconds)
    (55/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.380837504 seconds)
    (56/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.461029718 seconds)
    (57/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.252822889 seconds)
    (58/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.311500362 seconds)
    (59/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.260922238 seconds)
    (60/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.287428704 seconds)
    (61/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.447474396 seconds)
    (62/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.121343821 seconds)
    (63/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.52085467 seconds)
    (64/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.467689648 seconds)
    (65/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.254271554 seconds)
    (66/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.554616974 seconds)
    (67/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.254572198 seconds)
    (68/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.360816603 seconds)
    (69/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.311288284 seconds)
    (70/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.414961887 seconds)
    (71/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.380693263 seconds)
    (72/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.365497248 seconds)
    (73/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.271642192 seconds)
    (74/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.270267673 seconds)
    (75/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.398852892 seconds)
    (76/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.342352785 seconds)
    (77/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.398991757 seconds)
    (78/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.301087528 seconds)
    (79/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.383561344 seconds)
    (80/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.365001816 seconds)
    (81/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.250249247 seconds)
    (82/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.385964223 seconds)
    (83/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.31617277 seconds)
    (84/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.361426232 seconds)
    (85/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.385506657 seconds)
    (86/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.481600715 seconds)
    (87/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.313201469 seconds)
    (88/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.388070348 seconds)
    (89/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.307299085 seconds)
    (90/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.394568464 seconds)
    (91/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.275225596 seconds)
    (92/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.35193359 seconds)
    (93/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.253424348 seconds)
    (94/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.402672346 seconds)
    (95/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.250321499 seconds)
    (96/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.227635008 seconds)
    (97/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.353619935 seconds)
    (98/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.465997792 seconds)
    (99/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.441892515 seconds)
    (100/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.251643474 seconds)
    (101/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.385242135 seconds)
    (102/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.254189109 seconds)
    (103/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.254682061 seconds)
    (104/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.255376097 seconds)
    (105/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.388169458 seconds)
    (106/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.36392072 seconds)
    (107/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.282543872 seconds)
    (108/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.448000569 seconds)
    (109/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.253652705 seconds)
    (110/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.122955657 seconds)
    (111/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.313682798 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.511827749 seconds)
    (113/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.51296196 seconds)
    (114/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.405074514 seconds)
    (115/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.425879749 seconds)
    (116/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.313935038 seconds)
    (117/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.41936518 seconds)
    (118/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.431574056 seconds)
    (119/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.257157797 seconds)
    (120/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.535274538 seconds)
    (121/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.389724744 seconds)
    (122/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.252526446 seconds)
    (123/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.263026413 seconds)
    (124/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.038588233 seconds)
    (125/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.352171108 seconds)
    (126/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.451674428 seconds)
    (127/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.431394935 seconds)
    (128/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.253327734 seconds)
    (129/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.322144607 seconds)
    (130/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.363011612 seconds)
    (131/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.253669799 seconds)
    (132/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.615364029 seconds)
    (133/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.084732867 seconds)
    (134/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.312779517 seconds)
    (135/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.25271893 seconds)
    (136/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.321877683 seconds)
    (137/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.406766686 seconds)
    (138/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.369446317 seconds)
    (139/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.254156412 seconds)
    (140/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.253465222 seconds)
    (141/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.38951908 seconds)
    (142/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.343689754 seconds)
    (143/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.513275632 seconds)
    (144/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.316992908 seconds)
    (145/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.101272128 seconds)
    (146/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.27343911 seconds)
    (147/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.348990769 seconds)
    (148/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.420441882 seconds)
    (149/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.3394605 seconds)
    (150/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.255049392 seconds)
    (151/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.42057082 seconds)
    (152/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.311396406 seconds)
    (153/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.39701496 seconds)
    (154/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.333696528 seconds)
    (155/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.0535977 seconds)
    (156/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.395676438 seconds)
    (157/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.35153063 seconds)
    (158/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.056195476 seconds)
    (159/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.25447337 seconds)
    (160/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.094456919 seconds)
    (161/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.318291132 seconds)
    (162/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.089374318 seconds)
    (163/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.124287765 seconds)
    (164/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.261261891 seconds)
    (165/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.352527978 seconds)
    (166/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.394451433 seconds)
    (167/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.339235321 seconds)
    (168/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.027183765 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.437183548 seconds)
    (170/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.316641318 seconds)
    (171/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.315691486 seconds)
    (172/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.497739108 seconds)
    (173/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.430112136 seconds)
    (174/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.392615857 seconds)
    (175/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.256530632 seconds)
    (176/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.474696572 seconds)
    (177/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.456269956 seconds)
    (178/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.431366271 seconds)
    (179/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.313200656 seconds)
    (180/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.966520747 seconds)
    (181/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.393100868 seconds)
    (182/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.395810142 seconds)
    (183/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.28067709 seconds)
    (184/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.082515486 seconds)
    (185/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.27371985 seconds)
    (186/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.263990753 seconds)
    (187/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.263751571 seconds)
    (188/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.499208588 seconds)
    (189/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.257209379 seconds)
    (190/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.308440947 seconds)
    (191/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.520380022 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.390493142 seconds)
  done (took 328.47214632 seconds)
done (took 329.632754305 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.308264396 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.383000596 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.288400774 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.289307476 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.291598228 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.284498194 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.310470805 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.290266991 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.30231786 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.304708341 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.285537191 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.298299127 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.304313038 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.300542807 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.3230198 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.28987657 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.288532825 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.299682206 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.30523912 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.308062492 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.291999545 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.291778231 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.31768143 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.290814943 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.298308241 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.298764356 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.296947325 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.282052633 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.299773335 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.306506062 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.282637283 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.297836892 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.308663243 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.303505932 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.29208965 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.302033187 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.293016504 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.384906387 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.313537316 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.303824502 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.300650166 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.307275469 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.297281397 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.297285263 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.304159983 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.320384265 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.299752453 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.307516689 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.283451729 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.28415788 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.312493237 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.303804437 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.300546419 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.284481221 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.296371215 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.308644851 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.303258027 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.312387982 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.300247419 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.294158234 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.327181066 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.313753339 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.305325778 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.302369791 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.301219513 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.310137057 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.302004611 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.309923124 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.300397047 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.294210839 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.293809593 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.302154984 seconds)
done (took 102.967693907 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.418143613 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.288884867 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.450413763 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.300722724 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.45773692 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.417356457 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.300995948 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.303558769 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.300352428 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.095047236 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.301587083 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.30217269 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.292105734 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.301800099 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.413452862 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.302374607 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.300811832 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.015755281 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.303369387 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.430605875 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.293482758 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.302849279 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.301901308 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.09821212 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.291472889 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.287489654 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.429971692 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.301681672 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.993058424 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.284843837 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.287828662 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.995368332 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.429739906 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.322570035 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.312966687 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.311021214 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.459612546 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.306721809 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.419486697 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.420010802 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.451420516 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.340413043 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.287614488 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.29169126 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.304999103 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.303043101 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.302109323 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.332396995 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.29222041 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.302378762 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.994912729 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.31250855 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.303796138 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.302940136 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.303755631 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.331731384 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.303056581 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.304640976 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.430856292 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.304420284 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.421595251 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.100432615 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.121534509 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.305432674 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.292493267 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.304913366 seconds)
  done (took 105.972340146 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.364024558 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.372982794 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.404239431 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.297359989 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.343957716 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.404394508 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.297586959 seconds)
  done (took 10.663298939 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.303023553 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.304343125 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.342899767 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.343066634 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.305797976 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.469465519 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.304716298 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.30845336 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.305445135 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.347201672 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.309011673 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.304698795 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.313305195 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.296841218 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.343624343 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.307013473 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.41557776 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.297385425 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.305254225 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.447893832 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.307327081 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.31448959 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.348013283 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.3084171 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.307957926 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.303010385 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.087412046 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.305984529 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.307225763 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.305887936 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.306902751 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.362569655 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.305412928 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.298329616 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.306498921 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.411624658 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.305944969 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.306764128 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.307232075 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.298050381 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.306891946 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.307036767 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.308695072 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.306495375 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.306384701 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.322749285 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.307561924 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.306440861 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.306083951 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.308013359 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.348618754 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.307047329 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.306616501 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.305677883 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.352226826 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.317542449 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.308350788 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.306559424 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.307871977 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.308057408 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.450824522 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.346049554 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.307639647 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.34625884 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.307751469 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.308735435 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.308756048 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.308125712 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.387785118 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.307935418 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.346606664 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.308336381 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.481280942 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.324054269 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.309790517 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.303291096 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.302847028 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.309216548 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.298704939 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.306458506 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.307799394 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.300947495 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.305760159 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.309003643 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.310363102 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.458406684 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.408253366 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.307549751 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.315857731 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.308528955 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.309028462 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.351673528 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.310152831 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.310565636 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.351090375 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.418345005 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.352037596 seconds)
  done (took 134.624741127 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.313979975 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.314128724 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.307262314 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.329442661 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.301516441 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.302055247 seconds)
  done (took 9.05359571 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.304752421 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.314435407 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.312016194 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.311676563 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.310606919 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.312164383 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.31188083 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.304319925 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.31556256 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.311719198 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.313406473 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.313887582 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.314620055 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.31182325 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.312709408 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.311395482 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.312571625 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.312193431 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.312651304 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.312702298 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.299494338 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.31382322 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.313523213 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.305147053 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.317690407 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.31163201 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.328374078 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.313886315 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.313377124 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.311404244 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.315456349 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.315377936 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.306581357 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.309251599 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.315588445 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.306226144 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.317935412 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.316404195 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.312192156 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.315850899 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.317077289 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.313499271 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.315864883 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.317012742 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.307467758 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.309284229 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.319256479 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.329881653 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.315967025 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.318416112 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.316775761 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.314668651 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.316353176 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.316637072 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.309624698 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.308882002 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.319455643 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.314915776 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.314348903 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.306761751 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.317587901 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.317045347 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.308142075 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.318140627 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.315273255 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.318609348 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.308048155 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.318580799 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.316957579 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.315650907 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.317774474 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.315653598 seconds)
  done (took 96.773323057 seconds)
done (took 358.261997932 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.813904918 seconds)
  done (took 4.003980565 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.566869949 seconds)
  done (took 3.758390352 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.920315863 seconds)
  done (took 22.360421368 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.31376364 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.322935752 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.327783317 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.301615972 seconds)
  done (took 10.455639958 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.684563397 seconds)
  done (took 3.874923648 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.311519323 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.312804893 seconds)
  done (took 5.817670913 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.465733984 seconds)
  done (took 3.65651014 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.523836602 seconds)
  done (took 3.7172487 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.326946072 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.317160323 seconds)
  done (took 5.844035294 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.280720393 seconds)
  done (took 3.471564333 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.425453499 seconds)
  done (took 20.616887566 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.326434305 seconds)
  done (took 3.520710785 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.35646793 seconds)
  done (took 3.548456656 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.755763303 seconds)
  done (took 5.947113135 seconds)
done (took 101.782399223 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.304095848 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.311127275 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.309926518 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.304318896 seconds)
  done (took 10.421452619 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.382568989 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.382587715 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.389428524 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.376460349 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.377246633 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.385389588 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.345587984 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.34501728 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.374729566 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.370983543 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.38733437 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.377200732 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.385980302 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.34439812 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.372071739 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.387851973 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.37657399 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.392500077 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.346455863 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.377827175 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.321865455 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.380072745 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.373083634 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.32229501 seconds)
  done (took 34.068074508 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.809953995 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.381284381 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.465285979 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.362229734 seconds)
  done (took 7.211649249 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.425604404 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.42540237 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.442775894 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.479750422 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.526441195 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.438454945 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.346817059 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.343067492 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.328746965 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.42757191 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.511367659 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.424806842 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.641247255 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.321277603 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.637888228 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.321039897 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.322051061 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.424901576 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.475415705 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.504353029 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.322641394 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.424595721 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.428367354 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.425477271 seconds)
  done (took 35.563409954 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.329294779 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.338175331 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.324574405 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.338692996 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.325220832 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.323275355 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.324789955 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.33049527 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.322991898 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.322891712 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.324015057 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.337963737 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.323263148 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.324853035 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.33083956 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.325223404 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.32622529 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.330550538 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.33124623 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.323533518 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.324626969 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.330729652 seconds)
  done (took 30.409459687 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.306924548 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.308593451 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.660832969 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.563722183 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.308942275 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.307675818 seconds)
  done (took 13.651893514 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.381823841 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.514837462 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.316373978 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.649292693 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.732909336 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.317048805 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.316144823 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.551256459 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.836300878 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.825169335 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.377018976 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.384897228 seconds)
  done (took 19.401022903 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.315826807 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.316380712 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.319046398 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.332432958 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.367878574 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.32096665 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.323153841 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.309864494 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.373960693 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.373420719 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.319920486 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.368919739 seconds)
  done (took 21.239563901 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.399950996 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.321845552 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.321534558 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333619933 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.320361577 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.321080413 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.32857581 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.999066452 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.326247947 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.595664572 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334028197 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.410182991 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.567560288 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336093018 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.325651081 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.274927473 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.550680263 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.790344345 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329937383 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330065824 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359797874 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.334880322 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.328167961 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.526087719 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.330067611 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.323428648 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.632068595 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.322932826 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.590396594 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.572235415 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.574376322 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.33210981 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.598434604 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957389719 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.433135914 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.519728204 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323686655 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.330719503 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.316413492 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.325285259 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.341782834 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.331804287 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.567344981 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3327152 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.325740311 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.328028716 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.021816089 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.333561197 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.325501783 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.326842471 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.568661927 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.413986384 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.329525831 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.325284491 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370471968 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325028079 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.332168759 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.445005311 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968172564 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3249516 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341373257 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.329834718 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.323815359 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350039064 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963466872 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.340503634 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.332745246 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.331885973 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326887443 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.326435041 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.369283547 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325869498 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.349763994 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326372932 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.069568807 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.333999703 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333712977 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.842573611 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330360253 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.327229889 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.552230572 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327415797 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327818117 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.327906823 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.327773203 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.038752482 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.336069032 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.295835087 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.367113779 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.009621852 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.525382231 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.356073762 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357940523 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.548774709 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.296417919 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330106586 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.336498242 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337594601 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349914067 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.022216674 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328979398 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.336516389 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.576208502 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.539478746 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329504914 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.290634507 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.792373779 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335367638 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.354498711 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.33495765 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.524649046 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.933710884 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.583289543 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340246703 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367972781 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.329489717 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.095759928 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338933519 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.33798372 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.341090818 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.61066144 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.124968239 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331632357 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.402785986 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.330409588 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.330905091 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.330052001 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356289307 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.331348595 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.504099551 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.346551857 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.57946302 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.338422922 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331257327 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.335166803 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331444148 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.340192538 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.551987128 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344303136 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.611395657 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331599261 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333076956 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332974576 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.549257294 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.333081933 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.346060532 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.672573013 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33526625 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.343430205 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.579634485 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373585588 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445965872 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363000918 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.332658458 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.584649379 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.337200761 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.339449835 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.347712035 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.340433385 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337635724 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.341586752 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326283679 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.938057885 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.316701152 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.34221273 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.333940415 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.348910956 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.407242088 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.340139248 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.531129855 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.350495425 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324183227 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.34718677 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.340686483 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.555132611 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.579636172 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.343231739 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.515314116 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.78684867 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.933738849 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.356226946 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.334860869 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.333174419 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.334230513 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336538667 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335750569 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.333649637 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.533399312 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.593925838 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.345409648 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.947790577 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344925009 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.343287078 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.34825757 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.579343674 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.350846396 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335775175 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.33557768 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347027248 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.343241992 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.581700263 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.56370275 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.352102976 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.336630245 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.855660831 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.343873871 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.337755223 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.336869474 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363635601 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.34727409 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.167241481 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.677767982 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.334300202 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.604105066 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.351898306 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.360260627 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.336883372 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336610958 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346687632 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.348522721 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366212496 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.535543887 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.345442235 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34599077 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979666156 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.093331261 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892151407 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.34851162 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.338348397 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.344950963 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.033226656 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338453202 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.338385852 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.580816221 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.028607331 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338159614 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.796126029 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.339059753 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.080749447 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.592652207 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.567759687 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.344013148 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.341164063 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.595275499 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.556710768 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364337027 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.342986764 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345179743 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.306811555 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.868360405 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.340995487 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.525531551 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.035867645 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339721439 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.348136692 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.398567816 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.340371828 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.723062543 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.344349444 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341378541 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.347402909 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.351595843 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.168758803 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.348146069 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.342495231 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97379401 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.352759021 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.812655659 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345202919 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.541210981 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.594599831 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.568588804 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.349965401 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.361114541 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.590534837 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.587363373 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349448876 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.349253759 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897819576 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.203606998 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.348946718 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341887676 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.111812881 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355984295 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.621794297 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.348949704 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.361299366 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3517217 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.342966865 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343324765 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.342912811 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.354394109 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.316351285 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.809717743 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.336474706 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353183385 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.352721403 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349700758 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.589054476 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.358943473 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.948010208 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.575057683 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.353714148 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384323416 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.34895885 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347647807 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.318250238 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.344467547 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.344622665 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385895385 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.562771021 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.343624386 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.312923354 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.347888909 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.553211932 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.345511899 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.351448232 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.559953836 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.350540807 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.35989444 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.12673985 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381857152 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.352312069 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35293671 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.334134946 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.388985981 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418722952 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.544902313 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.599415409 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.599637317 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.733913013 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358471224 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.354420071 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.362451919 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.428054959 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35691316 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.353597572 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.362036941 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.950894838 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.116316418 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.964632771 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.601998342 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.356386903 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357240961 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346294139 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.58755632 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.34725138 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.622922739 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346556758 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.340248116 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375670811 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353792171 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354189111 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.563751426 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.620794438 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.348024585 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346874073 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354923074 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.347658619 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.601883856 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.564390292 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.819279369 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.871601622 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351328494 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.348021331 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.056547388 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.625933953 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347966054 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.348757421 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349502168 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.349113036 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.390388728 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.356476763 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364533493 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.580687777 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.596835862 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993248961 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.600631425 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.538035326 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.350589455 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351190216 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.600398972 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.185971099 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.548593323 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.971231167 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.062511741 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.607139431 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.424075996 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.55028023 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.356470098 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.587692727 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.349227022 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.366970679 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.352796213 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351927791 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.349954807 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.599020628 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.970838717 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.610277981 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.356944703 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.349757506 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381902352 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.552615188 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.57697186 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.066126536 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.571635797 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.607470908 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.363029999 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.351405132 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.967860813 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.609121964 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358049666 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.35878319 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.565778379 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.358249132 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.388603084 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.231591129 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.35176743 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.876132703 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.564237309 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373144898 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355369493 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.065129107 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.972077049 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.360311675 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824995936 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.355830012 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35501813 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.634233686 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.35879699 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.36275108 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.63755774 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.357945541 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.353359787 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.560553929 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.961078781 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.106861466 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.355070321 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379324184 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.361401526 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355281428 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348933637 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353896826 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.364094205 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.735692603 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.361221848 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353467722 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.366841449 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.364986541 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36180892 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.358576764 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353835615 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.363202888 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.357715388 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.324154249 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.359363766 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.477260574 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.887603627 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356637295 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.970197501 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.691688572 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.599995029 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.354979927 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.326167682 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.361081832 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353837951 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353599019 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353452939 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.349348688 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.882187894 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.355958377 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.608773332 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.367906996 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.563928166 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.565078616 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.355706202 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.55998223 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360888037 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.394542418 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.322346991 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354735943 seconds)
  done (took 963.906306779 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.344687347 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.34748309 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.355806837 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.405367645 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.350793999 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.349977504 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.353362133 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.412660357 seconds)
  done (took 20.147657469 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.345545266 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.353134091 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.345493676 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.358607031 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.353571683 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.812548209 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.353230365 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.355420964 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.368635336 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.346290163 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.360515524 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.958886643 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.354695747 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.355839943 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.351724062 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.361214699 seconds)
  done (took 31.963792109 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.996771984 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.692849849 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.772914874 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.366686243 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.367911456 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.346450386 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.451738141 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.36634053 seconds)
  done (took 25.590884749 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.35775333 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.358995435 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.359623742 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.35993775 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.359914363 seconds)
  done (took 8.024457356 seconds)
done (took 1222.793007391 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.360260932 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.360146985 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.361026162 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.361246486 seconds)
  done (took 6.670899645 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.32662145 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.32863487 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.328903266 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.341147155 seconds)
  done (took 9.553166492 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.005814119 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.855619066 seconds)
  done (took 5.090237468 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.894372469 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.891592506 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.888464541 seconds)
  done (took 6.903724712 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.624319094 seconds)
  done (took 2.854188517 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.335565258 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.353372387 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.08264208 seconds)
  done (took 8.000979963 seconds)
done (took 40.300851572 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.346490573 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.107815994 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.502599893 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.348420109 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.506411656 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.501898244 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.598959274 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.346542376 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.354059572 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.36693103 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.348279241 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.50570303 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.585944364 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.110435402 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.585691537 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.110848408 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.507143185 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.356051142 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.346299884 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.347570198 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.609293331 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.348647367 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.361764504 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.354798883 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.512791108 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.491203075 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.3484511 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.109500798 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.348197754 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.347842708 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.492675125 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.348592211 seconds)
  done (took 81.687975622 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.350338396 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.352192107 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.357491448 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.36180832 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.348577835 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.371730742 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.349338181 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.348467722 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.348610272 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.349122011 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.350229005 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.364256209 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.349323601 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.350407771 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.366737084 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.36253369 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.360457043 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.349889005 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.36239437 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.349319181 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.353071987 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.349792831 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.355734936 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.34817788 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.351660347 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.351572448 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.368885867 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.350886283 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.35265017 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.364495956 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.355399828 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.369866392 seconds)
  done (took 76.60690406 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.363099646 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.361968857 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.352241188 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.35256566 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.36671779 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.372935651 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.352092931 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.357362016 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.351816211 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.370661539 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.368134793 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.352109367 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.356902342 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.367937865 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.368851584 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.368110316 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.367007923 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.359303314 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.368054569 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.352317982 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.368256895 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.35796833 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.351450106 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.358452318 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.357183366 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.352257775 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.361360637 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.353425444 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.362024786 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.351466534 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.369423424 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.354141737 seconds)
  done (took 76.761084881 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.59267838 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.366380841 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.371099468 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.363022127 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.370759047 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.367685839 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.364162582 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.643881961 seconds)
  done (took 14.673966076 seconds)
done (took 250.961380229 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.371100948 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.83781581 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.389733256 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.362924407 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.38671328 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.38995811 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.576380996 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.389523107 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.578545915 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.389316991 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.377590957 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.365095419 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.127611133 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.517374758 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.161072748 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.27803983 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.199699154 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.358923763 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.901199771 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.641106436 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.391204835 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.355938332 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.162006537 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.21676487 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.33966254 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.46074328 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.453348437 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.579580442 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.519245268 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.437642563 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.843705494 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.372142532 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.372360899 seconds)
  done (took 63.340630264 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.362555888 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.371243822 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.37077586 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.371410901 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.37122945 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.371948654 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.36196713 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.371922033 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.371683375 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.371657909 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.371009464 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.371831687 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.371818353 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.371867072 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.372495726 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.344579703 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.362606736 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.372312042 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.362011182 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.344905795 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.373588712 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.372739509 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.372794121 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.371930458 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.372387395 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.372458168 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.373377421 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.374400259 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.373925594 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.372998754 seconds)
  done (took 42.313583194 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.373741559 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.917326186 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.074301474 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.376410778 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.364873506 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.371040453 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.637705135 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.382635248 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.368582979 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.369268539 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.82349444 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.380872519 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.399320115 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.078604336 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.37378534 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.374895727 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.375562777 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.366532743 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.933405079 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.381279188 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.637197549 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.381153084 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.639070495 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.381831846 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.369982466 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.366930958 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.372368666 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.142298584 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.386688718 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.824227253 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.097288458 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.637413054 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.080103954 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.135868566 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.094987881 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.385216027 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.376528124 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.827936595 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.369986482 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.369047134 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.635581647 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.37370497 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.084974443 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.048621818 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.390610139 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.375359442 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.176500156 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.831911277 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.601982525 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.378307431 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.116463344 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.376583511 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.378633173 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.369169716 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.596504925 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.378068978 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.368767024 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.193863233 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.378318927 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.636702894 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.383791 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.369164858 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.925802464 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.376066737 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.927249531 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.376631854 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.377589337 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.37098611 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.090156633 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.378477206 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.060445425 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.39193041 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.378551279 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.829071064 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.929604117 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.232476578 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.37695788 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.931196683 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.120484705 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.659048422 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.379489409 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.130189472 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.662963126 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.380942949 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.383386849 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.382288353 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.379964073 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.443212255 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.63566958 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.989398808 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.065529233 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.21200191 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.647225413 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.387188704 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.370161126 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.197174915 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.383131369 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.376893976 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.081921771 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.068613892 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.384157054 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.371320583 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.043815146 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.389214751 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.636560928 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.372901376 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.112805149 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.370509771 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.434789283 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.37239532 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.370642206 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.368101796 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.63474691 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.371798226 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.374121825 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.038483975 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.853559132 seconds)
  done (took 191.077340922 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.358153326 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.357616275 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.359206032 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.359456609 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.357871581 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.364827081 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.358431168 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.359957681 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.363915896 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.358174089 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.355891215 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.364891272 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.360806302 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.355093361 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.356667859 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.351369921 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.350615541 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.35722663 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.351076719 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.351341743 seconds)
  done (took 44.392275417 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.363650821 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.881467145 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.847547666 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.370002645 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.363895023 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.355354873 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.409166076 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.370318077 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.365172734 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.636736009 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.516517647 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.370752662 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.363884155 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.365714025 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.850558617 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.34227822 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.637362714 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.88133822 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.366510783 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.882676199 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.342236576 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.365144149 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.356000821 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.881310357 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.649362816 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.623670057 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.416287102 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.890672242 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.369740171 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.36689612 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.879530125 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.367980731 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.358490847 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.870794137 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.371286989 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.379233255 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.367547886 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.412486516 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.417353071 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.645965505 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.897348603 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.640337471 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.38332499 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.517437231 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.383419006 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.349036588 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.908600199 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.381947528 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.347595545 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.377447895 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.382127772 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.873846819 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.373669159 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.874265797 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.383791514 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.3765506 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.896189317 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.878020693 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.868059789 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.533424863 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.372889344 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.634811368 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.384517162 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.909742593 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.383194246 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.378965336 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.377351959 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.530114549 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.905619486 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.64145025 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.659280391 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.658493911 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.383671457 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.432398133 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.385263028 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.653216122 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.437177809 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.760773681 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.660959076 seconds)
  done (took 123.284693271 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.62887031 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.483637084 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.740657769 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.928583126 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.8524734 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.503767013 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.483671177 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.61059722 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.381117575 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.482417445 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.992460986 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.464414903 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.107358969 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.439082339 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.480600675 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.499083719 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.755286929 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.317015619 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 1.979841793 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.969509386 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.387118198 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.467919131 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.894647243 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.579187832 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.378605142 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.90941953 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.261244709 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.872678944 seconds)
  done (took 52.096239726 seconds)
done (took 517.739849026 seconds)
SAVING RESULT...
DONE!
