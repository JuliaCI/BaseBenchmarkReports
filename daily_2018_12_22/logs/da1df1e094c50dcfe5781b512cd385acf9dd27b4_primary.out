cset: moving following pidspec: 14002
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.345532991 seconds)
loading group "string"... done (took 0.560840814 seconds)
loading group "linalg"... done (took 7.699499876 seconds)
loading group "parallel"... done (took 0.178788461 seconds)
loading group "find"... done (took 1.198263762 seconds)
loading group "tuple"... done (took 1.873428938 seconds)
loading group "dates"... done (took 1.278323421 seconds)
loading group "micro"... done (took 0.236883493 seconds)
loading group "io"... done (took 1.033164624 seconds)
loading group "scalar"... done (took 41.811880577 seconds)
loading group "sparse"... done (took 13.775125661 seconds)
loading group "broadcast"... done (took 1.048082213 seconds)
loading group "union"... done (took 14.436309879 seconds)
loading group "simd"... done (took 4.840944024 seconds)
loading group "random"... done (took 9.806181929 seconds)
loading group "problem"... done (took 2.014731748 seconds)
loading group "array"... done (took 22.951745719 seconds)
loading group "misc"... done (took 2.105999013 seconds)
loading group "sort"... done (took 3.489165335 seconds)
loading group "collection"... done (took 19.870114572 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.578929197 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.144796477 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.151134346 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.130505684 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.209097331 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.158623824 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.160173343 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.098728896 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.029585167 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.177456348 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.154827707 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.532801376 seconds)
done (took 5.354381478 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.23557238 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.093786878 seconds)
    (2/2) benchmarking "String"...
    done (took 0.105519306 seconds)
  done (took 0.972638986 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.077861996 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.145972478 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.095589782 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078362759 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.096609516 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077945759 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.096028593 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.076786422 seconds)
  done (took 1.445059541 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.087327582 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.099108312 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.082253097 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.098004449 seconds)
  done (took 1.145001779 seconds)
done (took 4.659810425 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.743364161 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.277758985 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.204506074 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.468326299 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.19817002 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.219033842 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.677315033 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.336734851 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.25520158 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.101050873 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.145088512 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.390292963 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.138742496 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.681245092 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.090061162 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.127044728 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.179599874 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.440302322 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082805456 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.110974435 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.118979638 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142508668 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.13161805 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.091388605 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.186178475 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081434812 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.19627751 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.109913178 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080263589 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.27848804 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.202941438 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.689841418 seconds)
  done (took 10.995020991 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.114357218 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.135697308 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.099237223 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139040126 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.136049067 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.100869492 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084097368 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.098511523 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.123133281 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.179092789 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.133648763 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.120980302 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.096103468 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082088124 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.11651819 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.24646698 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.121761804 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.099649908 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.101800402 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.088428154 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.138924631 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.11487304 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.110603379 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093573966 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167681494 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.224309394 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110987073 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.127178951 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.098568509 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.113336859 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144343804 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.145016708 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095565655 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080879091 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.175135757 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.125228914 seconds)
  done (took 5.277656716 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.097906703 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.192469364 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.123212718 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.171663935 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.08102891 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.144789983 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.095765444 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114598469 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.259488269 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.111127543 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.493229556 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.143438646 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099287059 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099390102 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082480969 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.098708398 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.620301386 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.156255048 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.118229785 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.119546972 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102659776 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083715051 seconds)
    (22/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.130344423 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.080704619 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.09911672 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099074421 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.108829238 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.322342021 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.163375684 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079729471 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.163076863 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.100650056 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102112539 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132859985 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.201357213 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.129629456 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.11710714 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098441565 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.077978409 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.192632402 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.088300605 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.097529601 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.102780344 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136555866 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.135396972 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.09812844 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.080591415 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.220375332 seconds)
    (48/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.106474807 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.097517922 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.09603577 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.961847774 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.181475904 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.089917781 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.096810952 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.286781825 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.121881703 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097628695 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.077820331 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.282435565 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.189555309 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.099616908 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079748062 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098218329 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.081737012 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.399295788 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081327238 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.709827796 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085096798 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.108839395 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.08332731 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097934914 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104728776 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087637805 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.11605594 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079009301 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.100811477 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.079288292 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.097695506 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.0811755 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.095957274 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.106724383 seconds)
    (82/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.078156606 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.214322054 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.100032278 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.078603646 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.096837326 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.115183217 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111538619 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.100376775 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.095368555 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117830284 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100861888 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.097419826 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.116344614 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100696506 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.107228585 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083377189 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.144094149 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.097865907 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.144233828 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.096500223 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.1241932 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100528371 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113949293 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.112690382 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099942959 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.16984455 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.078793752 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.098717823 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.081392919 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.09989144 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.082452269 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.103507849 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.112396245 seconds)
  done (took 22.937980732 seconds)
done (took 41.085146675 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.325583946 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.105244852 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.10626267 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.105327343 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.104563628 seconds)
  done (took 1.601930987 seconds)
done (took 2.428187077 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.291794186 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.176396321 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096958124 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.168272861 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093834261 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.165932112 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.160249597 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.094385504 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.222110984 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.095733859 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.163823852 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076702117 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.09578134 seconds)
  done (took 2.753696528 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095516465 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116338648 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082685 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111668537 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077177383 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112807204 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093472456 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118294866 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110704399 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085513182 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094098891 seconds)
  done (took 1.922824649 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094561424 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11474084 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.0824973 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111561381 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077084485 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112077651 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092376 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.12037425 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110586977 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086807668 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094891252 seconds)
  done (took 1.919385849 seconds)
done (took 7.411253001 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.091587016 seconds)
  done (took 0.910353409 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.955326823 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.033328768 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.11519954 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.150993825 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.316621109 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.17509253 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.48167328 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.125575473 seconds)
  done (took 11.383328708 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.14793301 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.085224259 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.102516199 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.08437806 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.103549502 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.082590381 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.105159195 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.104137633 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.086111951 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.101024335 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.085404652 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.103811966 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.099910101 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.087068173 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.101485072 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.086274363 seconds)
  done (took 2.452347562 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.119451866 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.11851702 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.110509762 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.109794696 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086503649 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.108121437 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.108268895 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.089332133 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.105633508 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.105351559 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090618412 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.108147284 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.105376461 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.08038559 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.108758372 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.109069382 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086643292 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.109034211 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.108927128 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090458852 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.108541237 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096803195 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087687014 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.108675509 seconds)
  done (took 3.39714427 seconds)
done (took 18.966065664 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.162771884 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.110472013 seconds)
  done (took 1.10121582 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.097302842 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.114722019 seconds)
  done (took 1.043890052 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.099274238 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.097746373 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.124448135 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.110916256 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.08041029 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.098874603 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.121726399 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.080723465 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.098433305 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.079927208 seconds)
  done (took 1.828432255 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.084205123 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.112512624 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.102509349 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095831131 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.107414641 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095715499 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.089082485 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.10131397 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.110979129 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078570223 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.103911328 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.115527031 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.086402944 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.118269626 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.107652842 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083211088 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.105269722 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.10070949 seconds)
  done (took 2.636586542 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.081926667 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.099241529 seconds)
  done (took 1.017217505 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082739655 seconds)
    (2/7) benchmarking "second"...
    done (took 0.095329572 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081993539 seconds)
    (4/7) benchmarking "year"...
    done (took 0.100127475 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.095928717 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077816081 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.09674933 seconds)
  done (took 1.465831701 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.490104269 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.137211999 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.262739539 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.103210636 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.104097131 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.305721004 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.100534073 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.083962685 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.10551533 seconds)
  done (took 2.588799815 seconds)
done (took 12.514048781 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.094321085 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.117226978 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.11276801 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.473925911 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.108086995 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.10091148 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.148065445 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.256286923 seconds)
done (took 2.254580392 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.14484167 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.610006148 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.432791212 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.234663596 seconds)
  done (took 2.119919069 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.409400555 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.099970283 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.085213397 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.082016848 seconds)
  done (took 1.522045656 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.08122156 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101455245 seconds)
  done (took 1.027448599 seconds)
done (took 5.661023008 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082834361 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.131313603 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.079676712 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.099423776 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.079679631 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.098678956 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.078927621 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.101107597 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.079662737 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.099241745 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.096976504 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081184051 seconds)
    (13/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.095974581 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078948847 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094958631 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081299159 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.095337935 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079049512 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.098716616 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078715076 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097735803 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.078283049 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.096101625 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.080770485 seconds)
  done (took 3.044186417 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.101738852 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.100628213 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.105227175 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.087375687 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.104578794 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.085867971 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.105365539 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.098797608 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086620523 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.103677549 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102613391 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.087373262 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.101629732 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.08563004 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10194584 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.103212189 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087907276 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100876962 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082998757 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.104586806 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.104003807 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082308436 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.104387029 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105409368 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.086843411 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103338348 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082886812 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.101867605 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104324251 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085840582 seconds)
  done (took 3.748800938 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.087297658 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.095990066 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079906492 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.103559753 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.079264357 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.098871096 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.079370843 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.098177268 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079645652 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.097344517 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080269787 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.097425087 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078465644 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.099266444 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.078961896 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.101816572 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.113912163 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.07939775 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.097132921 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.07998519 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.100327306 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078826888 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.096984674 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079003936 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.097042911 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078046314 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.098063692 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.079014875 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.097918179 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.078497825 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.100898524 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081751528 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.097825109 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.083807877 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.10150551 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077147817 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.101013017 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.077138835 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.098409491 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.094721821 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.080007586 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.096950535 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.07958113 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.102512567 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.07913245 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.099215476 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078466087 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.099186302 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078430965 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.100980485 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077714222 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.097396476 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079420224 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.099405717 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.081639446 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.097552107 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.096327412 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.078442709 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.097731894 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.080136335 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.095754945 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078324923 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.09845608 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.079989294 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.112812756 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.085832898 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.097305075 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.080059002 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.098957403 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080342152 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.09945563 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.110366952 seconds)
  done (took 7.354381892 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.104715557 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.127518121 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.100468335 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098271905 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078238758 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.097429578 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.083074625 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097944889 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081237061 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.104447005 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097102928 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080994841 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099275421 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095018752 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098147928 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.081185632 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.105180479 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094121577 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079814168 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100505059 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080411285 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.101423831 seconds)
  done (took 2.937462881 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.212324975 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.10735696 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.144552756 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.108386676 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083526885 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.108051449 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.103879374 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087681428 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103819284 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083282765 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102726039 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.212023074 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083299956 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10263734 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101071755 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085336688 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104024297 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084919441 seconds)
  done (took 2.872267387 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093875775 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.100695792 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.098057909 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.101454036 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.099685118 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084553853 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106388568 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108489834 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084640471 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.100381271 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090824189 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103749237 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.101531298 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083380718 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102412464 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082506822 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.103070462 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082380725 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110132145 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106386275 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087467889 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111128371 seconds)
  done (took 2.9997447 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098006071 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103137707 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.120270708 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086258629 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.096856349 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080920582 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.108253337 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080757084 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.109919363 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.101941991 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082136886 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.098300774 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.088205142 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.100355266 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.106418326 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082604955 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101863831 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082062974 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102677832 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077798413 seconds)
  done (took 2.76688496 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10282287 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102297459 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100839046 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093365167 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102330193 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082527234 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111214201 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.101303864 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081856777 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127085026 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102916876 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082493115 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111592103 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109462231 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.100886659 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093022156 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111331312 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110871035 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.083164692 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101837805 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.126759354 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082837441 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.112169095 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101949106 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082863664 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101971541 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102207529 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089904036 seconds)
  done (took 3.674052626 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082126759 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099708499 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082327261 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.097612066 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.079737963 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.097258435 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.079482923 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.096981681 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082018173 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097892258 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082171857 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.099662821 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082198459 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.101353766 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081720184 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.100363949 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081367221 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.097910926 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079082358 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09759235 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.081212261 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101097173 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081352714 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.098651115 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078845767 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.100903282 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078214836 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098907031 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080546644 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098081543 seconds)
  done (took 3.558638975 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.091956107 seconds)
    (2/2) benchmarking "in"...
    done (took 0.108168185 seconds)
  done (took 1.060878198 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.080714771 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116437938 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078902418 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.106167094 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085670283 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.103561001 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108617911 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086368177 seconds)
  done (took 1.628647868 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.098237009 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.112576031 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083941726 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.115717655 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.11118748 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.098259586 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.171910826 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.103185452 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.106115797 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.081374859 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.114140153 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081168475 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.106900586 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082464892 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.107559495 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087792147 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.099543506 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.107060449 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.085379576 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.099663991 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086284526 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111629087 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083576524 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.098818595 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.102005813 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092870692 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.115061742 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.08275034 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105821118 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.107964807 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088395709 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.095494256 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082541642 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.102542596 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079736381 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.111290189 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.1181374 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085099363 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.111154213 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10197632 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.094798234 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.096966443 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086101872 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.107400149 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110159008 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.083600848 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.102474958 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.078103863 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.098833667 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084790625 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.097257149 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082385522 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.097096197 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089023177 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.105930989 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112728928 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.081522279 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.103444452 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.084580136 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.105984271 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088508721 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.104355817 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.1033963 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.082671106 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108619802 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.086545417 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112798779 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.095343745 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.077192204 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.100235211 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.093197806 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.125792427 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.107339243 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.084528885 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102782706 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.080300992 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105148369 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084316058 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10855155 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.10745025 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.083119599 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109585325 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089621419 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.1026364 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.103239219 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.092407928 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.099963572 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.083880077 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.099884277 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118617052 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.082282877 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.099774851 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.08061192 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.113083918 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085821679 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.101825857 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079406003 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110262402 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.095469644 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.084521819 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102779614 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084011843 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.114493005 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107019816 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089341652 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.111414631 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.107418462 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083818915 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.104389734 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.079570882 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103202991 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.085590303 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.109989427 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.076848598 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10559714 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.081909902 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.103606836 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.110198931 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.0811191 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.102667076 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089557047 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.108259534 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.0988174 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.079710067 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.103719923 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.083540788 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105458206 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.090300183 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.101374038 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.076423957 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.097880172 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.104165322 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.082830701 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.105266545 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087728453 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105395631 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.076668968 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.101318439 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.105566007 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092081962 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.102307507 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.083322929 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.108946923 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.102113734 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.083008459 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.109001967 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.085493479 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.101031561 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.087950745 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.103843871 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.076606327 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107508911 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.10390984 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.081430269 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.106310627 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086188285 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.104880011 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.10107673 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.0826938 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.107525571 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.083792666 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.101637603 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082959603 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.101170246 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.112163472 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.085504916 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.096657459 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.081268533 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.109961059 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.079918085 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.10246809 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.081066192 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.105215931 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.102711682 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.081474724 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.101716076 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.084739025 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.114475721 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105791986 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.0854071 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.108017825 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.094786122 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.103265783 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.084682421 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.103120754 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102942317 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.083922412 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.112027724 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.08907746 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.109051562 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.103810882 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.0801074 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108606115 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090876544 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.102388874 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.079905007 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.102232275 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.105026536 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.089651203 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.106862132 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.083777956 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100969464 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082291729 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106871416 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.104590484 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.083183248 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.101079178 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.087853269 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.102408609 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.109166407 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085198954 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.113831919 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085940814 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.098634417 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086797645 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101200127 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.107306701 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.078814157 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.099336483 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.082241294 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.104571513 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.081598173 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.106040561 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.076037213 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110834221 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110003155 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.083596417 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.100406246 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.083262196 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109268501 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.084379385 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10640299 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.085543474 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.109618285 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113158477 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.082135925 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.106298406 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.093024046 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.103430284 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.095386255 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.08913669 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.100747573 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.082829158 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.101082368 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.080832655 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106159477 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.111912386 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.090509814 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.096280732 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.086000374 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.1010756 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.081131011 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.099496624 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.087660563 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.107470347 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.102584697 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090356495 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103990996 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.086495959 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106733232 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.082753117 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.104651318 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.103557084 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086705543 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.104133212 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.085309923 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.102484258 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.086355095 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.102290375 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080214704 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.105515558 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.101800135 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.084008411 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108139542 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.082975195 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103576245 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.085904858 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.104588369 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102734711 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.084475293 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.101013572 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086526802 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10350509 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.082893343 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.106529572 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.078240419 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.11192607 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.082439829 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111112337 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.102931122 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.079892919 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.108588957 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.08545582 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.110363763 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.103344521 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.085181983 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.104332137 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.082975194 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.106328605 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089854543 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.101181846 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.112990518 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092040216 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103991711 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.085233107 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.103447619 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.084507999 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.102887204 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.102532054 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.085145604 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.103526038 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.083861921 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.107627265 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.085761244 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.103947158 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084064628 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.105002774 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.101557004 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.085206198 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.097243083 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.08265972 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.102798544 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.083222328 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.114613236 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.102753539 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.086599868 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.100980791 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085677827 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.102155096 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.079749158 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.112690241 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.111832653 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.084220791 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110786985 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.081999922 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.105696114 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113550096 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.077815316 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.100869098 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.082000925 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.100703814 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09160389 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.104218448 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.100072163 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.104666497 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.10170016 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.081596451 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.104035041 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.082844928 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.098523991 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.081159311 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.107518611 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.085353902 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102649343 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.083189275 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.10711996 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104009009 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094126149 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.103299903 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.083084427 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.105157134 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.079654745 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.104182532 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.101620831 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.087213983 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.104330381 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.081656522 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.100624097 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.083380307 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.104525995 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.084135755 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.104046696 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.083842732 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111253897 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102547042 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.08674438 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106924404 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.078413532 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.106948856 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.082636129 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.103508241 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.101095649 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.087910345 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10735477 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084639751 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.113348499 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.082858563 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105330841 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103028346 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.081873367 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.103126047 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.083361918 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.104469685 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.08271439 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.105602194 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09115502 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.102398771 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.106806745 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083437995 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.102941906 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.09047891 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.105220936 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.086027704 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.112790053 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.106177439 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.085138847 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.112186701 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.087259961 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108784177 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104605216 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.085021879 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110481526 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.082590837 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.11137222 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.084096557 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.10587108 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.104325942 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.082878959 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103535806 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.084009363 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102903629 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.090218342 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.105327296 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.08279863 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.103685711 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.080470872 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.105749979 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107852302 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091586871 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.107815812 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086036212 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.100047383 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.079815724 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106637672 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.100455341 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.086672706 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.106880798 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089370952 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.106791283 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.082971116 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.103604193 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.11296285 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.08979473 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.10759987 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.081802432 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.108151256 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.084681608 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.106294971 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.103667755 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.084907736 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105369574 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.087450323 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.106061364 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.082695785 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111941952 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.086161624 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105983605 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.105189434 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.084948083 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.10450798 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.07910924 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.105334445 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.085253051 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110349018 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.104806843 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085586388 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115342392 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.082929576 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.104248347 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088040528 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103851225 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.108663456 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.080349885 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.105215816 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085288487 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105432804 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.078743938 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.10420934 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.080921768 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.106848105 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.082573946 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.100021209 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114382085 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.093572231 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.107423513 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082684558 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103411569 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.07869208 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.100570039 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.102278766 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086443863 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.105020455 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.094303898 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.104081731 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.081969416 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.099837476 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083626665 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108211533 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.10701875 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.081540335 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.098728797 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.082909013 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.107587899 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.089030828 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10330114 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.08239394 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109219363 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.105471617 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.082689053 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107508599 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.081500301 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.108243105 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116635669 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.086349637 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104565415 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.090922199 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112735317 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.084077048 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.10032253 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.103684867 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.087595616 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.10360178 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.084795925 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.106001579 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120306361 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087994872 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.10271904 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.082933448 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.1063326 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.08361218 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.114488555 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103828933 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.086126727 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.108719343 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.086080451 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.113957357 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085663268 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114489221 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.107646267 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.087264752 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.103361041 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083674319 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.103466264 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.082248678 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.106956851 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.104895978 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089912358 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.113106971 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.082834607 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116285807 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.113660111 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.089008008 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.101472022 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.082824262 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.10455946 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.07867099 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.108211578 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.081372786 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.103383787 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.101128257 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.084917291 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.104577401 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090123138 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.105401863 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084448407 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.104912297 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.077542577 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.1076459 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.0855707 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10583407 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.100877408 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.084675817 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.105268524 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.088700953 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10959343 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.084514616 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.106818431 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.084394584 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10681242 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098780219 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.092159464 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103813616 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.08709733 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.103924543 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084438729 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.105897582 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087502551 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110990432 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105493846 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086347917 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.117521414 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086158472 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.104048864 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.100537395 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.090579528 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.103455407 seconds)
  done (took 58.560996085 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.148496574 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080961394 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099909176 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080353354 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114114133 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100014431 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080543827 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100416157 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081355129 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.104357704 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078721399 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100957154 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.10968177 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.1276091 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093939513 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10691216 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078397515 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102342279 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099648533 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081863487 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111121524 seconds)
  done (took 2.995744963 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.10628218 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.122785612 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.11734344 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.120346578 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090549703 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.1173442 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.117141376 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116177589 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.09932292 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113396945 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.120970205 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116656745 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.092001891 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.113580203 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112508897 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094301364 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.120052738 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110671656 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.116303222 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095489181 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.115231467 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.115599809 seconds)
  done (took 3.358257295 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.085495421 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.103236727 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.0854088 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.099410798 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083334039 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.099499595 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.087460676 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.103131172 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086579684 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.103835418 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081529417 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.103791232 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.10476009 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.079862218 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.103149049 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.082237848 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.154308297 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.108929548 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082706785 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.106262052 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.078435088 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.10775979 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.099478403 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.080038021 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.103318368 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.088706473 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.106714604 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081968274 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.105368909 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.081777499 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.106001106 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.080960418 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.107101238 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.104315357 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.084175812 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.102491973 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.084914042 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.104695996 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079967071 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.102573645 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084521708 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.100758395 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.085175385 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.10688484 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081286219 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.103524769 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084621635 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.1059253 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.098378765 seconds)
  done (took 5.6034642 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.104851194 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.162360261 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086509151 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.145339146 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.122240841 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.113381246 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087793467 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.143904641 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.104169326 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082607645 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.124795853 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.121129355 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105232823 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.088971422 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.108958523 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104502379 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086902056 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.104131963 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.088361661 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.105552462 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.110749687 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090672386 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.121077716 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.119661094 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108379808 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083801384 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105189881 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108727872 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.099264583 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.11144485 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.109371427 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090952101 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.122652011 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.111741562 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083382716 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.108440187 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.122997775 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.083085795 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.108132689 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.102025852 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086955157 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109961661 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.111074767 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.102155025 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.107306896 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.11011143 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084492887 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.102419129 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.118514796 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.087876476 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.114215468 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.120962697 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.087500617 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.106477346 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.110560977 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.120443325 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.084861095 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.103223531 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.088016383 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.119049002 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.103723147 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088079334 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.121218123 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.107200957 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.092088104 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.120647907 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.111085989 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108928134 seconds)
  done (took 8.2815012 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.095147563 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.112646577 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122706096 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121596339 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09208477 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.113081829 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112371513 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090464021 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112668971 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117423285 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111031882 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.135151996 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.08729625 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115566248 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.112020523 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090973522 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113024749 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112712709 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090397002 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112745107 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.112663629 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.121091132 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090677973 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.121585898 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.14299127 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.107289483 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090414314 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.112958133 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121685505 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.11195181 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124154909 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.092632591 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.113590218 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.120924204 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.124863885 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090294393 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104913262 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.111476317 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.093096022 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.11303689 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.10688448 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10102124 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112840753 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.107598342 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.092128697 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.113105513 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.121832418 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.12611708 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115327831 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097849442 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.113614025 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121710575 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112372057 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091650289 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.122565795 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.149115863 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121846653 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.122306056 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112226733 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.10150129 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.122089919 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.130125318 seconds)
  done (took 7.833290661 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108390052 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.116947164 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.119081228 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.100925169 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08464217 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.110837677 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082588167 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.104322376 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.114734697 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095664006 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118455813 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.110754126 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09336121 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118903447 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.111020862 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113001024 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088543188 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.111403867 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.115717982 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087915838 seconds)
  done (took 3.034676478 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.094567825 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.126623551 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085103171 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.113998136 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.110485012 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091333674 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.109512163 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108618667 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086866622 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10961386 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096640321 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.118030569 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107370784 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092329091 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.11838736 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.113528378 seconds)
  done (took 2.61516289 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.101085638 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118992498 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.12266956 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.0845443 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.106683515 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080516925 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.108185487 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.102377532 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.0819371 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.122865187 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.08465408 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.110853016 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.106021739 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083842587 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.102566185 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087924742 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.103312262 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082396143 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.107722167 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.121108546 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.09659058 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.106374879 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.106811256 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.088093 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.107041368 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090380172 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.108748253 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.104272815 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.084583673 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.107173939 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085177678 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.114855526 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.10241221 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.08407408 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.104615909 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083630651 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.106928681 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085662516 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.110310507 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.105934338 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084763887 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.106387208 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085242065 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.108099709 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080730431 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.108267191 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101446983 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.092386873 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.104966387 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085488451 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.107148646 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.086361207 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.108793726 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.117352582 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088784336 seconds)
  done (took 6.401172538 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100410564 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110740825 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080643197 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.10544461 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087891219 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.109989164 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.110214509 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089780378 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107870764 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083296954 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108937594 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089279394 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109973312 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10982887 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.089169984 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110714492 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081203874 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109473303 seconds)
  done (took 2.732443054 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.09206675 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.1074023 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094090359 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.10774416 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085006545 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110759187 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081303201 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.106855235 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104067093 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087020438 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106616117 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088816989 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105911842 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087732455 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108108844 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08461165 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.110260977 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10460447 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086938182 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102461467 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088757867 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105385202 seconds)
  done (took 3.093036041 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.119651311 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.128237661 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092395621 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.234225089 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.104291396 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.13499363 seconds)
  done (took 1.751094684 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110731237 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122298693 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107813018 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108435123 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117192728 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086929573 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109404951 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109486782 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119538802 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102466385 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109668326 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119492738 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119108835 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096933474 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116864916 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116823386 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108124702 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088825845 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108936779 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129539349 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088315665 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119487926 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109753763 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087286078 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109688034 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118132176 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118588273 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122860024 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088126808 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11913901 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114713545 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088151343 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12062945 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124509832 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110602162 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098547177 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111558336 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129633889 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116193955 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097301854 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.111818224 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116428057 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097654825 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115327363 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11978517 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108707307 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09467675 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110194323 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10920694 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136436281 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095288734 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119120345 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116029276 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120166394 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096766013 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.156639791 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103340618 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119637332 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116905985 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123767909 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117629056 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094648378 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118853088 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12499245 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117065358 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096555741 seconds)
  done (took 8.299640581 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103129542 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127774394 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109906895 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123867791 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098572913 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109678261 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109245084 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088659231 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110680157 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107342999 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.153634635 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089725458 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119737683 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119319436 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08752018 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110412293 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109524287 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118992677 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087261702 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137721212 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110527185 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118815902 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119355106 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097413463 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123411661 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11731552 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109162493 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088461062 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110527469 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108541525 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094771934 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1110994 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118292496 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.08716348 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120018424 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110056124 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087405059 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116042277 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111186487 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115908172 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098733263 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130243721 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110068222 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108826341 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102271979 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110510713 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109862419 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086949936 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111194021 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109289523 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102877027 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125513563 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124892632 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120110338 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109908158 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089353666 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110403611 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109997358 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089623743 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117426442 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119067491 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087866844 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136090044 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111586421 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109936603 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118539375 seconds)
  done (took 8.207134572 seconds)
done (took 159.254999553 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.228943302 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.204241996 seconds)
  done (took 1.373904141 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.08864971 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.138470665 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095798261 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.170760445 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.085910768 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.143534044 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.139821641 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.098435986 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.108868155 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086039998 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.10949259 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087693499 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.174051889 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.086294388 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.109224774 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108521526 seconds)
  done (took 2.77894532 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.12046744 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.255935318 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.126743423 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.106732047 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.090899405 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.111428233 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084047842 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.113905538 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.090234013 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.107772937 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.089175445 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.109351616 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.084106549 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.109294611 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110758143 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.089827393 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106059742 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.089064927 seconds)
  done (took 2.942811523 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.114919051 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.151384521 seconds)
  done (took 1.220334042 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.246349333 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.16479948 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.233761669 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.481992247 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.281006877 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.36942169 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.207474076 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.217677745 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.165893873 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.214827607 seconds)
  done (took 3.529951007 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.12009442 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.182232346 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.320041646 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.158154914 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.107158253 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.132169945 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.159444062 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.132234783 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.123365253 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.101200411 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.123988149 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.119889667 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.13902771 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.095437087 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.116670551 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.118962256 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.121408172 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.116851566 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115594983 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.096761609 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.140102597 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.085033775 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.117964917 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.115289014 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.097336789 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.121740688 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.107651974 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.085553859 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.11749708 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.093451676 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.115931509 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.12743739 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.119869938 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.156752174 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.124281479 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.158332796 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.119058637 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.0923848 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.117102922 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090826332 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.120892287 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.120198641 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.126102259 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.098443033 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.107805266 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.097020665 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.108437613 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085331964 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.117582362 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.120477848 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.093463622 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.115571649 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.155518881 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.120763489 seconds)
  done (took 7.544731808 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.786331808 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.157048242 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090233689 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.878851985 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.135792619 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103488485 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.770600716 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111173516 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.254018621 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.748900592 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133609282 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.119498316 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.205887606 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.260136907 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.99801092 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.292297113 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.637151282 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.12751776 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.152741712 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.154159003 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118758424 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114635227 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.132760816 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.427956604 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.117720432 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090026012 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118759767 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.120710493 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.160795997 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.125443997 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.091722511 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.201446127 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.249671814 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.20407383 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.094758364 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.113753566 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.089010317 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.192681354 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265814734 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.194361316 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.181113905 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10933819 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.0889833 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.123222378 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.133376668 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.085915724 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.186952353 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.175790804 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.171142047 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116499571 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119678533 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098817827 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.122529609 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.164782441 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.123009915 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.321026226 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.315457732 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089654123 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123357001 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.126321138 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.238367432 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.126048371 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.225208267 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.140369902 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.190455952 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.113521203 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.801186502 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.171180691 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111319838 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.096319831 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120764396 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116501058 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.099332432 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.167280698 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.391681661 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125448185 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.115638835 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090651467 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.226783363 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102511848 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113269052 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162248687 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118205371 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119613585 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.102977188 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123456928 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.169395658 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.257440217 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.102357117 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120894012 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115824064 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.104058032 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.117723898 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.211097809 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.220973305 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.162334814 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.232318881 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.100173313 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.18480619 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.171459148 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119458967 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.173596346 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120425945 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102155543 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124321041 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219104037 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.146233366 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.123890287 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094620824 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.12032157 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.148491304 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.127106853 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097100781 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.192999483 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.458472932 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.169541311 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.110678639 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.128321259 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098686784 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.183671326 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097071352 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.259328544 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121630901 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.172607139 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119235701 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.087582524 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120819994 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.164721013 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122481384 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121418663 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.100705358 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121381277 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.238556083 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.219238133 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122333568 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.222931751 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.185201693 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119207987 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172738626 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123104108 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.16715745 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121282467 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.097606285 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117630795 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.784523724 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123473916 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098526175 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117040933 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.188197147 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090468306 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.125714569 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.127572117 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.087168913 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.774613434 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128492239 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.121874768 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.10319515 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119507618 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121307156 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096845847 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.117655028 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163544649 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.230239484 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120263229 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097568977 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.126203056 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.161864929 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.11913496 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.127349337 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.12503323 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.104773201 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123716125 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116164017 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104019317 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.192636473 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.164780725 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.220234966 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.571606412 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113878411 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.124153995 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.20473115 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114396915 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.291659993 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119425813 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.20421073 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.186557719 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.10011403 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.313741486 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.164405122 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.188255039 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.128712075 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.173141732 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111391024 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.11923717 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.166284907 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.11277235 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096308503 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.162690116 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126472004 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123815217 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.972408306 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089572093 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.246362227 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.087872826 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.171680691 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118200301 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120207203 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.295814472 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091810522 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129846168 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.165107856 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116775833 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.124528141 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.735782753 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.126009065 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.100135407 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119280687 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.222063683 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.164058736 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122039406 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119671768 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098167851 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.185249584 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.209211379 seconds)
  done (took 44.214566628 seconds)
done (took 64.55078699 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.282356912 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.219423694 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.272095486 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.172781329 seconds)
  done (took 2.002026159 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.17457491 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.15241041 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.122217474 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.11001425 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.153072296 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085338006 seconds)
  done (took 1.774945041 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.370771108 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.28144099 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.246392303 seconds)
  done (took 1.88274515 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.320812109 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.251901562 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.476558785 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.328737921 seconds)
  done (took 2.459534617 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.211957438 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.1358068 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.112807796 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103776246 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.201094599 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.247724439 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.144603096 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.204482052 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.098625525 seconds)
  done (took 2.488487888 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.201837056 seconds)
done (took 11.791182789 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.328357941 seconds)
    (2/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.170298617 seconds)
    (3/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.259960588 seconds)
    (4/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.233203354 seconds)
    (5/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.218600976 seconds)
    (6/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.129763571 seconds)
    (7/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.226984982 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.212920221 seconds)
    (9/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.228004895 seconds)
    (10/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.205836237 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.189854118 seconds)
    (12/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.116993332 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.128820219 seconds)
    (14/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.210923464 seconds)
    (15/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.18126393 seconds)
    (16/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.13178814 seconds)
    (17/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.127256792 seconds)
    (18/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.122590519 seconds)
    (19/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.099744174 seconds)
    (20/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.21569075 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.151886523 seconds)
    (22/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.09291644 seconds)
    (23/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.108194762 seconds)
    (24/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.122675762 seconds)
    (25/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.182099196 seconds)
    (26/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.091201709 seconds)
    (27/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.067819639 seconds)
    (28/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.115103439 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.114331225 seconds)
    (30/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.135855573 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.172652692 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.190665208 seconds)
    (33/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.117327455 seconds)
    (34/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.222101094 seconds)
    (35/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.14452081 seconds)
    (36/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.175537956 seconds)
    (37/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.203002135 seconds)
    (38/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.12676497 seconds)
    (39/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.123676317 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.118082666 seconds)
    (41/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.165909627 seconds)
    (42/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.241978476 seconds)
    (43/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.120070585 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.154179807 seconds)
    (45/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.116569037 seconds)
    (46/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.121575483 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.126931387 seconds)
    (48/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.147025954 seconds)
    (49/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.183424901 seconds)
    (50/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.224445541 seconds)
    (51/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.118372907 seconds)
    (52/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.173299577 seconds)
    (53/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.18685568 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.14365008 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.119696109 seconds)
    (56/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.094158332 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.136753498 seconds)
    (58/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.065910975 seconds)
    (59/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.113521834 seconds)
    (60/309) benchmarking ("sort", Float64, false)...
    done (took 0.172784096 seconds)
    (61/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.068082925 seconds)
    (62/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.121511153 seconds)
    (63/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.231829412 seconds)
    (64/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.090390365 seconds)
    (65/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.090931947 seconds)
    (66/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.150486522 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.173316484 seconds)
    (68/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.116675977 seconds)
    (69/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.087770939 seconds)
    (70/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.113968889 seconds)
    (71/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.117383927 seconds)
    (72/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.21859837 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.139274282 seconds)
    (74/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.117095009 seconds)
    (75/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.218515268 seconds)
    (76/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.083948778 seconds)
    (77/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.186893857 seconds)
    (78/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.131906791 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.111608948 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.141128795 seconds)
    (81/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.069045722 seconds)
    (82/309) benchmarking ("sort", Int64, false)...
    done (took 0.086908112 seconds)
    (83/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.279568507 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.11440932 seconds)
    (85/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.09263655 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.110533279 seconds)
    (87/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.118135394 seconds)
    (88/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.135943279 seconds)
    (89/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.117261529 seconds)
    (90/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.175388785 seconds)
    (91/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.137755251 seconds)
    (92/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.150510719 seconds)
    (93/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.132692077 seconds)
    (94/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.12012658 seconds)
    (95/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.095969545 seconds)
    (96/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.116595906 seconds)
    (97/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.102722095 seconds)
    (98/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.091001172 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.110297038 seconds)
    (100/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.128958141 seconds)
    (101/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.11580542 seconds)
    (102/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.124786065 seconds)
    (103/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.119266634 seconds)
    (104/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.163145138 seconds)
    (105/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.137903529 seconds)
    (106/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.164785723 seconds)
    (107/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.111559689 seconds)
    (108/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.194788749 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.141599649 seconds)
    (110/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.122884453 seconds)
    (111/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.090943163 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.113732211 seconds)
    (113/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.086303634 seconds)
    (114/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.122923236 seconds)
    (115/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.067432586 seconds)
    (116/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.084049243 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.196581062 seconds)
    (118/309) benchmarking ("sort", Bool, false)...
    done (took 0.401694399 seconds)
    (119/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.120382185 seconds)
    (120/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.217186495 seconds)
    (121/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.094878324 seconds)
    (122/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.120129166 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.184268265 seconds)
    (124/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.093732401 seconds)
    (125/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.197972672 seconds)
    (126/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.198572397 seconds)
    (127/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.092072713 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.186385006 seconds)
    (129/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.143632158 seconds)
    (130/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.094789846 seconds)
    (131/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.07615899 seconds)
    (132/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.179723592 seconds)
    (133/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.092006948 seconds)
    (134/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.094988732 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.111180312 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.111865166 seconds)
    (137/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.120038234 seconds)
    (138/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.136527839 seconds)
    (139/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.099151195 seconds)
    (140/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.111857821 seconds)
    (141/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.091956159 seconds)
    (142/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.122247462 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.157921635 seconds)
    (144/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.067423962 seconds)
    (145/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.110471423 seconds)
    (146/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.094882359 seconds)
    (147/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.186011015 seconds)
    (148/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.077276666 seconds)
    (149/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.17539823 seconds)
    (150/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.121415476 seconds)
    (151/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.078859202 seconds)
    (152/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.109826296 seconds)
    (153/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.096547909 seconds)
    (154/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.077409005 seconds)
    (155/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.117807488 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.16646512 seconds)
    (157/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.094369421 seconds)
    (158/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.092701007 seconds)
    (159/309) benchmarking ("sort", Int8, false)...
    done (took 0.189708087 seconds)
    (160/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.124395581 seconds)
    (161/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.108313709 seconds)
    (162/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.094503075 seconds)
    (163/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.093826523 seconds)
    (164/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.067684411 seconds)
    (165/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.087365762 seconds)
    (166/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.126320484 seconds)
    (167/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.066134466 seconds)
    (168/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.117970617 seconds)
    (169/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.085973551 seconds)
    (170/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.116256628 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.109735669 seconds)
    (172/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.110851467 seconds)
    (173/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.111127741 seconds)
    (174/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.124954148 seconds)
    (175/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.076408121 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.137229328 seconds)
    (177/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.201686345 seconds)
    (178/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.187253091 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.097076444 seconds)
    (180/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.176433981 seconds)
    (181/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.065759404 seconds)
    (182/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.091400885 seconds)
    (183/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.06914017 seconds)
    (184/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.077595097 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.122705543 seconds)
    (186/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.090149228 seconds)
    (187/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.117583863 seconds)
    (188/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.213766472 seconds)
    (189/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.092709757 seconds)
    (190/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.176879899 seconds)
    (191/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.144509629 seconds)
    (192/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.067935926 seconds)
    (193/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.11116031 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.09685745 seconds)
    (195/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.122447883 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.088145626 seconds)
    (197/309) benchmarking ("sort", Float32, false)...
    done (took 0.174678023 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.086073412 seconds)
    (199/309) benchmarking ("sort", BigInt, false)...
    done (took 0.24533831 seconds)
    (200/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.068206134 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.108781313 seconds)
    (202/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.069527807 seconds)
    (203/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.135258411 seconds)
    (204/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.097525952 seconds)
    (205/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.120012372 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.086236656 seconds)
    (207/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.19217863 seconds)
    (208/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.066617483 seconds)
    (209/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.116924076 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.08591583 seconds)
    (211/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.093699332 seconds)
    (212/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.093278147 seconds)
    (213/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.12253913 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.112074216 seconds)
    (215/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.094045625 seconds)
    (216/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.066972717 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.111137828 seconds)
    (218/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.090372306 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.119378047 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.095671004 seconds)
    (221/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.126720092 seconds)
    (222/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.067822606 seconds)
    (223/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.112167639 seconds)
    (224/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.067582652 seconds)
    (225/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.113991276 seconds)
    (226/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.069539598 seconds)
    (227/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.110622763 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.110473301 seconds)
    (229/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.091325534 seconds)
    (230/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.096933437 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.132429012 seconds)
    (232/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.092638534 seconds)
    (233/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.092425854 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.172423179 seconds)
    (235/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.093841216 seconds)
    (236/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.085912028 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.139303929 seconds)
    (238/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.125323772 seconds)
    (239/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.07975853 seconds)
    (240/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.068528482 seconds)
    (241/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.093559012 seconds)
    (242/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.124487949 seconds)
    (243/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.092757554 seconds)
    (244/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.06978496 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.189753182 seconds)
    (246/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.069010964 seconds)
    (247/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.075783415 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.112174589 seconds)
    (249/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.113358657 seconds)
    (250/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.094148949 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.111861251 seconds)
    (252/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.121448979 seconds)
    (253/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.068647996 seconds)
    (254/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.11363185 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.087081534 seconds)
    (256/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.113819337 seconds)
    (257/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.076851665 seconds)
    (258/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.117823799 seconds)
    (259/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.215708924 seconds)
    (260/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.087538946 seconds)
    (261/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.112810414 seconds)
    (262/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.068566304 seconds)
    (263/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.220634592 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.134506887 seconds)
    (265/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.112742148 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.118762767 seconds)
    (267/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.102386296 seconds)
    (268/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.101706744 seconds)
    (269/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.089406015 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.120193617 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.114618644 seconds)
    (272/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.118690127 seconds)
    (273/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.068209511 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.143881511 seconds)
    (275/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.087560442 seconds)
    (276/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.121344726 seconds)
    (277/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.087258593 seconds)
    (278/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.09216051 seconds)
    (279/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.086489233 seconds)
    (280/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.091361291 seconds)
    (281/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.088569766 seconds)
    (282/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.110476093 seconds)
    (283/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.089972316 seconds)
    (284/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.116474258 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.095453495 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.1092251 seconds)
    (287/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.089541598 seconds)
    (288/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.067307398 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.110781611 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.13701791 seconds)
    (291/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.068670926 seconds)
    (292/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.067205177 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.12067396 seconds)
    (294/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.225612039 seconds)
    (295/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.181478979 seconds)
    (296/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.087379807 seconds)
    (297/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.068560425 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.118553968 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.087057927 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.113098313 seconds)
    (301/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.066852411 seconds)
    (302/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.092966362 seconds)
    (303/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.088269384 seconds)
    (304/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.11066436 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.093511635 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.138951214 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.111582262 seconds)
    (308/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.093361457 seconds)
    (309/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.090115225 seconds)
  done (took 40.137775804 seconds)
done (took 41.125546192 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.101366354 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.150100667 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096375666 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.137841405 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.12603457 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.09177401 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.120157584 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097620161 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.126370572 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.126011503 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.099003769 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.094634051 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097757641 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.122747893 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096497454 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.142024488 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.125735389 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094993355 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.120612655 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086895245 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.120802944 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.085863818 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.114143303 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069447306 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.124162933 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093834995 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.119337306 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120834195 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.08787917 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110655448 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.091420966 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.118691301 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.088264516 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.126845627 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.094078393 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.120414684 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097059464 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.12320072 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.087555175 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.113725402 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.118455289 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.088342989 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.1183956 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.096777591 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.117395244 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.093428293 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.120646281 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099760802 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.142030549 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11634059 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095970186 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.121272933 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.09787136 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.120286462 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090453247 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.123998936 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091594999 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.143854774 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.122657012 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092653116 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.120440515 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094966681 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.118976341 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095602581 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.121717728 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.121887341 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098996417 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.117885545 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.09711376 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.117748731 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086521795 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.121205872 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090137191 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.1128233 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.096057308 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.123610414 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.109832444 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.094580163 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.118563176 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.093521714 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.110786988 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090272269 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.113480023 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093804326 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114272921 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070901836 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.114696472 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.094697411 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110285131 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096947088 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.118024502 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094559347 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.115106469 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098332985 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.112963282 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092660568 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.11335601 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.086877288 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.115288181 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090645273 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.112974382 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089655936 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.122927281 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088318347 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.118786723 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.123699876 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.088133813 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117976649 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087916631 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.111278795 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101722295 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.123253738 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.086771127 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.118900541 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.085671586 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.120976158 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086636445 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.11284267 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086566138 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.113358584 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.092063661 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.112976094 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113666615 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.095597578 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125695035 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.088057882 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.115603195 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089963129 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.11242961 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093031889 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.112992547 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.088302762 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.115391359 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.079042612 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114934962 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.088257096 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.119676328 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090349132 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.121679225 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.08896097 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.122594135 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091781348 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.120015792 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.091883954 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.112319299 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074278212 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.11864566 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089527276 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.115390744 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.086559181 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.115399435 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.086914543 seconds)
done (took 17.20469952 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.088641745 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.187775223 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.153514965 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.144381213 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107912409 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.114184121 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122587055 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.11948054 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.115006943 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.14450166 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.111067094 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.134729999 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.149437711 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087504293 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.113995944 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.09180322 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.114742126 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102903842 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.148905725 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.134995986 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.166721565 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086526129 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.149503701 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.13843514 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121480969 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.107301594 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.114120437 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091531646 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.116973183 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.113697919 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.135014993 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.089894514 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.115411333 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.135880913 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105161359 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.122834257 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087340957 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.121741338 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087318227 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.114641176 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.142360372 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.133872743 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.094888248 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.11890187 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.092478714 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.116398638 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.08984254 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.123503708 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.09880363 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.11872533 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.126771037 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.158242403 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091940411 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123842899 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086240323 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.125625008 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122246309 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.091040718 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.1132936 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.09105701 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.11242105 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.092116381 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.129096911 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.142633074 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.092045525 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.12465073 seconds)
  done (took 8.803257392 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.106538948 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.141508841 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.105517443 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.14949859 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.113030329 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.089550549 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.11462583 seconds)
  done (took 1.871637597 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.089700922 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134965995 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111350488 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.138536822 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.132107311 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.110496841 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125153799 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088652164 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.133614183 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.088523372 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.136160385 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.154943107 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.089684872 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.122801024 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138164172 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089900652 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.13896822 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089013765 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118219151 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.11204876 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118398919 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.136183594 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091317155 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114934327 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103428286 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.116162814 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162706748 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094442661 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116237765 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092147883 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113880135 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.167634681 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.105480939 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.126844079 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087797136 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130860875 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.12930495 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087501671 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.131524283 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094331035 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.13013895 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.088790311 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.117533374 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.087480802 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.120832162 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.1242397 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.09232757 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.114982376 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.092934114 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.135150483 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089961395 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.128602843 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089045678 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.123146017 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.089963126 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121932864 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.123521845 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.091339928 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.134839542 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090962707 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132481493 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105290599 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.129621069 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131896302 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092346027 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.129614254 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.102693115 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.119059455 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089995766 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.119816637 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.130255824 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.088213866 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.115865996 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.100536354 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117101101 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112898339 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.139182459 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11620279 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.101576422 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.115215436 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.090833907 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.115208719 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.113428279 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119697847 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089397746 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120120574 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091896506 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.114647571 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.087601144 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.119542678 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.087080194 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.118237513 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.117539011 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.091676274 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.11733664 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.107030849 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.117502604 seconds)
  done (took 12.01639114 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.092458389 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115009465 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.093328773 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.11551913 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.091566224 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.116377257 seconds)
  done (took 1.687619708 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.115298085 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.120183701 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.104031041 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.122810144 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.158377833 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104609271 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.132058836 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.125502653 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.10812156 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.129766875 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.130673717 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105296857 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.138792868 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.12285386 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.105390114 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.122466369 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.130593956 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101886083 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128318336 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097132956 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.139534977 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122189455 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096893235 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.134199912 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119277129 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.097895108 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127227564 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103172374 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.129882724 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.124289651 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.09713045 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119075569 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095826614 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.12512402 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.132605339 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.09664007 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123272761 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.11934555 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102655269 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.11940877 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.104800698 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124301106 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.128496656 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.095092002 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.12613395 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121060197 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.095115571 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126763634 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.103979333 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.121725849 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.119931514 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.09699947 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120090668 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094468817 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.123230353 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123982211 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094578164 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.1318203 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.095797135 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.12414006 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119351248 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.094465365 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.126635982 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.118568886 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105781115 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.12064989 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096777678 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123623776 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122125676 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.097296941 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.121093786 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092843468 seconds)
  done (took 9.406763442 seconds)
done (took 34.836798965 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.698292343 seconds)
  done (took 1.759672818 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.724848717 seconds)
  done (took 1.788203408 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.310582362 seconds)
  done (took 18.37384791 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.514602473 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.602214597 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.892692289 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.183559166 seconds)
  done (took 3.261198126 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.981998918 seconds)
  done (took 2.065751918 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.300323331 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.26105355 seconds)
  done (took 1.634890342 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.806142271 seconds)
  done (took 1.884505767 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.372532997 seconds)
  done (took 2.445148668 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.338095097 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.187391896 seconds)
  done (took 1.603198928 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.550886698 seconds)
  done (took 1.629738525 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.034169519 seconds)
  done (took 8.117700713 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.271143784 seconds)
  done (took 1.362588123 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.303042585 seconds)
  done (took 1.387713575 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.61563346 seconds)
  done (took 4.698945747 seconds)
done (took 53.087075381 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.09976597 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.128139832 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.103360137 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.12679136 seconds)
  done (took 1.53421084 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.102547092 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.122689708 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101112014 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.122452863 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126998685 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.098074308 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.125293469 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101362362 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.122763158 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096995898 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.122898332 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120201685 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.100555619 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.124198421 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093383281 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.126519889 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099742799 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.123274361 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124868752 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.097500404 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119841256 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.099046797 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.126699864 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094201941 seconds)
  done (took 3.779139335 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.102205393 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.120266598 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097880842 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.119252168 seconds)
  done (took 1.53088357 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.101184575 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.14411887 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.140052547 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.101629326 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.144539618 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.136449858 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.093486919 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.118648626 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.095702642 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126618148 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.091661554 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.151155831 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.138782493 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.100029787 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.129736144 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.087794434 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.119384171 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.138435642 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.100581061 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.127777869 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.096032264 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.127427354 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.089937096 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.143630477 seconds)
  done (took 3.931722304 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.171452322 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.150576404 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.141540679 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095385303 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.163438488 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.143498611 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088875804 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.143055329 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087630602 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.134448988 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.119335111 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.135488188 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.131326989 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.087297376 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.116814886 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087731539 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.132344923 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.131221399 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091173085 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.143853646 seconds)
  done (took 3.589837065 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.100120726 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.119119462 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090293196 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.117472229 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.100016509 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.122491382 seconds)
  done (took 1.743340791 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.092580463 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.1150831 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.091404947 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.115430195 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.095859721 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115999753 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.08990472 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115594071 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.091007985 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.11659791 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.090760777 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.115278362 seconds)
  done (took 2.338846683 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.467525072 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.09403629 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.122713029 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.115776721 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.098045757 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.116248591 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.104315573 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.120746099 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.142256759 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.090883706 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.11547236 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.092832438 seconds)
  done (took 2.773837955 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236491162 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128523984 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.290658791 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.278196389 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161239951 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174319 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.287103125 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167696237 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.228571503 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161405644 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204887239 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227023592 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152349794 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191238058 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140239 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.119036081 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229284543 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24120277 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154972696 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204380611 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227126216 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167432713 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183048037 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151837991 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112831129 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19952379 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.096567861 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131504194 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206799092 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205248034 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190800474 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163132646 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14899804 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241362961 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254637213 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220895291 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.288973683 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110186343 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.173855638 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.172661688 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.268032238 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112930814 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234471846 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15769385 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133675063 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193644897 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167878208 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.20358723 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.125461223 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141300649 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224673812 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213427595 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.221762995 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137450966 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210923009 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160545407 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.170052692 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222733607 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226396024 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226239421 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180151974 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.121603322 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18992385 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194751816 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213723582 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.17094694 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.182923888 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149226686 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191938246 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.217348112 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169485888 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188848119 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.216831035 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114596813 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196918242 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175001876 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176879166 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256325791 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180666502 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.096012653 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170226835 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151957797 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135491526 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.196520893 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098649757 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242505631 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149853097 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.164715701 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220367239 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161810493 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163183069 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227433346 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196883881 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149506794 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084134746 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15602842 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.159058636 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191149218 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141718749 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161068508 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162598721 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.132042093 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17993573 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.125070542 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177532755 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091538675 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202094765 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185430288 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.099733739 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163090729 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153879532 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.152030245 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175557077 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227327886 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115995578 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136573364 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236975955 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180169794 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.151471161 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181049852 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.204572856 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.146523533 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150900978 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198524591 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245996019 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141164929 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202914868 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158668815 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136910799 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.133387301 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185171816 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157239445 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.162470917 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108542178 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.211162716 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208919521 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.127297186 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139126297 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186142113 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134994623 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106728378 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162855 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149023407 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.140220003 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.14777543 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.153085254 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183800555 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179082467 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156044837 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165657021 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154378244 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256186702 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144528341 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.152434036 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122021244 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.123637364 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.194031865 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231695584 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103878127 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234865505 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.173373954 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233071358 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173549789 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107903836 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179161203 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132145913 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.121079852 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195942031 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169974926 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162052401 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.224885724 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203217444 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.181998127 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.212945432 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175075984 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17458654 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.167835482 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158424329 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.140717621 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162421563 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16946226 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.09727042 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.145025092 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.13609923 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149192019 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143525171 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10878684 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22668785 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172452671 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193479523 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162425604 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15165677 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18361232 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.130774709 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175824414 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.179962461 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149261695 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.227757434 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196497448 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188768589 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145036213 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228308092 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.095478186 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126277093 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.143387277 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172717016 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106809577 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138544986 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167352285 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181867291 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21025488 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178647357 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242103897 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174674336 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193798428 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.094794018 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.170947055 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185661441 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205655132 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.163098785 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142665545 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.15334396 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179524798 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160387063 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258135115 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170518769 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176533972 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240319449 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.151196316 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10569974 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154400802 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186492424 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155821099 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.2063169 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120996029 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14325108 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163913452 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.135644896 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161266391 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184273205 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163861123 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220199503 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.152716833 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188349481 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129256092 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169142277 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161789956 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16764217 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.082541411 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176778074 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2352798 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150673838 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170253222 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19086736 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134092167 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.310760503 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242929557 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194852141 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138935162 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160105178 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160592029 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166136412 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175015891 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180439619 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161135478 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189457437 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1613674 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.139671835 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113275737 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150068657 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152163203 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.133267463 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.150850625 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.177254182 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.140933184 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186984062 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162172793 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160926396 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175527385 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.152601098 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.145385037 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123996772 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247504268 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177485361 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243396482 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.151051942 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.182845219 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206302208 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12863714 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133071327 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.106661867 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179941859 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138882103 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190250922 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.219028915 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209943873 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211934166 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190365639 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141628877 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.093580528 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160796215 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174917015 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237691685 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158316131 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.161167709 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204617801 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.145652525 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133254003 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17537563 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201773666 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150792485 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198436496 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.109517401 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.282154553 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100736437 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135536937 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166350994 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238405119 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.10958169 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.187962594 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172929269 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16991099 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16660593 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152031801 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.221748254 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221662058 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229993754 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182784434 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.104159758 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157844072 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206611069 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195596905 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15924805 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.141741567 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207542046 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195714645 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.228641495 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.142336494 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174033517 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170954487 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15934696 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190178371 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136848759 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208661543 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137077281 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19327378 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15427707 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146082774 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204814027 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.189698118 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144946809 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192353355 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176810591 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137539558 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133884102 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172181918 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180301987 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160001999 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.099238099 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212467756 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.097147685 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224060912 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259953207 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107992498 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158028978 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150593362 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13760947 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159009773 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160982607 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1415864 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.141449997 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234483028 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.108628544 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2218014 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203731418 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171747701 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205260887 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117958178 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.69473314 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.133560207 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196383027 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15804703 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238772981 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152568604 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176137962 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160914922 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1710841 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196176108 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161715064 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.233722722 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225232168 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.182911325 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133727109 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159832999 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163086957 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.146609417 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124059207 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169431179 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161980574 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.154894399 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.207748784 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173601165 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.107206241 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143216307 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200902171 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157593413 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213910603 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18216676 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111745484 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203793145 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191597454 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135004772 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.181207651 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239071541 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114338506 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15471171 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.137196989 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.157705333 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26727787 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.097583509 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234353079 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178939588 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162382673 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17045248 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.149293064 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192726749 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160472039 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208469452 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119373372 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.162092631 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158625158 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140071732 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.132783116 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156681385 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170106528 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.150178427 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161773923 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.140883527 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196687193 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.126164576 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146694997 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203871327 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22167957 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217948277 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.139852682 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135835226 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134580099 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153824361 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.209427464 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181290056 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.137065238 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11090377 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.139745195 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.132518699 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.141620705 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159153926 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200879606 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169163731 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238063431 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.109142178 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.282945954 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143126774 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157251469 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.089714255 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.135315016 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153519839 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147597328 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162150853 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.195646704 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268294947 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.149385777 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.106845287 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152364017 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.128471191 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108586453 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168176012 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165158552 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207533018 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147438676 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.083312448 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160548074 seconds)
  done (took 83.717777975 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.168887406 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.139554817 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.154112146 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.210413093 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.183117656 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.275556056 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.217467495 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.26013065 seconds)
  done (took 2.790353606 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.095030371 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.149627671 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.159146839 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.135446455 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092470514 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.121262688 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.351937036 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.134204045 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.119483086 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.123011148 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.175977092 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.095593843 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.56175202 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.092507599 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.120516274 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.11152416 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.092751502 seconds)
  done (took 3.909978228 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.484575063 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.74409494 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.521303376 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.099154863 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.246730484 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.113207766 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.838885849 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.203493022 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.117860796 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.496634543 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.779004721 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.163881252 seconds)
  done (took 18.996030674 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.100177205 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.121710989 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.109559235 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.137776384 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.096489076 seconds)
  done (took 1.755981385 seconds)
done (took 133.470530693 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.105497941 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.409664497 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071858045 seconds)
  done (took 1.702834635 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.108438548 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.138347158 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109776167 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.138711195 seconds)
  done (took 1.693222675 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.099335786 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127713129 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.11119503 seconds)
  done (took 1.529147994 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.327411708 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.191773251 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.166471427 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.107546419 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.130025844 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103962442 seconds)
  done (took 1.533923607 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097778123 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.129086656 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098628549 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.132468359 seconds)
  done (took 1.65195044 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.095812484 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071241061 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.10412663 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.076154514 seconds)
  done (took 1.536710025 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.114936139 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.134286364 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103960101 seconds)
  done (took 1.547786799 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.130990305 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.14073441 seconds)
  done (took 1.467222176 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.107077326 seconds)
  done (took 1.298644102 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.119623736 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.171118092 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.190730341 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.166545739 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.231937192 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.167086945 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.142879218 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.115369474 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.132875941 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.145133194 seconds)
  done (took 2.778833632 seconds)
done (took 18.723045079 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.104857492 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.519377629 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.413638462 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117891106 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.725325841 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380927945 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.040673215 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147465595 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.16718746 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094179056 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141095061 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.672545624 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.030907436 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.474565385 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.984841646 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.379311003 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.703780439 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.095171719 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120701407 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095605218 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.023433514 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093112613 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.124080458 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092921214 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.706402181 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.426972162 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096633766 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.377551816 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092882243 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.128942838 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383753478 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.125235898 seconds)
  done (took 17.266602809 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.096840009 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.175210356 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098657812 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.140045797 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.124246899 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095226018 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.126155333 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093782636 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.18120703 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12446808 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110338107 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.123880425 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126652141 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.096709857 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.143462646 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092805415 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.127581153 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092742099 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122844378 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122006177 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.113545337 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121903728 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095249026 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.123183486 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094031725 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.137365917 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123236606 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.094905063 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121354307 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.100144485 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.129480857 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09540702 seconds)
  done (took 4.964083406 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.143143036 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.185010717 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.130165038 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.12756499 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.170816233 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.125529513 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.201289096 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.119573516 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.184998383 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.125715155 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141283411 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093645573 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.159538908 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.123021811 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.116318839 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.122518053 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.09727749 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123407182 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092437954 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.125144413 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140590173 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094149546 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123843038 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093665204 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.12529144 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.1086032 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.125373021 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121488872 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095030966 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127919753 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100552138 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124784993 seconds)
  done (took 5.294783291 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.098764417 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126858396 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109653524 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.139679374 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095850856 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.127693882 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097527685 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.126360884 seconds)
  done (took 2.123764251 seconds)
done (took 30.84194503 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.113062043 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.127997794 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.108606135 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.135504805 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103743424 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.134232668 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091245315 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.135401705 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.134278791 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.103680474 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.139200413 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092695365 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.124178137 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092611392 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.13681037 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097751767 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.13512286 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102376149 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.136061478 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.133260771 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.096520161 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.134788702 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.104093522 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.134616691 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104808758 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.135186979 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.13833951 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.101288889 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.124161857 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095774094 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.126299354 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.105241633 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.125193818 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.10583103 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.128361113 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097861371 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.125319264 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094113843 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.135197589 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.13235095 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100943535 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.135347457 seconds)
  done (took 6.153515539 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.109491249 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.140764919 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.106592685 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.08222717 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.118921033 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081386819 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.139343245 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.080005069 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.111507742 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.10936595 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074399913 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.108568197 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078887325 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.102243496 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.079376002 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076192721 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.109373364 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.0772994 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077335368 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.107246935 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.081142082 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.074119827 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.110118043 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079719541 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.07503928 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.112115963 seconds)
  done (took 3.712177775 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.102275328 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.136515755 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.114931404 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.186151637 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.170807587 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.098853131 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.133618723 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.140705998 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.109723154 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.122098473 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096605919 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.151128762 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109885377 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.131593752 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.121289954 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.108860724 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.137205128 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094200417 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.130535054 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.11307811 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.140177311 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102805268 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.144818748 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.133456536 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092862559 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123444965 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.09691042 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.137345567 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097359342 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.132105233 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.126095353 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.097720643 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.124128719 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.10495209 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.128093412 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094818533 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.144854513 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131991412 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.103537811 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.123313888 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.097343526 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.123087926 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114587453 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.169604449 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.09170349 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.133970186 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.129863376 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.103967901 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.122615976 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110796152 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.133902326 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091637704 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.127207533 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091343613 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.124555946 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135558753 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.096556748 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.124356109 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.10374214 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.125857256 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.106570994 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.12767528 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108780806 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.123954203 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100064988 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.123410786 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.093084379 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.122572229 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.144658846 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.09527413 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.165320221 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093284113 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.126077154 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.131421585 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.101927013 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128793451 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093346964 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.139269938 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102524193 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.128142888 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.102072897 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.127379458 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.124231032 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.112947543 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.12501147 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095736596 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.12323673 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100088574 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.126475097 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094260836 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.138409852 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092803276 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.128764742 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.140351923 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.094115068 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.123960352 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.100713045 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.129162677 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092745575 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137284555 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.097472557 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.124550101 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.132410659 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.093712041 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.125432934 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.104043006 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.12851304 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092328967 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127844773 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.098848392 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.124216913 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093528628 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.127365128 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.093586602 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.133446742 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.129269076 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.09811571 seconds)
  done (took 15.051934117 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.232146481 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.217206809 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.239921385 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.263753495 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.137185003 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114912936 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.214876693 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.157780409 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.124816536 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.161798456 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.164041973 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.182711339 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.139525444 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.181616926 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.143436905 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.122250194 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.113482408 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.166189396 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.216696151 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.292962241 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.112511275 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.135206244 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.163737808 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.162979416 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.106338975 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.13610924 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.140992122 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.1059921 seconds)
  done (took 5.878486596 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.108911036 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.159234543 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098205352 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.146886015 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.150790045 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093352584 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.129825507 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.09476524 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.138277982 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135780849 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093600852 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.130411753 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.09993923 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.13442147 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.123872923 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.104275685 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.134212288 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095625129 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.1267449 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.098497554 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.131698358 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101149441 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.129339775 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.12114051 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.104246935 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121980846 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.087249854 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.143835665 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.121799531 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.11651646 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.121914626 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.100556432 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.133957255 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094307428 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.12375186 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.096069866 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.12669826 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.096424435 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.126455407 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.09213949 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.124013263 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078001159 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.123361706 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.136983952 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.10164539 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.08026935 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.131239607 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.128548895 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.096002182 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.120718502 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097659598 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125733963 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.098753499 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.132015068 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.099323448 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.126051584 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097112459 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.117814018 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100822149 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.126524342 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.086432349 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.121881945 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.099851724 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.119323253 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.103022363 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.130200637 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.093110905 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.126673419 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.099051087 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.130913761 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095591467 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.127937811 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091808736 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.127609587 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095909997 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.129572888 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.096784296 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.12393146 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.122617864 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.095617946 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075641892 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.125642674 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.075325041 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.12851532 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092065757 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.12357277 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095973468 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.131297735 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.13910093 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.096081909 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.133718519 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094905747 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.123690609 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.097649262 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.115280194 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.097761539 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.140302954 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.141505314 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094442705 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.122593986 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.108722233 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.128036497 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.093469392 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.107268865 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.10231287 seconds)
  done (took 13.170980369 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.129055604 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.155785337 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.095282035 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.14503186 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.156780392 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.158155493 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.10232869 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.131447949 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.096577039 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.143295349 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.094012205 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.133039425 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.097143332 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.139166371 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.15750498 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.104270412 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.127671868 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.108067932 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.133638346 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.171184056 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.113218624 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.144511223 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.108117365 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.126257184 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.129540061 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.112710695 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.162737315 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.108537466 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.138844368 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.143482891 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.109564185 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.162930189 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.143934793 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.099581437 seconds)
  done (took 5.624879583 seconds)
done (took 50.795092309 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.320248858 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.547118691 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.309575902 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.309727283 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.363025649 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.337156163 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.322429012 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.30979746 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.466826876 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.309767944 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.55089208 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.11697436 seconds)
done (took 60.500423939 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.348712917 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.444071731 seconds)
    (2/2) benchmarking "String"...
    done (took 1.575366979 seconds)
  done (took 4.263935282 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.689385963 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.278182481 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.57305809 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.308442486 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.311685745 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.604475045 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.139732602 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.704664676 seconds)
  done (took 29.154316459 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.3109727 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.731054434 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 5.286396675 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 5.285160494 seconds)
  done (took 19.849798386 seconds)
done (took 63.540455821 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.296765297 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.318452882 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.320985762 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.291831317 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.451505174 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.332885209 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.494737209 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.445983122 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.331311413 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.292372592 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.332748676 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.343093279 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.320719579 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.514462105 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.311627791 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.312294553 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.366530308 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.963979667 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.736934873 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.318053244 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.329913222 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.352889144 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.315312331 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.311342611 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.366461867 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.312733421 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.315923105 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.319182428 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 5.039616736 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.31222274 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.340619821 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.662238715 seconds)
  done (took 194.311947622 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.312445818 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.322115809 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.424227016 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.369427452 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.778888869 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.51692799 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.447010936 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.866726296 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.336959265 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.332725126 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.610754976 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.312799109 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.683624894 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.350890448 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.322059039 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.317325541 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.620454777 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.658307767 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.335172013 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.541454293 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.316073949 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.645312901 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.585012841 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.542157274 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.32442664 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.420106148 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.330078239 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.372609064 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.510091981 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.529512049 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.353423754 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.380065702 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.981457706 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.173502485 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.325524973 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.34526379 seconds)
  done (took 154.836709924 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.638371883 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.315292374 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.314445212 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.314251468 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.348761414 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.315092812 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.92400935 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.912665528 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.851925593 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.648280399 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.379499006 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.620491301 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.314343294 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.411997046 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.329137153 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.315797278 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.330915187 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.360190081 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.320802181 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.315807501 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.910854585 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.328244015 seconds)
    (22/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.314979132 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.32209192 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.315486386 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.349678538 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.709000182 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.338749759 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.319880715 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.350888519 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.65352977 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.37074836 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.315825615 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.719993994 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.235346496 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.431281525 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.31869213 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.34971617 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.316966495 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.601076208 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.316860714 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.316531919 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.320230359 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.040488525 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.321160461 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.926619787 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.322277121 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.315875528 seconds)
    (48/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.316763949 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.316763062 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.317309146 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.229110427 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.011786141 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.336444328 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.316586749 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.320321474 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.31832221 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.31809956 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.351826105 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.042746669 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.417236278 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.337165435 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.321666997 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.351701392 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.317876355 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.717612481 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.322455023 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.271295115 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.377839228 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.427155989 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.914088923 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.319316779 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.419444521 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.441695556 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.320118038 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.31893758 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.31875978 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.31904107 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.431887663 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.318854622 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.318952085 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.775205095 seconds)
    (82/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.319340455 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.32550895 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.320434 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.379457638 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.418380147 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.318820436 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.759237455 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.323007866 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.318205861 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.112516019 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.419359766 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.320209863 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.318869578 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.319201533 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.77523781 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.915877352 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.622566604 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.323857471 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.993716499 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.324073581 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.792934697 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.911681134 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.013366339 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.320655023 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.434656663 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.3247896 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.322870793 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.321370868 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.350194687 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.34123988 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.378978069 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.321150328 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.720593615 seconds)
  done (took 363.099451274 seconds)
done (took 715.122180372 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.991257564 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.975098076 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.096842932 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.970924507 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.948982801 seconds)
  done (took 11.228553378 seconds)
done (took 12.47263402 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.525123242 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.523456854 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.386860777 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.526377983 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.352696382 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.545485964 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.503156719 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.342414018 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.431057328 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.411001505 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.429460245 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.379291691 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.352630743 seconds)
  done (took 19.954487316 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.654498068 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.642664743 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.384037502 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.653800658 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.360959097 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.651802222 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.532264279 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.545312691 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.544139475 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.357448459 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.335402549 seconds)
  done (took 17.908972144 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.6948942 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.654361071 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.388387194 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.662540336 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.363155242 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.65567692 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.54032213 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.548010258 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.545088869 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.357093604 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.335268545 seconds)
  done (took 17.990812781 seconds)
done (took 57.098945526 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.332135499 seconds)
  done (took 2.57902818 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.365538373 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.535028587 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.350619482 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.333816357 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.332861055 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.331621887 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.3352848 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.331892254 seconds)
  done (took 12.165332416 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.333339585 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.329206072 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.328410497 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.328569889 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.329189254 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.32876972 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.332528835 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.331854921 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.331245298 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.328943069 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.332324606 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.332402166 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.329457757 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.332026951 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.330172082 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.331492438 seconds)
  done (took 22.538304283 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.332406999 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.329373368 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.329400217 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.331252525 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.329596567 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.329786239 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.330811658 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.329668885 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.329611211 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.330785731 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.33007402 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.328990739 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.32959282 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.330195568 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.330385906 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.3305625 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.32964939 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.331328231 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.334585772 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.330591577 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.33233681 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.330517676 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.331270199 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.330953894 seconds)
  done (took 33.184231292 seconds)
done (took 71.712837047 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.573768736 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.093527247 seconds)
  done (took 9.917163839 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.333855757 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.333159369 seconds)
  done (took 3.9168733 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.333531785 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.333282474 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.332775912 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.333763638 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.334516497 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.333402063 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.334363649 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.333773633 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.33346361 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.333604281 seconds)
  done (took 14.5872959 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.335667958 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.33375207 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.331885516 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.334109707 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.334501636 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.331835766 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.333882099 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.334722602 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.335078931 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.332500037 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.335575694 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.332012098 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.334635657 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.333124909 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.335847634 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.333360877 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.332227477 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.332247014 seconds)
  done (took 25.257672171 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.336364134 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.336312793 seconds)
  done (took 3.925250785 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.334590352 seconds)
    (2/7) benchmarking "second"...
    done (took 1.332663495 seconds)
    (3/7) benchmarking "month"...
    done (took 1.333059192 seconds)
    (4/7) benchmarking "year"...
    done (took 1.333577553 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.333058707 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.333834735 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.334464495 seconds)
  done (took 10.587505736 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.337189798 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.510130954 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.592696173 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.957600592 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.337120855 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.338867558 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.228597126 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.338491016 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.34168046 seconds)
  done (took 15.234158169 seconds)
done (took 84.674511233 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.381248907 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.348318451 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.635214162 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.333922079 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.364618347 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.67295234 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.367524 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.466501893 seconds)
done (took 38.822582757 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.336470986 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.090870981 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.102539423 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.329887883 seconds)
  done (took 11.777171567 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.325669833 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.339570444 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.317778198 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.420055936 seconds)
  done (took 18.656996485 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.424453555 seconds)
    (2/2) benchmarking "read"...
    done (took 1.668996829 seconds)
  done (took 5.347407987 seconds)
done (took 43.370011885 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.338725584 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.335296948 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.338078621 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.334988933 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.338349047 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.336306815 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.337077073 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.339167362 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.337971185 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.338472469 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.339737043 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.339123117 seconds)
    (13/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.336589322 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.336837102 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.336689548 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.338884301 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.337383715 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.337033575 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.339985439 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.336906196 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.340412329 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.337126877 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.336698686 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.340461722 seconds)
  done (took 33.362815828 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.340324416 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.338668194 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.339633353 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.339891725 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.337392483 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.3405571 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.341323281 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.338492979 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.34024732 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.341370514 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.3392115 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.337737239 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.341164051 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.338628188 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.34098971 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.338157671 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.340641391 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.338460757 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.34023583 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.339367458 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.340167934 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.338489052 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.338710655 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.341665056 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.338534254 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.33893448 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.340644324 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.339694616 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.342159938 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.338917807 seconds)
  done (took 41.447540367 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.346789377 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.349165136 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.342280452 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.342711434 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.342126001 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.342796206 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.342875962 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.341363625 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.341503091 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.342467232 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.342777548 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.341012741 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.342774281 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.342026324 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.342931805 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.343385039 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.343160889 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.343077607 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.343416968 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.343481157 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.343786311 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.342855327 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.343748817 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.343364816 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.344473369 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.34359087 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.343138051 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.343389806 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.343821526 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.344067062 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.344093676 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.343139597 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.343552252 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.343367079 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.34374604 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.343367481 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.3487046 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.350600488 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.344006109 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.343750403 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.344588164 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.344213007 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.344211438 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.344690402 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.34427972 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.344361039 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.344510035 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.343830654 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.343702948 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.344210004 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.344641009 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.345539134 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.345180689 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.344077901 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.34479965 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.345102135 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.344792529 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.344788489 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.34525209 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.344724553 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.346585855 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.344864435 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.344821383 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.34570798 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.346456018 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.346318013 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.345156711 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.34516591 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.345596096 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.346947755 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.346331163 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.34610531 seconds)
  done (took 98.047687505 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.347354794 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.343818245 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.343819684 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.343273989 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.344650579 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.346719478 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.343951979 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.346911536 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.343382934 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.34656819 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.347375703 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.34505443 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.343811116 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.347201024 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.347043212 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.344216582 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.347636797 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.344388323 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.347871826 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.348121491 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.346862799 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.346218754 seconds)
  done (took 30.86835423 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.349150041 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.34939837 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.345605418 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.347804277 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.344338296 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.34860088 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.349110586 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.349656865 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.34760733 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.345038125 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.346364139 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.348497829 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.345023088 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.35200103 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.346075327 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.347534576 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.347798663 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.347412664 seconds)
  done (took 25.520378446 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.347353517 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.347438404 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.348298854 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.34611863 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.346606112 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.348853917 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.347026737 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.349400345 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.34903551 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.347152604 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.349943183 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.347673258 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.349967037 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.346864124 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.348468997 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.347361025 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.34937823 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.347351659 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.348839812 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.347344165 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.346615653 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.350258206 seconds)
  done (took 30.922247786 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.350472779 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.351134276 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.346977205 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.347763603 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.347206442 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.350812027 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.350182275 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.34830071 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.35141417 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.351053374 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.347260615 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.351395686 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.349683343 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.348171165 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.348338275 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.34933919 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.350268356 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.350226865 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.351192176 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.348681599 seconds)
  done (took 28.255282113 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.353225639 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.353136022 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.352442556 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.35428516 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.352895096 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.352436743 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.354086808 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.353739391 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.353094929 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.353723538 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.355136677 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.353453195 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.354519634 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.354502354 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.353322564 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.353647882 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.354291669 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.354343126 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.354023738 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.354751176 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.354675691 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.354728965 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.354852675 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.353813577 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.353928238 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.353970406 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.355213639 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.35602203 seconds)
  done (took 39.179209375 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.353261232 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.351983723 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.351061809 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.350995241 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.351352335 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.351148048 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.351499486 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.351482321 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.354387302 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.352501861 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.353823994 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.354575071 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.35402859 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.354852469 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.355075898 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.354343361 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.354781878 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.351649142 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.350971672 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.352955081 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.355813291 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.354905044 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.354013827 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.352375397 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.352311013 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.355206654 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.352905807 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.352083051 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.355315452 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.352757881 seconds)
  done (took 41.863468963 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.374756334 seconds)
    (2/2) benchmarking "in"...
    done (took 1.373825064 seconds)
  done (took 4.019064721 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.353784774 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.355936384 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.356417299 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.353397299 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.353739369 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.355572239 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.357126835 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.353984792 seconds)
  done (took 12.110470976 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.356353671 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.355929596 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.355679638 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.356145613 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.35629596 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.357342576 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.364272891 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.377811644 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.356561543 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.358560189 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.364608443 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.364894697 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.357558191 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.356237143 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.356544471 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.358642988 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.355911566 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.357148006 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.357585862 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.357586066 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.358402899 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.359385752 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.358802109 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.355135747 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.359623319 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.36825951 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.38211796 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.357528985 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.356768639 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.361251119 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.357093169 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.354851261 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.3576619 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.358908211 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.358344131 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.357923392 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.366044817 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.378257611 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.363542559 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.379744215 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.358914817 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.355129646 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.358527759 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.358959163 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.360041871 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.358494343 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.358320086 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.356019307 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.359137843 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.361156803 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.364005891 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.358648786 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.355724199 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.362342874 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.359635032 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.365456585 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.381099233 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.363118378 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.369916433 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.368640629 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.392606027 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.386272126 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.360763589 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.359945475 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.370325411 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.382996636 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.365837585 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.379195901 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.357795106 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.360984841 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.366243121 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.393205657 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.388419442 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.360942117 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.361651271 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.361542701 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.360121654 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.362462249 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.366708021 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.384499926 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.362210539 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.361417981 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.372415863 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.384242746 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.360488758 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.361616727 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.36204735 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.362931109 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.362984354 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.370458655 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.382591248 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.361412466 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.361264871 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.361866211 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.362852142 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.362994692 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.362212982 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.363085178 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.359137431 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.362641088 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.362765847 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.367119295 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.371309793 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.362578313 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.363559 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.369028037 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.383664561 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.362488068 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.368029677 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.362741962 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.363601657 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.366087092 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.368235576 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.360827184 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.367259466 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.371613279 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.363569189 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.363968517 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.365516708 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.364774793 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.374578053 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.390421711 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.363571499 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.363957976 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.369489459 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.376987738 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.36532726 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.367176817 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.365004836 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.362851634 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.362761459 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.365385478 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.364514523 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.364479891 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.365797577 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.365521391 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.362516344 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.364893512 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.365890341 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.366000599 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.366367793 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.3644009 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.366036039 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.367096989 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.366564427 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.365607471 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.370679337 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.38670566 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.366501311 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.366749912 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.362642589 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.366517906 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.366446005 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.367474723 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.365753084 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.366283106 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.36699338 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.367397167 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.367436739 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.367088691 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.365610287 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.368315142 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.371794981 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.367239582 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.370053143 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.366693795 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.363502548 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.367513422 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.366553571 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.366609743 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.368442822 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.366744201 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.37160089 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.375910568 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.367428357 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.368156965 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.368571602 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.368253722 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.36786779 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.368659216 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.370427566 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.375487938 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.368130867 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.373699471 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.389650755 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.368178809 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.368303277 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.368139317 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.368530588 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.369003182 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.372158092 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.376602293 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.380170402 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.395056798 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.370035511 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.373359033 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.37008521 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.37333583 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.372290839 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.368273671 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.368854026 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.369684012 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.370141133 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.369847673 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.369788189 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.369863835 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.368747862 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.369114266 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.369676127 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.370298446 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.369417008 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.37071081 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.370861894 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.367425242 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.370433341 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.369913222 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.370140144 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.367006613 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.368911491 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.369382251 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.370350623 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.371210194 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.376502994 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.366651629 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.371256685 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.371848595 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.371893949 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.37007705 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.371015203 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.372952339 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.370854264 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.376545324 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.392922317 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.372265367 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.378143984 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.392797556 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.370294658 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.373853175 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.371434482 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.369155393 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.37473738 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.379788713 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.371324783 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.372368944 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.372727503 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.373640296 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.372761109 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.377908469 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.39057885 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.371851139 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.3712994 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.374076991 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.369230634 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.373001893 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.373529021 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.372291378 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.373469235 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.372794037 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.37258054 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.374435374 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.373203681 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.373284522 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.37247917 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.376440857 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.381350309 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.377697126 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.372736996 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.375837824 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.375015277 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.377398474 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.373055667 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.373159798 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.372487764 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.38503915 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.401010039 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.379635147 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.395400509 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.374570244 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.378207955 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.396506175 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.37786967 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.373894661 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.374831029 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.374715827 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.374374659 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.371482197 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.374158069 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.37413443 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.374686559 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.376937084 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.378809944 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.374860307 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.374495543 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.37599497 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.37492966 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.375029663 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.375209867 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.37369715 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.37679146 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.377197288 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.374949738 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.375467627 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.380868874 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.397086138 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.376107375 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.375740545 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.376004564 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.3747001 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.376618037 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.376510842 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.380571792 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.385416875 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.380457726 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.384556484 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.378523487 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.384726736 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.376562306 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.380255384 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.385149601 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.374272883 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.375676946 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.376594168 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.377355236 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.383141953 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.399362818 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.37939699 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.381989613 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.37730493 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.378631177 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.377876468 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.376954763 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.377761984 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.378656277 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.384902542 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.399923478 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.382323529 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.379391131 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.375461427 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.377013808 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.378166013 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.376645324 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.380763107 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.377934199 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.378893573 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.378025582 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.378111001 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.378320293 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.378821802 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.379359654 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.375522988 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.378339016 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.385470485 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.401834463 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.384256335 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.379336913 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.385155548 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.40160254 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.385983997 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.401825304 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.379700085 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.379061168 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.380230824 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.379639516 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.379946311 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.380350417 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.379281314 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.38242825 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.383480986 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.380830029 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.382505064 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.380773939 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.380463017 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.38079765 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.390518174 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.405337941 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.383611133 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.385195509 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.378718621 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.383000462 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.385679253 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.381244654 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.380708585 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.383563796 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.39315019 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.389730713 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.381096892 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.382103718 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.381026089 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.381765164 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.381248428 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.381550737 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.381427364 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.3821818 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.381482656 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.381314002 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.383734861 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.381517428 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.38180187 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.383047548 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.384172007 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.391740862 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.403691916 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.382504762 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.382092307 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.38318292 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.382432351 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.382031841 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.382921485 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.383333107 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.382409071 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.384161279 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.389919516 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.389822769 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.384545434 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.381433949 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.383255594 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.382142384 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.383137404 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.383894189 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.383231383 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.383815334 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.384151223 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.383344876 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.384438859 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.384220287 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.383486769 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.384149091 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.383226994 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.386667039 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.392433281 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.382396626 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.380343186 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.383653717 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.383376955 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.383704013 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.384295658 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.39041435 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.408993632 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.395546268 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.393889925 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.388601096 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.38505871 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.388151664 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.393503008 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.384672261 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.384449109 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.385832488 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.385756435 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.386412536 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.389655176 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.38614717 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.391288877 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.406324331 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.384893865 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.392747238 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.407546772 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.385632081 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.387324396 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.389336141 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.384834439 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.38266523 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.385548104 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.38587919 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.390837552 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.408809116 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.385580082 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.38732707 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.385670103 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.388743491 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.391494486 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.386822234 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.386885225 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.383323456 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.386677321 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.386179015 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.386625758 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.3839444 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.386408618 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.386460639 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.39082484 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.393891457 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.384604186 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.388723619 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.387541784 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.388574043 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.388375162 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.388203495 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.38424205 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.384575704 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.38784563 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.387702485 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.387979574 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.390228949 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.38741274 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.389990456 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.389296263 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.388229043 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.392962515 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.400484027 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.396217805 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.385809179 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.388726312 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.389326463 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.390728673 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.389134203 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.389957345 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.389222576 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.389428153 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.388645655 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.38886308 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.390354495 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.393889523 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.405117425 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.410759775 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.389891997 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.389290352 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.391516191 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.389552886 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.38719129 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.389627176 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.391738434 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.394268522 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.398395736 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.391688199 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.395698155 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.411339807 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.392281678 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.39396351 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.393972715 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.398573655 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.393080578 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.390624287 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.391652108 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.395779668 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.407343354 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.390340257 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.401987712 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.420938682 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.412829174 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.390088249 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.390849247 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.391734992 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.391323508 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.392112529 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.390997043 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.391204851 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.391253312 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.391317832 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.394331822 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.397841599 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.39250909 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.392733311 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.391127564 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.390659111 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.392243136 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.388612097 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.392374121 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.392415269 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.392385685 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.392191712 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.39339955 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.393484826 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.403513422 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.420168173 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.391911026 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.392503822 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.389394512 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.395246756 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.395853492 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.404744445 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.400619505 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.393104428 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.393909869 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.394708579 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.392982924 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.391581559 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.393266154 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.392980253 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.392130859 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.390048389 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.405821853 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.421259912 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.398703292 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.394621453 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.395566796 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.394926319 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.395416613 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.394587967 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.394323257 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.394405336 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.398539975 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.39914391 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.395073942 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.394347392 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.398881095 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.402849611 seconds)
  done (took 822.875073498 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.393287777 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.392355234 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.392499201 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.391369214 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.392324935 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.393278058 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.392182022 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.392447204 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.392286996 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.393386621 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.39312172 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.393003631 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.393171966 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.392459225 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.39229222 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.392168853 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.393746249 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.392659914 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.393212789 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.393818389 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.394045401 seconds)
  done (took 30.556126981 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.396727576 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.393464087 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.392433814 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.396089905 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.394619302 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.396065402 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.393572507 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.395906356 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.396293024 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.394141875 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.396740672 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.396677934 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.393105902 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.393714857 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.394700417 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.396541154 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.397165531 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.394952623 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.396276643 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.394255052 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.39737316 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.395419125 seconds)
  done (took 32.004126385 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.398295787 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.397013576 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.397595713 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.394467219 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.398352621 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.394460476 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.397996349 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.398214546 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.397702924 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.397374731 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.397840464 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.40056699 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.406366023 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.403433093 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.399858719 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.398058636 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.542560569 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.399507944 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.399609075 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.399423057 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.396031922 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.40364875 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.416160146 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.395926559 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.398196845 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.399020767 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.39894793 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.398967739 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.400068612 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.400328149 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.402933971 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.399085417 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.39866388 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.400755032 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.399169119 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.401049953 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.404873368 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.399969718 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.397945503 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.399824135 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.411581914 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.420812338 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.400371682 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.405057587 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.419747955 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.39981649 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.404335716 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.409308903 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.39769784 seconds)
  done (took 70.109767607 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.40117498 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.401673144 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.397500257 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.399845961 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.400012831 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.400130848 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.401129435 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.401301831 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.39810467 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.398900053 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.401252701 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.399450765 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.397820959 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.40128948 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.40107511 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.397681461 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.398434669 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.398354974 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.398126817 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.398496251 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.398371049 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.402201409 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.402239223 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.399540704 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.401197918 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.39870056 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.399290058 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.401979338 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.399842575 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.399791297 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.402836785 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.401452683 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.402648292 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.399876153 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.399707279 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.402968246 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.402939762 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.400313904 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.404091824 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.401271027 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.402872686 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.403340132 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.403832257 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.403842234 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.400160297 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.401126317 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.400813552 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.400378196 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.401149885 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.404102807 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.403028832 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.401144108 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.404164721 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.400098458 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.404202466 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.404377899 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.401990371 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.401465565 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.40455994 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.401007842 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.401815303 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.404927879 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.401387483 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.403989351 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.4031579 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.401740754 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.403036011 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.403776728 seconds)
  done (took 96.598919712 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.404701481 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.404359585 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.404661502 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.40497222 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.406386901 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.405111941 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.405602078 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.405298925 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.404064424 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.404470332 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.404840903 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.406045075 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.405293456 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.405487968 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.405165393 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.407183856 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.405267869 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.406187567 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.40562496 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.4049888 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.406571589 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.406351594 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.40551402 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.405676646 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.407216292 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.40616119 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.406357231 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.405724323 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.407086676 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.406263822 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.40751282 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.406349099 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.407013555 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.407257933 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.407295926 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.407324724 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.406645782 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.407913779 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.407603344 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.408529071 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.407398497 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.407188308 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.408447024 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.407241758 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.408009215 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.408498799 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.407610986 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.408773752 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.407718072 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.408466861 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.408534032 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.408226615 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.408438454 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.408905902 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.408466863 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.407993011 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.408606772 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.408476204 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.408738705 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.409762861 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.408790646 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.408271986 seconds)
  done (took 88.542218246 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.409136134 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.408014247 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.405752559 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.406118389 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.408426505 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.405691019 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.408919193 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.409267942 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.408726699 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.408467113 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.408383244 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.406235915 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.406423317 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.40919094 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.407373961 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.405879667 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.406979749 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.406699209 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.409653135 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.407530508 seconds)
  done (took 29.472524499 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.408101877 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.409084702 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.407774021 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.408102602 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.409237716 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.408181354 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.409639374 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.409540519 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.407118249 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.411046336 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.410105855 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.410013966 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.407594337 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.408002027 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.410904344 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.407447271 seconds)
  done (took 23.86337079 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.409111757 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.411222334 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.411501288 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.412635934 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.407928318 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.407819289 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.411168653 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.408528086 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.409580402 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.412331378 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.410886259 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.411241725 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.411232913 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.411758104 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.409677137 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.411657703 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.408853544 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.409916201 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.412144745 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.411858537 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.409519932 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.409933599 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.412165199 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.412716351 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.410236946 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.410570556 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.410122455 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.410016817 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.410758396 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.412548628 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.410212756 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.410729565 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.410286126 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.410291474 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.412644757 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.410068876 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.41333396 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.413264881 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.413215268 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.414002303 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.413447254 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.410895758 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.412978848 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.414127548 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.411208899 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.413555827 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.410439206 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.411366352 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.411231076 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.411045529 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.413361506 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.414330754 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.414196821 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.414842132 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.413242494 seconds)
  done (took 78.951236957 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.41501388 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.414556524 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.412253291 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.414329659 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.413784858 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.411904441 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.414222669 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.413923111 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.412309382 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.414574395 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.413174389 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.415989183 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.411728291 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.414505916 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.412787878 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.415419326 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.412530805 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.413115045 seconds)
  done (took 26.770756552 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.413338924 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.413776803 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.415701963 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.413444626 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.412706382 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.416054319 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.412972797 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.416212603 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.41472644 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.413515941 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.41431372 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.417221745 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.416760784 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.416333314 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.414578598 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.413760455 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.417345733 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.417799165 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.414210907 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.412976958 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.417032799 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.415927283 seconds)
  done (took 32.456901894 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.417077585 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.415387441 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.416263934 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.433658435 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.436313911 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.439868436 seconds)
  done (took 9.885190741 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.425579467 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.416786583 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.414745816 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.418049669 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.417673868 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.414924651 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.41373765 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.415173304 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.417750662 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.414993976 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.415186246 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.417975168 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.417151396 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.414616243 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.417033135 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.415985124 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.415337496 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.415669576 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.415998512 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.417952417 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.415225846 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.418661305 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.415623566 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.415901738 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.415092891 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.415463008 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.418584319 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.416558158 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.416815406 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.418237313 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.418385504 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.415842899 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.419095356 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.416696967 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.419918133 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.419437363 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.416328063 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.419872809 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.418730007 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.416335763 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.419893302 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.420062647 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.419241998 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.417673847 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.420211117 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.418332493 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.417081393 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.417906821 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.417793004 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.421076833 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.421353277 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.418267477 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.419755007 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.420808944 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.421041349 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.421665574 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.418347515 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.417714064 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.421811916 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.418996425 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.417674455 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.421138095 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.418417387 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.418621622 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.420540173 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.418645971 seconds)
  done (took 94.936473396 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.419416108 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.417950015 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.418500434 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.419398706 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.417816319 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.419091252 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.418323655 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.419299064 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.419293447 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.41925862 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.421172728 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.418676693 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.419679996 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.419757937 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.419693251 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.41929454 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.418544681 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.418819208 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.418990858 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.422985188 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.418864213 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.418462099 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.419299284 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.420029158 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.419941801 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.423086433 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.420150051 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.420158362 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.419565153 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.420256119 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.419654129 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.420467079 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.421047732 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.420016438 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.420311226 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.420470313 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.420695967 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.420370796 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.420017954 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.424283939 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.42062265 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.423306285 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.420547914 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.420612904 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.420620512 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.421096387 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.42114585 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.421136068 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.420807343 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.421410983 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.42171193 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.422348113 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.422396416 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.421602091 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.421651235 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.420625447 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.421550033 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.421725998 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.422704514 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.425174764 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.421630446 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.422045688 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.425940148 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.422697404 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.422310243 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.422620171 seconds)
  done (took 95.097026287 seconds)
done (took 1918.970096454 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.533174929 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.46304601 seconds)
  done (took 14.330724075 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.588772143 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.54647022 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.424157461 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.446443798 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.425288425 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.447366128 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.420558671 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.424329094 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.424062459 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.424505046 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.424843744 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.613783211 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.465526836 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.42561748 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.424621661 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.519419772 seconds)
  done (took 44.787962213 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.453128898 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.430192768 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.557141154 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.448642797 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.453159456 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.639774256 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.492210687 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.430029853 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.623901441 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.473206169 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.182630557 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.455222153 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.429851046 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.675838237 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.451089423 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.641192413 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.707577963 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.189340945 seconds)
  done (took 33.07044125 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.94500383 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.428330676 seconds)
  done (took 9.71127507 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.455232914 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.441570225 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.460735825 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.430606061 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.454760672 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.510559284 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.441797672 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.463252665 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.460683531 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.504061363 seconds)
  done (took 65.96647116 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.452803287 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.431165596 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.431223024 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.429037207 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.422201141 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.441894213 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.431328306 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.428740957 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.641459383 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.57309317 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.434112331 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.436855362 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.450331621 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.431256366 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.42815408 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.46655868 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.599675394 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.428960681 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.427180785 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.434121878 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.429779236 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.522853802 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.477299937 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.428344092 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.573445156 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.628254945 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.434329231 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.43556042 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.577053174 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.428782289 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.430852056 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.431152309 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.432725861 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.065950813 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.935750713 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.443878874 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.457299797 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.43934988 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.42782444 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.587678269 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.432581838 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.437400471 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.422970823 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.949502942 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.582782038 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.5599025 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.823308729 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.45298886 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.433483266 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.497781312 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.43343104 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.433868185 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.464252818 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.233440174 seconds)
  done (took 118.306135807 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.432030917 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.817076491 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.59900514 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.451293927 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.303208618 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.200067436 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.445946914 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.755907963 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.484656906 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.42784097 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.725700568 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.983224623 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.454326771 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.473761146 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.962691316 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.502074264 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.426984913 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.320468634 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.446766384 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.430751677 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.96103013 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.428277123 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.431733041 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.59381658 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.468610629 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.924017519 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.021594412 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.902488684 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.449147757 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.42747298 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.941697312 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.45196314 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.432582396 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.427313455 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.710713392 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.82845845 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.819733101 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.454297557 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.477296295 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.4324791 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.456826579 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.920764977 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.830302331 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.448312617 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.42845196 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.924417295 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.449083635 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.434374706 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.434411531 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.643390618 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.109500277 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.428382423 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.001849288 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.431141742 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.793172286 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.436903592 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.497091768 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.954040583 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.448418154 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.665760018 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.501168238 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.431772889 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.431745392 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.432734167 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.433547918 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.81957668 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.78230887 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.43041609 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.816365285 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.957484759 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.44937953 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.008782438 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.297014338 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.456987438 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.474795027 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.429937166 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.056253064 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.9660079 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.479756164 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.430191696 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.805008431 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.454636827 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.734386264 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.449913378 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.450526095 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.97107241 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.439120508 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.472669545 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.431509213 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.437110503 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.213670876 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.432741201 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.738968891 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.450299113 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.430538551 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.431643524 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.477398254 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.431977634 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.452041906 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.432931809 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.010192256 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.460521084 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.430567223 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.452001331 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.43258127 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.457296713 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.43247156 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.43228412 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.668293863 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.993341466 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.458095147 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.436160426 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.43352055 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.437531011 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.600965951 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.436782795 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.781762814 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.454734772 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.432897856 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.454264985 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.242590352 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.502329113 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.432736396 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.4551833 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.351711395 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.642952998 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.454832256 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.433793251 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.434230074 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.45425487 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.838236377 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.45581906 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.455132519 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.437736407 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.185577781 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.483084286 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.437456253 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.76561151 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.438605202 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.434163637 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.461912798 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.434428243 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.735182425 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.722697254 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.695808752 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.434675619 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.455367567 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.186616942 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.484594132 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.584899123 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.457770838 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.439468349 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.635607883 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.620348672 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.435141583 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.075168543 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.436370179 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.661531374 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.442106512 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.747703105 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.975456657 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.455020233 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.436581091 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.190522426 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.164040691 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.291510288 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.438210572 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.733696516 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.45013898 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.925166813 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.436002707 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.43601658 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.038803189 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.437902837 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.44200846 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.435826004 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.436598632 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.574870757 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.614232953 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.630365528 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.438163426 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.930567783 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.513898228 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.437669456 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.438907826 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.440451898 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.783519101 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.454683968 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.441937472 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.454280963 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.438868467 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.443324865 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.953051035 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.34906574 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.438362859 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.593449958 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.125959089 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.458029775 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.439022797 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.136693678 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.744936493 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.03361819 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.506149932 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.789254406 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.463152705 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.479403013 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.248681979 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.497054766 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.952943866 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.462089278 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.439331783 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.08706283 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.459198876 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.539507205 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.440028569 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.437875411 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.028713089 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.45914803 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.440974042 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.827522485 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.460774843 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.719824412 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.440165344 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.451449969 seconds)
  done (took 1137.380892774 seconds)
done (took 1424.888609349 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.439205591 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.43929325 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.429220129 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.446338653 seconds)
  done (took 27.109406929 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.449366539 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.447079339 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.447457783 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.445880359 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.446634428 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.446130981 seconds)
  done (took 10.037895875 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.677857675 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.439810534 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.445781827 seconds)
  done (took 19.919235471 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.677276439 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.903695742 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.850985361 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 4.016517833 seconds)
  done (took 11.804437225 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.448555698 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.448968562 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.448419087 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.448906201 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.450307867 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.450224809 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.449743044 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.448150509 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.450920637 seconds)
  done (took 14.399497228 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.859442815 seconds)
done (took 90.483684081 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.202650833 seconds)
    (2/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.188527508 seconds)
    (3/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.462094037 seconds)
    (4/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.423413115 seconds)
    (5/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.536304575 seconds)
    (6/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.503662574 seconds)
    (7/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.461745445 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.467339675 seconds)
    (9/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.732958472 seconds)
    (10/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.970447185 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.511352479 seconds)
    (12/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.451967614 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.715904729 seconds)
    (14/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.934381449 seconds)
    (15/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.424068365 seconds)
    (16/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.351817058 seconds)
    (17/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.443027893 seconds)
    (18/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.483957411 seconds)
    (19/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.530979399 seconds)
    (20/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.423430541 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.226561983 seconds)
    (22/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.470195153 seconds)
    (23/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.423689675 seconds)
    (24/309) benchmarking ("map", identity, BigInt, true)...
    done (took 3.070800775 seconds)
    (25/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.437378969 seconds)
    (26/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.424618942 seconds)
    (27/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.204115814 seconds)
    (28/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 3.03800908 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.875183082 seconds)
    (30/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.597496418 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.42421579 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.56289257 seconds)
    (33/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 6.158321347 seconds)
    (34/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.474198358 seconds)
    (35/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.491580044 seconds)
    (36/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.735427303 seconds)
    (37/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.425522406 seconds)
    (38/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.918527711 seconds)
    (39/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.552201422 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.545065533 seconds)
    (41/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.862415841 seconds)
    (42/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.060714287 seconds)
    (43/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.471170648 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.518206664 seconds)
    (45/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.862166841 seconds)
    (46/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.499708516 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.462635408 seconds)
    (48/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.451380525 seconds)
    (49/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.447185781 seconds)
    (50/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.426839136 seconds)
    (51/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.471639232 seconds)
    (52/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.425781108 seconds)
    (53/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.427405522 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.762500792 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.556014238 seconds)
    (56/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.471565662 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.721938174 seconds)
    (58/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.936724665 seconds)
    (59/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.50533342 seconds)
    (60/309) benchmarking ("sort", Float64, false)...
    done (took 5.849572348 seconds)
    (61/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.426963923 seconds)
    (62/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.470274433 seconds)
    (63/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.03186939 seconds)
    (64/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.510216625 seconds)
    (65/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.426318692 seconds)
    (66/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.427495454 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.581410566 seconds)
    (68/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.971967286 seconds)
    (69/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.458856217 seconds)
    (70/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.505949113 seconds)
    (71/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.367543809 seconds)
    (72/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.42734614 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.450638755 seconds)
    (74/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.550250491 seconds)
    (75/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.446121682 seconds)
    (76/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.445606298 seconds)
    (77/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 3.007554658 seconds)
    (78/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.434811704 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.297951433 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 3.079348969 seconds)
    (81/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.440224976 seconds)
    (82/309) benchmarking ("sort", Int64, false)...
    done (took 5.71354351 seconds)
    (83/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.652698039 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.437065305 seconds)
    (85/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.626775731 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.768382134 seconds)
    (87/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.283263265 seconds)
    (88/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.463499926 seconds)
    (89/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.66685905 seconds)
    (90/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.428952612 seconds)
    (91/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.543037369 seconds)
    (92/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.455603951 seconds)
    (93/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.233443066 seconds)
    (94/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.49427115 seconds)
    (95/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.474726627 seconds)
    (96/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.30723613 seconds)
    (97/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 4.063172501 seconds)
    (98/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.768940168 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.237127985 seconds)
    (100/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.150054677 seconds)
    (101/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.164975655 seconds)
    (102/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.542078562 seconds)
    (103/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.532916486 seconds)
    (104/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.429392011 seconds)
    (105/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.69280886 seconds)
    (106/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.449222391 seconds)
    (107/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.553489081 seconds)
    (108/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.448231325 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 6.150877918 seconds)
    (110/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.472649674 seconds)
    (111/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.560823633 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.872005239 seconds)
    (113/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.97710257 seconds)
    (114/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.451466017 seconds)
    (115/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.164329209 seconds)
    (116/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.241923742 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.449213499 seconds)
    (118/309) benchmarking ("sort", Bool, false)...
    done (took 1.977459354 seconds)
    (119/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.492452595 seconds)
    (120/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.466805147 seconds)
    (121/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.474551999 seconds)
    (122/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.723751729 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.540322933 seconds)
    (124/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.475560765 seconds)
    (125/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.369994064 seconds)
    (126/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.452359835 seconds)
    (127/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.312290379 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.466914975 seconds)
    (129/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.436139674 seconds)
    (130/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.711623116 seconds)
    (131/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.303261154 seconds)
    (132/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.436793042 seconds)
    (133/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.817590059 seconds)
    (134/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.551910488 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.312364679 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.338508837 seconds)
    (137/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.579780495 seconds)
    (138/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.466099542 seconds)
    (139/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.540331997 seconds)
    (140/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.449950339 seconds)
    (141/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.594104706 seconds)
    (142/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.573037976 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.43015284 seconds)
    (144/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.503523121 seconds)
    (145/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.354402711 seconds)
    (146/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.476492981 seconds)
    (147/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.431510936 seconds)
    (148/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.958064374 seconds)
    (149/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.542433868 seconds)
    (150/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.457265901 seconds)
    (151/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.434021473 seconds)
    (152/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.452360608 seconds)
    (153/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.478717682 seconds)
    (154/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.757289413 seconds)
    (155/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.748955391 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.492325811 seconds)
    (157/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.473924053 seconds)
    (158/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.432313152 seconds)
    (159/309) benchmarking ("sort", Int8, false)...
    done (took 4.550950134 seconds)
    (160/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.957688011 seconds)
    (161/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.432935808 seconds)
    (162/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.48184997 seconds)
    (163/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.443765298 seconds)
    (164/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.689313235 seconds)
    (165/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.566530289 seconds)
    (166/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.602536743 seconds)
    (167/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.236161113 seconds)
    (168/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.499590659 seconds)
    (169/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.318446399 seconds)
    (170/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.516464901 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.231960518 seconds)
    (172/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 3.053809095 seconds)
    (173/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.566175533 seconds)
    (174/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.839757078 seconds)
    (175/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.355489873 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 4.116739533 seconds)
    (177/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.614666958 seconds)
    (178/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.716706302 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.168663624 seconds)
    (180/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.920623015 seconds)
    (181/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.272554595 seconds)
    (182/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.455879784 seconds)
    (183/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.453517991 seconds)
    (184/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.462693258 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.900743974 seconds)
    (186/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.60022308 seconds)
    (187/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.480164578 seconds)
    (188/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.574710763 seconds)
    (189/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.499034869 seconds)
    (190/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.435500305 seconds)
    (191/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.800616574 seconds)
    (192/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.453134385 seconds)
    (193/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.47412444 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.545464053 seconds)
    (195/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.462559771 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.47569868 seconds)
    (197/309) benchmarking ("sort", Float32, false)...
    done (took 5.507330253 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.849680114 seconds)
    (199/309) benchmarking ("sort", BigInt, false)...
    done (took 6.473735451 seconds)
    (200/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.436035337 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.424320767 seconds)
    (202/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.619614637 seconds)
    (203/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.470042733 seconds)
    (204/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.539433268 seconds)
    (205/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.463095948 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.510930683 seconds)
    (207/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.455813299 seconds)
    (208/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.275115879 seconds)
    (209/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.495464298 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.113379744 seconds)
    (211/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.20772493 seconds)
    (212/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.316302243 seconds)
    (213/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.464831922 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.791153204 seconds)
    (215/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.473395472 seconds)
    (216/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.251245677 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.512804231 seconds)
    (218/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.520140649 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.66768569 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.101668487 seconds)
    (221/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.207368629 seconds)
    (222/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.794765541 seconds)
    (223/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.481308975 seconds)
    (224/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.438920182 seconds)
    (225/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.520720777 seconds)
    (226/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.436220908 seconds)
    (227/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.444430248 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.915612473 seconds)
    (229/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.457702357 seconds)
    (230/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.4817508 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.25233816 seconds)
    (232/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.479635888 seconds)
    (233/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.367329533 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.456843855 seconds)
    (235/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.119783972 seconds)
    (236/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.516728668 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.437590443 seconds)
    (238/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 3.000653777 seconds)
    (239/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.308881903 seconds)
    (240/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.5179734 seconds)
    (241/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.457777366 seconds)
    (242/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.846807077 seconds)
    (243/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.110543778 seconds)
    (244/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.439362271 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.476248543 seconds)
    (246/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 3.12849662 seconds)
    (247/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.893419666 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.485952421 seconds)
    (249/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.655194655 seconds)
    (250/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.466964218 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.498099997 seconds)
    (252/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.539543731 seconds)
    (253/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.438839164 seconds)
    (254/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.538924432 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.163883026 seconds)
    (256/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.477337727 seconds)
    (257/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 3.121664915 seconds)
    (258/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.590489399 seconds)
    (259/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.45789718 seconds)
    (260/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.712053456 seconds)
    (261/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.515824593 seconds)
    (262/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.65524078 seconds)
    (263/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.493754791 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.917513494 seconds)
    (265/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.30881994 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.492696534 seconds)
    (267/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 4.095365541 seconds)
    (268/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.89121202 seconds)
    (269/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.542084712 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.843971193 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.504108977 seconds)
    (272/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.486216452 seconds)
    (273/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.655817589 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.528794949 seconds)
    (275/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.479991819 seconds)
    (276/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.47023594 seconds)
    (277/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.471546379 seconds)
    (278/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.787208262 seconds)
    (279/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.558354825 seconds)
    (280/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.260152379 seconds)
    (281/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.518922069 seconds)
    (282/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.694636849 seconds)
    (283/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.585880895 seconds)
    (284/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.474790121 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.542310481 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.542060796 seconds)
    (287/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.545938245 seconds)
    (288/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.186506938 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.578433782 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.362390998 seconds)
    (291/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.467738322 seconds)
    (292/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.443045829 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.317719666 seconds)
    (294/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.459895983 seconds)
    (295/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.461347557 seconds)
    (296/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.41244158 seconds)
    (297/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.015976185 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.503540576 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.898236415 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.857614747 seconds)
    (301/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.495090953 seconds)
    (302/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.450792831 seconds)
    (303/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.460167034 seconds)
    (304/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.542511304 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.484092775 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 4.141458147 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.506754469 seconds)
    (308/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.442170483 seconds)
    (309/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.641214449 seconds)
  done (took 1090.114928275 seconds)
done (took 1091.47154407 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.494619692 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.48956001 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.471993562 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.493965625 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.584345263 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.502195127 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.483358626 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.474480346 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.519919423 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.521743725 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.471419858 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.500016408 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.474056233 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.474455215 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.472267856 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.4881142 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.644437607 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.474813344 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.490255261 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.481797097 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.489470686 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.471814386 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.522731774 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.500163978 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.477446685 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.475214241 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.477453933 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.493160446 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.585398763 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.47799257 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.477593781 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.484359696 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.642607386 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.473095833 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.468387978 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.494274322 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.485545961 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.483325387 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.478342915 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.50584734 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 3.106649096 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.493608082 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.476086692 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.475708105 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.475545628 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.479596564 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.475736761 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.481823132 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.488644384 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.49103037 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 3.095169891 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.510330382 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.478630196 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.476336642 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.486178415 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.475657369 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.480284977 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.493428921 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.495278065 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.494441642 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.632148147 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.481186952 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.479053507 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.493000373 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.484699528 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 3.136208879 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.492286699 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.481951019 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 3.110597249 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.502229078 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 3.136796993 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.506566772 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.47874683 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.491373027 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.509829177 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.648080536 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.472698285 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.476845538 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.485187722 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.475240918 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.487228202 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.49096335 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.483067853 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.478023186 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.49320898 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.504570477 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.487721524 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.478837005 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.486705856 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.497310552 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.486022721 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.489678675 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.482061051 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.473493862 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.487978821 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.482122024 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.482298819 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.482257047 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.483117756 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.489399106 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 3.112273226 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.518136736 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.476054486 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.47601 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.477975545 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.493648916 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 3.112334625 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.500550397 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.501808925 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.527239046 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.4808513 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.637576914 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.483495424 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.500032344 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.491502452 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.484132955 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.475257478 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.640220726 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 3.110632332 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.515770531 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.482256346 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.479876008 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.499578246 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.481100923 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.477357273 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.655630048 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.48307837 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.496106528 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.602805366 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.492099209 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.512509916 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.480487891 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.484787648 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.509623399 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.499893472 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.513918922 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.485234638 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.499438321 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.497440478 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.477766444 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.492694265 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.49277408 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.483255889 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.488620942 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.476516249 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.50905544 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.496044359 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.496860376 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.501904734 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.603082752 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.478874264 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.680110054 seconds)
done (took 250.311509896 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.542039639 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.476087687 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.563129372 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.477632984 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.581434184 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.581226378 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.47661027 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.475846793 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.476792818 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.857548491 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.476436578 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.475766633 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.469669801 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.476954975 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.561049923 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.479654061 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.476804609 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.822000695 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.479247614 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.550267514 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.478698833 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.476961657 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.478984403 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.859846133 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.474725527 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.47697394 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.549175091 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.479071612 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.824579509 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.472165694 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.476948827 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.823307919 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.570017922 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.497134878 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.489515439 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.486916845 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.584624358 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.502330076 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.560727654 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.561585917 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.565237105 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.51857698 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.476483744 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.475963449 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.482403693 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.481991471 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.479589346 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.508010523 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.476319905 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.480052518 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.824856681 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.490457972 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.489047562 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.478924801 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.479966676 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.503136224 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.479228929 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.483213557 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.573238416 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.483310481 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.545417926 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.863677411 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.862046298 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.481932986 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.480389521 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.480278463 seconds)
  done (took 158.230087417 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.549900617 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.554892889 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.605013755 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.5038648 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.534945507 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.608960418 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.503836368 seconds)
  done (took 12.248996384 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.490377322 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.484377682 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.533661757 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.533040307 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.483934363 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.638148399 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.483981242 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.495434199 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.481508083 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.538061695 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.483736026 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.484732483 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.489499681 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.475890773 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.532653447 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.496001439 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.599298873 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.484880774 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.485563831 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.641498366 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.481905706 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.491765983 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.537195754 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.496194052 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.485439241 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.490900828 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.054709942 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.485026841 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.482256099 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.485140598 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.481620667 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.521562403 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.486166414 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.484122799 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.482286886 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.601288505 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.485518482 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.482796757 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.48607697 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.480739793 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.48604465 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.485677452 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.486623167 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.484265119 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.486669557 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.508886683 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.486281985 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.486284422 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.486309496 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.486762191 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.538127819 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.486517482 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.484309599 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.483908734 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.543297353 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.492790453 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.487826521 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.484517582 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.487624778 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.484790024 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.642814401 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.542292664 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.485640959 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.534434368 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.487362607 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.486990321 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.487609452 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.486705756 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.542287019 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.487077281 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.536472339 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.484990154 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.642130107 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.510955946 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.488638369 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.490044233 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.489991016 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.487798424 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.482080112 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.495543364 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.48568623 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.489282412 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.494414175 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.485396122 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.485067641 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.590598045 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.59686301 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.485358205 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.501876331 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.495694234 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.484769463 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.541427633 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.489501614 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.485970917 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.540310862 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.603913102 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.542368997 seconds)
  done (took 168.159170149 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.493922937 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.49729997 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.490828095 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.505374819 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.49041178 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.489443863 seconds)
  done (took 10.361502071 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.493048852 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.491013021 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.489575167 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.489638828 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.491150005 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.489617028 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.490899104 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.492050722 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.49475635 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.4906308 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.489599418 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.489440196 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.490175422 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.489939458 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.49256706 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.490632686 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.491368782 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.48893999 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.490945944 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.492320922 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.585232914 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.491630584 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.491566986 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.493624058 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.495171837 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.491477296 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.4994528 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.491649389 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.490932522 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.5016811 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.515153939 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.491382625 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.494200857 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.498712509 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.495675344 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.493054186 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.49693268 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.491702727 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.489372323 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.491024005 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.491387234 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.493547241 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.49314633 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.491341317 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.494649299 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.499085654 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.496419631 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.500989891 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.492893813 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.492852789 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.493324734 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.492382543 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.49234435 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.492688204 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.495804175 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.517596243 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.497128131 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.494483878 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.495166711 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.49541205 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.495766104 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.493748423 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.497378929 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.49804528 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.501733559 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.494002615 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.495880976 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.498767299 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.494688128 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.495562922 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.494720021 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.492708701 seconds)
  done (took 110.070790594 seconds)
done (took 460.453949373 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.604194083 seconds)
  done (took 8.002664538 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.799242966 seconds)
  done (took 8.198637932 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.766975568 seconds)
  done (took 26.173475109 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.606937447 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.575280614 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.516920933 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.489742803 seconds)
  done (took 27.589978159 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.897373662 seconds)
  done (took 8.298189525 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.489340569 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.48886405 seconds)
  done (took 14.380175002 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.407287736 seconds)
  done (took 8.807254868 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.494757987 seconds)
  done (took 7.89808966 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.503228958 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.516071069 seconds)
  done (took 14.431058666 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.47088207 seconds)
  done (took 7.870571138 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.835633798 seconds)
  done (took 9.235062763 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.496040911 seconds)
  done (took 7.897100791 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.561980151 seconds)
  done (took 7.961522771 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.763262473 seconds)
  done (took 11.163214586 seconds)
done (took 169.304515767 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.48853645 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.489692054 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.488661337 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.490266514 seconds)
  done (took 27.357237313 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.529987727 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.530090292 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.531432827 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.54134749 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.533940172 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.530880296 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.523282536 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.522472647 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.540880521 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.534902476 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.532559164 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.533288052 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.529915515 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.521227946 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.532495538 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.532980782 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.541927997 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.532354818 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.52297871 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.534576678 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.49847456 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.541975991 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.533861571 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.498480455 seconds)
  done (took 38.108077053 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.026128403 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.572946802 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.653516653 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.551646127 seconds)
  done (took 8.206042039 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.550279176 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.551293485 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.568111693 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.604502351 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.63766019 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.561180278 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.525119599 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.520393523 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.506763455 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.552557278 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.627174915 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.568041286 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.658674719 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.498338215 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.678895693 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.49887847 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.498516983 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.551712388 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.603726633 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.625708871 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.499255719 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.552156214 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.554867776 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.568887711 seconds)
  done (took 38.965477868 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.499125951 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.507357913 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.499508063 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.498320543 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.50741498 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.499263926 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.499122188 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.50037327 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.499156194 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.505116091 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.497422844 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.51198108 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.498798816 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.499723761 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.505943413 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.500290123 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.505678271 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.498877493 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.499007544 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.504969512 seconds)
  done (took 31.441471022 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.493487677 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.421364583 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.847450214 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.751058197 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.495166086 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.495481463 seconds)
  done (took 28.909257122 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.586651059 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.753676421 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.501963993 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.924930703 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.022375942 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.522711546 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.502918297 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.779277072 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.173528115 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.171925563 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.577988518 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.581455435 seconds)
  done (took 22.504309096 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.512855472 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.502997151 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.509845614 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.518513067 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.567426737 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.526181238 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.509242047 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.496238179 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.574689856 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.592463296 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.5263256 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.568493012 seconds)
  done (took 39.811515487 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.582980119 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.544586389 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.599329445 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.523134749 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.22261675 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.70919203 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.503945738 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.010204054 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.500714771 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.769601053 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.515341922 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.586285911 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.755974768 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.514455264 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.499066532 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.628418212 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.746795451 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.088583886 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.506151093 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.000561241 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.524024158 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.508823464 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.119077524 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.532927365 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.709683792 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.644559127 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.758719525 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.276753453 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.843623391 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.510702465 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.508444816 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.499030877 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.773607759 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.218082141 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.616744425 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.509622408 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.500518361 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.130365972 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.503125851 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.00824558 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.509647803 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.500975625 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.509660261 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.500325724 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.433962897 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.499603107 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.999761445 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.506079441 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.211248109 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.499783546 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.511736634 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.594930817 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.503501244 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.074027631 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.517428322 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.507436331 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.497786086 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.524907173 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.092950559 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.490664165 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.519762903 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.441569954 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.516490442 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.089583566 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.225038835 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.62506134 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.503934307 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.505067038 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.435377585 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.057974549 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.517959088 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.639163009 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.524560093 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.162504076 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.310283915 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.525047103 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.432583268 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.141940356 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.506630054 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.44428728 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.731811896 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.277416513 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.441003639 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.451585107 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.4369066 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.313587106 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.508607345 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 5.013569449 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.520595686 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.013069141 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.513378664 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.519492274 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.525134917 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.727920187 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.381986008 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.50409662 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.50759074 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.621313574 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.524784855 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.99173867 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.437845223 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.507320939 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.761671937 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.715711155 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.503405198 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.638535802 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.769024646 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.503641058 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.52279693 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.519969416 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.522028863 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.197122835 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.54528764 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.485770567 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.522302265 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.279562048 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.338186002 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.506016352 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.605413155 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.511635763 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.781126107 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.384197748 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.387732832 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.572131268 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.510493553 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.505916787 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.114204265 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.101952161 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.387205415 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.501681276 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.509467122 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.52263562 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.504908724 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.465357326 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.503849373 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.506325165 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.284799984 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.730937468 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.51223417 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.781247965 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.439682164 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.644269196 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.522942051 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.729525851 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.852715395 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.526181753 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.768042351 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.507423118 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.510323207 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.518734858 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.525736373 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.607855693 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.530377426 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.50822264 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.772419263 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.510824754 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.510632469 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.140773694 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.285036536 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.515975236 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.513281488 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.522784338 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.198545419 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.506484611 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.511237047 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.4009973 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.521733263 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.575424019 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.514526497 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.519252545 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.66800515 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.55454904 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.512929756 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.516391735 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.733565421 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.520033713 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.121516141 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.589710464 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.745208069 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.209644099 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.549481416 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.441947738 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.219200115 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.20042319 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.509488951 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.698975136 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.509290774 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.518579485 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.519378317 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.508522705 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.229368076 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.539875443 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.053213631 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.516872489 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.519974151 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.515846448 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.510452496 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.613441188 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.537576619 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.512504683 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.549953269 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.651266972 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.524581142 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.44481652 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.026520914 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.514734015 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.511117464 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.288221454 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.544193795 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.039669508 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.031566781 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.771473382 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.516757835 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.522468149 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.235640106 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.548709525 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.515360462 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.518516973 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.521762928 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.544439964 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.540585385 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.521914456 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.107477383 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.885850821 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.076758365 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338105079 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.189168856 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.587895675 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.513259926 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.411995311 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.001096672 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.445330349 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.172408575 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.731226634 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.023795346 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.46880039 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.75658544 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.86838121 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.414278059 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.523711059 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.74146682 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.556222231 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.530885276 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.524697807 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.723932555 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.547677055 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.526931498 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.449706107 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.032333309 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.812806681 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.527677655 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.591165044 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.003849019 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.514497411 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.293900139 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.589028414 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.971280494 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.735183399 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.061306231 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.908976158 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.524033415 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.521370772 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.032611339 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.516555254 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.044603205 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.230970901 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.542862619 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.762335524 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.454165704 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.52510938 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.525299105 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.51167956 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.117661733 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.529503088 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.771620685 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.527064318 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.450033659 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.526261991 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.167316939 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.402544349 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.520241678 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.515677398 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.364529928 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.519704849 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.85757563 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.526960057 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.612693598 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.539705128 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.450181064 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.449890183 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.208595172 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.524571353 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.486336252 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.112407279 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.538799868 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.534683409 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.516664873 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372827097 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.774012534 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.53010553 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.223797113 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.772478493 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.526057528 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.540085198 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.617913454 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.534994115 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.499764617 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.410520281 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.75161135 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.52761072 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.742580764 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.607559331 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.417152796 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.537240851 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.72900332 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.430420044 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.530693643 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.817351177 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.256383475 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.516976189 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338510467 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.564996879 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.531115401 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.537235189 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.538160526 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.538158856 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.61105116 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.5313871 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.529504469 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.529431953 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.719699126 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.53645522 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.522678687 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.532767168 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.613701924 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.548240069 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.618091944 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.291526767 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.232384669 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385577723 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.255494562 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.562648378 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.519116407 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.520756353 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.454743177 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.671015352 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.048840314 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.793084261 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.639951226 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.537074169 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.543788935 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.529276782 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.5217495 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.741196787 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.79707035 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.496744663 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.528261033 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.316525271 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.403866908 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.533035653 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.731759191 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.118717292 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.173096098 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.64335565 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.539307955 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.01676286 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.795073706 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.613539165 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.52185181 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.119038566 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.531168534 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.015737217 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.552148724 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.52957869 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.669654187 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.531342673 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.242297775 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.555035409 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.681529115 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.296214699 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.172713569 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.780308926 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.110258721 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.534679269 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.243906427 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.408160319 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.795848722 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.592912686 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.532699656 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.63069208 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.670572187 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.531697177 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.416450577 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.524351243 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372407892 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.233414542 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.533015917 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.238519107 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.818076555 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.521118128 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.533245781 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.546963403 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.534224901 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.747379808 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.330835756 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.747244207 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.537043242 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.533325395 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.098252902 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.240084908 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.566051767 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.458375534 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.527922093 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.82208558 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.791039432 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.547317339 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.9780311 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.236523878 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.160450181 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.49980919 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.548005076 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.526296928 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.386926803 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.246543573 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.660957718 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.130147446 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.18901691 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.526141336 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.804139649 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.53066188 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.536097166 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.810317381 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.529293615 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.531954084 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.546552971 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.241904872 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.445416558 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.531081721 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.108143316 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.462579092 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.754650225 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.544926178 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.463366635 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.527653986 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.735741251 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.526762159 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.64681171 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.538857881 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.533028953 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.526752244 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.281519723 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.808014863 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.53322944 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.530147576 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.510092006 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.529184852 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.57745938 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.853148044 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.531537488 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.202124362 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.881010862 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.785713013 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.529975465 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.515942622 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.532192313 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.527241483 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.252818708 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.54677289 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.548293723 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.180576847 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.532248061 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.54703416 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.532257165 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.745566096 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.739667005 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.542035192 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.54191352 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.529176872 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.550782703 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.434736705 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.301263342 seconds)
  done (took 1746.196826195 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.532156125 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.55910487 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.559754791 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.609403863 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.559064793 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.680569751 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.642829221 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.673396522 seconds)
  done (took 54.254140444 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.539585662 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.690990072 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.563923249 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.53420792 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.539548104 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.534833515 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.050262458 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.564160566 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.539489033 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.540939407 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.530110934 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.547460241 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.282848897 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.539293137 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.543921783 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.515004412 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.538573667 seconds)
  done (took 69.039619165 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.530826983 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.604875872 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.574995963 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.530735178 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.31770599 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.552891495 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.172641816 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.621464468 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.548820978 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.764898917 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.185775248 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.585061714 seconds)
  done (took 83.430093851 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.53894859 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.5392477 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.540168135 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.540444396 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.540138693 seconds)
  done (took 9.138360213 seconds)
done (took 2198.763672599 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.777727451 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.391643629 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.290265449 seconds)
  done (took 6.1217716 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.68089625 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.731611347 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.877427006 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.864155332 seconds)
  done (took 8.596083185 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.812173174 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.907222931 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.727587269 seconds)
  done (took 6.887703143 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 3.218818497 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.548584833 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.55710024 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.534530168 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.541736235 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.542647008 seconds)
  done (took 21.061070359 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.538174172 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.539720692 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.537359553 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.539693152 seconds)
  done (took 7.597737532 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.515383727 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.24139696 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.515098738 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.532819395 seconds)
  done (took 19.246270384 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.284165234 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.297020612 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.281251693 seconds)
  done (took 8.304612955 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.554092466 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.383186401 seconds)
  done (took 10.379252374 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.83874009 seconds)
  done (took 3.280104699 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.670725529 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.866767585 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.827324073 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.708948816 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.860682779 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 6.106858511 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.554353341 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 3.044541568 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.682694881 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 4.140830511 seconds)
  done (took 32.906340195 seconds)
done (took 143.921670032 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.935483037 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.93853375 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.737007974 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.904174942 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.768808816 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.73718224 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.850083413 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.87180296 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.412972307 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.401278371 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.947564339 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.770159564 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.792659121 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.938722823 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.794194766 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.560701967 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.769615286 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.972604634 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.538185778 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.539824515 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.852565499 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.541893569 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.781822884 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.559859824 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.769636085 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.689593956 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.123140983 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.562068899 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.553131477 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.133309642 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.69039157 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.553972517 seconds)
  done (took 205.43639313 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.538328843 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.55901842 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.53868495 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.537419315 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.537327208 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.559527159 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.562199035 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.558791469 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.559714969 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.554665865 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.538502814 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.558944113 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.557603197 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.555286046 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.53724316 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.538228819 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.555601388 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.550078936 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.545596894 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.538990552 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.539506351 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.541529661 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.538539376 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.539634956 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.561160653 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.557872444 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.54021455 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.562850993 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.539708003 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.560873148 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.559312925 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.540984869 seconds)
  done (took 211.010282234 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.541286868 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.540097936 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.540115134 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.540001684 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.539855526 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.541566729 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.542513523 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.54031336 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.560889335 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.569443429 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.552509657 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.540383068 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.561926788 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.547203678 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.541965297 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.554398707 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.550483888 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.540892764 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.560897557 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.56073047 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.54264814 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.557428822 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.540773131 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.540550752 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.544304706 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.540976816 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.563065232 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.542155532 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.541706069 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.552065965 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.543126911 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.57070447 seconds)
  done (took 210.994021821 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.74525843 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.548560607 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.549794797 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.508080505 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.549391691 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.549076784 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.549214369 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.739450167 seconds)
  done (took 16.188565649 seconds)
done (took 645.07114002 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 4.039499331 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.793504679 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.769872653 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.56954032 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.496583776 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.591648628 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.567080719 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.760691777 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.552130123 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.775324273 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.915376209 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.588951797 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 3.068298441 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.567766778 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.849296968 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.677072848 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.493233668 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.629566004 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.917739871 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.231259772 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.858773557 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.150112176 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.787547205 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.545493456 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 3.085415146 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.14421634 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.408402617 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.487362706 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.590236052 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.925397142 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.452939415 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.682128381 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.644759114 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.646075199 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.701587127 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.681948297 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.645399781 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.642416675 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.790896385 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.901211807 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.241299 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.354306935 seconds)
  done (took 103.673631037 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.535565024 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.535783026 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.534847262 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.535900389 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.536646879 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.534945069 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.535344088 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.534856217 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.5352603 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.535315109 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.535028886 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.536710969 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.535030415 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.536479749 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.535603914 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.536963597 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.535802789 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.537673464 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.535861926 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.53571525 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.536817096 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.534794222 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.536508532 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.536203948 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.53745998 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.535949387 seconds)
  done (took 41.385704973 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.554019723 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.824660384 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.016406462 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.560681563 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.562734028 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.559143784 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.645782362 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.556565191 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.558060564 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.558363989 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.741405135 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.556997417 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.591055305 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.045318966 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.558938829 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.554501821 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.554699523 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.554403913 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.834272513 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.564815777 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.673027974 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.55708627 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.646829378 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.564915381 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.582659944 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.555746501 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.560615368 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.084150088 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.579778041 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.741791417 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.542888608 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.650410833 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.036735776 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.045641214 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.542041877 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.564580373 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.556458074 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.746036299 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.55880713 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.555983922 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.645946306 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.556635796 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.023772066 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.214042894 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.579313987 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.556157597 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.109575987 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.767493321 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.850594122 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.565798892 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.052818106 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.561959389 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.55816014 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.558314608 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.850123001 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.564321195 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.555977266 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.13204935 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.58543643 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.648938812 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.559939151 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.558366902 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.841383027 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.558729876 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.830826265 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.56016809 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.565793948 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.581399203 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.024479741 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.561689458 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.234177162 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.580589709 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.560008824 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.7437981 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.831350022 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.15036197 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.587691644 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.847392674 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.051523155 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.670387557 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.563328104 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.077198523 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.674124081 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.564452379 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.56124108 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.560771992 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.559323784 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.609601855 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.650277636 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.16218203 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.24560146 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.157533857 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.675815437 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.573041681 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.560728434 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.133706834 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.583657449 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.560763282 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.022630698 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.231203448 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.584510908 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.569605075 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.245724887 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.585155859 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.65331779 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.567576764 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.034471587 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.563541182 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.609611688 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.56138467 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.568603313 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.586951478 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.65374446 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.566748572 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.562200485 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.208856874 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.777586252 seconds)
  done (took 204.221728692 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.560153169 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.556207573 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.555761106 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.556144327 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.555294906 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.564590749 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.555260504 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.555840599 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.561271814 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.556704323 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.555343717 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.556068031 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.558819111 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.56401675 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.567936408 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.562710521 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.16716955 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.55702849 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.5568974 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.578561263 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.39433515 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.559338997 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.573265957 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.556785241 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.555835968 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.559420997 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.566435523 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.558795545 seconds)
  done (took 158.588017059 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.564022179 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.22872199 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.5866213 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.720106303 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.588537895 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.561105633 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.717888261 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.632192827 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.586916401 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.561341361 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.561737375 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.920941324 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.566100383 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.172946153 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.799658062 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.748125593 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.172626848 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.586679889 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.562318971 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.562051375 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.721062918 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.571754243 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.919683631 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.231557342 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.587936337 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.231465486 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.550529946 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.565424684 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.563556762 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.23404649 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.585527498 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.922815542 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.656854721 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.634776828 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.255323773 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.196590203 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.196388069 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.741778388 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.566451653 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.563795388 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.563393075 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.549247174 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.234796103 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.588558502 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.566363306 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.225854924 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.590275209 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.567993378 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.571334556 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.564145189 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.635625218 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.658899722 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.948803485 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.241106195 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.678497801 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.578623051 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.72133801 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.972362476 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.569577298 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.177399937 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.550589524 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.242262603 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.590675812 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.551074071 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.566788464 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.57139538 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.744176503 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.722530694 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.176679479 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.58990427 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.175921036 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.764965121 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.566352171 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.566398186 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.568390995 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.240032551 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.199096798 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.766176066 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.727449305 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.804441446 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.560762851 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.568306483 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.553205655 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.659710854 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.567134982 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.245231805 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.201970502 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.591081691 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.569590763 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.569377706 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.570421026 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.785734075 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.271179522 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.682940223 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.169084979 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.951825089 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.931053183 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.570492894 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.639586708 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.589240191 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.932477174 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.572053341 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.637223384 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.044104348 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.931830529 seconds)
  done (took 187.620648728 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.852060802 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.937229411 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.6688654 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.718066748 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.227652318 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.172055968 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.896854285 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.722223599 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.695220333 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.861671954 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.861999205 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.660413582 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.769228733 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.654598855 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.413932127 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.675583574 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.695301611 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.725127934 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.702693171 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.657778504 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.27730339 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.881152196 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.762960526 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.5969576 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.671841117 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.46457405 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.179310159 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.138558599 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.75827787 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 3.041189093 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.166216956 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.776260196 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.636549349 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.346342586 seconds)
  done (took 74.736964148 seconds)
done (took 771.675328905 seconds)
SAVING RESULT...
DONE!
