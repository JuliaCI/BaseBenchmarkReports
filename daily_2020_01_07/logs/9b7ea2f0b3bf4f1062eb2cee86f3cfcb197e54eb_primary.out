cset: moving following pidspec: 3019
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.417308715 seconds)
loading group "string"... done (took 0.597519586 seconds)
loading group "linalg"... done (took 7.28682362 seconds)
loading group "parallel"... done (took 0.159608821 seconds)
loading group "find"... done (took 1.162336774 seconds)
loading group "tuple"... done (took 1.822885093 seconds)
loading group "dates"... done (took 1.317165394 seconds)
loading group "micro"... done (took 0.220038066 seconds)
loading group "io"... done (took 0.956424411 seconds)
loading group "scalar"... done (took 38.890267279 seconds)
loading group "sparse"... done (took 11.965432506 seconds)
loading group "broadcast"... done (took 0.950444364 seconds)
loading group "union"... done (took 12.600248111 seconds)
loading group "simd"... done (took 4.578104018 seconds)
loading group "random"... done (took 9.192339215 seconds)
loading group "problem"... done (took 1.841514135 seconds)
loading group "array"... done (took 22.281672919 seconds)
loading group "misc"... done (took 1.775170329 seconds)
loading group "sort"... done (took 3.821340979 seconds)
loading group "collection"... done (took 17.977469975 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.519519576 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.124592895 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.117906407 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118797322 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.146439704 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.112462614 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.12468256 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085654543 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.797647791 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.147343272 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.116486252 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.428365467 seconds)
done (took 5.157169983 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.174129589 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083157936 seconds)
    (2/2) benchmarking "String"...
    done (took 0.082594784 seconds)
  done (took 1.306566391 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064521919 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.122202644 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066508088 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067043145 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067365471 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066188217 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066169655 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066079337 seconds)
  done (took 1.664267941 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073310438 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068847367 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.066427499 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067818761 seconds)
  done (took 1.419509275 seconds)
done (took 5.780795298 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.785088324 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.205579717 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.186679786 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.41227741 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.134069736 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.159194219 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.636025681 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.321337409 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.187871511 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080739926 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.1092116 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.328114166 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.111218466 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.639918375 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077248822 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.091080694 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.137930959 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.405656346 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067990088 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082038311 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088815715 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.129142959 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.088415624 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.075019409 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.146201563 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.06938436 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.137120303 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080665394 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066565291 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.213739597 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.173007307 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.65550863 seconds)
  done (took 10.263469169 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.096335465 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.098041048 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068539951 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.122817896 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098562811 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069472303 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071569886 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.068707145 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.088926624 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127537317 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088017199 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101230995 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.06553864 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068683033 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085020166 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203912306 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080715102 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081495503 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070716223 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075479051 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.105186389 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078307293 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077235695 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076986313 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129452894 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179295809 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095951758 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097541861 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066434693 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079092861 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115356298 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.126154178 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067922439 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067821477 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.126012899 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094442701 seconds)
  done (took 4.590422819 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.00803212 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.143436838 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090473767 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.13459496 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064748889 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.109357983 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065142076 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.081079156 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.209149746 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.470349484 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.592304951 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11110479 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104088353 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067662926 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068116369 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067220883 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.501653078 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.095358569 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.106728599 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081204846 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070485654 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068541584 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.371789554 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068568239 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063753382 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068361461 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057255423 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.12568228 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068093886 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.959853669 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.127490761 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067172221 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101384669 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.169868443 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090238929 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.142137927 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067578795 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.085532611 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064519142 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.153378667 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070970037 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066393624 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083912118 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103981879 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112446285 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065722575 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067483038 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.164606218 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064649131 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.080290208 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.651398343 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.154815663 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079140353 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.06677516 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.257165618 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.08845369 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070275437 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065292798 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.17883131 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.134702199 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065900132 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067958254 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.06684388 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068896588 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069468803 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.385916978 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066317651 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.915632935 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070565879 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.07921413 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070527888 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069225835 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073064324 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072530283 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.088106214 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.091571393 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066519483 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075915117 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.066114967 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066205703 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066870159 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.086514994 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.380794402 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066742932 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068609249 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.06464679 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.090048261 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097600534 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.069339535 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.068080806 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102723337 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064204169 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068160539 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066001622 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.106846608 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066517124 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.08363533 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069628889 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113016679 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.068617523 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.193216821 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.06731713 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.099466634 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069094625 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098864148 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.079961507 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067998256 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.424712699 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065531728 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.06490582 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068879895 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066334616 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067873247 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066628966 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078981795 seconds)
  done (took 21.269433677 seconds)
done (took 38.271611235 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.235376678 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.082110705 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.078562407 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.080659562 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.078225437 seconds)
  done (took 1.791477539 seconds)
done (took 3.00637206 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.122702613 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099863769 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064474883 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097091203 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064088203 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102014541 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.101922051 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081335577 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100774674 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064790764 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097601101 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064768432 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064103129 seconds)
  done (took 2.358769 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083628334 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084166333 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070047618 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083176454 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063988521 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083024978 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081196852 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088576709 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081113821 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07247812 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063505271 seconds)
  done (took 2.06059091 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082962539 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083948037 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069385506 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08221856 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064319987 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082039298 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082182065 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.086108268 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083506899 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075849586 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066365203 seconds)
  done (took 2.062098075 seconds)
done (took 7.684086598 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077951652 seconds)
  done (took 1.272374336 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.591252648 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.076666301 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081912977 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.112690856 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.196789872 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.122257756 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.274757065 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.087148343 seconds)
  done (took 8.921752279 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.102884336 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.074547088 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.071005404 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.075018953 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.074518595 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071870788 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071560777 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.073360285 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.070597663 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.072864668 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.071934052 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.070756332 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.073922152 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070964231 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.072769826 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070433566 seconds)
  done (took 2.454896808 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092350154 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.09115249 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074342706 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074884703 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071957519 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071944653 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073886368 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073319589 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070609357 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072350543 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074224707 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.07317797 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071584495 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064657787 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074024787 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07490685 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.07106047 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074976439 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074463846 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075035029 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075331427 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064168059 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071489342 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07387648 seconds)
  done (took 3.084428791 seconds)
done (took 16.937089263 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.115069731 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072317312 seconds)
  done (took 1.390841824 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081575835 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083920973 seconds)
  done (took 1.375059044 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082810028 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065416873 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092413744 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.081388896 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.068602244 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.06762475 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.091497669 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068752121 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.067886841 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.068142251 seconds)
  done (took 1.964876506 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068678371 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.07749774 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069781302 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.084010334 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075882374 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.06625163 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.07508734 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.070608986 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080355962 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.064567087 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.073312582 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.084416764 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.073303441 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.086408537 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.074578036 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070706368 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.0726149 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068971395 seconds)
  done (took 2.550355404 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065566652 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.069200866 seconds)
  done (took 1.35192085 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066846276 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065233004 seconds)
    (3/7) benchmarking "month"...
    done (took 0.068525912 seconds)
    (4/7) benchmarking "year"...
    done (took 0.06870407 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.065537017 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.06432978 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.065294128 seconds)
  done (took 1.678969043 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.389922954 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.115684729 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.32109618 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.073139632 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.084430459 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.262708951 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.067814519 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072369659 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.07275072 seconds)
  done (took 2.72278302 seconds)
done (took 14.251953168 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080195268 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.08657038 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.099391871 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.387375362 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.094329556 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067883508 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115920129 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.192043453 seconds)
done (took 2.350800384 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.212944542 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.637400918 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.407175748 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.211298387 seconds)
  done (took 2.474425825 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.346213028 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.090061814 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.060730424 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069179218 seconds)
  done (took 1.795574876 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066178663 seconds)
    (2/2) benchmarking "read"...
    done (took 0.06943134 seconds)
  done (took 1.362411829 seconds)
done (took 7.069748276 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06600652 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067367279 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.063926063 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.086055237 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067597601 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.065682558 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065749637 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.06586444 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067808074 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068722824 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.070806881 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.068605309 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068411523 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065686997 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065612458 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065923641 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068157993 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065505028 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065785832 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.068155772 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065535354 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068526246 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065693795 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066043971 seconds)
  done (took 2.885151557 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.083464388 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066559617 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071167084 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071120604 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069277901 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071054482 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.073115539 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067856731 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.07443453 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070430113 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071122603 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072088673 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.071067703 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.07206166 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070605472 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071754618 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.073596675 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06819596 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071579875 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071844232 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073389202 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068921807 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071438679 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073774984 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071460035 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073693651 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070866565 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.068280769 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073228262 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071394749 seconds)
  done (took 3.384969352 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069441506 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063185999 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064589102 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071953825 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065807207 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.066965056 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065504985 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.066279259 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.066546981 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065396018 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.067272915 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.065215227 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065500798 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.066789773 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.06644226 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.069821003 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.081370137 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.066456052 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.065589496 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.06605636 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.069536117 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.065967333 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065832963 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.065380206 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.06615773 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065296071 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.066228578 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065790569 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.066514333 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.065916915 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068943957 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.069652628 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.065857532 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072949708 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.069018879 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065150752 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068750467 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063544309 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066119104 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.06540132 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.065185926 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.065222485 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.065633681 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072522528 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.06565361 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.067189209 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065605486 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.0673857 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.066012971 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.178642768 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.06535072 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.065121508 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.068178209 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.067315528 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.070030413 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.065184404 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.066150866 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.0650628 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.06596172 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.065013645 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.065094695 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.064985077 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067950506 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065673673 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080269194 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072714485 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.064885479 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.066904588 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.066314303 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.067451031 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066850351 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078695167 seconds)
  done (took 6.191756762 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090316782 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086741886 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066292194 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06720437 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063731724 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065838838 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071929169 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066087143 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067424261 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084406671 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0661174 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067014517 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066924864 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069468392 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06633478 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067571587 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.074381375 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063379026 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065742637 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069292896 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066380926 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072471026 seconds)
  done (took 2.793017865 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.156517277 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069900122 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105350505 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075277958 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070076115 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.076464696 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071692744 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072058204 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072241695 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069968255 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069397228 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072130863 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07217928 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069795173 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069789957 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069381333 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072179267 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069710389 seconds)
  done (took 2.646960786 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076485997 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066371669 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087253907 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066374358 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067927853 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070311039 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072542221 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076812305 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.07032788 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067801311 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.076071529 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070188799 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.070969962 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067950607 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070420194 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067891572 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070605542 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067329312 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076173253 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072442009 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071792091 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075869917 seconds)
  done (took 2.822947575 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07907038 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067785925 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081537196 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068583201 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062436744 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065307948 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.07245479 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067674197 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.072371503 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069360532 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067922266 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.066011561 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070578423 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067322071 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070474582 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067180913 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069534083 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06716508 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069930544 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063319981 seconds)
  done (took 2.631412402 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086748135 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068071325 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068051484 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077847443 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069254509 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.069706764 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077039722 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.069775086 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069745989 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.091234763 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069740041 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069716488 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077367959 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073985119 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069314349 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077539172 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077235489 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076834646 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069363635 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069382641 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.090790868 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069354499 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077119394 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069702986 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069182061 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069253794 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069448145 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073989363 seconds)
  done (took 3.314066806 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066057458 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065839322 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.064226267 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063152556 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064807934 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.065120255 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065293473 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065493229 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067798736 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06559516 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.068147297 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.068035324 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068170591 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.067887119 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067538345 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067872804 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068568569 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065574844 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065434409 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065796703 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.068166025 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067924155 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.068565284 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065509087 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065291538 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.068296085 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065675544 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065843227 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067723154 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065583676 seconds)
  done (took 3.244720204 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076056511 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072662836 seconds)
  done (took 1.398917974 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062825115 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079724476 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063377402 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069712561 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071648989 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068960031 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075256531 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071690218 seconds)
  done (took 1.809408141 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082606052 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079476441 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.069867945 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.081239699 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.079253828 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.085761792 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.138095038 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.069152814 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074952807 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.066503583 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082270398 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067623088 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074468483 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06870647 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074042596 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074602473 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065930632 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.074445572 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070803404 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.067203932 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069348533 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077228979 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070608482 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063148729 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069328025 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091019296 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.080440353 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.066849101 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069741818 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075728909 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074041154 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062176195 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.068250127 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.070238883 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.065883881 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.07859451 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083867658 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071074984 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076531423 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068567164 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.078657113 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063279397 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073417107 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.075213796 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078373076 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068463785 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068719761 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063011924 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066096519 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070328382 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063314986 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070812505 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062292926 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075647312 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071967538 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079486451 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.067366035 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069925944 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.071342921 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.07180959 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075189716 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070510608 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07137648 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.068296342 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07891661 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073320582 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078603188 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.06317387 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062558036 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.066467626 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.078897222 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092489292 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074946571 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.069273382 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069796221 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.066094157 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072173265 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069883506 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074752701 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074880671 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.06870384 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074156175 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076100921 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069348609 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.07111996 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.076665045 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.067060771 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.071920307 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066703934 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085524298 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.067955494 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.066489375 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066597346 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.079675935 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.07215836 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.068456627 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066654483 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076461267 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062364155 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069203005 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069855415 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069532855 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.07971814 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073664739 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073950188 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.076914492 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074180239 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06653132 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069512307 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.063182118 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06646094 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064388674 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072418677 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059772579 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068023549 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066854431 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065812838 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.073766105 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.063733756 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.064966293 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073468884 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071193885 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.188136813 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.064413548 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071325339 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.067321767 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070519299 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075100332 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065692103 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063570276 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.06313473 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.073292437 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.068650772 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072642129 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073005245 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072184898 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062588677 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.06652639 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.074563753 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.079395153 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.070100934 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.070829601 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.075992516 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.07116045 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.06848924 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075831409 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.072456209 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068207443 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.075604827 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.070555954 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063486821 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072134021 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.072164609 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.06719998 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.073033077 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072395132 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.072150984 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069307865 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067698193 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.076403071 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069457182 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067247294 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069235742 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.067777223 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.07990876 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070081541 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062610091 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065539396 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.077882075 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.067684297 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067659556 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.068961699 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070933476 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.070518621 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066634765 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.068390463 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.071452187 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079899933 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072120097 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069396754 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.074686533 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080897974 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.068797329 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070925001 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.068227772 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06981116 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069076538 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.077495619 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073801613 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073696148 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071345733 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.064765729 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074109876 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076159631 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067322889 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065897705 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067574045 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.072626043 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074183367 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.07261019 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068573788 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066222779 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069093558 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071154724 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070967743 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067781995 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067301413 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.074585254 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.066311896 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.075117306 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068995205 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.079004589 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071571952 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063414212 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071218814 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067111264 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.075159494 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063093681 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066992672 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067767532 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.069153692 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067661769 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071221016 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062829944 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075561698 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076129823 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069105958 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.068357792 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.068667438 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075931493 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.070514913 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072289708 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.07196089 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.075048707 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077921786 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.066732531 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.072487953 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.077701542 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.065306775 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060527368 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.071942093 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.064735713 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.06488371 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.066862976 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.065294916 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070282469 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075262178 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.074264484 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.189745556 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070591406 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066431248 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066118537 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062784209 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073941062 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.072616766 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069763132 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07610324 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06999944 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.069348565 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073766747 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.069130337 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.070438607 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.070602756 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072355839 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.070006371 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069508096 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.06738614 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.072417148 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067814586 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.066479652 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070996993 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.069197787 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.069819216 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074817602 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.069484056 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069960761 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.07204909 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.069907279 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069877763 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.069256344 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.068728798 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072290179 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070027896 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069798117 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071292077 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.06372459 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076578759 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.068282926 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076352666 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.06967462 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.065884166 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.075452732 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.072086541 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073362707 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.070429296 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.069163885 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.070660498 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.069660027 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071949603 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075223753 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066668769 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.081214265 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077362182 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069821734 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071642528 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069703997 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.070916601 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.068777527 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.069624396 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069547712 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069002371 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.069220625 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.07407803 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.072861376 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068913304 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069602722 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.069815123 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068775361 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.069628405 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062671406 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067798747 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.06830271 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068178887 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078501754 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068542796 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.068251759 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067519577 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068940768 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.067386172 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065254133 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.076992471 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077142065 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.069543042 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075915406 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.06885975 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069799152 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079274353 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.062531176 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.066366649 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.065919035 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066296883 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075823145 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.068980276 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.078196138 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068555685 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067740698 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.065090493 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.069331154 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.066920199 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062340271 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.066134996 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071982875 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.067447797 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067621039 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.068636659 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071120554 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07034171 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078271188 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.067739165 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.069955301 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.068355599 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.064986789 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066584116 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065375565 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.068875193 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067180009 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064654446 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063972029 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065816237 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067820295 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067845121 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068606708 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068337777 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074036819 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067080712 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.068962101 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068074943 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.060395195 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.199106664 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.067149089 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066327754 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.06616255 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070668985 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070840478 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068565005 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075937315 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067014657 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067861464 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067384985 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.066439455 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068701198 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.068408274 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.068977224 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067912147 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.07038807 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07693086 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.066631471 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.072308209 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069416244 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.069687955 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075940832 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069389724 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.072959252 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.075335432 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.068939162 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069579006 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.07534956 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.07085035 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070277258 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067626845 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068496296 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073065405 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065647228 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073664827 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067767108 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067615418 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068352785 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065023664 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067382755 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066796232 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066188993 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072877988 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067404523 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066613631 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065853356 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064253554 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067386445 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069937722 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074472457 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069101274 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070418447 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061837092 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063620662 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06729839 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065154573 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069016929 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.06917389 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071715282 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068433216 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066870386 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.068120377 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077780127 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074478563 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.073491343 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066714841 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.072391473 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.069377451 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.071129414 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.070026142 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069429635 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070255715 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072667306 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070294441 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.068000208 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075378911 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.072993797 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068966674 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069989795 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069278176 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068579637 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062947439 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069074359 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070520217 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073672861 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070626089 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068646776 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078947022 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.066111496 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068866363 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071626091 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067653052 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073319853 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063337671 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.069916826 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069179566 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069105361 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.063064858 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.067674054 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066229411 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.071087557 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.067740984 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.063561856 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079511047 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078016935 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.072241201 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067764495 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067522803 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062946273 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063573878 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068428465 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070079224 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070960712 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.079476318 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067951589 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.068912521 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063691859 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06883143 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.0715082 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071796745 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.065001799 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063160023 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06771212 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.071023194 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073338751 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066387233 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.067324607 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071034072 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069867665 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065227435 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071168399 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064539097 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071634955 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080820551 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068294604 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068820192 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074434692 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075655124 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068111741 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063221603 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.06684755 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069694744 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067210329 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067500895 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.066420164 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080097779 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068438161 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.064716972 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064205883 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.067772883 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.064942464 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.07304889 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066389519 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.065938338 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070130117 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.067211574 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072985308 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068125673 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072332693 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.068682287 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068447117 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.064545661 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066066718 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.063484688 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.064530976 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.06564075 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.065617591 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069255115 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.071944639 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065753518 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077928443 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076746681 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.069153035 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063565619 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065266241 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065119795 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.060256636 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066421657 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.063157829 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.062688803 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063069889 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.063695681 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066166986 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.069544885 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.065819862 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.064206973 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.064314528 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.058763354 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.066603515 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.066980318 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065156045 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.061523508 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.064249737 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.065463547 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.068130575 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066990234 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.062639219 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.06610657 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.066387996 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.0655292 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.059236884 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.071267359 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063607037 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.066097566 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.063554043 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064719814 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.064313108 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.066893229 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067605612 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065257815 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.066181355 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.067621306 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066532301 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.061844192 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062014603 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.069462068 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.061844807 seconds)
  done (took 43.307658348 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108690011 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065303407 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064429444 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06537401 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076059239 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064949964 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064394813 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065345464 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065417466 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066659758 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064082398 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063968797 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072125888 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079491518 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075066251 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068891052 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063548688 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064755736 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06332744 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064540914 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071902316 seconds)
  done (took 2.914369918 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075991624 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.080302673 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.077626092 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084731471 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072300995 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.072351363 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.076547976 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072000353 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.079680708 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074054883 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.079789333 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07214519 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.073648891 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.073202651 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07372829 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071326647 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.078981611 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072362824 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.073042565 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.077373876 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072082576 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.078446741 seconds)
  done (took 3.001938828 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068273265 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.06744774 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068959158 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061906753 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066950106 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061767721 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.070134712 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064645325 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069810194 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066121483 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065957322 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066367167 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068809705 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061701608 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.0670293 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064599933 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.108938961 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.070091373 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066819053 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.067512455 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062350202 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068617908 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062575228 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.06280989 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066065754 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070166864 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.067755349 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.065232785 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067230981 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065905241 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066615071 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064866484 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068578107 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.06722184 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065540049 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066199336 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066157446 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.067059143 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062253879 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.064837296 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067362159 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062521218 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.067069499 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068364215 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065212018 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.064462126 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068796547 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.067412335 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.0616462 seconds)
  done (took 4.629993279 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079460178 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.110527318 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.069105592 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.093283477 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.083087427 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.076191616 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.072586636 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093144384 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.066609813 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.06676302 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.084743944 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080671478 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066436326 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070728262 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.073599825 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066094259 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067483306 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064964708 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069589282 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065906675 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070288845 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072905821 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.08038684 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078638775 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069703599 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065783784 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06611196 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070639115 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078277212 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071052052 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070927513 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071579621 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080566719 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071185816 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065314248 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068410624 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081616461 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066730444 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068388624 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063976974 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.068484351 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070255388 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.073109562 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081870072 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066312173 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.07121213 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065878536 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063448218 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078636557 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068406698 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.074934619 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080470187 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070763907 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.067922976 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072574125 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.082774495 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067947246 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.067137323 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.071562357 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.080393384 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066529052 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.07208522 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.082414408 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.070289072 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.075592764 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080876589 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.074792042 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072223603 seconds)
  done (took 6.476397177 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076319456 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.095556492 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083611457 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083775517 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075741394 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075831273 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.075748417 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075671959 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.076169222 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080344429 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076398686 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.117047769 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071562868 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078883575 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.076444907 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.077089786 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.076164102 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075961446 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.076058 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076207745 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.076406122 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.08315776 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.076421382 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.083458886 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080276627 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.071801051 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.077067491 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.076131644 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083863418 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.076742192 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088771923 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.076050198 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.076341681 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.083226932 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.08001912 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.075765415 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066201497 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076005404 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.076272101 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.076087696 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.071674769 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.083309825 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07568984 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.071188204 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075838735 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07588803 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.083415993 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079694504 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078172164 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.080181204 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.076175584 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085158306 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077498062 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.077823457 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.085560385 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.088781838 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.085659593 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.0854081 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078768619 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.085217195 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.085289845 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.088363748 seconds)
  done (took 6.302862672 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083632096 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074316053 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.08233933 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061496021 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064277398 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072526394 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064546225 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064739182 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074345332 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074726995 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076556018 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072044472 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075436841 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075986875 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07177608 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07494368 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072563566 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072020521 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074089294 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071771925 seconds)
  done (took 2.820857825 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074498087 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083269526 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067687603 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07252155 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069447299 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071764489 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.069017915 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069518972 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067321855 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069545729 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.077096814 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076795937 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067210317 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072491035 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.076012714 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072655764 seconds)
  done (took 2.514731975 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.085403814 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.073889236 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080109092 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066955797 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067084835 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062607081 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.067438987 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061694579 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.063184544 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.078740097 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.066629568 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.076617841 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.066873793 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.067444965 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064909646 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.074080175 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064609166 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.065603628 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.067822551 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.081033658 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.07205196 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066639961 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.071117222 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.068325269 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.070217093 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.073198373 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066570658 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.068688337 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.065337194 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067893183 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.06975846 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070200193 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064368566 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064619948 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.066619453 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.065498974 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067658844 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.067962741 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072808483 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067784371 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.065741958 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.069710039 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.067562844 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068523055 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.064164235 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.068146262 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063719625 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.070109211 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065512775 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.070313513 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067831853 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.070583062 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069082413 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.075243529 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.070528847 seconds)
  done (took 5.156159513 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079837589 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071098546 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062773397 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06473883 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.071560699 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069911756 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071834509 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069863941 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069613302 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.066354755 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069943587 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.071526582 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069784125 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071870184 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069910105 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071618161 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064212595 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.06939848 seconds)
  done (took 2.627654517 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071987604 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067595552 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.074412164 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068229915 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.06800549 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070183982 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064578099 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.067330362 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066923559 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06850076 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068402849 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.071420197 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067134059 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.070956679 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.068100851 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068178907 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.070765106 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066992125 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068100135 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06379221 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070815706 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066886687 seconds)
  done (took 2.873126281 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.094455128 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.08418966 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.142313856 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.080412578 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.087696549 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.07405818 seconds)
  done (took 1.930448568 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09148203 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100945148 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067237364 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069209443 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076225883 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072160748 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072322476 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072111204 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081315554 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077891292 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072218086 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080406654 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080708672 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079515113 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07777186 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077920726 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072088546 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072110095 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067714894 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085462051 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072444565 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080120124 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071984043 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071614061 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071730302 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07956151 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080028695 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078187834 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072013989 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080675278 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077718822 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07232599 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080927268 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078427722 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071308497 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080702044 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072102034 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086185352 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077992471 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080013132 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071393492 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077924349 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080810301 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076698506 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080927929 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072629073 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076635977 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072360068 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07208741 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088150698 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07779336 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079863725 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079702269 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08097338 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080371982 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088322129 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078090592 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080305017 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078385738 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078567576 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080045496 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078026951 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080261377 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078797082 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077792793 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080564559 seconds)
  done (took 6.498307739 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104750649 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066920054 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070599037 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076584321 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079603053 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072322944 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072218955 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072461438 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07243842 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06921115 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111385154 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072558394 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078919059 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077246899 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070407095 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070082496 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070074707 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077335392 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066823693 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08602085 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070829304 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079703706 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080056226 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079950665 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078792358 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078160534 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071012473 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070611111 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070294349 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070869596 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075726025 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070547124 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077486578 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066715575 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077242005 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070313562 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069946298 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074292745 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069609821 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075190701 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077910291 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083433846 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069803706 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07001994 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075947359 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070240621 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0700981 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066764665 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070341187 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06679352 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076178154 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076946974 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078041562 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07983969 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071355867 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070712527 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070775088 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070455521 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070391896 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075777455 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077789033 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069771396 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085710746 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070150166 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069848966 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079421405 seconds)
  done (took 6.313295319 seconds)
done (took 131.715085525 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.186707708 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.164633341 seconds)
  done (took 1.711493788 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069407309 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098168012 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076691312 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129046504 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066748138 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100208348 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099021937 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.07779567 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066046276 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066339435 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066622152 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068966247 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131368212 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066704156 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066135497 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068847536 seconds)
  done (took 2.691795258 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.09911941 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.16120055 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102760841 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066044368 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099465441 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.07305785 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.065382919 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075156165 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070824891 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065445056 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073096127 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.071238925 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065378571 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.07092066 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071240263 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072871182 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065629755 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072602624 seconds)
  done (took 2.816622416 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.099199759 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091343188 seconds)
  done (took 1.569124954 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.160967003 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.106953067 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.147392262 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.351359166 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.164050426 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.149832494 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.146646357 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.146963271 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.11932703 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.140041437 seconds)
  done (took 3.008029978 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099045783 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.154240547 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.267065437 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.117340039 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.073127644 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.093881895 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.118883305 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078187014 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080405406 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.08030569 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080037789 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076453718 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099406857 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073873402 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.074338526 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076088831 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103163775 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.073068476 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.077054449 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076436948 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.101058498 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066079993 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073492556 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.073712759 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077130347 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077277973 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.066234118 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.066379749 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075763523 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074773399 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076303251 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.092710876 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077146294 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105592224 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.07113726 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106542803 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.07737423 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072943256 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074724468 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073178276 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078007406 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077781942 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072865154 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076277817 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065601605 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076715796 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065936584 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065797028 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077558205 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066947123 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077622557 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076225535 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105651179 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066722758 seconds)
  done (took 6.002582332 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103047862 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106908924 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071391856 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.113052035 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104747054 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072549077 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.102750646 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09602616 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.103996401 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070168351 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068665317 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070761152 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082410596 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082525089 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.114622711 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.106602855 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073589552 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071164458 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.106589914 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.10573186 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068509965 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097419003 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091186249 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103161511 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067978941 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070559839 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068243382 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070715439 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077068184 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078217401 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070017144 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080656211 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084624018 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078272057 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067476534 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06808652 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068671396 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079584437 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079361963 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079116952 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077685018 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068169544 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068104038 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069925676 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06993909 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068257136 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078909439 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080876213 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078894724 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069754069 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070696382 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068471113 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069857816 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079916965 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077919211 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080583607 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079802675 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068910347 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068883752 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072599293 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080583237 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079482752 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080786445 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070947695 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079789108 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06868032 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080164992 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084458735 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068782336 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070243211 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068768389 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.0697956 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070116659 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.081325837 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077802032 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069310601 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070110379 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068540012 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079702032 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07817672 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068275713 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076620938 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067948374 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068712983 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069769339 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069839937 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078086602 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080363477 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070308698 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068954626 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069736902 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069297758 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067728172 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.077228291 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080223012 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.0792992 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.07916589 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070411101 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079641596 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078966199 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070515607 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.07962518 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069075502 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070159734 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069618234 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078474034 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.077294615 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079171038 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.197120397 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068971567 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079177543 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080584113 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069258961 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079164474 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079984789 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079486488 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068627036 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081742234 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069399627 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080346056 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070246591 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079874301 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069873069 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081099429 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069542855 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069186551 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069810002 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080503084 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072599792 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068438165 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069978932 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070373044 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079280704 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082907612 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070698537 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079158406 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079406832 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071660994 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080189238 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069988791 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079447811 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070700756 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069907867 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06758515 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081867105 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069421578 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068982867 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069912927 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081552158 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069303751 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080036176 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078236797 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069101372 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081575116 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079782784 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077676263 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.081152488 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07100022 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069291395 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069785154 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069963627 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077418946 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080858818 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071134481 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069858415 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077437708 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079257802 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067446841 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078797771 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079077444 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078818756 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069038285 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070136349 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081191227 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081769518 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077721338 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078156531 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078596214 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06921832 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.07778889 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07891858 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068617722 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08384587 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068316574 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083210465 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079095047 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076746561 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078445483 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080307248 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079718268 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079997021 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.083034684 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06829283 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06813184 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.085646445 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068328981 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069142515 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078477299 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069979205 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070213034 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083487506 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069300116 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.080488117 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068346074 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.079299449 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068810496 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070487573 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083955453 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068880434 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070003964 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079720173 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070350386 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.07859885 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080677187 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.077870682 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068292518 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069847605 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.209304503 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079613309 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069606469 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069458706 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070778352 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079003666 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077358178 seconds)
  done (took 18.768866156 seconds)
done (took 37.952438722 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.213807402 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.1541221 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.182595283 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.119130931 seconds)
  done (took 2.143431838 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.116633548 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101543518 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.09263251 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065282774 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.099307776 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065083753 seconds)
  done (took 1.952386485 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.31283157 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.212876544 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.188395965 seconds)
  done (took 2.120394989 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.202079613 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.189344914 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.415124461 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.26264016 seconds)
  done (took 2.588420664 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.144522977 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.088503857 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067548925 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.084148451 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.133309579 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.160115151 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100038231 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.126060694 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078930543 seconds)
  done (took 2.444451989 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.149199448 seconds)
done (took 12.803976431 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.12679551 seconds)
    (2/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.225564821 seconds)
    (3/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.227115816 seconds)
    (4/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.103160257 seconds)
    (5/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.173493014 seconds)
    (6/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.092175159 seconds)
    (7/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.207204486 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.110002896 seconds)
    (9/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.144499295 seconds)
    (10/309) benchmarking ("sort", Float64, false)...
    done (took 0.130453106 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.10386642 seconds)
    (12/309) benchmarking ("sort", Int8, false)...
    done (took 0.150866822 seconds)
    (13/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.17668699 seconds)
    (14/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.087985366 seconds)
    (15/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.174304923 seconds)
    (16/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.078802868 seconds)
    (17/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.083095528 seconds)
    (18/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.163550603 seconds)
    (19/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.182728179 seconds)
    (20/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.168332797 seconds)
    (21/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.078498628 seconds)
    (22/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.112309701 seconds)
    (23/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.073673141 seconds)
    (24/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073051658 seconds)
    (25/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.16220029 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.135107976 seconds)
    (27/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.076826252 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.098669064 seconds)
    (29/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.170429034 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.089984422 seconds)
    (31/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.150027052 seconds)
    (32/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.087957455 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.114302683 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.092813709 seconds)
    (35/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.201738162 seconds)
    (36/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.110681894 seconds)
    (37/309) benchmarking ("sort", BigInt, false)...
    done (took 0.195920992 seconds)
    (38/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.181755766 seconds)
    (39/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.168932055 seconds)
    (40/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.120125454 seconds)
    (41/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.074102217 seconds)
    (42/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.097842507 seconds)
    (43/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.073826521 seconds)
    (44/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.071606406 seconds)
    (45/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.15331364 seconds)
    (46/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.114359691 seconds)
    (47/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.158772737 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.06748977 seconds)
    (49/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.080277868 seconds)
    (50/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.079660435 seconds)
    (51/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.094808536 seconds)
    (52/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.066390439 seconds)
    (53/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.050664535 seconds)
    (54/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.064297205 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.099355941 seconds)
    (56/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079814577 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.149002751 seconds)
    (58/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.072216678 seconds)
    (59/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073386993 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072442204 seconds)
    (61/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.173691745 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090279173 seconds)
    (63/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052302969 seconds)
    (64/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.076254358 seconds)
    (65/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.077205251 seconds)
    (66/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.093308852 seconds)
    (67/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067106238 seconds)
    (68/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051080406 seconds)
    (69/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.051284964 seconds)
    (70/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.214469462 seconds)
    (71/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.162714718 seconds)
    (72/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.074919844 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.143349238 seconds)
    (74/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.144112854 seconds)
    (75/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072733569 seconds)
    (76/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.062907128 seconds)
    (77/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.081464083 seconds)
    (78/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.052294734 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.088926643 seconds)
    (80/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.065301535 seconds)
    (81/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.077200976 seconds)
    (82/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.052200806 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 0.066266991 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.089029289 seconds)
    (85/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.154293732 seconds)
    (86/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.225245712 seconds)
    (87/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.297641773 seconds)
    (88/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.111813969 seconds)
    (89/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.072984192 seconds)
    (90/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.073744129 seconds)
    (91/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.050839246 seconds)
    (92/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.148056231 seconds)
    (93/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.077089465 seconds)
    (94/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.174590511 seconds)
    (95/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.051854192 seconds)
    (96/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.144662639 seconds)
    (97/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.16063358 seconds)
    (98/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.194906327 seconds)
    (99/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.183738466 seconds)
    (100/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.184332385 seconds)
    (101/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073720093 seconds)
    (102/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.076611421 seconds)
    (103/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.07023429 seconds)
    (104/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.075054744 seconds)
    (105/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.05253179 seconds)
    (106/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.086184141 seconds)
    (107/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.081575421 seconds)
    (108/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.076938664 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.066016252 seconds)
    (110/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.177224059 seconds)
    (111/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.053182537 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.145555666 seconds)
    (113/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051643472 seconds)
    (114/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.065838218 seconds)
    (115/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.075046662 seconds)
    (116/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.082521581 seconds)
    (117/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.089411157 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.066307249 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.154431414 seconds)
    (120/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.10016974 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.065983411 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.112915788 seconds)
    (123/309) benchmarking ("sort", Bool, false)...
    done (took 0.136652276 seconds)
    (124/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074348237 seconds)
    (125/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072615487 seconds)
    (126/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073237283 seconds)
    (127/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.077723462 seconds)
    (128/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071812672 seconds)
    (129/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.051383326 seconds)
    (130/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071976172 seconds)
    (131/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.08088697 seconds)
    (132/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.051598638 seconds)
    (133/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.051889575 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.121126017 seconds)
    (135/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.07156564 seconds)
    (136/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.089728964 seconds)
    (137/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.155665556 seconds)
    (138/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051473339 seconds)
    (139/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.106827086 seconds)
    (140/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.07277324 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087685851 seconds)
    (142/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.092346671 seconds)
    (143/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.053742407 seconds)
    (144/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.061017968 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.066874382 seconds)
    (146/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.068690659 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.06743362 seconds)
    (148/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.075584153 seconds)
    (149/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072772439 seconds)
    (150/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.161277208 seconds)
    (151/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.180499996 seconds)
    (152/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.075833443 seconds)
    (153/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.052591142 seconds)
    (154/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.051183591 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.101918 seconds)
    (156/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069424325 seconds)
    (157/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073851774 seconds)
    (158/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.05238394 seconds)
    (159/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.050758984 seconds)
    (160/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.073732142 seconds)
    (161/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.06621727 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.078438046 seconds)
    (163/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.052716801 seconds)
    (164/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.067958439 seconds)
    (165/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.099579137 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.09235433 seconds)
    (167/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.370517016 seconds)
    (168/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.082690106 seconds)
    (169/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.066644254 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.089175569 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.094137799 seconds)
    (172/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.110771078 seconds)
    (173/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.069942563 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.097030972 seconds)
    (175/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.155392956 seconds)
    (176/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.073267348 seconds)
    (177/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.05200538 seconds)
    (178/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071723486 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.09045327 seconds)
    (180/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070889047 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065389615 seconds)
    (182/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074291265 seconds)
    (183/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.051063339 seconds)
    (184/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052047776 seconds)
    (185/309) benchmarking ("sort", Float32, false)...
    done (took 0.131485875 seconds)
    (186/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.181352092 seconds)
    (187/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.175072561 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.090964362 seconds)
    (189/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.071580335 seconds)
    (190/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.182353009 seconds)
    (191/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.06798851 seconds)
    (192/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.050848124 seconds)
    (193/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.063845083 seconds)
    (194/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072966287 seconds)
    (195/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051471654 seconds)
    (196/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.068646985 seconds)
    (197/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.066167915 seconds)
    (198/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.06818172 seconds)
    (199/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066327431 seconds)
    (200/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.063863959 seconds)
    (201/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.050413456 seconds)
    (202/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.073753522 seconds)
    (203/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072405779 seconds)
    (204/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072101737 seconds)
    (205/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.345859633 seconds)
    (206/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051428735 seconds)
    (207/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.119569661 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.130999858 seconds)
    (209/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.064306347 seconds)
    (210/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.051433643 seconds)
    (211/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.067011052 seconds)
    (212/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.070392131 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.08846404 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066089766 seconds)
    (215/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.068001763 seconds)
    (216/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.050636987 seconds)
    (217/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071713727 seconds)
    (218/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067536966 seconds)
    (219/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.196076355 seconds)
    (220/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.063523549 seconds)
    (221/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.138973892 seconds)
    (222/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.069194357 seconds)
    (223/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069194958 seconds)
    (224/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.086464086 seconds)
    (225/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.073933709 seconds)
    (226/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.072415763 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.141412575 seconds)
    (228/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.05189282 seconds)
    (229/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.05196661 seconds)
    (230/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066776437 seconds)
    (231/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.073607325 seconds)
    (232/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.155361783 seconds)
    (233/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.073504056 seconds)
    (234/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069346313 seconds)
    (235/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.051541768 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091779984 seconds)
    (237/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.052243848 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.066348509 seconds)
    (239/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.065616927 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.127310134 seconds)
    (241/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.070149463 seconds)
    (242/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.066480982 seconds)
    (243/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.065648797 seconds)
    (244/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052242921 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.108773145 seconds)
    (246/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065038252 seconds)
    (247/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.06082367 seconds)
    (248/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073967301 seconds)
    (249/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051521746 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.138310812 seconds)
    (251/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072723006 seconds)
    (252/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.065637166 seconds)
    (253/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.074221143 seconds)
    (254/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051243252 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065308582 seconds)
    (256/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065625548 seconds)
    (257/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.050641278 seconds)
    (258/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.071325692 seconds)
    (259/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.064532213 seconds)
    (260/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.050552657 seconds)
    (261/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072288634 seconds)
    (262/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.052342124 seconds)
    (263/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.053086456 seconds)
    (264/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.067533136 seconds)
    (265/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.051246425 seconds)
    (266/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079448248 seconds)
    (267/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.050943771 seconds)
    (268/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.051575604 seconds)
    (269/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.051868582 seconds)
    (270/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.140689477 seconds)
    (271/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.074985629 seconds)
    (272/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.061930555 seconds)
    (273/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.087752781 seconds)
    (274/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.071756661 seconds)
    (275/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.193742937 seconds)
    (276/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.183483505 seconds)
    (277/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.112932035 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.0671685 seconds)
    (279/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.082694836 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.075415613 seconds)
    (281/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.068975231 seconds)
    (282/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.054072257 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.067313257 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066649678 seconds)
    (285/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.068410206 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.091221742 seconds)
    (287/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.051060097 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.065300449 seconds)
    (289/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074284714 seconds)
    (290/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.070276995 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.067103661 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.092024741 seconds)
    (293/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.052005191 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.09150113 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072950706 seconds)
    (296/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.067678638 seconds)
    (297/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.051342704 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.093950989 seconds)
    (299/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.194393096 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.07188373 seconds)
    (301/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.172353021 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.113755868 seconds)
    (303/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072006503 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087059374 seconds)
    (305/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.051226637 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070546673 seconds)
    (307/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051544498 seconds)
    (308/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.053105185 seconds)
    (309/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.052388893 seconds)
  done (took 31.043247667 seconds)
done (took 32.463975019 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084456727 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092915627 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074835469 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093071331 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080376143 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076277634 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072331321 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078179844 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.07974905 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082133879 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077751183 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054144555 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074071239 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074533645 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.07477712 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090595834 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.07835798 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072835522 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073463196 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064832798 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073075045 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.069648134 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069307658 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.056392167 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.080663521 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074106262 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.075192109 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.07613075 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.06608239 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066355282 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.07021694 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073508963 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.06512268 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078813419 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.07232655 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073220349 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074422347 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076882116 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066810581 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065476695 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074517777 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065702961 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072793215 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073870655 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072416612 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071513038 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073162092 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077973876 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090938563 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067428495 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074407657 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076101909 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076443324 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.07291606 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069904324 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073258711 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070727594 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09164657 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073520673 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067623916 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074140698 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074507853 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071348148 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072875047 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072886497 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075156992 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.07509657 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071638451 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074836714 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071269616 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065207741 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072934326 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068842785 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065510951 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.07546666 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076644314 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.06453505 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071023097 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072735787 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071056379 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.066235259 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067324127 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066705256 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071465034 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067311316 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.053686755 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.06878824 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.072075042 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064287913 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073271249 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.0715733 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.0720761 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.06708119 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075311133 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064693903 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070829955 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065589286 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.06481192 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066634818 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069095594 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064958182 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066949209 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074006929 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066371944 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071191655 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078475175 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064809662 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071481607 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.06406858 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064337627 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079362188 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074950798 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065134857 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067188446 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.06387837 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072348178 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.06393265 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064937116 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065236352 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064898484 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071309862 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065251285 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066865698 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072684075 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077874808 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065178425 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068542069 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066838762 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064999631 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070699819 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065901126 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065056396 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.066760768 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061684685 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067179607 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065387876 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073049459 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067231554 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.2042147 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067348903 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073820392 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071194772 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.072109945 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071253167 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064494243 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058798201 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068644131 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06790439 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067297276 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065866876 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067290657 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.06591595 seconds)
done (took 12.468881334 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066620907 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.13923458 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098690775 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095504626 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085997213 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.06614156 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075663752 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.100882835 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067645323 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101878089 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087893411 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085465273 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.114436328 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064612963 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065822333 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069649264 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066933434 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081788769 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100877658 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086651632 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.11561222 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.06509567 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.092968417 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089476228 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.08833201 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.094407395 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069129651 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069308358 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069299614 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.10237421 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.087454957 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.0698795 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066476312 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.098274217 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.093355955 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083773273 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066482605 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083078318 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066394742 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065496853 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067402299 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.099224726 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080275507 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080888326 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069929726 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068985977 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066446084 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083965691 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.090099143 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078798443 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086154403 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101339403 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068180536 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.06565374 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064197972 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.086174347 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065110209 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068657803 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066126308 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068595058 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065691063 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069084036 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081166327 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.08060471 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069931858 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080032573 seconds)
  done (took 6.802443186 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083143946 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.090959281 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083287664 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083339713 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.06511485 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065938878 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066094081 seconds)
  done (took 2.04031124 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066599336 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087767659 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089454375 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089704486 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.081099298 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088378741 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075607658 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066246946 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.087425108 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.06707593 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087233537 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100906294 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.070117311 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073747682 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090583785 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066775618 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090486783 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066298815 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.06958762 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090004186 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068926871 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.095872481 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.06956394 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066847339 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080452278 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066866833 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113224848 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070887643 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067891197 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.0691983 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064140886 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106701079 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080052904 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074151261 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066182771 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080616394 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080987325 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064628482 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082933613 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.075034378 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080065867 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066450931 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066952528 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064304505 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.07060265 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076668685 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067466492 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067109079 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068792733 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086391033 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067188887 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.0828854 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070930404 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.074754952 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.070553378 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074651791 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077680435 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.068770865 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089158152 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068484381 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083708493 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082941724 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080136199 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082809186 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068599947 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080121064 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079953609 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069479595 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068012022 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.06942191 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082403177 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064532239 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067913133 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076608711 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068179369 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089667726 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089530063 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067843853 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.07999159 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067193974 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066755498 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066796186 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089346895 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071795195 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066225241 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070469411 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069893963 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064506829 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065858859 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070275522 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064431635 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068034865 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069286674 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069281827 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.06886725 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082961929 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068533946 seconds)
  done (took 8.816856719 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.06935028 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067940865 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069295258 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067995959 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067548759 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067007802 seconds)
  done (took 1.933310158 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.09373013 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068213687 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080279232 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071407781 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104726897 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086675862 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086582112 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078039235 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.08347665 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.07801591 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086290332 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088001103 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092509853 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072606476 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086736874 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071267562 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087467476 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07425654 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077520009 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072458796 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086321324 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.071760068 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07220604 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081230435 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075566313 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071317686 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066785248 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078273235 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077999257 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078368631 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071731144 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075234393 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070653112 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077598105 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086384284 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070172466 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071218802 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076755394 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072342443 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.076081766 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087490794 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072691186 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074020022 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077166116 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077769847 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070472043 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076788609 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074677183 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086287959 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076714538 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076314591 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070725809 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074874471 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076466966 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070056166 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077916402 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076965181 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086459844 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071671588 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069915412 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.0687545 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075829651 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077309234 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075691841 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078403024 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076777503 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.06999334 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071745605 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072158005 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071313149 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076688088 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068331897 seconds)
  done (took 7.059246924 seconds)
done (took 28.143226992 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.532972136 seconds)
  done (took 2.026983065 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.610465187 seconds)
  done (took 2.127245452 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.409533785 seconds)
  done (took 7.919133036 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.399841649 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.524309553 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.719261792 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131345517 seconds)
  done (took 3.323522792 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.71103929 seconds)
  done (took 2.2310104 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.21293319 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.202001389 seconds)
  done (took 1.946499846 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.375762198 seconds)
  done (took 1.88875434 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.130376827 seconds)
  done (took 2.643676012 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.257642782 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.17415631 seconds)
  done (took 1.950944587 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.471964975 seconds)
  done (took 1.988525363 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.820291376 seconds)
  done (took 6.33917062 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.211171118 seconds)
  done (took 1.776581861 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.236709776 seconds)
  done (took 1.758614291 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.71110682 seconds)
  done (took 3.232055719 seconds)
done (took 42.673435881 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078624826 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080305985 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081316546 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077479581 seconds)
  done (took 1.826458906 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076416217 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071993671 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075837862 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072947336 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076293259 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072521746 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.07373781 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075183536 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072572721 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072590684 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072523644 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071915398 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074340815 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073790578 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.07060364 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074477364 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075344086 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071919406 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075077317 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072497568 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.069858976 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074205219 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074209015 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071020009 seconds)
  done (took 3.285012079 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077037453 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.071909107 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074597819 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071780414 seconds)
  done (took 1.825493771 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076810577 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.093737722 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088624714 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078042021 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092834311 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085926448 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068104396 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068944435 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.0700226 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076575513 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067522419 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095568214 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088018494 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077034248 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079218544 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065251593 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068565128 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087243273 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077244191 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077792798 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069882649 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077147879 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.0677724 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087691574 seconds)
  done (took 3.413959312 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.084991374 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.104846316 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.080775062 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088441686 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090136787 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064863009 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.086946359 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.090499848 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.126075213 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064987562 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069946967 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064838132 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072412132 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065220125 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.080544376 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.106939964 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.110477202 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068736309 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096584991 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064901951 seconds)
  done (took 3.21719694 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.071940591 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069016825 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.06575244 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068619333 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076784311 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072385716 seconds)
  done (took 1.960046859 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067516103 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067523854 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067251174 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066892692 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071370523 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066452784 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065620019 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066845642 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067275128 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066793228 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066267378 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065580033 seconds)
  done (took 2.335632391 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.200332256 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.067126489 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068453358 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065778663 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070160753 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065722426 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080788046 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067469274 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.091338442 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066287714 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066092134 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067508435 seconds)
  done (took 2.509794098 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208357892 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075496261 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23821569 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149364353 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110038498 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114740968 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111370262 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11320255 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.140956395 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099780637 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167332026 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165744349 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106901474 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136388794 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087894036 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.10020213 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153459148 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161934125 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104302612 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166264121 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145292435 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125273813 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14782748 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103412964 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105010294 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121653554 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070923876 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079485315 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169184894 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132043974 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143270064 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110100462 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092202357 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176107059 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171377676 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141102017 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146445945 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084167291 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.105306262 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.134582727 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201378868 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088125373 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162248386 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107996213 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.214430284 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132449377 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120322026 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.120654075 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.105587283 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088885288 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145006724 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182872873 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.134970118 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087856141 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125016194 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113692867 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.113460593 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113547227 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18225275 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162264573 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127238918 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070899785 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108293106 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154418571 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133263104 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.107629348 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.124045954 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090470424 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134529132 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155190461 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120027294 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144089158 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.116676777 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088440414 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119334152 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140114826 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126719998 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160258896 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123353553 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071897763 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122958836 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101152583 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079856475 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.143800405 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074662744 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176281023 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098881001 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.109196645 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124938018 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108819943 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108546754 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159242566 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144523961 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102340437 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.064762968 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242343421 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.12117336 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146863063 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087131778 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108435434 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118121339 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.07729378 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137994487 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074751299 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122887917 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.076973641 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127783154 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128062936 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076025024 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120997195 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103070055 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100822728 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132725464 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159826278 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087412155 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08131086 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16958048 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121672231 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.102994132 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143785172 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157207042 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.100574547 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100771332 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148716728 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178198593 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088486845 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162379421 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105746809 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082585573 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087288251 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122571041 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111560678 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.122678994 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081048222 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.117036108 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168782326 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074149547 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095341028 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132970988 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078590694 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080322121 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105136851 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104694381 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095767209 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099728204 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.102816493 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135841915 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122421585 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104996667 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123290468 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097765149 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.310885822 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087355464 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101835997 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104085606 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069471143 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.135012359 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157531601 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078964538 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164391566 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.123914274 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115749947 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11881959 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083389823 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14117311 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078463124 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069891349 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143298794 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109884174 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109356574 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.152741829 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114858477 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.124464227 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.118557576 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131779472 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131473751 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.130401437 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105226252 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087647653 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110745939 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125895958 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072077662 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090238728 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.078635177 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104295711 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09533365 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081957456 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140758475 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123233587 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109199927 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111491053 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096307928 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147141267 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075660462 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127040697 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.118755876 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095007866 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.152595275 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153468114 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131324067 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098076482 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136681864 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069586624 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073112585 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.08763149 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122729224 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082193345 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08250215 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.255462975 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148420587 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12928295 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136460649 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123434807 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11942447 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155905863 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069822324 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116527425 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147280134 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121531747 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104348728 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089816563 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098380696 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143094849 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10740989 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182933363 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115309374 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122899393 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15196922 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.100063119 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078989847 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102430809 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134191611 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103446416 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143217256 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099188026 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087526482 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109803039 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073790781 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09800216 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126828825 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117527852 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134011545 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.114502348 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131160346 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076565145 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115250178 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121091659 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121269492 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063775049 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119779219 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161611494 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094204246 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119323889 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153391399 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078254462 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.133215946 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1751524 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144659131 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084360967 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.248751513 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119004676 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128189238 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121304464 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139828092 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107736114 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137892781 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109555051 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085410679 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086933959 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097252827 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10459378 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094147645 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.106021978 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.113374187 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095418925 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131623224 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103330134 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109904116 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116650697 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097773144 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089573201 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096038927 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175904204 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117603549 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170514802 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099380584 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.14461043 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162124494 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073401148 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078380444 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.07798037 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140020434 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083819951 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129486773 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.106475172 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11693323 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122992216 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141833175 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095365622 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068242659 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107897389 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131975063 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123659075 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098307971 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103556494 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163703867 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100654481 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079582655 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113672949 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11658245 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102712456 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171572755 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061077215 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104824709 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075337128 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079894984 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127029875 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.291445925 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.079915037 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103481568 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119485105 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111682001 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126713677 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100205612 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110005205 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126152153 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149036917 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127883674 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.088555721 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111719238 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128103468 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156643769 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104300265 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096100901 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172648723 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15189339 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.159322926 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.086437544 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114585912 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112996682 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107946159 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136727697 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082268034 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163009354 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08130082 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135887944 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10201324 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088146501 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128310761 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.107606893 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087185691 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147720217 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116948322 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081966443 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076643209 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117171248 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119133011 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10568945 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074844114 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138727177 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.07339549 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131578979 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160649759 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080838653 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107380295 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095500139 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078710904 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105509042 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101300001 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086657925 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.237797155 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173558376 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087264443 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15007787 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133772499 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11270181 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137135849 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102698575 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.638611197 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078748496 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152618722 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116415919 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174827887 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099504331 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117207669 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110577635 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121380783 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14397427 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103745288 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.178838609 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130864857 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116337665 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079403541 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101646907 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102786192 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087687875 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106899806 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113362357 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114184596 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092531197 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.11497293 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123458421 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081388198 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095104014 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15610994 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11553571 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142933037 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140070732 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084539853 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117243829 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137252633 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079736716 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.12047411 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152138962 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105897408 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098841071 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.0801238 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.099588002 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157727053 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072501707 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158490026 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118802993 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.249648297 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113556716 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.112806435 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131309363 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106305059 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120994821 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093174572 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110410069 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112785217 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081215941 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077471135 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105268828 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110850942 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097471043 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096776195 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.099093453 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152655609 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071658614 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098285853 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114112303 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143243188 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173940015 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.08852237 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081849332 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118235924 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113826833 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.111967216 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12024332 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078085525 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081120166 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080520614 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077190453 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.108465674 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112195562 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113309743 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110725694 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162998431 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082876912 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.233031351 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095667542 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104105771 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069769399 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077678096 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095555121 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097499042 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106570511 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109094278 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158842461 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094986137 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089715908 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091036409 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073975043 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084239396 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128355601 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109632449 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118925226 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098695623 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062154529 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107086242 seconds)
  done (took 58.674438372 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.108438085 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.081770734 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.094275488 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.144117783 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121945697 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.201537029 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.153494961 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188581616 seconds)
  done (took 2.741980924 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067832926 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.095011313 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.102016083 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083010718 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.06679375 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067390418 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.229703591 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080348624 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066526377 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.097946077 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.077709741 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.06812782 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.424524767 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065803075 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.066615249 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.060520692 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.06694434 seconds)
  done (took 3.412647453 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.38537303 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.610930746 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.350027858 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.071473569 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.423988192 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.084213177 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.108268541 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.131361857 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.071717529 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.534760719 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.402028063 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.123848864 seconds)
  done (took 17.930825234 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.07479033 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.068621367 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.083362853 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083260986 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072076398 seconds)
  done (took 2.013296449 seconds)
done (took 106.702039081 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080067027 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.60413615 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.05266024 seconds)
  done (took 2.315558749 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.081964883 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084738455 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.084973221 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.0824214 seconds)
  done (took 1.969631158 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.074043488 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.075464971 seconds)
  done (took 1.778845226 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.231134596 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.160917263 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.095253237 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082901762 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078287653 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079028699 seconds)
  done (took 1.879008173 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.071416008 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074666229 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072095949 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076525301 seconds)
  done (took 1.929146929 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.075611117 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052478344 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.053938444 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.057294376 seconds)
  done (took 1.875423616 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.086510376 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078921555 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078808662 seconds)
  done (took 1.881125861 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.101766122 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085705623 seconds)
  done (took 1.824047467 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.08074261 seconds)
  done (took 1.717230345 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.099031791 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.100667354 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.131646526 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.110537559 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.138616152 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.108276346 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084374283 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085761584 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.075946757 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.085787764 seconds)
  done (took 2.655142647 seconds)
done (took 22.02168508 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078945565 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.456566654 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360018203 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088953103 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669120623 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355816829 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.000459658 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092237285 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.113908348 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067308194 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083920806 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.655337688 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.990238425 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.408996472 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.977161393 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.317979326 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649454453 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067713372 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067307229 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.066949815 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.985731167 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066995922 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066956435 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068234894 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.648499959 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371037322 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067605549 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.314278533 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067165223 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069529232 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354545839 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068446412 seconds)
  done (took 16.339915051 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070167268 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.118879088 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072664827 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083698796 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.069952086 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069244739 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.070840608 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068544458 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.11954371 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067157282 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084525577 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067044471 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071313012 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.082454289 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086777799 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068084573 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068400374 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067929586 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067482699 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067642013 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086958588 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067470461 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067701253 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06839974 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067650695 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079549694 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06817116 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067566411 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067939766 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069503561 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07044021 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06825501 seconds)
  done (took 4.041673323 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114487114 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123871978 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073265222 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103259216 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112732232 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069479686 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.141582004 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092860788 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.12624279 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06760561 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08433264 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067638012 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101357048 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068241861 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087607053 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067677893 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068282386 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067905328 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067775444 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068146038 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087444934 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067361453 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067614183 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067894769 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067914591 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081684018 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06790513 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068126793 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067766926 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.06976788 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071107425 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068383711 seconds)
  done (took 4.276396454 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071549478 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074918959 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.08222234 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084079656 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069307791 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072349676 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072510292 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.068709597 seconds)
  done (took 2.247645034 seconds)
done (took 28.548352674 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.077814569 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068962815 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072677885 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081722937 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072063655 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079160141 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066705793 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074687342 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071989734 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.07269812 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074530828 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067000003 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071003956 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067094178 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073393827 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067706543 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079402682 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071416203 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078729725 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.078652004 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069344439 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.07255329 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074001513 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078429067 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.078287628 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078133174 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077029947 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072505732 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068320468 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070209544 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076111355 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.086393692 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.070354376 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081994824 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068382655 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067191045 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.070642194 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.066990003 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.078499416 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.07593072 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069239998 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075642068 seconds)
  done (took 4.726150725 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087614963 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091899191 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084500496 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.060972528 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066449654 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065504309 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089030264 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.060070661 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059042125 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088025993 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055348979 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059029122 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.06479235 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053688715 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059919619 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056561946 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061364482 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.054702121 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059930921 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059360164 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.088989094 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053046964 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.077284698 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062844175 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055078638 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061171144 seconds)
  done (took 3.393391019 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.07346633 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084689226 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.090278137 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.129800339 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.106270373 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079109523 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.078743725 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.09413371 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.088004391 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066781566 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070140535 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.091912663 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088926599 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073323612 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068313261 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085391458 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082948503 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068887294 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.072765694 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.093606367 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.08594839 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.085711109 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.09516816 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.082974265 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066825725 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.06993605 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071386914 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.0810597 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072676532 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076319438 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071295421 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071275494 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069803726 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079560454 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071575421 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068819462 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.091879799 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077541405 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079009242 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068333468 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.075986613 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069047306 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.092570169 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.13677949 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066905685 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074022632 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.071413649 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077694115 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068024755 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088193052 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078895876 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066804037 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.07051667 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067203459 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068456301 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081162617 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069874535 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069681344 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076415707 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.07319229 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.092265708 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072064289 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083332889 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067661079 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075372855 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066936315 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068514053 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066290895 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.095243719 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069762911 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.110270382 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068948555 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068716014 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077093197 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075415393 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074340811 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068266967 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083143431 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079773417 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.07084245 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077610189 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070680075 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071165978 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.091252907 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069613607 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069021589 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068506078 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073550198 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070548476 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068876857 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080719949 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066795657 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.071000742 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084340876 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067547645 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069081578 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073268612 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071921693 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067216809 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078535537 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072449725 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068572249 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077228316 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067276787 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.07056251 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.080242756 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073613434 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066307463 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071667738 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073101222 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068555223 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069280906 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070240579 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070388927 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076433222 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073833053 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072100498 seconds)
  done (took 10.644509848 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.164208463 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.159200737 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069665101 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.148934746 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077120183 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078544579 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.150187064 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094409038 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067782973 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067920314 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068130016 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.11017983 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105746183 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.114983567 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.0785835 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067608372 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.084403389 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114062649 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.151995529 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.146282124 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.084866393 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.07704619 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.06913316 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.06842516 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070212678 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078330807 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.08524266 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076985725 seconds)
  done (took 4.418567506 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.079194497 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.104349704 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.0747531 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090319459 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090289472 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067235235 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069905558 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069228755 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.081150298 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.077901967 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067103754 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073407538 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073830421 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.070596326 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068302566 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074017232 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074820452 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069214556 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.0710719 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072646914 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078093526 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.09135942 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071559113 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066849737 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072190773 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066967364 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063087144 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084326064 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067754666 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.09529443 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065455936 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.072519984 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082304234 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068527816 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067547719 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.06779755 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067341951 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067153627 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068797303 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065809366 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065688187 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057249279 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066792672 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.07854086 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074334914 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056062393 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072185395 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072691474 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072994707 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064540227 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.07070948 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.069960851 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070783739 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075147824 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.071732945 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072940365 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068609077 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.074249504 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.077127469 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067089614 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064595331 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065988732 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072443214 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.064875467 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.076757223 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072249188 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066237557 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067521969 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069477537 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.07479634 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067791127 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071522377 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065267889 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069276394 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072034493 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069349123 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068723005 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066097879 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067561711 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067945743 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055012217 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067521906 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053591542 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070997987 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065966535 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066122064 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.068269478 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072617669 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079098705 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069007959 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073189304 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.06841966 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066626074 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070724226 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059606337 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070056862 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083373325 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.0825162 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067462936 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065178918 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081032612 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072662592 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066416123 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055753686 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.072414268 seconds)
  done (took 9.151823111 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.090320977 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069837068 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084601531 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.089717938 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086614822 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075672921 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076913299 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069222931 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.083007376 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073365905 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077058091 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067858404 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077500861 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.07755191 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069738555 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078064466 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071992864 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084789604 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082609723 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.06823706 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076105314 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080791618 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.09011454 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.081964403 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.080570013 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.081654228 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.090005169 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.076994202 seconds)
  done (took 3.910492812 seconds)
done (took 37.892068775 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.741361628 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.904916211 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.72524384 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.08605162 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.791934257 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.849187477 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.828110967 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.725109409 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.01240525 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.763048875 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.934456845 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.849455484 seconds)
done (took 64.880454856 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.810362432 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.864305467 seconds)
    (2/2) benchmarking "String"...
    done (took 1.963057621 seconds)
  done (took 5.493450298 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.932334507 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.283694967 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.971260648 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.723428466 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.729147216 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.061683673 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.516606023 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.232993962 seconds)
  done (took 30.185498179 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.799949157 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.956200922 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.37685568 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.408884508 seconds)
  done (took 15.256975838 seconds)
done (took 62.427703664 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.737325564 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.747438899 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.742994681 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.708979351 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.782152469 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.730733181 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.231746426 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.808447309 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.723441914 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.712096866 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.726553232 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.153133349 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.734023817 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.226461229 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.724990962 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.736863779 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.754800228 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.263969902 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.884215606 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.746702221 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.727141323 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.775279424 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.730011341 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.879159577 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.73620076 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.730409237 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.169261348 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.732374431 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.341172821 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.730797653 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.758433647 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.747236699 seconds)
  done (took 202.601376652 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.727162465 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.669435513 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.772852078 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.775058516 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.070590425 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.911348661 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.848543184 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.135792925 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.732914164 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.743031238 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.88097472 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.731791296 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.907340853 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.677591597 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.758048999 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.73623274 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.904853591 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.928292787 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.766983702 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.901606531 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.732509933 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.745209178 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.687957954 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.868430074 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.767707539 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.827813318 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.734203522 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.753288837 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.924799447 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.883282757 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.744423003 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.739133388 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.920788674 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.600703843 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.745867062 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.747504388 seconds)
  done (took 167.674579912 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.112722458 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.730094237 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.729372877 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.729445451 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.734651264 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.729404128 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.851683697 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.857589709 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.319404093 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.508444522 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.784634702 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.554318597 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.730384991 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.797432657 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.743375287 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.734793612 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.745129225 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.75735056 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.730533408 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.730256538 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.85397208 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.744925355 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.069373572 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.740381845 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.729850983 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.736364186 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.10219098 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.730289252 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.736407225 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.973369515 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.730428646 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.730270758 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.624350977 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.014578084 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.821348881 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.732349815 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.73792432 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.73023647 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.731463543 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.949552478 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.730997922 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.733242356 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.734951949 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.902525929 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.731157931 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.85549803 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.732642649 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.22922963 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.730269116 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.732176942 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.678461694 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.410245582 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.734697426 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.731623838 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.733764027 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.731123337 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.733531379 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.737290482 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.59961912 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.806702453 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.733725184 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.732636709 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.734936576 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.736923913 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.732916165 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.929924309 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.73259613 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.9466045 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.791695186 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.963880915 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.85318012 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.735282244 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.799850787 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.826739201 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.733354409 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.73163251 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.732942822 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.736590381 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.733067768 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.812301763 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.733047711 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.854579938 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.741122117 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.733427741 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.783820369 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.80232978 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.732782162 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.622824603 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.735376679 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.733265031 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.034891193 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.7328679 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.800142486 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.733067915 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.732161068 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.735205077 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.856073914 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.854070156 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.514604797 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.7376436 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.643967966 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.926068184 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.937495985 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.735304674 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.986076882 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.735638776 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.827312829 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.740826933 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.737644503 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.73328805 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.769197425 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.735445776 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.791957121 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.738396082 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.107770904 seconds)
  done (took 399.492756336 seconds)
done (took 773.602515613 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.39169684 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.350923783 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.47084625 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.376062276 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.344839356 seconds)
  done (took 13.609788014 seconds)
done (took 15.284162821 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.827748522 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.827727851 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.75937584 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.825916212 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.757068494 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.828064371 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.807997871 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.762850737 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.791862028 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.760482734 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.79463184 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.763550587 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.748268216 seconds)
  done (took 24.931204081 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.977164935 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.984555082 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.809666216 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.973442858 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.786186348 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.969789437 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.901513676 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.888855761 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.888738376 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.753869952 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.750682538 seconds)
  done (took 22.362203375 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.979434115 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.985490881 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.815692626 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.988929617 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.786958493 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.997221662 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.904010308 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.89295883 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.893440842 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.753147794 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.751630819 seconds)
  done (took 22.426310576 seconds)
done (took 71.39312676 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.747260082 seconds)
  done (took 3.424663852 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.77154378 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.92607315 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.752212579 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.751131828 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.74551075 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.747039123 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.750857426 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.746133129 seconds)
  done (took 15.868608381 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.746814276 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.747064813 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.743686384 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.747227656 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.74729112 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.743445419 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.746054085 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.744894769 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.742457961 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.745880129 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.743380097 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.743256029 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.748935821 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.746201984 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.746245027 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.743561218 seconds)
  done (took 29.604351444 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.746194764 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.743814066 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.743250074 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.744432832 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.744610544 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.745304706 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.746092276 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.74436279 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.747611723 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.745878577 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.745857104 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.746272876 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.743900103 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.745813971 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.743647014 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.746966306 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.744745065 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.744229676 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.750248275 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.744898257 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.744985808 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.74576049 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.74518252 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.74744996 seconds)
  done (took 43.571878524 seconds)
done (took 94.146101348 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.654858959 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.140859573 seconds)
  done (took 8.47634873 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.751497176 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.749592513 seconds)
  done (took 5.221129775 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.748640205 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.746892734 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.748232606 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.749095553 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.748428417 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.746651509 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.748483004 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.747145792 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.749958345 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.749080583 seconds)
  done (took 19.162549938 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.748919683 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.749734345 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.74705305 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.746812368 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.748571639 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.745330433 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.749055016 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.748943814 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.749013329 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.745728592 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.749804246 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.745478402 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.750697831 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.745454338 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.750174275 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.746777131 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.747692185 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.749503519 seconds)
  done (took 33.14575116 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.749830594 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.749418218 seconds)
  done (took 5.181120632 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.747895451 seconds)
    (2/7) benchmarking "second"...
    done (took 1.746476639 seconds)
    (3/7) benchmarking "month"...
    done (took 1.746762412 seconds)
    (4/7) benchmarking "year"...
    done (took 1.748793213 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.746242564 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.747107699 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.747103747 seconds)
  done (took 13.910525986 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.750423677 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.924347602 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.999207018 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.400231012 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.75462969 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.752853015 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.820496395 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.752963006 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.756526151 seconds)
  done (took 19.593304111 seconds)
done (took 106.370292562 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.575523953 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.744737265 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.076773274 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.801170178 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.794845904 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.085779078 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.78333354 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.049938872 seconds)
done (took 42.593336428 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.801690045 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.292104547 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.320073187 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.099755488 seconds)
  done (took 12.39473382 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.729384871 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.264638042 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.7825411 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.333491926 seconds)
  done (took 19.815186855 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.115343479 seconds)
    (2/2) benchmarking "read"...
    done (took 2.095002686 seconds)
  done (took 5.898850381 seconds)
done (took 46.592828724 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.750657643 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.752250796 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.747401656 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.750618886 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.750208225 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.749085782 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.750303076 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.748348379 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.751194699 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.7503626 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.751189852 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.750793882 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.75206153 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.749305041 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.750455027 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.749384301 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.752021895 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.75099313 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.750356832 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.751353257 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.750393804 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.752740764 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.749466883 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.749053357 seconds)
  done (took 43.693500188 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.751628501 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.751421208 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.752560284 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.752303353 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.749147945 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.752937554 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.752198696 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.749029534 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.753748145 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.752315327 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.74966384 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.750272176 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.75252061 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.750676035 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.753337391 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.749960513 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.755585035 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.750557679 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.752443548 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.750321937 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.754123216 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.751776671 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.75253304 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.752948314 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.751826912 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.751718659 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.753117716 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.753748767 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.753548033 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.749574152 seconds)
  done (took 54.242659476 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.75866011 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.761856705 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.754017899 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.754055804 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.754200447 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.753849579 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.754276485 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.754543269 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.754063157 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.754248137 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.754980481 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.756225382 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.754659446 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.756433055 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.755548305 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.754326244 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.754876796 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.754712981 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.754638924 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.755070949 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.753607491 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.754637454 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.753930089 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.755429843 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.7550242 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.75568391 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.753489879 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.754476681 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.755284735 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.754893811 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.755066069 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.756747454 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.757713912 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.754478178 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.755092501 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.755917328 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.76069534 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.762288378 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.755554593 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.757980697 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.755871208 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.755149196 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.755416549 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.755590223 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.756117743 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.755627406 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.758164443 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.757746334 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.756995458 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.756487694 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.758316962 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.7595305 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.760866292 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.758387942 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.757440195 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.757392036 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.757422548 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.75679615 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.756798833 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.757982272 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.75609095 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.757031387 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.75810402 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.756565949 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.757104489 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.757918012 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.757429241 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.757259447 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.758303912 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.759196703 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.757435617 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.758015742 seconds)
  done (took 128.146298418 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.759427757 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.754158888 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.755464764 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.755013099 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.753169523 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.756607315 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.755412764 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.757430458 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.755148473 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.758395799 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.758441386 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.755365417 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.754331218 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.758278328 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.759032698 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.754442726 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.75793177 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.756203174 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.756868351 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.759268806 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.760924361 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.756150182 seconds)
  done (took 40.337407709 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.759907929 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.760874394 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.755883894 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.760048321 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.754424837 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.76009028 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.75889594 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.761043933 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.758989802 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.756857972 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.756187121 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.760978538 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.75692985 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.756791978 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.756610601 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.757816911 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.759169184 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.758197161 seconds)
  done (took 33.340922902 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.757958453 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.759480537 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.759731689 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.756492006 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.759521263 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.758226236 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.757899276 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.760486616 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.760392128 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.756303662 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.759141366 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.760301977 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.761632699 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.758006332 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.762706117 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.758432422 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.76287576 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.758878315 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.763659912 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.758195962 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.757113832 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.76227164 seconds)
  done (took 40.402078867 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.7604504 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.761370692 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.758475885 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.757431781 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.756903855 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.759152423 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.760892225 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.758310359 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.761319056 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.759845317 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.759454912 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.762330928 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.760935941 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.759554528 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.758591797 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.758641609 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.764340535 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.760082947 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.762634045 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.759016498 seconds)
  done (took 36.891258962 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.763147709 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.76623656 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.76418589 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.766936583 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.762647011 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.763459874 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.766292602 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.764703451 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.765363453 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.764912866 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.762281896 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.764310512 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.763532322 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.764602437 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.763490577 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.763312639 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.764718609 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.76348846 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.764554011 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.76372695 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.767405898 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.765829182 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.764533288 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.765535981 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.764967698 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.765756006 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.76599785 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.763799445 seconds)
  done (took 51.103937367 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.763620692 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.764503145 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.761898032 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.761089004 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.763413999 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.761408668 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.761067753 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.761651747 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.764692866 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.763255306 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.764884986 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.761941716 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.765253157 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.767830833 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.765513383 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.764592896 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.763842007 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.762518831 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.763829633 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.763457469 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.76372904 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.764190447 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.765004439 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.763737138 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.761286219 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.7637999 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.763078124 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.763239164 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.765919464 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.762625551 seconds)
  done (took 54.60152946 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.784826315 seconds)
    (2/2) benchmarking "in"...
    done (took 1.784699319 seconds)
  done (took 5.266334679 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.761693232 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.766182414 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.764826137 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.762247189 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.765129029 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.767326585 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.767753728 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.764257719 seconds)
  done (took 15.815873055 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.767189212 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.768504757 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.766437093 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.766854216 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.766887697 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.76717006 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.772189785 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.768600463 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.766250895 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.768466369 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.772836413 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.776857229 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.769678485 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.769760925 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.766248951 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.767280792 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.767404221 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.767289203 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.767814658 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.765597191 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.767437603 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.768771846 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.76991047 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.766190318 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.767727686 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.777436163 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.773416204 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.769193914 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.770647726 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.769954281 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.769777989 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.766873726 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.767396988 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.768481803 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.770420563 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.771509679 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.776769901 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.771871183 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.776382787 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.770544796 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.769429254 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.767532169 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.769486488 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.77198268 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.773239354 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.771886468 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.770428505 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.765255662 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.770201032 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.769655276 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.772692844 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.766451715 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.765491932 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.771490111 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.771085726 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.776314415 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.772648309 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.774896321 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.780005301 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.778698808 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.784323349 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.779274964 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.774585066 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.773818103 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.782468782 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.793464659 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.776343732 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.768170572 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.769827733 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.769400421 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.77690648 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.783559647 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.781487342 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.773389545 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.770885816 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.771459735 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.771729346 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.771099684 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.780412584 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.775703103 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.772784182 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.771293033 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.783508944 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.794725907 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.7706973 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.77219288 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.771094218 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.773468365 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.770013406 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.780739904 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.773368132 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.772988491 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.771642863 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.771629142 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.776530693 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.773286568 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.772191159 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.77233036 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.770201682 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.773042745 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.775300552 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.776911104 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.782830989 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.774282994 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.77416424 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.779251199 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.775845402 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.773640625 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.777463628 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.772435569 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.773536766 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.775663572 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.777677002 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.76987488 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.776009707 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.782622178 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.773963854 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.77340535 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.775355341 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.772904516 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.780078623 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.799679232 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.77535562 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.772153898 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.777568941 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.790077144 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.776285397 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.777456373 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.775360056 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.772934044 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.771673252 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.773690937 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.773913949 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.775012387 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.776257506 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.775583835 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.770168271 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.776058741 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.774018088 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.777068239 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.776676888 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.774213825 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.772324593 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.773027238 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.775710729 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.777537254 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.78195248 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.7773034 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.776949408 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.777242721 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.770062628 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.77430944 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.775010982 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.775951096 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.777343582 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.776379655 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.776926629 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.775604717 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.774068557 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.774156754 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.775763482 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.775982912 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.778695106 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.776292084 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.775672661 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.775726176 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.773176425 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.77772653 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.777743148 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.77618767 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.776013008 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.775054911 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.778318312 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.786334636 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.774882977 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.77766264 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.779633775 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.777631605 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.776031907 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.778023005 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.777617126 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.782980623 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.77668286 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.782615257 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.77593804 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.774970626 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.775841923 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.776856693 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.777495583 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.775772884 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.776821787 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.780619175 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.786980558 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.78574385 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.776883381 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.778981229 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.777114311 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.780789713 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.779697689 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.778673173 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.777353954 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.776519932 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.778329164 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.776244972 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.776347328 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.778659807 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.777285109 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.777742216 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.777635835 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.77892174 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.778997956 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.778126938 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.778429292 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.775728827 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.777123248 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.778523079 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.775795188 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.773734056 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.777422934 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.775315766 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.778182252 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.780378966 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.783475493 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.775635641 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.779585819 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.781267324 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.777817604 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.777013616 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.778208209 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.77839056 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.777965465 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.782542593 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.779438203 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.776773256 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.782501857 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.778653849 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.776325238 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.781360727 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.777525401 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.775857946 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.779155038 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.784437995 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.777985734 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.778259246 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.779752993 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.777957298 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.777792474 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.782838959 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.778101251 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.780228057 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.782044208 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.782562073 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.775585481 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.779636703 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.778711133 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.77997442 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.780410072 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.779458439 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.78054296 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.780905043 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.781347015 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.779943396 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.780707166 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.780401289 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.789771996 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.783868817 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.779239535 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.779569823 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.779268141 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.785069612 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.779110469 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.77860267 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.778131791 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.790965779 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.78926229 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.785718967 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.784364289 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.779397465 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.784608621 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.784019129 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.783103056 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.780140437 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.779789813 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.778403969 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.780422152 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.778440848 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.780105324 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.779711447 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.780978089 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.784565509 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.7844617 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.779911289 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.78153242 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.782231131 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.783214931 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.783412934 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.779435647 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.781464154 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.783483465 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.781852284 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.783103194 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.780905317 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.786099837 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.782821943 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.782088335 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.780612173 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.781027994 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.780480774 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.780934608 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.782356029 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.78397465 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.791384059 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.785770867 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.789658517 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.78512951 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.789055506 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.784896281 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.784437032 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.793124305 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.779618956 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.781580158 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.781575989 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.782947467 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.788423567 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.782981199 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.783729224 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.787770793 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.783905736 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.784855142 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.78186857 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.786025573 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.782497994 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.782431044 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.789763332 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.786654235 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.786624112 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.784342806 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.784386418 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.785182013 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.785972664 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.785775561 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.7883042 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.787581716 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.785857424 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.783098899 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.784104174 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.784138638 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.785282709 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.78517117 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.782843386 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.783958749 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.790814872 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.786174313 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.790219563 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.785989924 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.79191359 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.786831347 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.789195898 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.788582521 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.786839924 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.787268663 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.786361504 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.787629207 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.785333529 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.784560225 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.786837231 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.786600651 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.789577985 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.78697051 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.788363607 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.787016415 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.787054537 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.784755729 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.792772605 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.809653902 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.785244003 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.790544538 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.783696108 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.787523445 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.791102266 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.788084742 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.782936359 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.787357423 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.795286763 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.79439225 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.786839592 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.785967268 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.786068118 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.785471622 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.786942485 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.786899448 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.789083468 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.788919232 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.787758258 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.786302782 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.788992086 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.788702614 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.787040907 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.787971298 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.786659497 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.794655861 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.788120675 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.786467171 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.787780656 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.784989449 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.785297968 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.78757398 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.788851381 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.788543989 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.787152408 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.787295628 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.794048435 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.793534723 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.788192436 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.788661102 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.790562645 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.786208405 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.786834508 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.789431583 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.789666532 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.791523245 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.792053808 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.790731454 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.788869935 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.787328229 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.787048261 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.788598744 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.791231444 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.794324529 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.795467548 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.790224257 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.787912642 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.787998816 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.789819829 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.789844324 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.787984026 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.798778979 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.797363881 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.802360534 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.796699189 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.795236634 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.788239436 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.793297083 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.798382014 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.78847171 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.790037609 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.79205827 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.790257691 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.791495548 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.792175912 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.791544016 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.796070331 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.790739923 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.788128206 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.796778538 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.792492839 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.790054576 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.793135281 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.795849047 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.792225135 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.788921506 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.79097382 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.790097388 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.796149951 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.793936655 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.792556838 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.791606877 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.789814994 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.788974252 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.792844593 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.788479925 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.789691537 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.79082414 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.794277885 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.793493042 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.794805887 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.790056297 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.790521567 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.790735017 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.794754322 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.797472433 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.791805074 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.79588796 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.794175363 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.791837553 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.791726159 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.791334411 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.790221632 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.792844152 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.792530108 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.793414152 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.793620507 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.794104247 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.794589085 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.793979551 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.793629528 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.793727879 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.797739868 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.806586312 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.802799569 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.796453957 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.794686589 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.795746697 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.797122332 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.797013417 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.793263715 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.79097228 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.7940468 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.791955405 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.793144566 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.792277571 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.796836285 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.811536642 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.795734116 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.794747182 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.79558853 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.799853305 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.795059275 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.788067649 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.794241434 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.795942874 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.798475832 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.806482752 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.796625516 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.801904683 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.793313308 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.794984224 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.796882647 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.794352962 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.801854674 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.795252132 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.798591853 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.796772831 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.799031619 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.810311385 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.795348433 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.804290735 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.824918796 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.799073639 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.798834237 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.796831146 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.794668084 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.795963772 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.79953961 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.796653172 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.797727546 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.795589012 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.795198432 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.796467127 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.8001277 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.798543815 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.798333388 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.798337078 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.796394985 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.798835493 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.795509143 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.79943327 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.796252171 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.799676434 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.79863419 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.798319211 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.797055273 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.807108664 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.807876317 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.796891213 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.800062903 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.79565309 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.801548552 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.799023777 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.808678457 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.805763157 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.7977477 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.798003791 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.797323904 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.798678217 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.795420987 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.797672137 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.797647851 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.79623768 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.794003133 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.809303448 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.807142455 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.801111879 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.79671293 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.798276084 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.799415758 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.800281935 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.797136304 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.798220684 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.798893584 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.799681545 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.804945108 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.799539707 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.797102567 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.802976285 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.809737033 seconds)
  done (took 1065.12731883 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.795852252 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.798033877 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.796601839 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.797891397 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.796689099 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.798675885 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.798772562 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.796047266 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.796483725 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.796518569 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.79741627 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.79748062 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.798191997 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.798150107 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.794985917 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.797785393 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.795608099 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.7944317 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.79972513 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.798691765 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.798682248 seconds)
  done (took 39.469477726 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.797980007 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.798464105 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.799232866 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.802675344 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.799765581 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.801912521 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.797190712 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.802383418 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.801371494 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.798844636 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.80418447 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.801101447 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.796677497 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.799790143 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.799819981 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.803000254 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.800728316 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.79816596 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.802242486 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.800127417 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.801841011 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.800502601 seconds)
  done (took 41.335253488 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.803989375 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.8045901 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.803132115 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.796555527 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.804050602 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.801806051 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.804712268 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.802463985 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.802895948 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.8037395 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.800551562 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.802549129 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.810259514 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.809364571 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.805645001 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.802696322 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.947729802 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.804918821 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.803393406 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.803298653 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.799015914 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.807969928 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.800564845 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.800988384 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.803487441 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.804257675 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.804328334 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.80499518 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.805833525 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.806141665 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.808731345 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.804037758 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.805202464 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.806632446 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.804979729 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.804248494 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.806907442 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.807335246 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.800858687 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.803951192 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.814368627 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.827704232 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.80621229 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.811302512 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.805955091 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.80416458 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.809135505 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.815878328 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.801365187 seconds)
  done (took 90.335330037 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.804160605 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.805805942 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.801951728 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.80388523 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.80608403 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.805215603 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.807021151 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.804938102 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.804253508 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.802153417 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.805958497 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.803776702 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.802915117 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.805845013 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.804411474 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.802061232 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.805016943 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.803660146 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.80120737 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.801787439 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.802454765 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.805168191 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.80534897 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.808210132 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.805198264 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.803934632 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.805092226 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.805854931 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.805277494 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.802705035 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.805423648 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.805968138 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.807233101 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.803821319 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.807452847 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.807132439 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.805942096 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.804913399 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.807633846 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.805964552 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.808303511 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.805896957 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.808820564 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.807871436 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.804350203 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.805398838 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.805418479 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.804715593 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.80627115 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.806764391 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.809075897 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.804913747 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.806482631 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.80555462 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.808553874 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.808296496 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.805322347 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.805872001 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.808586437 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.806234682 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.803378006 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.809393233 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.806934583 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.807500427 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.80931531 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.804551985 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.806874229 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.807180052 seconds)
  done (took 124.515860691 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.809344724 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.81105144 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.809547686 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.810767695 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.809352177 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.81079566 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.810108098 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.810984825 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.8096639 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.810784795 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.809594427 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.811663626 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.810458977 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.809912712 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.810164381 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.810226899 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.811534394 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.81017017 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.810448032 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.810892983 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.811232596 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.810933227 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.812594209 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.813703139 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.81273282 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.811203643 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.815018647 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.814421764 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.812533208 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.813476913 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.812418933 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.811170156 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.808252553 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.81336074 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.812675705 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.810948661 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.813108377 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.813741739 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.813000978 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.812989469 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.81204363 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.811044162 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.812291093 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.81244542 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.811920768 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.812880006 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.814876761 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.81136774 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.811225114 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.812058656 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.812955847 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.811685815 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.811940882 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.814516241 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.813954093 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.812578083 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.813687664 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.812410068 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.811670269 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.812112427 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.813108813 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.814896729 seconds)
  done (took 114.072180472 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.812828053 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.814291163 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.810491371 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.810476181 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.812881179 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.80955458 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.813570438 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.813466452 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.815079214 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.813150926 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.812524416 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.812388256 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.812360994 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.813441002 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.808644535 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.81082784 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.809535672 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.809958843 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.812024829 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.81162418 seconds)
  done (took 37.98019138 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.807950047 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.813004271 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.811414704 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.813512193 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.813422815 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.811314753 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.813850853 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.812524838 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.810296965 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.813197618 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.813829748 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.813164876 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.812606137 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.810030286 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.813684284 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.811938997 seconds)
  done (took 30.734361962 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.810578141 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.813704393 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.81398214 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.816019354 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.810994997 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.810377259 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.814613661 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.811692122 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.810480579 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.812646911 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.815567608 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.81226022 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.815741978 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.814091751 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.81155207 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.813359272 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.811544858 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.812829934 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.814159362 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.815442702 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.811469961 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.81163086 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.81560915 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.815132624 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.811700434 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.812907524 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.813332668 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.813822437 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.814183903 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.815953397 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.812221882 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.814134527 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.812328974 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.813601346 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.816185381 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.814002515 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.815272991 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.816317118 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.816593328 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.815896156 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.817502282 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.813372884 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.815107792 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.816911183 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.813834319 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.817657165 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.813850323 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.814074131 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.812462802 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.812958333 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.816916095 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.818611235 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.817173592 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.81782623 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.815161509 seconds)
  done (took 101.51967269 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.816950433 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.817745262 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.814044238 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.817011075 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.817722878 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.813673108 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.816991059 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.8138391 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.814105598 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.817055612 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.815287448 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.81958482 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.817491976 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.817014517 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.814308529 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.815289726 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.815065236 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.81437328 seconds)
  done (took 34.431602335 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.814935285 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.814520366 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.817932424 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.814777019 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.815927049 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.818991431 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.816253173 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.815720264 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.818138585 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.816708126 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.815554874 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.818415058 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.818422643 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.819537146 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.816210561 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.816589182 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.8191689 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.818047853 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.816116267 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.814087686 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.820212112 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.819928705 seconds)
  done (took 41.72130237 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.816874515 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.817535322 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.834592087 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.840234922 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.840667046 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.855898977 seconds)
  done (took 12.752371744 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.815673467 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.818593908 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.81669529 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.818226721 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.820376216 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.815873319 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.816263251 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.817483699 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.818854746 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.817038612 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.816540411 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.821273231 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.819690497 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.817201321 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.820008084 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.820242789 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.816669006 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.816445189 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.817923795 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.823333344 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.821762367 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.821164312 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.819502984 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.819260242 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.817596358 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.818917673 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.820813774 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.818892724 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.818124196 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.821053105 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.821661265 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.817057913 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.820059017 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.818557146 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.819831731 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.822769305 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.818868936 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.821433256 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.821827441 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.817474879 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.822881915 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.821603245 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.819568716 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.819004356 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.820266719 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.818094363 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.81857791 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.818502529 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.820066907 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.821405049 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.820732403 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.82120734 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.822465351 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.822726218 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.821498965 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.822225463 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.819370754 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.820669124 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.821560257 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.820129108 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.819790417 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.822482169 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.820632487 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.82078502 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.82238325 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.820372111 seconds)
  done (took 121.848762583 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.820540966 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.821042874 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.820028966 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.820964433 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.819830512 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.82144664 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819488562 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.820154767 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.821153348 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.821190482 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.824723236 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.824683292 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.82362172 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.821354662 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.819965212 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.821199967 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.820119362 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.819664793 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819905366 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.824348822 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.819841512 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.821475196 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.822134281 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.821494732 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819789529 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.824682043 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.822321959 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.821556933 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.821308211 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.820624271 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.821792323 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.821293742 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.821230155 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.822571046 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.821907495 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.820819617 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.821026161 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.824255998 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.821913434 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.825935087 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.823245464 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.823907757 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.823608721 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.822941128 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.823000885 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.822274153 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.822269595 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.822432569 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.82115413 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.822317759 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.82309142 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.821427237 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.820500584 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.822187035 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.821916343 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.822919238 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.820298647 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.823274203 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.823048455 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.824684156 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.823194555 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.822612301 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827793074 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.823199777 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.824977817 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.822012286 seconds)
  done (took 122.008778005 seconds)
done (took 2483.376977302 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.863004279 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.839953044 seconds)
  done (took 15.45526121 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.988236249 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.940700457 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.821511049 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.820556893 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.818748361 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.848766739 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.839154877 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.818695103 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.819027942 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.823787638 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.821435026 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.008179119 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.872085299 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.819566652 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.820771101 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.915895933 seconds)
  done (took 51.556974294 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.826770871 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.828866872 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.836836296 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.829698344 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.822795647 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.840309889 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.856483262 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.828358108 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.860234399 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.84093366 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.894967316 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.832555802 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.825318061 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.875236578 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.842636543 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.840148841 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.923480696 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.90008454 seconds)
  done (took 35.059073729 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.9044236 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.832442734 seconds)
  done (took 10.495187088 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.840598426 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.812445383 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.818051737 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.822687477 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.840542944 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.816397896 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.849335927 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.84061129 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.849517719 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.879197608 seconds)
  done (took 70.155078522 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.830447188 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.825806924 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.828454013 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.824913261 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.817767984 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.81744041 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.825815892 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.823932741 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.501062894 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.865662041 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.833614712 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.836356606 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.828899242 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.833224999 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.827332777 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.852955596 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.952411572 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.828536931 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.827360761 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.835662599 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.831550208 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.884811182 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.841298312 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.830711154 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.858274297 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.513993751 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.837960067 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.836504107 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.95461314 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.823422683 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.826296034 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.831945667 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.82996713 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.205758602 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.104707807 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.831492295 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.838323083 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.836898749 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.829541625 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.955449662 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.829127754 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.834852533 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.734851708 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.079629589 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.939881031 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.872978285 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.212897728 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.833023022 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.832548866 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.862679392 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.835031098 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.831670037 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.848209089 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.33891601 seconds)
  done (took 130.365160618 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.825905338 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.089547591 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.983319149 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.825268935 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.113178189 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.033343524 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.826431405 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.875359057 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.827321824 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.056728994 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.048653097 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.935842046 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.826629409 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.826513718 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.825340675 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.821550311 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.987986129 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.89787183 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.824760059 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.82199752 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.859582241 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.077283043 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.958364859 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.828180445 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.849608333 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.03862272 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.951883026 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.931092793 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.306861138 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.824519195 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.892066938 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.825481738 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.829075995 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.822506746 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.98543218 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.92647701 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.917637445 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.826934006 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.826078341 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.825251594 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.505763835 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.023845586 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.927326191 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.973096954 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.082969826 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.035156105 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.616770189 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.826933445 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.568892717 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.992902057 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.063190487 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.063258218 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.950866029 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.828595851 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.098798468 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.827717414 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.828450892 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.060610021 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.07443261 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.93049357 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.825865951 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.828637293 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.824698769 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.075641597 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.826074013 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.920556873 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.828180335 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.823944771 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.922647103 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.933293732 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.073438163 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.041535946 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.861599729 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.126951065 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.298167681 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.078707458 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.89582826 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.067201651 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.826196946 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.822933393 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.911514616 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.679967035 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.028100188 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.080069328 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.082899584 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.863173909 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.551645653 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.827547153 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.058085788 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.050968538 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.079733416 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.070387451 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.979462544 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.152642588 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.830297692 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.825252819 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.070033916 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.964337284 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.82804046 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.189976377 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.06156462 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.394332644 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.860515382 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.144485492 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.960960683 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.828467368 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.472534115 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.832148901 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.058301241 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.87448051 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.829903805 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.828036645 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.045372961 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.811511143 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.83037998 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.550140203 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.892037344 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.829116984 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.065920649 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.827683835 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.094657793 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.828122583 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.071703374 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.265745437 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.86656721 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.005008351 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.072993742 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.830175985 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.090846347 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.075756948 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.946270884 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.101072794 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.754566709 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.828100989 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.123604719 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.831416959 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.82764663 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.005312679 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.831877007 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.065187878 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.833669451 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.121629092 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.853154533 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.991488185 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.832238063 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.090487322 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.866429686 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.885670522 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.831342612 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.964770766 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.832176387 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.873193555 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.985679521 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.834368674 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.828751313 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.363418216 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.826977161 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.988380462 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.06639819 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.853855733 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.909723233 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.503784837 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.828530096 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.920728214 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.85790118 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.18018345 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.832272129 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.050378793 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.830580637 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.370793489 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.831527158 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.07537657 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.06332946 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.83301301 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.829093985 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.741840305 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.832666406 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.834345958 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.996137393 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.642001751 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.830252256 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.03667688 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.836588696 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.963305409 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.831775552 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.914497138 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.183666634 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.829437913 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.831814213 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.835241703 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.830806202 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.828708541 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.040915023 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.860383441 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.367084139 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.974111572 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.106525689 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.153445861 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.08907876 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.875540089 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.837792608 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.08046661 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.833664267 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.899271714 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.833594437 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.858043685 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.06925873 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.835207831 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.047044221 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.119628094 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.766215843 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.884586186 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.838183138 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.830658022 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.7516365 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.988113574 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.925012643 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.833507698 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.835270957 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.95319215 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.959675162 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.050677333 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.83550201 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.063369591 seconds)
  done (took 895.004852096 seconds)
done (took 1209.840356099 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.832385874 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.830244017 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.818410709 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.833700553 seconds)
  done (took 29.082786913 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.842843575 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.840402809 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.842201125 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.840091619 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.843235992 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.840800044 seconds)
  done (took 12.818627608 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.879609875 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.831565555 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.836550065 seconds)
  done (took 21.314933309 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.910747456 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.244406243 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.954555818 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.280888541 seconds)
  done (took 10.159735352 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.844032896 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.843864742 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.844470624 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.845405609 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.841586152 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.846661843 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.845350086 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.843213983 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.845086403 seconds)
  done (took 18.368796032 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.236200099 seconds)
done (took 97.746473174 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.214647249 seconds)
    (2/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.308198841 seconds)
    (3/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.403480823 seconds)
    (4/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.642682068 seconds)
    (5/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.842003137 seconds)
    (6/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.052100343 seconds)
    (7/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.017960888 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.744522966 seconds)
    (9/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.840462574 seconds)
    (10/309) benchmarking ("sort", Float64, false)...
    done (took 5.576884523 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.524959782 seconds)
    (12/309) benchmarking ("sort", Int8, false)...
    done (took 4.838119768 seconds)
    (13/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.967183413 seconds)
    (14/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.945990402 seconds)
    (15/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.334895042 seconds)
    (16/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.83496653 seconds)
    (17/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.034954515 seconds)
    (18/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.904737264 seconds)
    (19/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.00240869 seconds)
    (20/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.134126423 seconds)
    (21/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.878532089 seconds)
    (22/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.836863545 seconds)
    (23/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.990013114 seconds)
    (24/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.86151858 seconds)
    (25/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.96508818 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.910657146 seconds)
    (27/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.923780312 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.898105755 seconds)
    (29/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.930436428 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.165506458 seconds)
    (31/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.965830254 seconds)
    (32/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.824971587 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.959856519 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.163739505 seconds)
    (35/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.0336492 seconds)
    (36/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.034741576 seconds)
    (37/309) benchmarking ("sort", BigInt, false)...
    done (took 6.839582671 seconds)
    (38/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.836912519 seconds)
    (39/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.036570608 seconds)
    (40/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.383061927 seconds)
    (41/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.946481837 seconds)
    (42/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.839279743 seconds)
    (43/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.980602439 seconds)
    (44/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.960966535 seconds)
    (45/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.861001256 seconds)
    (46/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.119838047 seconds)
    (47/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.917996374 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.225628332 seconds)
    (49/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.946116289 seconds)
    (50/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.840004872 seconds)
    (51/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.998169262 seconds)
    (52/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.027774949 seconds)
    (53/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.917357164 seconds)
    (54/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.962906269 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.778684705 seconds)
    (56/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.534507739 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.972322522 seconds)
    (58/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.106386107 seconds)
    (59/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.948871343 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.102013395 seconds)
    (61/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.755353153 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.037390735 seconds)
    (63/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.220856442 seconds)
    (64/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.838999631 seconds)
    (65/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.895786279 seconds)
    (66/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.921887152 seconds)
    (67/309) benchmarking ("perf_sum", Bool, false)...
    done (took 3.485665622 seconds)
    (68/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.199539036 seconds)
    (69/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.048198566 seconds)
    (70/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.826709582 seconds)
    (71/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.393572938 seconds)
    (72/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.56525529 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.012342753 seconds)
    (74/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.163891641 seconds)
    (75/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.86678458 seconds)
    (76/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.867176636 seconds)
    (77/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.35170214 seconds)
    (78/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.413259127 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.141847279 seconds)
    (80/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.057399045 seconds)
    (81/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.857937999 seconds)
    (82/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.397474542 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 5.544461853 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.045735314 seconds)
    (85/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.822555813 seconds)
    (86/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 9.392902052 seconds)
    (87/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.954736691 seconds)
    (88/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.19679248 seconds)
    (89/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.241370486 seconds)
    (90/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.058661245 seconds)
    (91/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.15459903 seconds)
    (92/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.843431249 seconds)
    (93/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.95053878 seconds)
    (94/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.841490112 seconds)
    (95/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.184441798 seconds)
    (96/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.184757082 seconds)
    (97/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.120595078 seconds)
    (98/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.828058701 seconds)
    (99/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 3.90201157 seconds)
    (100/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.033641502 seconds)
    (101/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.86797752 seconds)
    (102/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.988007833 seconds)
    (103/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.332432938 seconds)
    (104/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.437255373 seconds)
    (105/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.910842824 seconds)
    (106/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.049408631 seconds)
    (107/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.354882565 seconds)
    (108/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.856870304 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.141948116 seconds)
    (110/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.027115324 seconds)
    (111/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.704326524 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.919167668 seconds)
    (113/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.203977306 seconds)
    (114/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.244706762 seconds)
    (115/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.924552022 seconds)
    (116/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.756408566 seconds)
    (117/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.862178746 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.531149962 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.856701459 seconds)
    (120/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.174035116 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.475532163 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.913273448 seconds)
    (123/309) benchmarking ("sort", Bool, false)...
    done (took 2.281146166 seconds)
    (124/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.86600052 seconds)
    (125/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.095134416 seconds)
    (126/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.867298501 seconds)
    (127/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.851266248 seconds)
    (128/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.058214085 seconds)
    (129/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.077032416 seconds)
    (130/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.100147479 seconds)
    (131/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.52231655 seconds)
    (132/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.834703983 seconds)
    (133/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.405474386 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.833613765 seconds)
    (135/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.002816663 seconds)
    (136/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.868908938 seconds)
    (137/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.103728271 seconds)
    (138/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.028627046 seconds)
    (139/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.017253435 seconds)
    (140/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.868214771 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.81998409 seconds)
    (142/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.497913071 seconds)
    (143/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.8307359 seconds)
    (144/309) benchmarking ("map", identity, Int8, true)...
    done (took 3.49828116 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.140634024 seconds)
    (146/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.901197432 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.066471717 seconds)
    (148/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.942576337 seconds)
    (149/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.867862857 seconds)
    (150/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.317166676 seconds)
    (151/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.154262234 seconds)
    (152/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.968766337 seconds)
    (153/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.904890594 seconds)
    (154/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.02268056 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.920683655 seconds)
    (156/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.90758792 seconds)
    (157/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.86239686 seconds)
    (158/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.829021652 seconds)
    (159/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 3.701376939 seconds)
    (160/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.179308803 seconds)
    (161/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.44419093 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.21958565 seconds)
    (163/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.987779068 seconds)
    (164/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.848272801 seconds)
    (165/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.92345314 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.827952226 seconds)
    (167/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.065032395 seconds)
    (168/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.674787823 seconds)
    (169/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.931511575 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.956062867 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.94461971 seconds)
    (172/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.049375057 seconds)
    (173/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.325127164 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.835939741 seconds)
    (175/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.207407663 seconds)
    (176/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.469008128 seconds)
    (177/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.302383768 seconds)
    (178/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.971464712 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.646670457 seconds)
    (180/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.872585387 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.183811477 seconds)
    (182/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.88156915 seconds)
    (183/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.038709736 seconds)
    (184/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.182317962 seconds)
    (185/309) benchmarking ("sort", Float32, false)...
    done (took 5.57525112 seconds)
    (186/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.845681153 seconds)
    (187/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.846808634 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.250021227 seconds)
    (189/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.931755073 seconds)
    (190/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.847027205 seconds)
    (191/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.934050622 seconds)
    (192/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.230028239 seconds)
    (193/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.90651037 seconds)
    (194/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.871377499 seconds)
    (195/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.167547078 seconds)
    (196/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.871285571 seconds)
    (197/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.931193139 seconds)
    (198/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.909058626 seconds)
    (199/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.846640658 seconds)
    (200/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 3.683232249 seconds)
    (201/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.460607695 seconds)
    (202/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.574100018 seconds)
    (203/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.078414718 seconds)
    (204/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.870846119 seconds)
    (205/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.089955684 seconds)
    (206/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.017746995 seconds)
    (207/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.834134402 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.022186661 seconds)
    (209/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.121376377 seconds)
    (210/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.234321416 seconds)
    (211/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.849931749 seconds)
    (212/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.886006222 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.764373187 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.151217101 seconds)
    (215/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.930325998 seconds)
    (216/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.039854815 seconds)
    (217/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.868819771 seconds)
    (218/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.848016496 seconds)
    (219/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 3.795921641 seconds)
    (220/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.889876672 seconds)
    (221/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.848825801 seconds)
    (222/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.84520056 seconds)
    (223/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.973540231 seconds)
    (224/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.862884991 seconds)
    (225/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.856219153 seconds)
    (226/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.936303667 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.848712756 seconds)
    (228/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.984815103 seconds)
    (229/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.005849168 seconds)
    (230/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.684179251 seconds)
    (231/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.943377312 seconds)
    (232/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.99934267 seconds)
    (233/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.957985183 seconds)
    (234/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.910941447 seconds)
    (235/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.976357318 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.547754124 seconds)
    (237/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.000575355 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.190509525 seconds)
    (239/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.189185747 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.878163146 seconds)
    (241/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.934133523 seconds)
    (242/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.975162214 seconds)
    (243/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.102491305 seconds)
    (244/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.208766531 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.573345112 seconds)
    (246/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.040657623 seconds)
    (247/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.02023301 seconds)
    (248/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.876085795 seconds)
    (249/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.155647116 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.854462523 seconds)
    (251/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.876783941 seconds)
    (252/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.851178365 seconds)
    (253/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.253274915 seconds)
    (254/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.140343986 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.238059119 seconds)
    (256/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.986205361 seconds)
    (257/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.946349426 seconds)
    (258/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.878188386 seconds)
    (259/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.806048808 seconds)
    (260/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.9443617 seconds)
    (261/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.879540128 seconds)
    (262/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.321561507 seconds)
    (263/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.838002004 seconds)
    (264/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.851686079 seconds)
    (265/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.23953671 seconds)
    (266/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.432144488 seconds)
    (267/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.968247202 seconds)
    (268/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.995308323 seconds)
    (269/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.320524286 seconds)
    (270/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.853727692 seconds)
    (271/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.373499035 seconds)
    (272/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.480319374 seconds)
    (273/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.800299409 seconds)
    (274/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.085664869 seconds)
    (275/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.455847625 seconds)
    (276/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.85147595 seconds)
    (277/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.159892109 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.178860791 seconds)
    (279/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.043560593 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.935231699 seconds)
    (281/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.901697264 seconds)
    (282/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.869949559 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.243288229 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.936687505 seconds)
    (285/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.733447351 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.053008996 seconds)
    (287/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.467743359 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.99815366 seconds)
    (289/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.879470303 seconds)
    (290/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.528133066 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.219928585 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.49831741 seconds)
    (293/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.784478433 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.64705305 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.582881198 seconds)
    (296/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.984248007 seconds)
    (297/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.020080697 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.878514315 seconds)
    (299/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.835173005 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.895014674 seconds)
    (301/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.947468099 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.95366665 seconds)
    (303/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.875905645 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.773666853 seconds)
    (305/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.282921934 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.875060849 seconds)
    (307/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.835462684 seconds)
    (308/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.884258602 seconds)
    (309/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.998854202 seconds)
  done (took 1010.874930367 seconds)
done (took 1012.708283485 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.885707882 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.878928186 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.861186243 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.883106503 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.975206527 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.894996513 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.87408308 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.863869707 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.911119599 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.910901045 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.861797886 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.892552656 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.863299031 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.862421894 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.861990628 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.876082278 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.173548653 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.887871001 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.881007209 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.872252483 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.880138308 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.863001067 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.913106523 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.893544684 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.866328423 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.864146569 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.867832532 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.884999894 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.976775337 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.869680558 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.868077131 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.874446296 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.172702765 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.886641966 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.859476328 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.885728334 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.876574618 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.873954539 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.867812654 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.898013372 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.315784099 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.868722536 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.867449641 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.866854611 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.865097734 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.870587458 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.867810336 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.872731348 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.880936925 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.87976232 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.314424311 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.884490801 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.87144011 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.868291011 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.877467841 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.867510706 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.868578658 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.881180784 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.887775724 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.884230121 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.169739605 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.894558218 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.868550067 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.885171042 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.875449096 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.349895357 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.86440179 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.871581906 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.317259297 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.874128609 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.351881609 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.878696663 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.868040188 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.882673707 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.898598445 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.175814434 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.885176984 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.867318963 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.874283084 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.866435278 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.87842821 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.881504194 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.871439944 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.868065553 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.882113905 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.89981258 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.878707921 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.869624438 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.875904268 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.887093441 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.874340273 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.878072974 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.871511012 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.862502812 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.877714986 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.868439421 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.87147598 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.869670789 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.870212722 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.8775518 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.311880321 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.884460766 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.861977425 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.859828208 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.865801231 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.880200821 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.312324505 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.87308421 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.885134897 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.910902994 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.863697668 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.164237307 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.889403257 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.877711202 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.869547171 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.863439541 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.855825687 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.160719949 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.335096947 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.881808109 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.859703875 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.861029165 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.874936347 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.861828978 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.857208612 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.170973415 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.884014848 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.872013164 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.979655718 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.869077942 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.891150234 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.856414144 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.860201131 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.888298387 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.87327057 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.891396441 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.858650865 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.872786862 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.873148074 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.854395257 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.867126768 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.87278309 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.860598284 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.863636386 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.850964175 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.890590553 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.870194447 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.870476734 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.880562153 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.981087752 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.853845437 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.158642518 seconds)
done (took 293.136833619 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.929600875 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.845719294 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.956599116 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.854914641 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.940359635 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.945847975 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.852490435 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.854392502 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.851171689 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.226330921 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.852153187 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.854151743 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.8526094 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.851945087 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.939219668 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.855449803 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.853296085 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.191129451 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.856050734 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.927676351 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.846052462 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.853344633 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.851935221 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.230312118 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.85185177 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.849071783 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.927263157 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.853686658 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.194471057 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.844530823 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.853440954 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.192396304 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.946628256 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.871594252 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.864446043 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.865030748 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.936986564 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.860054326 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.935986396 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.938174756 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.95567271 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.894020935 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.846673776 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.848445194 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.859263071 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.856071651 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.850296766 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.880961848 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.849263423 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.852581193 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.213832384 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.864272775 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.860729688 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.852760041 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.853181002 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.875974287 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.854612175 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.856388746 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.949935255 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.855733395 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.915889632 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.232640868 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.229954004 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.855476167 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.857359217 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.852666019 seconds)
  done (took 183.315165294 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.922102897 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.928730402 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.921601405 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.858890336 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.902330532 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.924160518 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.857434694 seconds)
  done (took 15.097437991 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.864448817 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.855251982 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.905331208 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.907582742 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.857243229 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.004935006 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.856256423 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.869368141 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.852419139 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.907163765 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.85973591 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.856108879 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.864657523 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.855095273 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.904594335 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.869111758 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.969465034 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.857841826 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.856920658 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.008322494 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.855161253 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.862744888 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.910529645 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.866577506 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.856946036 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.863868635 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.439672325 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.856020317 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.853273213 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.857281429 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.853266003 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.895859112 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.857773674 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.849760238 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.857552559 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.974122095 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.85547936 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.85473992 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.855991306 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.852848013 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.857225919 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.856338812 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.856026608 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.853175405 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.85895868 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.883506436 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.857816898 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.857380479 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.858061317 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.860087761 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.909875225 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.860812558 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.856811321 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.856820453 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.916322054 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.86523258 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.860837042 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.855479266 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.856925313 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.855566791 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.009399286 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.906837008 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.85827834 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.908361679 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.860728141 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.860081249 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.860266137 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.85951987 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.95278343 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.858935153 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.909011327 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.858625665 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.016948795 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.88383713 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.858413015 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.863393111 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.863746087 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.859908949 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.858762322 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.866020856 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.856148561 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.859990709 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.864962032 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.858160835 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.856413349 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.968844057 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.966654123 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.857279515 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.873184654 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.867774621 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.854117337 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.91287373 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.86039861 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.856929927 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.914201823 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.974347513 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.916831603 seconds)
  done (took 204.681246778 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.86576085 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.867578921 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.860607257 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.875572003 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.860410523 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.860166162 seconds)
  done (took 12.976704157 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.863381472 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.860394636 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.860684535 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.860559915 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.863284981 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.86277712 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.863323345 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.860589851 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.867507479 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.862980364 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.864473079 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.862743668 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.862281316 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.862653626 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.861765953 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.858729613 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.861746209 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.85704015 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.859736995 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.861968687 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.018226282 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.863001845 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.860153981 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.860606449 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.866642526 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.859420346 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.869765085 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.859037019 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.861400271 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.870656994 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.865917176 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.862231956 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.862141577 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.870240075 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.867267396 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.863469573 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.864969822 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.862698705 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.860627103 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.862169683 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.863049407 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.862588269 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.859857909 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.863766977 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.862537966 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.869289907 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.866954374 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.872179911 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.862631935 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.864145624 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.863636342 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.865343428 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.86436677 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.862874692 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.864033376 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.870665693 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.871171703 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.863888756 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.864903912 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.865625642 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.866065912 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.864342127 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.866654331 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.870266278 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.864565675 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.863447235 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.864152729 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.869578453 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.864437748 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.863402667 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.864482017 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.859969091 seconds)
  done (took 137.145434815 seconds)
done (took 555.010731415 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.907170409 seconds)
  done (took 8.696605585 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.042234745 seconds)
  done (took 8.936084342 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.302109508 seconds)
  done (took 10.111800294 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.880176787 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.908874638 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.878011803 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.877575383 seconds)
  done (took 29.366767065 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.936814175 seconds)
  done (took 8.743113947 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.893433434 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.875996238 seconds)
  done (took 15.609916357 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.917443166 seconds)
  done (took 8.729496233 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.949019931 seconds)
  done (took 8.761154506 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.900332285 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.905736177 seconds)
  done (took 15.625632079 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.860265605 seconds)
  done (took 8.666869924 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.505677757 seconds)
  done (took 11.318045545 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.878514249 seconds)
  done (took 8.696636852 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.885369522 seconds)
  done (took 8.688441182 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.062874884 seconds)
  done (took 9.867771572 seconds)
done (took 163.606580554 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.877818508 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.872668331 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.875580177 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.872759592 seconds)
  done (took 29.300335069 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.914737751 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.913580929 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.913805247 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.925096671 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.915324463 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.912811408 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.903352109 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.905382141 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.925300864 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.919471581 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.915332099 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.915884237 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.914128973 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.90535983 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.915309485 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.914965115 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.926617482 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.91416046 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.904718175 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.914510431 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.879079488 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.924622119 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.915787154 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.880764314 seconds)
  done (took 47.695671242 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.080143684 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.951572722 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.032941884 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.930709368 seconds)
  done (took 9.797530442 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.932472536 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.933177634 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.944344867 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.984675679 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.005293254 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.942953543 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.907078211 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.901623638 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.890156136 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.93457499 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.009750126 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.92947944 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.033120786 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.880096208 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.066697426 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.88028957 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.880955463 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.932029364 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.984718067 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.996753201 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.88383839 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.934232841 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.937898113 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.925015004 seconds)
  done (took 48.45586025 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.88174827 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.886829854 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.884490588 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.882079933 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.878801016 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.880386861 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.886012345 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.880490465 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.903234212 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.880088034 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.882645105 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.879828163 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.879868725 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.880167621 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.880502073 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.89344578 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.895021786 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.879262459 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.885122994 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.887934288 seconds)
  done (took 39.493920365 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.873641013 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.730654789 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.227131962 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.130548716 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.875262176 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.870813389 seconds)
  done (took 31.511855421 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.894759307 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.884715777 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.880682634 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.939886624 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.019275918 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.886935799 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.883122065 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.894390785 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.924050667 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.94430465 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.897678037 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.907041477 seconds)
  done (took 24.765122619 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.878174418 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.87513856 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.884061127 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.891797322 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.894082355 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.886365411 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.889441209 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.872837014 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.893678044 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.896913988 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.888350908 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.894603434 seconds)
  done (took 44.457992861 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969923958 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.768899007 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.927683243 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.593436186 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.348677449 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.086235011 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.390200061 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.216192572 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.881260854 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.151292235 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.917894665 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988499234 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.138386578 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.886343453 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.905374637 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.371727182 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.177285348 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.116037612 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.906230422 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.631528615 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930098022 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.388322939 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.698537329 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.938715933 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.095983447 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.0206561 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.146602236 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.849276453 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.017758688 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.917895431 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897334492 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.88557115 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.15839004 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.257907914 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981333928 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896694779 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.579995165 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.600970533 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.874807182 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.654718629 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.668020883 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.000624067 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895201391 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.888843465 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.82084032 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.38566803 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.26277726 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.890470048 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.598448093 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.885149231 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.899605548 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976658144 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.887484576 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.701758703 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.84109165 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.164615604 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.885123607 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895944352 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.459294339 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.981419259 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.428319849 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.862207296 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.083339864 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.637499455 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.27659867 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.033756639 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.890423275 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.892029759 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.822541702 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.63738476 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386336317 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.035387454 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.907931619 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.538695997 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.19004294 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.022694166 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.830968676 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.178869767 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.684626427 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.861356591 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.117123114 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.838714925 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.822687647 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.747827432 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.822304853 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.148265716 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922542389 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.518066609 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923806089 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.227696369 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.898824391 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904878671 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895130319 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.115866946 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.453587835 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.888295855 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.735188409 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.032756638 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909217719 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.228497923 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.823059139 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.889776772 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.14530496 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.104372858 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.130988 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.397547541 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.041196634 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.887518725 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.964778753 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.808013641 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.935640731 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.16069213 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.94442382 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.974797142 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945720259 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.848363002 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.184707894 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.912378285 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.053466768 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.969846048 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.016547635 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.208352679 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.179135414 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956400655 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.894606327 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.892000731 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.651371518 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.440986544 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.159182908 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.893666722 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.381699614 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.937149767 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.89433989 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.827321102 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.520336133 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.964613585 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.861171078 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.116801678 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.855952602 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.202184951 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.82846963 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.039160316 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.008498283 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.114420699 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.533900644 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.958081228 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.151759669 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.443028362 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.161085683 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.939772911 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914015998 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984258987 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914872392 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.318560608 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.183008321 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.898167573 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.898582714 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.653281967 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.888919728 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.896199899 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.899721748 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.691293691 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.172364617 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.915415884 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.896617092 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.784244022 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.908657541 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962500134 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.900400119 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.904694455 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.461257634 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.673196017 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.901554146 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.52179418 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.1174894 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.904271911 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.650167159 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.003711699 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.978685904 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.162036149 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.952242772 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.829041866 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.606419099 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.589567493 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.896092754 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.831603635 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.896579049 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905255679 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.905803826 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.276407617 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.1687901 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.931901266 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.741639581 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.932704067 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.907836665 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.900987865 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.896207927 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.443150756 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.992492083 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.446161583 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.939341735 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.033108788 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.910531087 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.832116563 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.901185644 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.900885851 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.895897545 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.857533879 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950881561 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.643213821 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.275998432 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.151805848 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.54431166 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.909712612 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.771222922 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.951074025 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.976942722 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.757241088 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.830434546 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.928208913 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908627239 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.906884983 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.627694959 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.588780001 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.462960491 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.214543854 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.200246063 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.335590692 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.379507598 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.197202285 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.236216513 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.129445325 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.425521821 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.958106408 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.238942055 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.839655155 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.981190193 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.537467579 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.239048171 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.911090648 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.126597236 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.286272751 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.680046403 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.055864728 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.110572905 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931766599 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.804751731 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.858543722 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.100514938 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.040532677 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.651821101 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.089922501 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.236871157 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.624817661 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.988447922 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.89745243 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.590324947 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.977681479 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.606016588 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.260425018 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.419511091 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.877782773 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370740876 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.901124383 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.345430578 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.249729821 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.207922627 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.019196056 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.832783503 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.910961737 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.911477658 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.899250724 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.900329871 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.774346714 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.148811942 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.910316394 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.136937936 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.165018778 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.191909742 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.812858889 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.90631757 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.900312248 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.210107567 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.696531466 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.060655976 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.351343834 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.430284001 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.903421521 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.834491555 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.834593853 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.595348739 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.908408459 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.874563375 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.120596875 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.083613494 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.888651585 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.399159778 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.14103262 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.155037659 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.914496886 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.174044138 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.170794532 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.637259473 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926224366 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.002361954 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.620043579 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.99992781 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.170493208 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.137627954 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.701277007 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.129068294 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.945882089 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.712481885 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.900283078 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.113364567 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.171735119 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.853623948 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.120856046 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.622262795 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.912238736 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.218089693 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.95817316 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.851654539 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.044848566 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.096239121 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.913451678 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986630313 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.911992628 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.913538196 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.91310399 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949961545 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.855951508 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.016264609 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.916616218 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990955694 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.000113505 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.436001951 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.906138013 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.180079944 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.253102327 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.224540858 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.957727875 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.90186072 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.90421603 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.838599572 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03661485 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.349491962 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.178859859 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.035353683 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.202005015 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925827121 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.631946781 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.267326193 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.14420848 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.178135231 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.801884187 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.903615589 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.931006784 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.171536668 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.914231644 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.116286989 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.132452808 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.217958734 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.372001226 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.158168611 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.270605095 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.175955017 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.273973107 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.904738561 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.494598792 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.913983476 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.599857051 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.941836206 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.853727797 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.160910674 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.916579906 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.280591024 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.925606367 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.102592572 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.421629335 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.647705656 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.191499515 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.886381709 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.957672245 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.18076937 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.284217542 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.212548641 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977552852 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.916003918 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.609976512 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.043445467 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.778217618 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.172830549 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.906290736 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.119018496 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.615983583 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.915534788 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.183077902 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.210162861 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.903850489 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.785911319 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911842027 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.915905127 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.133108662 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.169861469 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.157733923 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.917237996 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.915331616 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.72600028 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.182835786 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.961748162 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.842186936 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.909239577 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005053318 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.153266635 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.944802073 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.425522663 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.619196056 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.20714529 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.823946272 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928424917 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.418067043 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.274917527 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.22629243 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.450143057 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.138569061 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.463779159 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.877055858 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.20855245 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.91361445 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.42085728 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.212761758 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.913037434 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.535886818 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.945192604 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.179265558 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.223311756 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.920142879 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.673243099 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.876117 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.132023303 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.504155786 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.847611313 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.905995132 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.971332784 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.907552632 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.041171691 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.917008887 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.801915608 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.839872254 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.72314792 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.402671233 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.911836309 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.895399198 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.673303113 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.537516994 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94348748 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.053415703 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.916204618 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.625000833 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.202506018 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.165400305 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.534145297 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.915579318 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.915737177 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.914717028 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.843660184 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.111827775 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.28974258 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.205920365 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.369840993 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.946039499 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.916006586 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.128279241 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.122819543 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.862051122 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.040659062 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.41194639 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.947927589 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.644181667 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.591888273 seconds)
  done (took 1698.817670974 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.970569195 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.939825318 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.915342968 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.989031074 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.975273712 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.993787371 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.931358639 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.029793544 seconds)
  done (took 57.586903774 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.911294853 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.107688677 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.919484595 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.913271911 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.915012042 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.915214848 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.08053903 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.914869314 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.909399716 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.914234652 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.904506646 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.898331447 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.217763593 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.924323017 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.902366392 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.892034137 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.90383785 seconds)
  done (took 74.998400946 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.901183817 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.112205642 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.941634284 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.927467026 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.848250721 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.911048244 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.881599618 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.909890807 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.90135804 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.124391638 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.234140785 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.917104184 seconds)
  done (took 90.439441237 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.909865674 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.906059469 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.906859988 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.907309634 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.906819721 seconds)
  done (took 11.371001334 seconds)
done (took 2210.525555108 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.148166404 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.124846578 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.132719468 seconds)
  done (took 6.087092167 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.051764704 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.099123111 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.220193755 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.223577943 seconds)
  done (took 10.428971153 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.196270725 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.296516367 seconds)
  done (took 6.322843146 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.30682725 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.905148141 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.296995109 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.900620571 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.900924285 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.900955456 seconds)
  done (took 22.537403813 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.906542818 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.908485807 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.903970997 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.9082631 seconds)
  done (took 9.457469702 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.885572849 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.692810894 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.88241479 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.896755214 seconds)
  done (took 21.187601358 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.654175344 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.304639353 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.649194792 seconds)
  done (took 9.438760021 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.409283444 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.805795504 seconds)
  done (took 9.044454509 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.16858658 seconds)
  done (took 4.00567156 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.940639288 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.184709748 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.437055591 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.43968595 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.522418998 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.763658047 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.228917539 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.154505725 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.328274071 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.351748287 seconds)
  done (took 25.190612343 seconds)
done (took 139.186696442 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.293080371 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.272740179 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.952087056 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.262990968 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.213013871 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.113021576 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.320212731 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.244526066 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.754222563 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.75114738 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.300984701 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.269748563 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.267822554 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.273770558 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.274380204 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.144612511 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.130233918 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.306857502 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.996115632 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.193741937 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.328831316 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.888989175 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.144611454 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.902880325 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.130515033 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.066833462 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.46801581 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.150456735 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.154513596 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.474557338 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.097009299 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.349076845 seconds)
  done (took 173.329235338 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.654581746 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.908840428 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.910293335 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.90988218 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.309250677 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.90934612 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.912352074 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.909201744 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.235827107 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.221533522 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.908911992 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.315462833 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.917430517 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.910381908 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.922310577 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.910188541 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.44827526 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.739303351 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.930956946 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.935064209 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.938749933 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.178425916 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.934371256 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.213315518 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.462115909 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.93196916 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.894304787 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.930693952 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.916981033 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.883358171 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.921415079 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.911089277 seconds)
  done (took 209.779400286 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.906337983 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.910219252 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.911164228 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.910904741 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.911628204 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.910357656 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.909637873 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.909718348 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.560927146 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.550346615 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.917000166 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.916042295 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.911182472 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.911995089 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.917300994 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.912112865 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.915307378 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.934788937 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.916203967 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.915238982 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.921202499 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.600041193 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.917797422 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.601874989 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.916652646 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.915729663 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.913228691 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.919367912 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.368517603 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.927037466 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.929873685 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.914372506 seconds)
  done (took 222.260749064 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.123133129 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.922564178 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.927027667 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.85524079 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.92520882 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.92468122 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.864175244 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.115817878 seconds)
  done (took 19.527467967 seconds)
done (took 626.747611441 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.477828033 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.253293896 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.105679657 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.94633569 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.197404952 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.984395069 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.946893985 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.018249887 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.687192434 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.017195513 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.651126483 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.960068619 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.717723089 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.967742826 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.067952213 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.002975913 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.488474803 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.581358052 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.124990269 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.006519389 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.119547256 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.927001611 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.022314054 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.686668385 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.738216287 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.949001149 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.121625293 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.4924671 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.952637056 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.108684989 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.709735259 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.321135809 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.957325611 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.943160025 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.999153186 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.979832517 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.288501398 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.956565805 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.067053838 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.708339317 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.016998873 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.55651932 seconds)
  done (took 105.671755339 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.915275895 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.915403892 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.912730655 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.914661247 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.916249061 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.915504723 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.91332142 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.91491903 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.916381715 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.915034065 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.913621276 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.91600973 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.915112206 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.917018816 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.915793211 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.915243874 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.916302145 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.916258966 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.91928567 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.91623806 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.919606487 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.915775198 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.931802287 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.916281423 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.916649739 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.917477157 seconds)
  done (took 51.690483146 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.931558484 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.097603783 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.184429901 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.946652792 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.92959937 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.931263777 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.949807704 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.93189377 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.932041304 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.932078807 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.025171255 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.933127016 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.94815442 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.181983567 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.940749477 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.927098367 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.927700102 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.927115653 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.102465138 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.941848778 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.946975623 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.93012147 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.947769664 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.941593867 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.930746751 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.930554577 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.93246042 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.395424263 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.934725129 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.022050921 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.011272852 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.948856589 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.350475257 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.197763587 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.995994025 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.933914663 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.930557408 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.025820321 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.935909369 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.929201543 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.946413127 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.934494471 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.185446244 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.440480002 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.940612312 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.929364985 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.406979655 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.033561986 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.969176869 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.939184378 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.189412988 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.943661268 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.9300787 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.929536764 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.967140837 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.937016778 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.93012124 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.257537596 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.937284235 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.947284803 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.930982315 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.92935162 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.107538005 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.935291278 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.094311323 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.935827841 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.935722355 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.928846607 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.18793747 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.94177526 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.439481314 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.948634036 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.936571325 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.031879104 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.10334367 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.437992536 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.948219314 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.115479415 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.370845851 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.959166282 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.942647242 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.392087183 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.962790434 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.94492351 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.94008292 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.937639626 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.939584718 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.984556753 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.953553557 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.368612582 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.449930599 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.28060994 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.963453869 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.95290036 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.938042175 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.264642822 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.945429897 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.937590968 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.188465109 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.454971514 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.948959432 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.945763661 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.435712809 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.950712068 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.958282911 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.946705092 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.201706187 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.950184539 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.984995446 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.938641172 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.945308249 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.94087827 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.958365829 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.945035361 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.938949686 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.425193913 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.048194367 seconds)
  done (took 239.770285224 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.935387157 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.929453099 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.931859773 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.931707408 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.93486383 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.942742316 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.93658417 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.934381903 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.940659333 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.934521793 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.935121104 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.936788505 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.938298997 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.944276425 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.979504571 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.942547448 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.547496821 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.934634236 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.936454283 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.938382919 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.585741067 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.94209187 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.935122208 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.932221515 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.936364669 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.934172992 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.94405885 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.970151313 seconds)
  done (took 169.430854846 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.943118465 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.059960743 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.95714856 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.969123467 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.950603761 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.937484657 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.964742389 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.952604155 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.947237964 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.938297506 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.939185774 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.002463683 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.954027945 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.04369816 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.969223985 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.973896818 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.044877121 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.944983405 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.938938712 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.94039993 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.972174901 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.933199831 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.003680028 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.071788244 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.96139498 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.061953481 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.940116483 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.9438971 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.943319221 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.062114563 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.957526378 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.001013659 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.972480932 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.959510767 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.064769772 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.05704811 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.045014112 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.968715681 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.942615096 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.939923581 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.940982647 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.929840139 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.061376528 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.955875791 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.942221186 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.05329119 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.958185384 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.944577272 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.952633172 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.941878307 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.955623042 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.959454344 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.008271752 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.076842746 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.972653407 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.969905148 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.968990387 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.224214027 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.951724371 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.043666541 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.933382158 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.063042656 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.959216498 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.930185476 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.944610965 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.948612066 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.970814606 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.970051228 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.046108455 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.945557156 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.046349814 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.97470987 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.944885324 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.942573098 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.946426504 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.063070649 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.061296921 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.974259503 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.976138443 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.971146006 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.935722906 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.941895406 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.931608492 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.962232405 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.949262242 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.065683308 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.060158223 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.949140087 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.946085338 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.94609971 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.946713079 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.969386386 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.069512304 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.976327213 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.043658074 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.009693366 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.016786726 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.955786298 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.957196976 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.94872001 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.012060544 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.959532684 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.956294285 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.277516427 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.016381814 seconds)
  done (took 210.267285214 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.404948681 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.995517524 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.004043236 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.259156133 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.364511933 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.863163041 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.991386542 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.995112841 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.017130552 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.184501229 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.06432265 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.015135102 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.982336451 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.969507995 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.994566173 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.01602674 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.007053044 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.33463117 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.1195175 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.102990261 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.971884123 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.26077285 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.321529853 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.391247342 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.029626452 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.319864912 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.663498309 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.136123978 seconds)
  done (took 63.656002731 seconds)
done (took 842.331646699 seconds)
SAVING RESULT...
DONE!
